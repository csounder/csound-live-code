var NX=Object.defineProperty;var VX=(t,e,n)=>e in t?NX(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var wk=(t,e,n)=>(VX(t,typeof e!="symbol"?e+"":e,n),n);function LX(t,e){for(var n=0;n<e.length;n++){const r=e[n];if(typeof r!="string"&&!Array.isArray(r)){for(const i in r)if(i!=="default"&&!(i in t)){const o=Object.getOwnPropertyDescriptor(r,i);o&&Object.defineProperty(t,i,o.get?o:{enumerable:!0,get:()=>r[i]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();var pi=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function XX(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var S={exports:{}},fe={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var rd=Symbol.for("react.element"),BX=Symbol.for("react.portal"),AX=Symbol.for("react.fragment"),ZX=Symbol.for("react.strict_mode"),GX=Symbol.for("react.profiler"),WX=Symbol.for("react.provider"),YX=Symbol.for("react.context"),FX=Symbol.for("react.forward_ref"),HX=Symbol.for("react.suspense"),jX=Symbol.for("react.memo"),DX=Symbol.for("react.lazy"),Ok=Symbol.iterator;function UX(t){return t===null||typeof t!="object"?null:(t=Ok&&t[Ok]||t["@@iterator"],typeof t=="function"?t:null)}var XP={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},BP=Object.assign,AP={};function Rl(t,e,n){this.props=t,this.context=e,this.refs=AP,this.updater=n||XP}Rl.prototype.isReactComponent={};Rl.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};Rl.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function ZP(){}ZP.prototype=Rl.prototype;function h1(t,e,n){this.props=t,this.context=e,this.refs=AP,this.updater=n||XP}var p1=h1.prototype=new ZP;p1.constructor=h1;BP(p1,Rl.prototype);p1.isPureReactComponent=!0;var Tk=Array.isArray,GP=Object.prototype.hasOwnProperty,m1={current:null},WP={key:!0,ref:!0,__self:!0,__source:!0};function YP(t,e,n){var r,i={},o=null,s=null;if(e!=null)for(r in e.ref!==void 0&&(s=e.ref),e.key!==void 0&&(o=""+e.key),e)GP.call(e,r)&&!WP.hasOwnProperty(r)&&(i[r]=e[r]);var a=arguments.length-2;if(a===1)i.children=n;else if(1<a){for(var l=Array(a),c=0;c<a;c++)l[c]=arguments[c+2];i.children=l}if(t&&t.defaultProps)for(r in a=t.defaultProps,a)i[r]===void 0&&(i[r]=a[r]);return{$$typeof:rd,type:t,key:o,ref:s,props:i,_owner:m1.current}}function KX(t,e){return{$$typeof:rd,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}function g1(t){return typeof t=="object"&&t!==null&&t.$$typeof===rd}function qX(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var Pk=/\/+/g;function Ng(t,e){return typeof t=="object"&&t!==null&&t.key!=null?qX(""+t.key):e.toString(36)}function jf(t,e,n,r,i){var o=typeof t;(o==="undefined"||o==="boolean")&&(t=null);var s=!1;if(t===null)s=!0;else switch(o){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case rd:case BX:s=!0}}if(s)return s=t,i=i(s),t=r===""?"."+Ng(s,0):r,Tk(i)?(n="",t!=null&&(n=t.replace(Pk,"$&/")+"/"),jf(i,e,n,"",function(c){return c})):i!=null&&(g1(i)&&(i=KX(i,n+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(Pk,"$&/")+"/")+t)),e.push(i)),1;if(s=0,r=r===""?".":r+":",Tk(t))for(var a=0;a<t.length;a++){o=t[a];var l=r+Ng(o,a);s+=jf(o,e,n,l,i)}else if(l=UX(t),typeof l=="function")for(t=l.call(t),a=0;!(o=t.next()).done;)o=o.value,l=r+Ng(o,a++),s+=jf(o,e,n,l,i);else if(o==="object")throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return s}function Vd(t,e,n){if(t==null)return t;var r=[],i=0;return jf(t,r,"","",function(o){return e.call(n,o,i++)}),r}function QX(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var tn={current:null},Df={transition:null},JX={ReactCurrentDispatcher:tn,ReactCurrentBatchConfig:Df,ReactCurrentOwner:m1};fe.Children={map:Vd,forEach:function(t,e,n){Vd(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return Vd(t,function(){e++}),e},toArray:function(t){return Vd(t,function(e){return e})||[]},only:function(t){if(!g1(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};fe.Component=Rl;fe.Fragment=AX;fe.Profiler=GX;fe.PureComponent=h1;fe.StrictMode=ZX;fe.Suspense=HX;fe.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=JX;fe.cloneElement=function(t,e,n){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var r=BP({},t.props),i=t.key,o=t.ref,s=t._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,s=m1.current),e.key!==void 0&&(i=""+e.key),t.type&&t.type.defaultProps)var a=t.type.defaultProps;for(l in e)GP.call(e,l)&&!WP.hasOwnProperty(l)&&(r[l]=e[l]===void 0&&a!==void 0?a[l]:e[l])}var l=arguments.length-2;if(l===1)r.children=n;else if(1<l){a=Array(l);for(var c=0;c<l;c++)a[c]=arguments[c+2];r.children=a}return{$$typeof:rd,type:t.type,key:i,ref:o,props:r,_owner:s}};fe.createContext=function(t){return t={$$typeof:YX,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:WX,_context:t},t.Consumer=t};fe.createElement=YP;fe.createFactory=function(t){var e=YP.bind(null,t);return e.type=t,e};fe.createRef=function(){return{current:null}};fe.forwardRef=function(t){return{$$typeof:FX,render:t}};fe.isValidElement=g1;fe.lazy=function(t){return{$$typeof:DX,_payload:{_status:-1,_result:t},_init:QX}};fe.memo=function(t,e){return{$$typeof:jX,type:t,compare:e===void 0?null:e}};fe.startTransition=function(t){var e=Df.transition;Df.transition={};try{t()}finally{Df.transition=e}};fe.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};fe.useCallback=function(t,e){return tn.current.useCallback(t,e)};fe.useContext=function(t){return tn.current.useContext(t)};fe.useDebugValue=function(){};fe.useDeferredValue=function(t){return tn.current.useDeferredValue(t)};fe.useEffect=function(t,e){return tn.current.useEffect(t,e)};fe.useId=function(){return tn.current.useId()};fe.useImperativeHandle=function(t,e,n){return tn.current.useImperativeHandle(t,e,n)};fe.useInsertionEffect=function(t,e){return tn.current.useInsertionEffect(t,e)};fe.useLayoutEffect=function(t,e){return tn.current.useLayoutEffect(t,e)};fe.useMemo=function(t,e){return tn.current.useMemo(t,e)};fe.useReducer=function(t,e,n){return tn.current.useReducer(t,e,n)};fe.useRef=function(t){return tn.current.useRef(t)};fe.useState=function(t){return tn.current.useState(t)};fe.useSyncExternalStore=function(t,e,n){return tn.current.useSyncExternalStore(t,e,n)};fe.useTransition=function(){return tn.current.useTransition()};fe.version="18.2.0";(function(t){t.exports=fe})(S);const Z=XX(S.exports),Ck=LX({__proto__:null,default:Z},[S.exports]);var kv={},om={exports:{}},Nn={},FP={exports:{}},HP={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(L,W){var q=L.length;L.push(W);e:for(;0<q;){var le=q-1>>>1,ue=L[le];if(0<i(ue,W))L[le]=W,L[q]=ue,q=le;else break e}}function n(L){return L.length===0?null:L[0]}function r(L){if(L.length===0)return null;var W=L[0],q=L.pop();if(q!==W){L[0]=q;e:for(var le=0,ue=L.length,re=ue>>>1;le<re;){var Ce=2*(le+1)-1,Re=L[Ce],We=Ce+1,De=L[We];if(0>i(Re,q))We<ue&&0>i(De,Re)?(L[le]=De,L[We]=q,le=We):(L[le]=Re,L[Ce]=q,le=Ce);else if(We<ue&&0>i(De,q))L[le]=De,L[We]=q,le=We;else break e}}return W}function i(L,W){var q=L.sortIndex-W.sortIndex;return q!==0?q:L.id-W.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;t.unstable_now=function(){return o.now()}}else{var s=Date,a=s.now();t.unstable_now=function(){return s.now()-a}}var l=[],c=[],u=1,d=null,f=3,h=!1,p=!1,m=!1,b=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,v=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function y(L){for(var W=n(c);W!==null;){if(W.callback===null)r(c);else if(W.startTime<=L)r(c),W.sortIndex=W.expirationTime,e(l,W);else break;W=n(c)}}function x(L){if(m=!1,y(L),!p)if(n(l)!==null)p=!0,Y(k);else{var W=n(c);W!==null&&ee(x,W.startTime-L)}}function k(L,W){p=!1,m&&(m=!1,g(M),M=-1),h=!0;var q=f;try{for(y(W),d=n(l);d!==null&&(!(d.expirationTime>W)||L&&!B());){var le=d.callback;if(typeof le=="function"){d.callback=null,f=d.priorityLevel;var ue=le(d.expirationTime<=W);W=t.unstable_now(),typeof ue=="function"?d.callback=ue:d===n(l)&&r(l),y(W)}else r(l);d=n(l)}if(d!==null)var re=!0;else{var Ce=n(c);Ce!==null&&ee(x,Ce.startTime-W),re=!1}return re}finally{d=null,f=q,h=!1}}var O=!1,T=null,M=-1,E=5,I=-1;function B(){return!(t.unstable_now()-I<E)}function D(){if(T!==null){var L=t.unstable_now();I=L;var W=!0;try{W=T(!0,L)}finally{W?J():(O=!1,T=null)}}else O=!1}var J;if(typeof v=="function")J=function(){v(D)};else if(typeof MessageChannel<"u"){var ae=new MessageChannel,oe=ae.port2;ae.port1.onmessage=D,J=function(){oe.postMessage(null)}}else J=function(){b(D,0)};function Y(L){T=L,O||(O=!0,J())}function ee(L,W){M=b(function(){L(t.unstable_now())},W)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(L){L.callback=null},t.unstable_continueExecution=function(){p||h||(p=!0,Y(k))},t.unstable_forceFrameRate=function(L){0>L||125<L?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<L?Math.floor(1e3/L):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(L){switch(f){case 1:case 2:case 3:var W=3;break;default:W=f}var q=f;f=W;try{return L()}finally{f=q}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(L,W){switch(L){case 1:case 2:case 3:case 4:case 5:break;default:L=3}var q=f;f=L;try{return W()}finally{f=q}},t.unstable_scheduleCallback=function(L,W,q){var le=t.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?le+q:le):q=le,L){case 1:var ue=-1;break;case 2:ue=250;break;case 5:ue=1073741823;break;case 4:ue=1e4;break;default:ue=5e3}return ue=q+ue,L={id:u++,callback:W,priorityLevel:L,startTime:q,expirationTime:ue,sortIndex:-1},q>le?(L.sortIndex=q,e(c,L),n(l)===null&&L===n(c)&&(m?(g(M),M=-1):m=!0,ee(x,q-le))):(L.sortIndex=ue,e(l,L),p||h||(p=!0,Y(k))),L},t.unstable_shouldYield=B,t.unstable_wrapCallback=function(L){var W=f;return function(){var q=f;f=W;try{return L.apply(this,arguments)}finally{f=q}}}})(HP);(function(t){t.exports=HP})(FP);/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var jP=S.exports,zn=FP.exports;function A(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var DP=new Set,su={};function Zs(t,e){il(t,e),il(t+"Capture",e)}function il(t,e){for(su[t]=e,t=0;t<e.length;t++)DP.add(e[t])}var wi=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),wv=Object.prototype.hasOwnProperty,_X=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Mk={},Rk={};function $X(t){return wv.call(Rk,t)?!0:wv.call(Mk,t)?!1:_X.test(t)?Rk[t]=!0:(Mk[t]=!0,!1)}function eB(t,e,n,r){if(n!==null&&n.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function tB(t,e,n,r){if(e===null||typeof e>"u"||eB(t,e,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function nn(t,e,n,r,i,o,s){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=s}var Vt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){Vt[t]=new nn(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];Vt[e]=new nn(e,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){Vt[t]=new nn(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){Vt[t]=new nn(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){Vt[t]=new nn(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){Vt[t]=new nn(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){Vt[t]=new nn(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){Vt[t]=new nn(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){Vt[t]=new nn(t,5,!1,t.toLowerCase(),null,!1,!1)});var v1=/[\-:]([a-z])/g;function b1(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(v1,b1);Vt[e]=new nn(e,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(v1,b1);Vt[e]=new nn(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(v1,b1);Vt[e]=new nn(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){Vt[t]=new nn(t,1,!1,t.toLowerCase(),null,!1,!1)});Vt.xlinkHref=new nn("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){Vt[t]=new nn(t,1,!1,t.toLowerCase(),null,!0,!0)});function y1(t,e,n,r){var i=Vt.hasOwnProperty(e)?Vt[e]:null;(i!==null?i.type!==0:r||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(tB(e,n,i,r)&&(n=null),r||i===null?$X(e)&&(n===null?t.removeAttribute(e):t.setAttribute(e,""+n)):i.mustUseProperty?t[i.propertyName]=n===null?i.type===3?!1:"":n:(e=i.attributeName,r=i.attributeNamespace,n===null?t.removeAttribute(e):(i=i.type,n=i===3||i===4&&n===!0?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}var Ei=jP.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Ld=Symbol.for("react.element"),ga=Symbol.for("react.portal"),va=Symbol.for("react.fragment"),x1=Symbol.for("react.strict_mode"),Ov=Symbol.for("react.profiler"),UP=Symbol.for("react.provider"),KP=Symbol.for("react.context"),S1=Symbol.for("react.forward_ref"),Tv=Symbol.for("react.suspense"),Pv=Symbol.for("react.suspense_list"),k1=Symbol.for("react.memo"),Fi=Symbol.for("react.lazy"),qP=Symbol.for("react.offscreen"),Ik=Symbol.iterator;function Kl(t){return t===null||typeof t!="object"?null:(t=Ik&&t[Ik]||t["@@iterator"],typeof t=="function"?t:null)}var _e=Object.assign,Vg;function mc(t){if(Vg===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);Vg=e&&e[1]||""}return`
`+Vg+t}var Lg=!1;function Xg(t,e){if(!t||Lg)return"";Lg=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(c){var r=c}Reflect.construct(t,[],e)}else{try{e.call()}catch(c){r=c}t.call(e.prototype)}else{try{throw Error()}catch(c){r=c}t()}}catch(c){if(c&&r&&typeof c.stack=="string"){for(var i=c.stack.split(`
`),o=r.stack.split(`
`),s=i.length-1,a=o.length-1;1<=s&&0<=a&&i[s]!==o[a];)a--;for(;1<=s&&0<=a;s--,a--)if(i[s]!==o[a]){if(s!==1||a!==1)do if(s--,a--,0>a||i[s]!==o[a]){var l=`
`+i[s].replace(" at new "," at ");return t.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",t.displayName)),l}while(1<=s&&0<=a);break}}}finally{Lg=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?mc(t):""}function nB(t){switch(t.tag){case 5:return mc(t.type);case 16:return mc("Lazy");case 13:return mc("Suspense");case 19:return mc("SuspenseList");case 0:case 2:case 15:return t=Xg(t.type,!1),t;case 11:return t=Xg(t.type.render,!1),t;case 1:return t=Xg(t.type,!0),t;default:return""}}function Cv(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case va:return"Fragment";case ga:return"Portal";case Ov:return"Profiler";case x1:return"StrictMode";case Tv:return"Suspense";case Pv:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case KP:return(t.displayName||"Context")+".Consumer";case UP:return(t._context.displayName||"Context")+".Provider";case S1:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case k1:return e=t.displayName||null,e!==null?e:Cv(t.type)||"Memo";case Fi:e=t._payload,t=t._init;try{return Cv(t(e))}catch{}}return null}function rB(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=e.render,t=t.displayName||t.name||"",e.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Cv(e);case 8:return e===x1?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function ko(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function QP(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function iB(t){var e=QP(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var i=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return i.call(this)},set:function(s){r=""+s,o.call(this,s)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(s){r=""+s},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function Xd(t){t._valueTracker||(t._valueTracker=iB(t))}function JP(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=QP(t)?t.checked?"true":"false":t.value),t=r,t!==n?(e.setValue(t),!0):!1}function Ih(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function Mv(t,e){var n=e.checked;return _e({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n!=null?n:t._wrapperState.initialChecked})}function zk(t,e){var n=e.defaultValue==null?"":e.defaultValue,r=e.checked!=null?e.checked:e.defaultChecked;n=ko(e.value!=null?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function _P(t,e){e=e.checked,e!=null&&y1(t,"checked",e,!1)}function Rv(t,e){_P(t,e);var n=ko(e.value),r=e.type;if(n!=null)r==="number"?(n===0&&t.value===""||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if(r==="submit"||r==="reset"){t.removeAttribute("value");return}e.hasOwnProperty("value")?Iv(t,e.type,n):e.hasOwnProperty("defaultValue")&&Iv(t,e.type,ko(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(t.defaultChecked=!!e.defaultChecked)}function Ek(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!(r!=="submit"&&r!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}n=t.name,n!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,n!==""&&(t.name=n)}function Iv(t,e,n){(e!=="number"||Ih(t.ownerDocument)!==t)&&(n==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var gc=Array.isArray;function La(t,e,n,r){if(t=t.options,e){e={};for(var i=0;i<n.length;i++)e["$"+n[i]]=!0;for(n=0;n<t.length;n++)i=e.hasOwnProperty("$"+t[n].value),t[n].selected!==i&&(t[n].selected=i),i&&r&&(t[n].defaultSelected=!0)}else{for(n=""+ko(n),e=null,i=0;i<t.length;i++){if(t[i].value===n){t[i].selected=!0,r&&(t[i].defaultSelected=!0);return}e!==null||t[i].disabled||(e=t[i])}e!==null&&(e.selected=!0)}}function zv(t,e){if(e.dangerouslySetInnerHTML!=null)throw Error(A(91));return _e({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Nk(t,e){var n=e.value;if(n==null){if(n=e.children,e=e.defaultValue,n!=null){if(e!=null)throw Error(A(92));if(gc(n)){if(1<n.length)throw Error(A(93));n=n[0]}e=n}e==null&&(e=""),n=e}t._wrapperState={initialValue:ko(n)}}function $P(t,e){var n=ko(e.value),r=ko(e.defaultValue);n!=null&&(n=""+n,n!==t.value&&(t.value=n),e.defaultValue==null&&t.defaultValue!==n&&(t.defaultValue=n)),r!=null&&(t.defaultValue=""+r)}function Vk(t){var e=t.textContent;e===t._wrapperState.initialValue&&e!==""&&e!==null&&(t.value=e)}function eC(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ev(t,e){return t==null||t==="http://www.w3.org/1999/xhtml"?eC(e):t==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var Bd,tC=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,n,r,i){MSApp.execUnsafeLocalFunction(function(){return t(e,n,r,i)})}:t}(function(t,e){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=e;else{for(Bd=Bd||document.createElement("div"),Bd.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Bd.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}});function au(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var Rc={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},oB=["Webkit","ms","Moz","O"];Object.keys(Rc).forEach(function(t){oB.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),Rc[e]=Rc[t]})});function nC(t,e,n){return e==null||typeof e=="boolean"||e===""?"":n||typeof e!="number"||e===0||Rc.hasOwnProperty(t)&&Rc[t]?(""+e).trim():e+"px"}function rC(t,e){t=t.style;for(var n in e)if(e.hasOwnProperty(n)){var r=n.indexOf("--")===0,i=nC(n,e[n],r);n==="float"&&(n="cssFloat"),r?t.setProperty(n,i):t[n]=i}}var sB=_e({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Nv(t,e){if(e){if(sB[t]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(A(137,t));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(A(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(A(61))}if(e.style!=null&&typeof e.style!="object")throw Error(A(62))}}function Vv(t,e){if(t.indexOf("-")===-1)return typeof e.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Lv=null;function w1(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Xv=null,Xa=null,Ba=null;function Lk(t){if(t=sd(t)){if(typeof Xv!="function")throw Error(A(280));var e=t.stateNode;e&&(e=um(e),Xv(t.stateNode,t.type,e))}}function iC(t){Xa?Ba?Ba.push(t):Ba=[t]:Xa=t}function oC(){if(Xa){var t=Xa,e=Ba;if(Ba=Xa=null,Lk(t),e)for(t=0;t<e.length;t++)Lk(e[t])}}function sC(t,e){return t(e)}function aC(){}var Bg=!1;function lC(t,e,n){if(Bg)return t(e,n);Bg=!0;try{return sC(t,e,n)}finally{Bg=!1,(Xa!==null||Ba!==null)&&(aC(),oC())}}function lu(t,e){var n=t.stateNode;if(n===null)return null;var r=um(n);if(r===null)return null;n=r[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(t=t.type,r=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!r;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(A(231,e,typeof n));return n}var Bv=!1;if(wi)try{var ql={};Object.defineProperty(ql,"passive",{get:function(){Bv=!0}}),window.addEventListener("test",ql,ql),window.removeEventListener("test",ql,ql)}catch{Bv=!1}function aB(t,e,n,r,i,o,s,a,l){var c=Array.prototype.slice.call(arguments,3);try{e.apply(n,c)}catch(u){this.onError(u)}}var Ic=!1,zh=null,Eh=!1,Av=null,lB={onError:function(t){Ic=!0,zh=t}};function cB(t,e,n,r,i,o,s,a,l){Ic=!1,zh=null,aB.apply(lB,arguments)}function uB(t,e,n,r,i,o,s,a,l){if(cB.apply(this,arguments),Ic){if(Ic){var c=zh;Ic=!1,zh=null}else throw Error(A(198));Eh||(Eh=!0,Av=c)}}function Gs(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,(e.flags&4098)!==0&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function cC(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function Xk(t){if(Gs(t)!==t)throw Error(A(188))}function dB(t){var e=t.alternate;if(!e){if(e=Gs(t),e===null)throw Error(A(188));return e!==t?null:t}for(var n=t,r=e;;){var i=n.return;if(i===null)break;var o=i.alternate;if(o===null){if(r=i.return,r!==null){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return Xk(i),t;if(o===r)return Xk(i),e;o=o.sibling}throw Error(A(188))}if(n.return!==r.return)n=i,r=o;else{for(var s=!1,a=i.child;a;){if(a===n){s=!0,n=i,r=o;break}if(a===r){s=!0,r=i,n=o;break}a=a.sibling}if(!s){for(a=o.child;a;){if(a===n){s=!0,n=o,r=i;break}if(a===r){s=!0,r=o,n=i;break}a=a.sibling}if(!s)throw Error(A(189))}}if(n.alternate!==r)throw Error(A(190))}if(n.tag!==3)throw Error(A(188));return n.stateNode.current===n?t:e}function uC(t){return t=dB(t),t!==null?dC(t):null}function dC(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var e=dC(t);if(e!==null)return e;t=t.sibling}return null}var fC=zn.unstable_scheduleCallback,Bk=zn.unstable_cancelCallback,fB=zn.unstable_shouldYield,hB=zn.unstable_requestPaint,ot=zn.unstable_now,pB=zn.unstable_getCurrentPriorityLevel,O1=zn.unstable_ImmediatePriority,hC=zn.unstable_UserBlockingPriority,Nh=zn.unstable_NormalPriority,mB=zn.unstable_LowPriority,pC=zn.unstable_IdlePriority,sm=null,jr=null;function gB(t){if(jr&&typeof jr.onCommitFiberRoot=="function")try{jr.onCommitFiberRoot(sm,t,void 0,(t.current.flags&128)===128)}catch{}}var gr=Math.clz32?Math.clz32:yB,vB=Math.log,bB=Math.LN2;function yB(t){return t>>>=0,t===0?32:31-(vB(t)/bB|0)|0}var Ad=64,Zd=4194304;function vc(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Vh(t,e){var n=t.pendingLanes;if(n===0)return 0;var r=0,i=t.suspendedLanes,o=t.pingedLanes,s=n&268435455;if(s!==0){var a=s&~i;a!==0?r=vc(a):(o&=s,o!==0&&(r=vc(o)))}else s=n&~i,s!==0?r=vc(s):o!==0&&(r=vc(o));if(r===0)return 0;if(e!==0&&e!==r&&(e&i)===0&&(i=r&-r,o=e&-e,i>=o||i===16&&(o&4194240)!==0))return e;if((r&4)!==0&&(r|=n&16),e=t.entangledLanes,e!==0)for(t=t.entanglements,e&=r;0<e;)n=31-gr(e),i=1<<n,r|=t[n],e&=~i;return r}function xB(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function SB(t,e){for(var n=t.suspendedLanes,r=t.pingedLanes,i=t.expirationTimes,o=t.pendingLanes;0<o;){var s=31-gr(o),a=1<<s,l=i[s];l===-1?((a&n)===0||(a&r)!==0)&&(i[s]=xB(a,e)):l<=e&&(t.expiredLanes|=a),o&=~a}}function Zv(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function mC(){var t=Ad;return Ad<<=1,(Ad&4194240)===0&&(Ad=64),t}function Ag(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function id(t,e,n){t.pendingLanes|=e,e!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,e=31-gr(e),t[e]=n}function kB(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var r=t.eventTimes;for(t=t.expirationTimes;0<n;){var i=31-gr(n),o=1<<i;e[i]=0,r[i]=-1,t[i]=-1,n&=~o}}function T1(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var r=31-gr(n),i=1<<r;i&e|t[r]&e&&(t[r]|=e),n&=~i}}var Te=0;function gC(t){return t&=-t,1<t?4<t?(t&268435455)!==0?16:536870912:4:1}var vC,P1,bC,yC,xC,Gv=!1,Gd=[],uo=null,fo=null,ho=null,cu=new Map,uu=new Map,Ki=[],wB="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ak(t,e){switch(t){case"focusin":case"focusout":uo=null;break;case"dragenter":case"dragleave":fo=null;break;case"mouseover":case"mouseout":ho=null;break;case"pointerover":case"pointerout":cu.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":uu.delete(e.pointerId)}}function Ql(t,e,n,r,i,o){return t===null||t.nativeEvent!==o?(t={blockedOn:e,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[i]},e!==null&&(e=sd(e),e!==null&&P1(e)),t):(t.eventSystemFlags|=r,e=t.targetContainers,i!==null&&e.indexOf(i)===-1&&e.push(i),t)}function OB(t,e,n,r,i){switch(e){case"focusin":return uo=Ql(uo,t,e,n,r,i),!0;case"dragenter":return fo=Ql(fo,t,e,n,r,i),!0;case"mouseover":return ho=Ql(ho,t,e,n,r,i),!0;case"pointerover":var o=i.pointerId;return cu.set(o,Ql(cu.get(o)||null,t,e,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,uu.set(o,Ql(uu.get(o)||null,t,e,n,r,i)),!0}return!1}function SC(t){var e=ss(t.target);if(e!==null){var n=Gs(e);if(n!==null){if(e=n.tag,e===13){if(e=cC(n),e!==null){t.blockedOn=e,xC(t.priority,function(){bC(n)});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function Uf(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=Wv(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(n===null){n=t.nativeEvent;var r=new n.constructor(n.type,n);Lv=r,n.target.dispatchEvent(r),Lv=null}else return e=sd(n),e!==null&&P1(e),t.blockedOn=n,!1;e.shift()}return!0}function Zk(t,e,n){Uf(t)&&n.delete(e)}function TB(){Gv=!1,uo!==null&&Uf(uo)&&(uo=null),fo!==null&&Uf(fo)&&(fo=null),ho!==null&&Uf(ho)&&(ho=null),cu.forEach(Zk),uu.forEach(Zk)}function Jl(t,e){t.blockedOn===e&&(t.blockedOn=null,Gv||(Gv=!0,zn.unstable_scheduleCallback(zn.unstable_NormalPriority,TB)))}function du(t){function e(i){return Jl(i,t)}if(0<Gd.length){Jl(Gd[0],t);for(var n=1;n<Gd.length;n++){var r=Gd[n];r.blockedOn===t&&(r.blockedOn=null)}}for(uo!==null&&Jl(uo,t),fo!==null&&Jl(fo,t),ho!==null&&Jl(ho,t),cu.forEach(e),uu.forEach(e),n=0;n<Ki.length;n++)r=Ki[n],r.blockedOn===t&&(r.blockedOn=null);for(;0<Ki.length&&(n=Ki[0],n.blockedOn===null);)SC(n),n.blockedOn===null&&Ki.shift()}var Aa=Ei.ReactCurrentBatchConfig,Lh=!0;function PB(t,e,n,r){var i=Te,o=Aa.transition;Aa.transition=null;try{Te=1,C1(t,e,n,r)}finally{Te=i,Aa.transition=o}}function CB(t,e,n,r){var i=Te,o=Aa.transition;Aa.transition=null;try{Te=4,C1(t,e,n,r)}finally{Te=i,Aa.transition=o}}function C1(t,e,n,r){if(Lh){var i=Wv(t,e,n,r);if(i===null)Kg(t,e,r,Xh,n),Ak(t,r);else if(OB(i,t,e,n,r))r.stopPropagation();else if(Ak(t,r),e&4&&-1<wB.indexOf(t)){for(;i!==null;){var o=sd(i);if(o!==null&&vC(o),o=Wv(t,e,n,r),o===null&&Kg(t,e,r,Xh,n),o===i)break;i=o}i!==null&&r.stopPropagation()}else Kg(t,e,r,null,n)}}var Xh=null;function Wv(t,e,n,r){if(Xh=null,t=w1(r),t=ss(t),t!==null)if(e=Gs(t),e===null)t=null;else if(n=e.tag,n===13){if(t=cC(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return Xh=t,null}function kC(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(pB()){case O1:return 1;case hC:return 4;case Nh:case mB:return 16;case pC:return 536870912;default:return 16}default:return 16}}var $i=null,M1=null,Kf=null;function wC(){if(Kf)return Kf;var t,e=M1,n=e.length,r,i="value"in $i?$i.value:$i.textContent,o=i.length;for(t=0;t<n&&e[t]===i[t];t++);var s=n-t;for(r=1;r<=s&&e[n-r]===i[o-r];r++);return Kf=i.slice(t,1<r?1-r:void 0)}function qf(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function Wd(){return!0}function Gk(){return!1}function Vn(t){function e(n,r,i,o,s){this._reactName=n,this._targetInst=i,this.type=r,this.nativeEvent=o,this.target=s,this.currentTarget=null;for(var a in t)t.hasOwnProperty(a)&&(n=t[a],this[a]=n?n(o):o[a]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?Wd:Gk,this.isPropagationStopped=Gk,this}return _e(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Wd)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Wd)},persist:function(){},isPersistent:Wd}),e}var Il={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},R1=Vn(Il),od=_e({},Il,{view:0,detail:0}),MB=Vn(od),Zg,Gg,_l,am=_e({},od,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:I1,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==_l&&(_l&&t.type==="mousemove"?(Zg=t.screenX-_l.screenX,Gg=t.screenY-_l.screenY):Gg=Zg=0,_l=t),Zg)},movementY:function(t){return"movementY"in t?t.movementY:Gg}}),Wk=Vn(am),RB=_e({},am,{dataTransfer:0}),IB=Vn(RB),zB=_e({},od,{relatedTarget:0}),Wg=Vn(zB),EB=_e({},Il,{animationName:0,elapsedTime:0,pseudoElement:0}),NB=Vn(EB),VB=_e({},Il,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),LB=Vn(VB),XB=_e({},Il,{data:0}),Yk=Vn(XB),BB={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},AB={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ZB={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function GB(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=ZB[t])?!!e[t]:!1}function I1(){return GB}var WB=_e({},od,{key:function(t){if(t.key){var e=BB[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=qf(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?AB[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:I1,charCode:function(t){return t.type==="keypress"?qf(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?qf(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),YB=Vn(WB),FB=_e({},am,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Fk=Vn(FB),HB=_e({},od,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:I1}),jB=Vn(HB),DB=_e({},Il,{propertyName:0,elapsedTime:0,pseudoElement:0}),UB=Vn(DB),KB=_e({},am,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),qB=Vn(KB),QB=[9,13,27,32],z1=wi&&"CompositionEvent"in window,zc=null;wi&&"documentMode"in document&&(zc=document.documentMode);var JB=wi&&"TextEvent"in window&&!zc,OC=wi&&(!z1||zc&&8<zc&&11>=zc),Hk=String.fromCharCode(32),jk=!1;function TC(t,e){switch(t){case"keyup":return QB.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function PC(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var ba=!1;function _B(t,e){switch(t){case"compositionend":return PC(e);case"keypress":return e.which!==32?null:(jk=!0,Hk);case"textInput":return t=e.data,t===Hk&&jk?null:t;default:return null}}function $B(t,e){if(ba)return t==="compositionend"||!z1&&TC(t,e)?(t=wC(),Kf=M1=$i=null,ba=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return OC&&e.locale!=="ko"?null:e.data;default:return null}}var eA={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Dk(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!eA[t.type]:e==="textarea"}function CC(t,e,n,r){iC(r),e=Bh(e,"onChange"),0<e.length&&(n=new R1("onChange","change",null,n,r),t.push({event:n,listeners:e}))}var Ec=null,fu=null;function tA(t){AC(t,0)}function lm(t){var e=Sa(t);if(JP(e))return t}function nA(t,e){if(t==="change")return e}var MC=!1;if(wi){var Yg;if(wi){var Fg="oninput"in document;if(!Fg){var Uk=document.createElement("div");Uk.setAttribute("oninput","return;"),Fg=typeof Uk.oninput=="function"}Yg=Fg}else Yg=!1;MC=Yg&&(!document.documentMode||9<document.documentMode)}function Kk(){Ec&&(Ec.detachEvent("onpropertychange",RC),fu=Ec=null)}function RC(t){if(t.propertyName==="value"&&lm(fu)){var e=[];CC(e,fu,t,w1(t)),lC(tA,e)}}function rA(t,e,n){t==="focusin"?(Kk(),Ec=e,fu=n,Ec.attachEvent("onpropertychange",RC)):t==="focusout"&&Kk()}function iA(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return lm(fu)}function oA(t,e){if(t==="click")return lm(e)}function sA(t,e){if(t==="input"||t==="change")return lm(e)}function aA(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var Sr=typeof Object.is=="function"?Object.is:aA;function hu(t,e){if(Sr(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!wv.call(e,i)||!Sr(t[i],e[i]))return!1}return!0}function qk(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Qk(t,e){var n=qk(t);t=0;for(var r;n;){if(n.nodeType===3){if(r=t+n.textContent.length,t<=e&&r>=e)return{node:n,offset:e-t};t=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=qk(n)}}function IC(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?IC(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function zC(){for(var t=window,e=Ih();e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=Ih(t.document)}return e}function E1(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function lA(t){var e=zC(),n=t.focusedElem,r=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&IC(n.ownerDocument.documentElement,n)){if(r!==null&&E1(n)){if(e=r.start,t=r.end,t===void 0&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if(t=(e=n.ownerDocument||document)&&e.defaultView||window,t.getSelection){t=t.getSelection();var i=n.textContent.length,o=Math.min(r.start,i);r=r.end===void 0?o:Math.min(r.end,i),!t.extend&&o>r&&(i=r,r=o,o=i),i=Qk(n,o);var s=Qk(n,r);i&&s&&(t.rangeCount!==1||t.anchorNode!==i.node||t.anchorOffset!==i.offset||t.focusNode!==s.node||t.focusOffset!==s.offset)&&(e=e.createRange(),e.setStart(i.node,i.offset),t.removeAllRanges(),o>r?(t.addRange(e),t.extend(s.node,s.offset)):(e.setEnd(s.node,s.offset),t.addRange(e)))}}for(e=[],t=n;t=t.parentNode;)t.nodeType===1&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<e.length;n++)t=e[n],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var cA=wi&&"documentMode"in document&&11>=document.documentMode,ya=null,Yv=null,Nc=null,Fv=!1;function Jk(t,e,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Fv||ya==null||ya!==Ih(r)||(r=ya,"selectionStart"in r&&E1(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),Nc&&hu(Nc,r)||(Nc=r,r=Bh(Yv,"onSelect"),0<r.length&&(e=new R1("onSelect","select",null,e,n),t.push({event:e,listeners:r}),e.target=ya)))}function Yd(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var xa={animationend:Yd("Animation","AnimationEnd"),animationiteration:Yd("Animation","AnimationIteration"),animationstart:Yd("Animation","AnimationStart"),transitionend:Yd("Transition","TransitionEnd")},Hg={},EC={};wi&&(EC=document.createElement("div").style,"AnimationEvent"in window||(delete xa.animationend.animation,delete xa.animationiteration.animation,delete xa.animationstart.animation),"TransitionEvent"in window||delete xa.transitionend.transition);function cm(t){if(Hg[t])return Hg[t];if(!xa[t])return t;var e=xa[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in EC)return Hg[t]=e[n];return t}var NC=cm("animationend"),VC=cm("animationiteration"),LC=cm("animationstart"),XC=cm("transitionend"),BC=new Map,_k="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function zo(t,e){BC.set(t,e),Zs(e,[t])}for(var jg=0;jg<_k.length;jg++){var Dg=_k[jg],uA=Dg.toLowerCase(),dA=Dg[0].toUpperCase()+Dg.slice(1);zo(uA,"on"+dA)}zo(NC,"onAnimationEnd");zo(VC,"onAnimationIteration");zo(LC,"onAnimationStart");zo("dblclick","onDoubleClick");zo("focusin","onFocus");zo("focusout","onBlur");zo(XC,"onTransitionEnd");il("onMouseEnter",["mouseout","mouseover"]);il("onMouseLeave",["mouseout","mouseover"]);il("onPointerEnter",["pointerout","pointerover"]);il("onPointerLeave",["pointerout","pointerover"]);Zs("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Zs("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Zs("onBeforeInput",["compositionend","keypress","textInput","paste"]);Zs("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Zs("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Zs("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var bc="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),fA=new Set("cancel close invalid load scroll toggle".split(" ").concat(bc));function $k(t,e,n){var r=t.type||"unknown-event";t.currentTarget=n,uB(r,e,void 0,t),t.currentTarget=null}function AC(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var r=t[n],i=r.event;r=r.listeners;e:{var o=void 0;if(e)for(var s=r.length-1;0<=s;s--){var a=r[s],l=a.instance,c=a.currentTarget;if(a=a.listener,l!==o&&i.isPropagationStopped())break e;$k(i,a,c),o=l}else for(s=0;s<r.length;s++){if(a=r[s],l=a.instance,c=a.currentTarget,a=a.listener,l!==o&&i.isPropagationStopped())break e;$k(i,a,c),o=l}}}if(Eh)throw t=Av,Eh=!1,Av=null,t}function Le(t,e){var n=e[Kv];n===void 0&&(n=e[Kv]=new Set);var r=t+"__bubble";n.has(r)||(ZC(e,t,2,!1),n.add(r))}function Ug(t,e,n){var r=0;e&&(r|=4),ZC(n,t,r,e)}var Fd="_reactListening"+Math.random().toString(36).slice(2);function pu(t){if(!t[Fd]){t[Fd]=!0,DP.forEach(function(n){n!=="selectionchange"&&(fA.has(n)||Ug(n,!1,t),Ug(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[Fd]||(e[Fd]=!0,Ug("selectionchange",!1,e))}}function ZC(t,e,n,r){switch(kC(e)){case 1:var i=PB;break;case 4:i=CB;break;default:i=C1}n=i.bind(null,e,n,t),i=void 0,!Bv||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(i=!0),r?i!==void 0?t.addEventListener(e,n,{capture:!0,passive:i}):t.addEventListener(e,n,!0):i!==void 0?t.addEventListener(e,n,{passive:i}):t.addEventListener(e,n,!1)}function Kg(t,e,n,r,i){var o=r;if((e&1)===0&&(e&2)===0&&r!==null)e:for(;;){if(r===null)return;var s=r.tag;if(s===3||s===4){var a=r.stateNode.containerInfo;if(a===i||a.nodeType===8&&a.parentNode===i)break;if(s===4)for(s=r.return;s!==null;){var l=s.tag;if((l===3||l===4)&&(l=s.stateNode.containerInfo,l===i||l.nodeType===8&&l.parentNode===i))return;s=s.return}for(;a!==null;){if(s=ss(a),s===null)return;if(l=s.tag,l===5||l===6){r=o=s;continue e}a=a.parentNode}}r=r.return}lC(function(){var c=o,u=w1(n),d=[];e:{var f=BC.get(t);if(f!==void 0){var h=R1,p=t;switch(t){case"keypress":if(qf(n)===0)break e;case"keydown":case"keyup":h=YB;break;case"focusin":p="focus",h=Wg;break;case"focusout":p="blur",h=Wg;break;case"beforeblur":case"afterblur":h=Wg;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":h=Wk;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":h=IB;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":h=jB;break;case NC:case VC:case LC:h=NB;break;case XC:h=UB;break;case"scroll":h=MB;break;case"wheel":h=qB;break;case"copy":case"cut":case"paste":h=LB;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":h=Fk}var m=(e&4)!==0,b=!m&&t==="scroll",g=m?f!==null?f+"Capture":null:f;m=[];for(var v=c,y;v!==null;){y=v;var x=y.stateNode;if(y.tag===5&&x!==null&&(y=x,g!==null&&(x=lu(v,g),x!=null&&m.push(mu(v,x,y)))),b)break;v=v.return}0<m.length&&(f=new h(f,p,null,n,u),d.push({event:f,listeners:m}))}}if((e&7)===0){e:{if(f=t==="mouseover"||t==="pointerover",h=t==="mouseout"||t==="pointerout",f&&n!==Lv&&(p=n.relatedTarget||n.fromElement)&&(ss(p)||p[Oi]))break e;if((h||f)&&(f=u.window===u?u:(f=u.ownerDocument)?f.defaultView||f.parentWindow:window,h?(p=n.relatedTarget||n.toElement,h=c,p=p?ss(p):null,p!==null&&(b=Gs(p),p!==b||p.tag!==5&&p.tag!==6)&&(p=null)):(h=null,p=c),h!==p)){if(m=Wk,x="onMouseLeave",g="onMouseEnter",v="mouse",(t==="pointerout"||t==="pointerover")&&(m=Fk,x="onPointerLeave",g="onPointerEnter",v="pointer"),b=h==null?f:Sa(h),y=p==null?f:Sa(p),f=new m(x,v+"leave",h,n,u),f.target=b,f.relatedTarget=y,x=null,ss(u)===c&&(m=new m(g,v+"enter",p,n,u),m.target=y,m.relatedTarget=b,x=m),b=x,h&&p)t:{for(m=h,g=p,v=0,y=m;y;y=ra(y))v++;for(y=0,x=g;x;x=ra(x))y++;for(;0<v-y;)m=ra(m),v--;for(;0<y-v;)g=ra(g),y--;for(;v--;){if(m===g||g!==null&&m===g.alternate)break t;m=ra(m),g=ra(g)}m=null}else m=null;h!==null&&ew(d,f,h,m,!1),p!==null&&b!==null&&ew(d,b,p,m,!0)}}e:{if(f=c?Sa(c):window,h=f.nodeName&&f.nodeName.toLowerCase(),h==="select"||h==="input"&&f.type==="file")var k=nA;else if(Dk(f))if(MC)k=sA;else{k=iA;var O=rA}else(h=f.nodeName)&&h.toLowerCase()==="input"&&(f.type==="checkbox"||f.type==="radio")&&(k=oA);if(k&&(k=k(t,c))){CC(d,k,n,u);break e}O&&O(t,f,c),t==="focusout"&&(O=f._wrapperState)&&O.controlled&&f.type==="number"&&Iv(f,"number",f.value)}switch(O=c?Sa(c):window,t){case"focusin":(Dk(O)||O.contentEditable==="true")&&(ya=O,Yv=c,Nc=null);break;case"focusout":Nc=Yv=ya=null;break;case"mousedown":Fv=!0;break;case"contextmenu":case"mouseup":case"dragend":Fv=!1,Jk(d,n,u);break;case"selectionchange":if(cA)break;case"keydown":case"keyup":Jk(d,n,u)}var T;if(z1)e:{switch(t){case"compositionstart":var M="onCompositionStart";break e;case"compositionend":M="onCompositionEnd";break e;case"compositionupdate":M="onCompositionUpdate";break e}M=void 0}else ba?TC(t,n)&&(M="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(M="onCompositionStart");M&&(OC&&n.locale!=="ko"&&(ba||M!=="onCompositionStart"?M==="onCompositionEnd"&&ba&&(T=wC()):($i=u,M1="value"in $i?$i.value:$i.textContent,ba=!0)),O=Bh(c,M),0<O.length&&(M=new Yk(M,t,null,n,u),d.push({event:M,listeners:O}),T?M.data=T:(T=PC(n),T!==null&&(M.data=T)))),(T=JB?_B(t,n):$B(t,n))&&(c=Bh(c,"onBeforeInput"),0<c.length&&(u=new Yk("onBeforeInput","beforeinput",null,n,u),d.push({event:u,listeners:c}),u.data=T))}AC(d,e)})}function mu(t,e,n){return{instance:t,listener:e,currentTarget:n}}function Bh(t,e){for(var n=e+"Capture",r=[];t!==null;){var i=t,o=i.stateNode;i.tag===5&&o!==null&&(i=o,o=lu(t,n),o!=null&&r.unshift(mu(t,o,i)),o=lu(t,e),o!=null&&r.push(mu(t,o,i))),t=t.return}return r}function ra(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function ew(t,e,n,r,i){for(var o=e._reactName,s=[];n!==null&&n!==r;){var a=n,l=a.alternate,c=a.stateNode;if(l!==null&&l===r)break;a.tag===5&&c!==null&&(a=c,i?(l=lu(n,o),l!=null&&s.unshift(mu(n,l,a))):i||(l=lu(n,o),l!=null&&s.push(mu(n,l,a)))),n=n.return}s.length!==0&&t.push({event:e,listeners:s})}var hA=/\r\n?/g,pA=/\u0000|\uFFFD/g;function tw(t){return(typeof t=="string"?t:""+t).replace(hA,`
`).replace(pA,"")}function Hd(t,e,n){if(e=tw(e),tw(t)!==e&&n)throw Error(A(425))}function Ah(){}var Hv=null,jv=null;function Dv(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var Uv=typeof setTimeout=="function"?setTimeout:void 0,mA=typeof clearTimeout=="function"?clearTimeout:void 0,nw=typeof Promise=="function"?Promise:void 0,gA=typeof queueMicrotask=="function"?queueMicrotask:typeof nw<"u"?function(t){return nw.resolve(null).then(t).catch(vA)}:Uv;function vA(t){setTimeout(function(){throw t})}function qg(t,e){var n=e,r=0;do{var i=n.nextSibling;if(t.removeChild(n),i&&i.nodeType===8)if(n=i.data,n==="/$"){if(r===0){t.removeChild(i),du(e);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=i}while(n);du(e)}function po(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return t}function rw(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}var zl=Math.random().toString(36).slice(2),Br="__reactFiber$"+zl,gu="__reactProps$"+zl,Oi="__reactContainer$"+zl,Kv="__reactEvents$"+zl,bA="__reactListeners$"+zl,yA="__reactHandles$"+zl;function ss(t){var e=t[Br];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Oi]||n[Br]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=rw(t);t!==null;){if(n=t[Br])return n;t=rw(t)}return e}t=n,n=t.parentNode}return null}function sd(t){return t=t[Br]||t[Oi],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function Sa(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(A(33))}function um(t){return t[gu]||null}var qv=[],ka=-1;function Eo(t){return{current:t}}function Ae(t){0>ka||(t.current=qv[ka],qv[ka]=null,ka--)}function Ne(t,e){ka++,qv[ka]=t.current,t.current=e}var wo={},Ft=Eo(wo),cn=Eo(!1),Cs=wo;function ol(t,e){var n=t.type.contextTypes;if(!n)return wo;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var i={},o;for(o in n)i[o]=e[o];return r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=i),i}function un(t){return t=t.childContextTypes,t!=null}function Zh(){Ae(cn),Ae(Ft)}function iw(t,e,n){if(Ft.current!==wo)throw Error(A(168));Ne(Ft,e),Ne(cn,n)}function GC(t,e,n){var r=t.stateNode;if(e=e.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var i in r)if(!(i in e))throw Error(A(108,rB(t)||"Unknown",i));return _e({},n,r)}function Gh(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||wo,Cs=Ft.current,Ne(Ft,t),Ne(cn,cn.current),!0}function ow(t,e,n){var r=t.stateNode;if(!r)throw Error(A(169));n?(t=GC(t,e,Cs),r.__reactInternalMemoizedMergedChildContext=t,Ae(cn),Ae(Ft),Ne(Ft,t)):Ae(cn),Ne(cn,n)}var fi=null,dm=!1,Qg=!1;function WC(t){fi===null?fi=[t]:fi.push(t)}function xA(t){dm=!0,WC(t)}function No(){if(!Qg&&fi!==null){Qg=!0;var t=0,e=Te;try{var n=fi;for(Te=1;t<n.length;t++){var r=n[t];do r=r(!0);while(r!==null)}fi=null,dm=!1}catch(i){throw fi!==null&&(fi=fi.slice(t+1)),fC(O1,No),i}finally{Te=e,Qg=!1}}return null}var wa=[],Oa=0,Wh=null,Yh=0,Fn=[],Hn=0,Ms=null,vi=1,bi="";function Ko(t,e){wa[Oa++]=Yh,wa[Oa++]=Wh,Wh=t,Yh=e}function YC(t,e,n){Fn[Hn++]=vi,Fn[Hn++]=bi,Fn[Hn++]=Ms,Ms=t;var r=vi;t=bi;var i=32-gr(r)-1;r&=~(1<<i),n+=1;var o=32-gr(e)+i;if(30<o){var s=i-i%5;o=(r&(1<<s)-1).toString(32),r>>=s,i-=s,vi=1<<32-gr(e)+i|n<<i|r,bi=o+t}else vi=1<<o|n<<i|r,bi=t}function N1(t){t.return!==null&&(Ko(t,1),YC(t,1,0))}function V1(t){for(;t===Wh;)Wh=wa[--Oa],wa[Oa]=null,Yh=wa[--Oa],wa[Oa]=null;for(;t===Ms;)Ms=Fn[--Hn],Fn[Hn]=null,bi=Fn[--Hn],Fn[Hn]=null,vi=Fn[--Hn],Fn[Hn]=null}var Cn=null,Tn=null,He=!1,pr=null;function FC(t,e){var n=Dn(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,e=t.deletions,e===null?(t.deletions=[n],t.flags|=16):e.push(n)}function sw(t,e){switch(t.tag){case 5:var n=t.type;return e=e.nodeType!==1||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(t.stateNode=e,Cn=t,Tn=po(e.firstChild),!0):!1;case 6:return e=t.pendingProps===""||e.nodeType!==3?null:e,e!==null?(t.stateNode=e,Cn=t,Tn=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(n=Ms!==null?{id:vi,overflow:bi}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},n=Dn(18,null,null,0),n.stateNode=e,n.return=t,t.child=n,Cn=t,Tn=null,!0):!1;default:return!1}}function Qv(t){return(t.mode&1)!==0&&(t.flags&128)===0}function Jv(t){if(He){var e=Tn;if(e){var n=e;if(!sw(t,e)){if(Qv(t))throw Error(A(418));e=po(n.nextSibling);var r=Cn;e&&sw(t,e)?FC(r,n):(t.flags=t.flags&-4097|2,He=!1,Cn=t)}}else{if(Qv(t))throw Error(A(418));t.flags=t.flags&-4097|2,He=!1,Cn=t}}}function aw(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;Cn=t}function jd(t){if(t!==Cn)return!1;if(!He)return aw(t),He=!0,!1;var e;if((e=t.tag!==3)&&!(e=t.tag!==5)&&(e=t.type,e=e!=="head"&&e!=="body"&&!Dv(t.type,t.memoizedProps)),e&&(e=Tn)){if(Qv(t))throw HC(),Error(A(418));for(;e;)FC(t,e),e=po(e.nextSibling)}if(aw(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(A(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="/$"){if(e===0){Tn=po(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++}t=t.nextSibling}Tn=null}}else Tn=Cn?po(t.stateNode.nextSibling):null;return!0}function HC(){for(var t=Tn;t;)t=po(t.nextSibling)}function sl(){Tn=Cn=null,He=!1}function L1(t){pr===null?pr=[t]:pr.push(t)}var SA=Ei.ReactCurrentBatchConfig;function dr(t,e){if(t&&t.defaultProps){e=_e({},e),t=t.defaultProps;for(var n in t)e[n]===void 0&&(e[n]=t[n]);return e}return e}var Fh=Eo(null),Hh=null,Ta=null,X1=null;function B1(){X1=Ta=Hh=null}function A1(t){var e=Fh.current;Ae(Fh),t._currentValue=e}function _v(t,e,n){for(;t!==null;){var r=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,r!==null&&(r.childLanes|=e)):r!==null&&(r.childLanes&e)!==e&&(r.childLanes|=e),t===n)break;t=t.return}}function Za(t,e){Hh=t,X1=Ta=null,t=t.dependencies,t!==null&&t.firstContext!==null&&((t.lanes&e)!==0&&(an=!0),t.firstContext=null)}function _n(t){var e=t._currentValue;if(X1!==t)if(t={context:t,memoizedValue:e,next:null},Ta===null){if(Hh===null)throw Error(A(308));Ta=t,Hh.dependencies={lanes:0,firstContext:t}}else Ta=Ta.next=t;return e}var as=null;function Z1(t){as===null?as=[t]:as.push(t)}function jC(t,e,n,r){var i=e.interleaved;return i===null?(n.next=n,Z1(e)):(n.next=i.next,i.next=n),e.interleaved=n,Ti(t,r)}function Ti(t,e){t.lanes|=e;var n=t.alternate;for(n!==null&&(n.lanes|=e),n=t,t=t.return;t!==null;)t.childLanes|=e,n=t.alternate,n!==null&&(n.childLanes|=e),n=t,t=t.return;return n.tag===3?n.stateNode:null}var Hi=!1;function G1(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function DC(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function xi(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function mo(t,e,n){var r=t.updateQueue;if(r===null)return null;if(r=r.shared,(ve&2)!==0){var i=r.pending;return i===null?e.next=e:(e.next=i.next,i.next=e),r.pending=e,Ti(t,n)}return i=r.interleaved,i===null?(e.next=e,Z1(r)):(e.next=i.next,i.next=e),r.interleaved=e,Ti(t,n)}function Qf(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194240)!==0)){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,T1(t,n)}}function lw(t,e){var n=t.updateQueue,r=t.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var i=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var s={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?i=o=s:o=o.next=s,n=n.next}while(n!==null);o===null?i=o=e:o=o.next=e}else i=o=e;n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function jh(t,e,n,r){var i=t.updateQueue;Hi=!1;var o=i.firstBaseUpdate,s=i.lastBaseUpdate,a=i.shared.pending;if(a!==null){i.shared.pending=null;var l=a,c=l.next;l.next=null,s===null?o=c:s.next=c,s=l;var u=t.alternate;u!==null&&(u=u.updateQueue,a=u.lastBaseUpdate,a!==s&&(a===null?u.firstBaseUpdate=c:a.next=c,u.lastBaseUpdate=l))}if(o!==null){var d=i.baseState;s=0,u=c=l=null,a=o;do{var f=a.lane,h=a.eventTime;if((r&f)===f){u!==null&&(u=u.next={eventTime:h,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var p=t,m=a;switch(f=e,h=n,m.tag){case 1:if(p=m.payload,typeof p=="function"){d=p.call(h,d,f);break e}d=p;break e;case 3:p.flags=p.flags&-65537|128;case 0:if(p=m.payload,f=typeof p=="function"?p.call(h,d,f):p,f==null)break e;d=_e({},d,f);break e;case 2:Hi=!0}}a.callback!==null&&a.lane!==0&&(t.flags|=64,f=i.effects,f===null?i.effects=[a]:f.push(a))}else h={eventTime:h,lane:f,tag:a.tag,payload:a.payload,callback:a.callback,next:null},u===null?(c=u=h,l=d):u=u.next=h,s|=f;if(a=a.next,a===null){if(a=i.shared.pending,a===null)break;f=a,a=f.next,f.next=null,i.lastBaseUpdate=f,i.shared.pending=null}}while(1);if(u===null&&(l=d),i.baseState=l,i.firstBaseUpdate=c,i.lastBaseUpdate=u,e=i.shared.interleaved,e!==null){i=e;do s|=i.lane,i=i.next;while(i!==e)}else o===null&&(i.shared.lanes=0);Is|=s,t.lanes=s,t.memoizedState=d}}function cw(t,e,n){if(t=e.effects,e.effects=null,t!==null)for(e=0;e<t.length;e++){var r=t[e],i=r.callback;if(i!==null){if(r.callback=null,r=n,typeof i!="function")throw Error(A(191,i));i.call(r)}}}var UC=new jP.Component().refs;function $v(t,e,n,r){e=t.memoizedState,n=n(r,e),n=n==null?e:_e({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var fm={isMounted:function(t){return(t=t._reactInternals)?Gs(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var r=_t(),i=vo(t),o=xi(r,i);o.payload=e,n!=null&&(o.callback=n),e=mo(t,o,i),e!==null&&(vr(e,t,i,r),Qf(e,t,i))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var r=_t(),i=vo(t),o=xi(r,i);o.tag=1,o.payload=e,n!=null&&(o.callback=n),e=mo(t,o,i),e!==null&&(vr(e,t,i,r),Qf(e,t,i))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=_t(),r=vo(t),i=xi(n,r);i.tag=2,e!=null&&(i.callback=e),e=mo(t,i,r),e!==null&&(vr(e,t,r,n),Qf(e,t,r))}};function uw(t,e,n,r,i,o,s){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(r,o,s):e.prototype&&e.prototype.isPureReactComponent?!hu(n,r)||!hu(i,o):!0}function KC(t,e,n){var r=!1,i=wo,o=e.contextType;return typeof o=="object"&&o!==null?o=_n(o):(i=un(e)?Cs:Ft.current,r=e.contextTypes,o=(r=r!=null)?ol(t,i):wo),e=new e(n,o),t.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=fm,t.stateNode=e,e._reactInternals=t,r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=i,t.__reactInternalMemoizedMaskedChildContext=o),e}function dw(t,e,n,r){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,r),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&fm.enqueueReplaceState(e,e.state,null)}function eb(t,e,n,r){var i=t.stateNode;i.props=n,i.state=t.memoizedState,i.refs=UC,G1(t);var o=e.contextType;typeof o=="object"&&o!==null?i.context=_n(o):(o=un(e)?Cs:Ft.current,i.context=ol(t,o)),i.state=t.memoizedState,o=e.getDerivedStateFromProps,typeof o=="function"&&($v(t,e,o,n),i.state=t.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(e=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),e!==i.state&&fm.enqueueReplaceState(i,i.state,null),jh(t,n,i,r),i.state=t.memoizedState),typeof i.componentDidMount=="function"&&(t.flags|=4194308)}function $l(t,e,n){if(t=n.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(A(309));var r=n.stateNode}if(!r)throw Error(A(147,t));var i=r,o=""+t;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===o?e.ref:(e=function(s){var a=i.refs;a===UC&&(a=i.refs={}),s===null?delete a[o]:a[o]=s},e._stringRef=o,e)}if(typeof t!="string")throw Error(A(284));if(!n._owner)throw Error(A(290,t))}return t}function Dd(t,e){throw t=Object.prototype.toString.call(e),Error(A(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function fw(t){var e=t._init;return e(t._payload)}function qC(t){function e(g,v){if(t){var y=g.deletions;y===null?(g.deletions=[v],g.flags|=16):y.push(v)}}function n(g,v){if(!t)return null;for(;v!==null;)e(g,v),v=v.sibling;return null}function r(g,v){for(g=new Map;v!==null;)v.key!==null?g.set(v.key,v):g.set(v.index,v),v=v.sibling;return g}function i(g,v){return g=bo(g,v),g.index=0,g.sibling=null,g}function o(g,v,y){return g.index=y,t?(y=g.alternate,y!==null?(y=y.index,y<v?(g.flags|=2,v):y):(g.flags|=2,v)):(g.flags|=1048576,v)}function s(g){return t&&g.alternate===null&&(g.flags|=2),g}function a(g,v,y,x){return v===null||v.tag!==6?(v=r0(y,g.mode,x),v.return=g,v):(v=i(v,y),v.return=g,v)}function l(g,v,y,x){var k=y.type;return k===va?u(g,v,y.props.children,x,y.key):v!==null&&(v.elementType===k||typeof k=="object"&&k!==null&&k.$$typeof===Fi&&fw(k)===v.type)?(x=i(v,y.props),x.ref=$l(g,v,y),x.return=g,x):(x=nh(y.type,y.key,y.props,null,g.mode,x),x.ref=$l(g,v,y),x.return=g,x)}function c(g,v,y,x){return v===null||v.tag!==4||v.stateNode.containerInfo!==y.containerInfo||v.stateNode.implementation!==y.implementation?(v=i0(y,g.mode,x),v.return=g,v):(v=i(v,y.children||[]),v.return=g,v)}function u(g,v,y,x,k){return v===null||v.tag!==7?(v=bs(y,g.mode,x,k),v.return=g,v):(v=i(v,y),v.return=g,v)}function d(g,v,y){if(typeof v=="string"&&v!==""||typeof v=="number")return v=r0(""+v,g.mode,y),v.return=g,v;if(typeof v=="object"&&v!==null){switch(v.$$typeof){case Ld:return y=nh(v.type,v.key,v.props,null,g.mode,y),y.ref=$l(g,null,v),y.return=g,y;case ga:return v=i0(v,g.mode,y),v.return=g,v;case Fi:var x=v._init;return d(g,x(v._payload),y)}if(gc(v)||Kl(v))return v=bs(v,g.mode,y,null),v.return=g,v;Dd(g,v)}return null}function f(g,v,y,x){var k=v!==null?v.key:null;if(typeof y=="string"&&y!==""||typeof y=="number")return k!==null?null:a(g,v,""+y,x);if(typeof y=="object"&&y!==null){switch(y.$$typeof){case Ld:return y.key===k?l(g,v,y,x):null;case ga:return y.key===k?c(g,v,y,x):null;case Fi:return k=y._init,f(g,v,k(y._payload),x)}if(gc(y)||Kl(y))return k!==null?null:u(g,v,y,x,null);Dd(g,y)}return null}function h(g,v,y,x,k){if(typeof x=="string"&&x!==""||typeof x=="number")return g=g.get(y)||null,a(v,g,""+x,k);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case Ld:return g=g.get(x.key===null?y:x.key)||null,l(v,g,x,k);case ga:return g=g.get(x.key===null?y:x.key)||null,c(v,g,x,k);case Fi:var O=x._init;return h(g,v,y,O(x._payload),k)}if(gc(x)||Kl(x))return g=g.get(y)||null,u(v,g,x,k,null);Dd(v,x)}return null}function p(g,v,y,x){for(var k=null,O=null,T=v,M=v=0,E=null;T!==null&&M<y.length;M++){T.index>M?(E=T,T=null):E=T.sibling;var I=f(g,T,y[M],x);if(I===null){T===null&&(T=E);break}t&&T&&I.alternate===null&&e(g,T),v=o(I,v,M),O===null?k=I:O.sibling=I,O=I,T=E}if(M===y.length)return n(g,T),He&&Ko(g,M),k;if(T===null){for(;M<y.length;M++)T=d(g,y[M],x),T!==null&&(v=o(T,v,M),O===null?k=T:O.sibling=T,O=T);return He&&Ko(g,M),k}for(T=r(g,T);M<y.length;M++)E=h(T,g,M,y[M],x),E!==null&&(t&&E.alternate!==null&&T.delete(E.key===null?M:E.key),v=o(E,v,M),O===null?k=E:O.sibling=E,O=E);return t&&T.forEach(function(B){return e(g,B)}),He&&Ko(g,M),k}function m(g,v,y,x){var k=Kl(y);if(typeof k!="function")throw Error(A(150));if(y=k.call(y),y==null)throw Error(A(151));for(var O=k=null,T=v,M=v=0,E=null,I=y.next();T!==null&&!I.done;M++,I=y.next()){T.index>M?(E=T,T=null):E=T.sibling;var B=f(g,T,I.value,x);if(B===null){T===null&&(T=E);break}t&&T&&B.alternate===null&&e(g,T),v=o(B,v,M),O===null?k=B:O.sibling=B,O=B,T=E}if(I.done)return n(g,T),He&&Ko(g,M),k;if(T===null){for(;!I.done;M++,I=y.next())I=d(g,I.value,x),I!==null&&(v=o(I,v,M),O===null?k=I:O.sibling=I,O=I);return He&&Ko(g,M),k}for(T=r(g,T);!I.done;M++,I=y.next())I=h(T,g,M,I.value,x),I!==null&&(t&&I.alternate!==null&&T.delete(I.key===null?M:I.key),v=o(I,v,M),O===null?k=I:O.sibling=I,O=I);return t&&T.forEach(function(D){return e(g,D)}),He&&Ko(g,M),k}function b(g,v,y,x){if(typeof y=="object"&&y!==null&&y.type===va&&y.key===null&&(y=y.props.children),typeof y=="object"&&y!==null){switch(y.$$typeof){case Ld:e:{for(var k=y.key,O=v;O!==null;){if(O.key===k){if(k=y.type,k===va){if(O.tag===7){n(g,O.sibling),v=i(O,y.props.children),v.return=g,g=v;break e}}else if(O.elementType===k||typeof k=="object"&&k!==null&&k.$$typeof===Fi&&fw(k)===O.type){n(g,O.sibling),v=i(O,y.props),v.ref=$l(g,O,y),v.return=g,g=v;break e}n(g,O);break}else e(g,O);O=O.sibling}y.type===va?(v=bs(y.props.children,g.mode,x,y.key),v.return=g,g=v):(x=nh(y.type,y.key,y.props,null,g.mode,x),x.ref=$l(g,v,y),x.return=g,g=x)}return s(g);case ga:e:{for(O=y.key;v!==null;){if(v.key===O)if(v.tag===4&&v.stateNode.containerInfo===y.containerInfo&&v.stateNode.implementation===y.implementation){n(g,v.sibling),v=i(v,y.children||[]),v.return=g,g=v;break e}else{n(g,v);break}else e(g,v);v=v.sibling}v=i0(y,g.mode,x),v.return=g,g=v}return s(g);case Fi:return O=y._init,b(g,v,O(y._payload),x)}if(gc(y))return p(g,v,y,x);if(Kl(y))return m(g,v,y,x);Dd(g,y)}return typeof y=="string"&&y!==""||typeof y=="number"?(y=""+y,v!==null&&v.tag===6?(n(g,v.sibling),v=i(v,y),v.return=g,g=v):(n(g,v),v=r0(y,g.mode,x),v.return=g,g=v),s(g)):n(g,v)}return b}var al=qC(!0),QC=qC(!1),ad={},Dr=Eo(ad),vu=Eo(ad),bu=Eo(ad);function ls(t){if(t===ad)throw Error(A(174));return t}function W1(t,e){switch(Ne(bu,e),Ne(vu,t),Ne(Dr,ad),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Ev(null,"");break;default:t=t===8?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=Ev(e,t)}Ae(Dr),Ne(Dr,e)}function ll(){Ae(Dr),Ae(vu),Ae(bu)}function JC(t){ls(bu.current);var e=ls(Dr.current),n=Ev(e,t.type);e!==n&&(Ne(vu,t),Ne(Dr,n))}function Y1(t){vu.current===t&&(Ae(Dr),Ae(vu))}var qe=Eo(0);function Dh(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if((e.flags&128)!==0)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Jg=[];function F1(){for(var t=0;t<Jg.length;t++)Jg[t]._workInProgressVersionPrimary=null;Jg.length=0}var Jf=Ei.ReactCurrentDispatcher,_g=Ei.ReactCurrentBatchConfig,Rs=0,Je=null,ft=null,vt=null,Uh=!1,Vc=!1,yu=0,kA=0;function Lt(){throw Error(A(321))}function H1(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Sr(t[n],e[n]))return!1;return!0}function j1(t,e,n,r,i,o){if(Rs=o,Je=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Jf.current=t===null||t.memoizedState===null?PA:CA,t=n(r,i),Vc){o=0;do{if(Vc=!1,yu=0,25<=o)throw Error(A(301));o+=1,vt=ft=null,e.updateQueue=null,Jf.current=MA,t=n(r,i)}while(Vc)}if(Jf.current=Kh,e=ft!==null&&ft.next!==null,Rs=0,vt=ft=Je=null,Uh=!1,e)throw Error(A(300));return t}function D1(){var t=yu!==0;return yu=0,t}function Er(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return vt===null?Je.memoizedState=vt=t:vt=vt.next=t,vt}function $n(){if(ft===null){var t=Je.alternate;t=t!==null?t.memoizedState:null}else t=ft.next;var e=vt===null?Je.memoizedState:vt.next;if(e!==null)vt=e,ft=t;else{if(t===null)throw Error(A(310));ft=t,t={memoizedState:ft.memoizedState,baseState:ft.baseState,baseQueue:ft.baseQueue,queue:ft.queue,next:null},vt===null?Je.memoizedState=vt=t:vt=vt.next=t}return vt}function xu(t,e){return typeof e=="function"?e(t):e}function $g(t){var e=$n(),n=e.queue;if(n===null)throw Error(A(311));n.lastRenderedReducer=t;var r=ft,i=r.baseQueue,o=n.pending;if(o!==null){if(i!==null){var s=i.next;i.next=o.next,o.next=s}r.baseQueue=i=o,n.pending=null}if(i!==null){o=i.next,r=r.baseState;var a=s=null,l=null,c=o;do{var u=c.lane;if((Rs&u)===u)l!==null&&(l=l.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:t(r,c.action);else{var d={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};l===null?(a=l=d,s=r):l=l.next=d,Je.lanes|=u,Is|=u}c=c.next}while(c!==null&&c!==o);l===null?s=r:l.next=a,Sr(r,e.memoizedState)||(an=!0),e.memoizedState=r,e.baseState=s,e.baseQueue=l,n.lastRenderedState=r}if(t=n.interleaved,t!==null){i=t;do o=i.lane,Je.lanes|=o,Is|=o,i=i.next;while(i!==t)}else i===null&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function e0(t){var e=$n(),n=e.queue;if(n===null)throw Error(A(311));n.lastRenderedReducer=t;var r=n.dispatch,i=n.pending,o=e.memoizedState;if(i!==null){n.pending=null;var s=i=i.next;do o=t(o,s.action),s=s.next;while(s!==i);Sr(o,e.memoizedState)||(an=!0),e.memoizedState=o,e.baseQueue===null&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function _C(){}function $C(t,e){var n=Je,r=$n(),i=e(),o=!Sr(r.memoizedState,i);if(o&&(r.memoizedState=i,an=!0),r=r.queue,U1(nM.bind(null,n,r,t),[t]),r.getSnapshot!==e||o||vt!==null&&vt.memoizedState.tag&1){if(n.flags|=2048,Su(9,tM.bind(null,n,r,i,e),void 0,null),bt===null)throw Error(A(349));(Rs&30)!==0||eM(n,e,i)}return i}function eM(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=Je.updateQueue,e===null?(e={lastEffect:null,stores:null},Je.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function tM(t,e,n,r){e.value=n,e.getSnapshot=r,rM(e)&&iM(t)}function nM(t,e,n){return n(function(){rM(e)&&iM(t)})}function rM(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!Sr(t,n)}catch{return!0}}function iM(t){var e=Ti(t,1);e!==null&&vr(e,t,1,-1)}function hw(t){var e=Er();return typeof t=="function"&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xu,lastRenderedState:t},e.queue=t,t=t.dispatch=TA.bind(null,Je,t),[e.memoizedState,t]}function Su(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},e=Je.updateQueue,e===null?(e={lastEffect:null,stores:null},Je.updateQueue=e,e.lastEffect=t.next=t):(n=e.lastEffect,n===null?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t)),t}function oM(){return $n().memoizedState}function _f(t,e,n,r){var i=Er();Je.flags|=t,i.memoizedState=Su(1|e,n,void 0,r===void 0?null:r)}function hm(t,e,n,r){var i=$n();r=r===void 0?null:r;var o=void 0;if(ft!==null){var s=ft.memoizedState;if(o=s.destroy,r!==null&&H1(r,s.deps)){i.memoizedState=Su(e,n,o,r);return}}Je.flags|=t,i.memoizedState=Su(1|e,n,o,r)}function pw(t,e){return _f(8390656,8,t,e)}function U1(t,e){return hm(2048,8,t,e)}function sM(t,e){return hm(4,2,t,e)}function aM(t,e){return hm(4,4,t,e)}function lM(t,e){if(typeof e=="function")return t=t(),e(t),function(){e(null)};if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function cM(t,e,n){return n=n!=null?n.concat([t]):null,hm(4,4,lM.bind(null,e,t),n)}function K1(){}function uM(t,e){var n=$n();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&H1(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function dM(t,e){var n=$n();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&H1(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function fM(t,e,n){return(Rs&21)===0?(t.baseState&&(t.baseState=!1,an=!0),t.memoizedState=n):(Sr(n,e)||(n=mC(),Je.lanes|=n,Is|=n,t.baseState=!0),e)}function wA(t,e){var n=Te;Te=n!==0&&4>n?n:4,t(!0);var r=_g.transition;_g.transition={};try{t(!1),e()}finally{Te=n,_g.transition=r}}function hM(){return $n().memoizedState}function OA(t,e,n){var r=vo(t);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},pM(t))mM(e,n);else if(n=jC(t,e,n,r),n!==null){var i=_t();vr(n,t,r,i),gM(n,e,r)}}function TA(t,e,n){var r=vo(t),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(pM(t))mM(e,i);else{var o=t.alternate;if(t.lanes===0&&(o===null||o.lanes===0)&&(o=e.lastRenderedReducer,o!==null))try{var s=e.lastRenderedState,a=o(s,n);if(i.hasEagerState=!0,i.eagerState=a,Sr(a,s)){var l=e.interleaved;l===null?(i.next=i,Z1(e)):(i.next=l.next,l.next=i),e.interleaved=i;return}}catch{}finally{}n=jC(t,e,i,r),n!==null&&(i=_t(),vr(n,t,r,i),gM(n,e,r))}}function pM(t){var e=t.alternate;return t===Je||e!==null&&e===Je}function mM(t,e){Vc=Uh=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function gM(t,e,n){if((n&4194240)!==0){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,T1(t,n)}}var Kh={readContext:_n,useCallback:Lt,useContext:Lt,useEffect:Lt,useImperativeHandle:Lt,useInsertionEffect:Lt,useLayoutEffect:Lt,useMemo:Lt,useReducer:Lt,useRef:Lt,useState:Lt,useDebugValue:Lt,useDeferredValue:Lt,useTransition:Lt,useMutableSource:Lt,useSyncExternalStore:Lt,useId:Lt,unstable_isNewReconciler:!1},PA={readContext:_n,useCallback:function(t,e){return Er().memoizedState=[t,e===void 0?null:e],t},useContext:_n,useEffect:pw,useImperativeHandle:function(t,e,n){return n=n!=null?n.concat([t]):null,_f(4194308,4,lM.bind(null,e,t),n)},useLayoutEffect:function(t,e){return _f(4194308,4,t,e)},useInsertionEffect:function(t,e){return _f(4,2,t,e)},useMemo:function(t,e){var n=Er();return e=e===void 0?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=Er();return e=n!==void 0?n(e):e,r.memoizedState=r.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},r.queue=t,t=t.dispatch=OA.bind(null,Je,t),[r.memoizedState,t]},useRef:function(t){var e=Er();return t={current:t},e.memoizedState=t},useState:hw,useDebugValue:K1,useDeferredValue:function(t){return Er().memoizedState=t},useTransition:function(){var t=hw(!1),e=t[0];return t=wA.bind(null,t[1]),Er().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var r=Je,i=Er();if(He){if(n===void 0)throw Error(A(407));n=n()}else{if(n=e(),bt===null)throw Error(A(349));(Rs&30)!==0||eM(r,e,n)}i.memoizedState=n;var o={value:n,getSnapshot:e};return i.queue=o,pw(nM.bind(null,r,o,t),[t]),r.flags|=2048,Su(9,tM.bind(null,r,o,n,e),void 0,null),n},useId:function(){var t=Er(),e=bt.identifierPrefix;if(He){var n=bi,r=vi;n=(r&~(1<<32-gr(r)-1)).toString(32)+n,e=":"+e+"R"+n,n=yu++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=kA++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},CA={readContext:_n,useCallback:uM,useContext:_n,useEffect:U1,useImperativeHandle:cM,useInsertionEffect:sM,useLayoutEffect:aM,useMemo:dM,useReducer:$g,useRef:oM,useState:function(){return $g(xu)},useDebugValue:K1,useDeferredValue:function(t){var e=$n();return fM(e,ft.memoizedState,t)},useTransition:function(){var t=$g(xu)[0],e=$n().memoizedState;return[t,e]},useMutableSource:_C,useSyncExternalStore:$C,useId:hM,unstable_isNewReconciler:!1},MA={readContext:_n,useCallback:uM,useContext:_n,useEffect:U1,useImperativeHandle:cM,useInsertionEffect:sM,useLayoutEffect:aM,useMemo:dM,useReducer:e0,useRef:oM,useState:function(){return e0(xu)},useDebugValue:K1,useDeferredValue:function(t){var e=$n();return ft===null?e.memoizedState=t:fM(e,ft.memoizedState,t)},useTransition:function(){var t=e0(xu)[0],e=$n().memoizedState;return[t,e]},useMutableSource:_C,useSyncExternalStore:$C,useId:hM,unstable_isNewReconciler:!1};function cl(t,e){try{var n="",r=e;do n+=nB(r),r=r.return;while(r);var i=n}catch(o){i=`
Error generating stack: `+o.message+`
`+o.stack}return{value:t,source:e,stack:i,digest:null}}function t0(t,e,n){return{value:t,source:null,stack:n!=null?n:null,digest:e!=null?e:null}}function tb(t,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var RA=typeof WeakMap=="function"?WeakMap:Map;function vM(t,e,n){n=xi(-1,n),n.tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Qh||(Qh=!0,db=r),tb(t,e)},n}function bM(t,e,n){n=xi(-1,n),n.tag=3;var r=t.type.getDerivedStateFromError;if(typeof r=="function"){var i=e.value;n.payload=function(){return r(i)},n.callback=function(){tb(t,e)}}var o=t.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){tb(t,e),typeof r!="function"&&(go===null?go=new Set([this]):go.add(this));var s=e.stack;this.componentDidCatch(e.value,{componentStack:s!==null?s:""})}),n}function mw(t,e,n){var r=t.pingCache;if(r===null){r=t.pingCache=new RA;var i=new Set;r.set(e,i)}else i=r.get(e),i===void 0&&(i=new Set,r.set(e,i));i.has(n)||(i.add(n),t=FA.bind(null,t,e,n),e.then(t,t))}function gw(t){do{var e;if((e=t.tag===13)&&(e=t.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return t;t=t.return}while(t!==null);return null}function vw(t,e,n,r,i){return(t.mode&1)===0?(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(e=xi(-1,1),e.tag=2,mo(n,e,1))),n.lanes|=1),t):(t.flags|=65536,t.lanes=i,t)}var IA=Ei.ReactCurrentOwner,an=!1;function Ut(t,e,n,r){e.child=t===null?QC(e,null,n,r):al(e,t.child,n,r)}function bw(t,e,n,r,i){n=n.render;var o=e.ref;return Za(e,i),r=j1(t,e,n,r,o,i),n=D1(),t!==null&&!an?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~i,Pi(t,e,i)):(He&&n&&N1(e),e.flags|=1,Ut(t,e,r,i),e.child)}function yw(t,e,n,r,i){if(t===null){var o=n.type;return typeof o=="function"&&!nx(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(e.tag=15,e.type=o,yM(t,e,o,r,i)):(t=nh(n.type,null,r,e,e.mode,i),t.ref=e.ref,t.return=e,e.child=t)}if(o=t.child,(t.lanes&i)===0){var s=o.memoizedProps;if(n=n.compare,n=n!==null?n:hu,n(s,r)&&t.ref===e.ref)return Pi(t,e,i)}return e.flags|=1,t=bo(o,r),t.ref=e.ref,t.return=e,e.child=t}function yM(t,e,n,r,i){if(t!==null){var o=t.memoizedProps;if(hu(o,r)&&t.ref===e.ref)if(an=!1,e.pendingProps=r=o,(t.lanes&i)!==0)(t.flags&131072)!==0&&(an=!0);else return e.lanes=t.lanes,Pi(t,e,i)}return nb(t,e,n,r,i)}function xM(t,e,n){var r=e.pendingProps,i=r.children,o=t!==null?t.memoizedState:null;if(r.mode==="hidden")if((e.mode&1)===0)e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ne(Ca,Sn),Sn|=n;else{if((n&1073741824)===0)return t=o!==null?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,Ne(Ca,Sn),Sn|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=o!==null?o.baseLanes:n,Ne(Ca,Sn),Sn|=r}else o!==null?(r=o.baseLanes|n,e.memoizedState=null):r=n,Ne(Ca,Sn),Sn|=r;return Ut(t,e,i,n),e.child}function SM(t,e){var n=e.ref;(t===null&&n!==null||t!==null&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function nb(t,e,n,r,i){var o=un(n)?Cs:Ft.current;return o=ol(e,o),Za(e,i),n=j1(t,e,n,r,o,i),r=D1(),t!==null&&!an?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~i,Pi(t,e,i)):(He&&r&&N1(e),e.flags|=1,Ut(t,e,n,i),e.child)}function xw(t,e,n,r,i){if(un(n)){var o=!0;Gh(e)}else o=!1;if(Za(e,i),e.stateNode===null)$f(t,e),KC(e,n,r),eb(e,n,r,i),r=!0;else if(t===null){var s=e.stateNode,a=e.memoizedProps;s.props=a;var l=s.context,c=n.contextType;typeof c=="object"&&c!==null?c=_n(c):(c=un(n)?Cs:Ft.current,c=ol(e,c));var u=n.getDerivedStateFromProps,d=typeof u=="function"||typeof s.getSnapshotBeforeUpdate=="function";d||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(a!==r||l!==c)&&dw(e,s,r,c),Hi=!1;var f=e.memoizedState;s.state=f,jh(e,r,s,i),l=e.memoizedState,a!==r||f!==l||cn.current||Hi?(typeof u=="function"&&($v(e,n,u,r),l=e.memoizedState),(a=Hi||uw(e,n,a,r,f,l,c))?(d||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount()),typeof s.componentDidMount=="function"&&(e.flags|=4194308)):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=l),s.props=r,s.state=l,s.context=c,r=a):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),r=!1)}else{s=e.stateNode,DC(t,e),a=e.memoizedProps,c=e.type===e.elementType?a:dr(e.type,a),s.props=c,d=e.pendingProps,f=s.context,l=n.contextType,typeof l=="object"&&l!==null?l=_n(l):(l=un(n)?Cs:Ft.current,l=ol(e,l));var h=n.getDerivedStateFromProps;(u=typeof h=="function"||typeof s.getSnapshotBeforeUpdate=="function")||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(a!==d||f!==l)&&dw(e,s,r,l),Hi=!1,f=e.memoizedState,s.state=f,jh(e,r,s,i);var p=e.memoizedState;a!==d||f!==p||cn.current||Hi?(typeof h=="function"&&($v(e,n,h,r),p=e.memoizedState),(c=Hi||uw(e,n,c,r,f,p,l)||!1)?(u||typeof s.UNSAFE_componentWillUpdate!="function"&&typeof s.componentWillUpdate!="function"||(typeof s.componentWillUpdate=="function"&&s.componentWillUpdate(r,p,l),typeof s.UNSAFE_componentWillUpdate=="function"&&s.UNSAFE_componentWillUpdate(r,p,l)),typeof s.componentDidUpdate=="function"&&(e.flags|=4),typeof s.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof s.componentDidUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=p),s.props=r,s.state=p,s.context=l,r=c):(typeof s.componentDidUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&f===t.memoizedState||(e.flags|=1024),r=!1)}return rb(t,e,n,r,o,i)}function rb(t,e,n,r,i,o){SM(t,e);var s=(e.flags&128)!==0;if(!r&&!s)return i&&ow(e,n,!1),Pi(t,e,o);r=e.stateNode,IA.current=e;var a=s&&typeof n.getDerivedStateFromError!="function"?null:r.render();return e.flags|=1,t!==null&&s?(e.child=al(e,t.child,null,o),e.child=al(e,null,a,o)):Ut(t,e,a,o),e.memoizedState=r.state,i&&ow(e,n,!0),e.child}function kM(t){var e=t.stateNode;e.pendingContext?iw(t,e.pendingContext,e.pendingContext!==e.context):e.context&&iw(t,e.context,!1),W1(t,e.containerInfo)}function Sw(t,e,n,r,i){return sl(),L1(i),e.flags|=256,Ut(t,e,n,r),e.child}var ib={dehydrated:null,treeContext:null,retryLane:0};function ob(t){return{baseLanes:t,cachePool:null,transitions:null}}function wM(t,e,n){var r=e.pendingProps,i=qe.current,o=!1,s=(e.flags&128)!==0,a;if((a=s)||(a=t!==null&&t.memoizedState===null?!1:(i&2)!==0),a?(o=!0,e.flags&=-129):(t===null||t.memoizedState!==null)&&(i|=1),Ne(qe,i&1),t===null)return Jv(e),t=e.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?((e.mode&1)===0?e.lanes=1:t.data==="$!"?e.lanes=8:e.lanes=1073741824,null):(s=r.children,t=r.fallback,o?(r=e.mode,o=e.child,s={mode:"hidden",children:s},(r&1)===0&&o!==null?(o.childLanes=0,o.pendingProps=s):o=gm(s,r,0,null),t=bs(t,r,n,null),o.return=e,t.return=e,o.sibling=t,e.child=o,e.child.memoizedState=ob(n),e.memoizedState=ib,t):q1(e,s));if(i=t.memoizedState,i!==null&&(a=i.dehydrated,a!==null))return zA(t,e,s,r,a,i,n);if(o){o=r.fallback,s=e.mode,i=t.child,a=i.sibling;var l={mode:"hidden",children:r.children};return(s&1)===0&&e.child!==i?(r=e.child,r.childLanes=0,r.pendingProps=l,e.deletions=null):(r=bo(i,l),r.subtreeFlags=i.subtreeFlags&14680064),a!==null?o=bo(a,o):(o=bs(o,s,n,null),o.flags|=2),o.return=e,r.return=e,r.sibling=o,e.child=r,r=o,o=e.child,s=t.child.memoizedState,s=s===null?ob(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},o.memoizedState=s,o.childLanes=t.childLanes&~n,e.memoizedState=ib,r}return o=t.child,t=o.sibling,r=bo(o,{mode:"visible",children:r.children}),(e.mode&1)===0&&(r.lanes=n),r.return=e,r.sibling=null,t!==null&&(n=e.deletions,n===null?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=r,e.memoizedState=null,r}function q1(t,e){return e=gm({mode:"visible",children:e},t.mode,0,null),e.return=t,t.child=e}function Ud(t,e,n,r){return r!==null&&L1(r),al(e,t.child,null,n),t=q1(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function zA(t,e,n,r,i,o,s){if(n)return e.flags&256?(e.flags&=-257,r=t0(Error(A(422))),Ud(t,e,s,r)):e.memoizedState!==null?(e.child=t.child,e.flags|=128,null):(o=r.fallback,i=e.mode,r=gm({mode:"visible",children:r.children},i,0,null),o=bs(o,i,s,null),o.flags|=2,r.return=e,o.return=e,r.sibling=o,e.child=r,(e.mode&1)!==0&&al(e,t.child,null,s),e.child.memoizedState=ob(s),e.memoizedState=ib,o);if((e.mode&1)===0)return Ud(t,e,s,null);if(i.data==="$!"){if(r=i.nextSibling&&i.nextSibling.dataset,r)var a=r.dgst;return r=a,o=Error(A(419)),r=t0(o,r,void 0),Ud(t,e,s,r)}if(a=(s&t.childLanes)!==0,an||a){if(r=bt,r!==null){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=(i&(r.suspendedLanes|s))!==0?0:i,i!==0&&i!==o.retryLane&&(o.retryLane=i,Ti(t,i),vr(r,t,i,-1))}return tx(),r=t0(Error(A(421))),Ud(t,e,s,r)}return i.data==="$?"?(e.flags|=128,e.child=t.child,e=HA.bind(null,t),i._reactRetry=e,null):(t=o.treeContext,Tn=po(i.nextSibling),Cn=e,He=!0,pr=null,t!==null&&(Fn[Hn++]=vi,Fn[Hn++]=bi,Fn[Hn++]=Ms,vi=t.id,bi=t.overflow,Ms=e),e=q1(e,r.children),e.flags|=4096,e)}function kw(t,e,n){t.lanes|=e;var r=t.alternate;r!==null&&(r.lanes|=e),_v(t.return,e,n)}function n0(t,e,n,r,i){var o=t.memoizedState;o===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=i)}function OM(t,e,n){var r=e.pendingProps,i=r.revealOrder,o=r.tail;if(Ut(t,e,r.children,n),r=qe.current,(r&2)!==0)r=r&1|2,e.flags|=128;else{if(t!==null&&(t.flags&128)!==0)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&kw(t,n,e);else if(t.tag===19)kw(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(Ne(qe,r),(e.mode&1)===0)e.memoizedState=null;else switch(i){case"forwards":for(n=e.child,i=null;n!==null;)t=n.alternate,t!==null&&Dh(t)===null&&(i=n),n=n.sibling;n=i,n===null?(i=e.child,e.child=null):(i=n.sibling,n.sibling=null),n0(e,!1,i,n,o);break;case"backwards":for(n=null,i=e.child,e.child=null;i!==null;){if(t=i.alternate,t!==null&&Dh(t)===null){e.child=i;break}t=i.sibling,i.sibling=n,n=i,i=t}n0(e,!0,n,null,o);break;case"together":n0(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function $f(t,e){(e.mode&1)===0&&t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2)}function Pi(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),Is|=e.lanes,(n&e.childLanes)===0)return null;if(t!==null&&e.child!==t.child)throw Error(A(153));if(e.child!==null){for(t=e.child,n=bo(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=bo(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function EA(t,e,n){switch(e.tag){case 3:kM(e),sl();break;case 5:JC(e);break;case 1:un(e.type)&&Gh(e);break;case 4:W1(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,i=e.memoizedProps.value;Ne(Fh,r._currentValue),r._currentValue=i;break;case 13:if(r=e.memoizedState,r!==null)return r.dehydrated!==null?(Ne(qe,qe.current&1),e.flags|=128,null):(n&e.child.childLanes)!==0?wM(t,e,n):(Ne(qe,qe.current&1),t=Pi(t,e,n),t!==null?t.sibling:null);Ne(qe,qe.current&1);break;case 19:if(r=(n&e.childLanes)!==0,(t.flags&128)!==0){if(r)return OM(t,e,n);e.flags|=128}if(i=e.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),Ne(qe,qe.current),r)break;return null;case 22:case 23:return e.lanes=0,xM(t,e,n)}return Pi(t,e,n)}var TM,sb,PM,CM;TM=function(t,e){for(var n=e.child;n!==null;){if(n.tag===5||n.tag===6)t.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};sb=function(){};PM=function(t,e,n,r){var i=t.memoizedProps;if(i!==r){t=e.stateNode,ls(Dr.current);var o=null;switch(n){case"input":i=Mv(t,i),r=Mv(t,r),o=[];break;case"select":i=_e({},i,{value:void 0}),r=_e({},r,{value:void 0}),o=[];break;case"textarea":i=zv(t,i),r=zv(t,r),o=[];break;default:typeof i.onClick!="function"&&typeof r.onClick=="function"&&(t.onclick=Ah)}Nv(n,r);var s;n=null;for(c in i)if(!r.hasOwnProperty(c)&&i.hasOwnProperty(c)&&i[c]!=null)if(c==="style"){var a=i[c];for(s in a)a.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else c!=="dangerouslySetInnerHTML"&&c!=="children"&&c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&c!=="autoFocus"&&(su.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var l=r[c];if(a=i!=null?i[c]:void 0,r.hasOwnProperty(c)&&l!==a&&(l!=null||a!=null))if(c==="style")if(a){for(s in a)!a.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&a[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(c,n)),n=l;else c==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,a=a?a.__html:void 0,l!=null&&a!==l&&(o=o||[]).push(c,l)):c==="children"?typeof l!="string"&&typeof l!="number"||(o=o||[]).push(c,""+l):c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&(su.hasOwnProperty(c)?(l!=null&&c==="onScroll"&&Le("scroll",t),o||a===l||(o=[])):(o=o||[]).push(c,l))}n&&(o=o||[]).push("style",n);var c=o;(e.updateQueue=c)&&(e.flags|=4)}};CM=function(t,e,n,r){n!==r&&(e.flags|=4)};function ec(t,e){if(!He)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:r.sibling=null}}function Xt(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,r=0;if(e)for(var i=t.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags&14680064,r|=i.flags&14680064,i.return=t,i=i.sibling;else for(i=t.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=t,i=i.sibling;return t.subtreeFlags|=r,t.childLanes=n,e}function NA(t,e,n){var r=e.pendingProps;switch(V1(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Xt(e),null;case 1:return un(e.type)&&Zh(),Xt(e),null;case 3:return r=e.stateNode,ll(),Ae(cn),Ae(Ft),F1(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(t===null||t.child===null)&&(jd(e)?e.flags|=4:t===null||t.memoizedState.isDehydrated&&(e.flags&256)===0||(e.flags|=1024,pr!==null&&(pb(pr),pr=null))),sb(t,e),Xt(e),null;case 5:Y1(e);var i=ls(bu.current);if(n=e.type,t!==null&&e.stateNode!=null)PM(t,e,n,r,i),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(e.stateNode===null)throw Error(A(166));return Xt(e),null}if(t=ls(Dr.current),jd(e)){r=e.stateNode,n=e.type;var o=e.memoizedProps;switch(r[Br]=e,r[gu]=o,t=(e.mode&1)!==0,n){case"dialog":Le("cancel",r),Le("close",r);break;case"iframe":case"object":case"embed":Le("load",r);break;case"video":case"audio":for(i=0;i<bc.length;i++)Le(bc[i],r);break;case"source":Le("error",r);break;case"img":case"image":case"link":Le("error",r),Le("load",r);break;case"details":Le("toggle",r);break;case"input":zk(r,o),Le("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Le("invalid",r);break;case"textarea":Nk(r,o),Le("invalid",r)}Nv(n,o),i=null;for(var s in o)if(o.hasOwnProperty(s)){var a=o[s];s==="children"?typeof a=="string"?r.textContent!==a&&(o.suppressHydrationWarning!==!0&&Hd(r.textContent,a,t),i=["children",a]):typeof a=="number"&&r.textContent!==""+a&&(o.suppressHydrationWarning!==!0&&Hd(r.textContent,a,t),i=["children",""+a]):su.hasOwnProperty(s)&&a!=null&&s==="onScroll"&&Le("scroll",r)}switch(n){case"input":Xd(r),Ek(r,o,!0);break;case"textarea":Xd(r),Vk(r);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(r.onclick=Ah)}r=i,e.updateQueue=r,r!==null&&(e.flags|=4)}else{s=i.nodeType===9?i:i.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=eC(n)),t==="http://www.w3.org/1999/xhtml"?n==="script"?(t=s.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof r.is=="string"?t=s.createElement(n,{is:r.is}):(t=s.createElement(n),n==="select"&&(s=t,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):t=s.createElementNS(t,n),t[Br]=e,t[gu]=r,TM(t,e,!1,!1),e.stateNode=t;e:{switch(s=Vv(n,r),n){case"dialog":Le("cancel",t),Le("close",t),i=r;break;case"iframe":case"object":case"embed":Le("load",t),i=r;break;case"video":case"audio":for(i=0;i<bc.length;i++)Le(bc[i],t);i=r;break;case"source":Le("error",t),i=r;break;case"img":case"image":case"link":Le("error",t),Le("load",t),i=r;break;case"details":Le("toggle",t),i=r;break;case"input":zk(t,r),i=Mv(t,r),Le("invalid",t);break;case"option":i=r;break;case"select":t._wrapperState={wasMultiple:!!r.multiple},i=_e({},r,{value:void 0}),Le("invalid",t);break;case"textarea":Nk(t,r),i=zv(t,r),Le("invalid",t);break;default:i=r}Nv(n,i),a=i;for(o in a)if(a.hasOwnProperty(o)){var l=a[o];o==="style"?rC(t,l):o==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&tC(t,l)):o==="children"?typeof l=="string"?(n!=="textarea"||l!=="")&&au(t,l):typeof l=="number"&&au(t,""+l):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(su.hasOwnProperty(o)?l!=null&&o==="onScroll"&&Le("scroll",t):l!=null&&y1(t,o,l,s))}switch(n){case"input":Xd(t),Ek(t,r,!1);break;case"textarea":Xd(t),Vk(t);break;case"option":r.value!=null&&t.setAttribute("value",""+ko(r.value));break;case"select":t.multiple=!!r.multiple,o=r.value,o!=null?La(t,!!r.multiple,o,!1):r.defaultValue!=null&&La(t,!!r.multiple,r.defaultValue,!0);break;default:typeof i.onClick=="function"&&(t.onclick=Ah)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return Xt(e),null;case 6:if(t&&e.stateNode!=null)CM(t,e,t.memoizedProps,r);else{if(typeof r!="string"&&e.stateNode===null)throw Error(A(166));if(n=ls(bu.current),ls(Dr.current),jd(e)){if(r=e.stateNode,n=e.memoizedProps,r[Br]=e,(o=r.nodeValue!==n)&&(t=Cn,t!==null))switch(t.tag){case 3:Hd(r.nodeValue,n,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&Hd(r.nodeValue,n,(t.mode&1)!==0)}o&&(e.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[Br]=e,e.stateNode=r}return Xt(e),null;case 13:if(Ae(qe),r=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(He&&Tn!==null&&(e.mode&1)!==0&&(e.flags&128)===0)HC(),sl(),e.flags|=98560,o=!1;else if(o=jd(e),r!==null&&r.dehydrated!==null){if(t===null){if(!o)throw Error(A(318));if(o=e.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(A(317));o[Br]=e}else sl(),(e.flags&128)===0&&(e.memoizedState=null),e.flags|=4;Xt(e),o=!1}else pr!==null&&(pb(pr),pr=null),o=!0;if(!o)return e.flags&65536?e:null}return(e.flags&128)!==0?(e.lanes=n,e):(r=r!==null,r!==(t!==null&&t.memoizedState!==null)&&r&&(e.child.flags|=8192,(e.mode&1)!==0&&(t===null||(qe.current&1)!==0?pt===0&&(pt=3):tx())),e.updateQueue!==null&&(e.flags|=4),Xt(e),null);case 4:return ll(),sb(t,e),t===null&&pu(e.stateNode.containerInfo),Xt(e),null;case 10:return A1(e.type._context),Xt(e),null;case 17:return un(e.type)&&Zh(),Xt(e),null;case 19:if(Ae(qe),o=e.memoizedState,o===null)return Xt(e),null;if(r=(e.flags&128)!==0,s=o.rendering,s===null)if(r)ec(o,!1);else{if(pt!==0||t!==null&&(t.flags&128)!==0)for(t=e.child;t!==null;){if(s=Dh(t),s!==null){for(e.flags|=128,ec(o,!1),r=s.updateQueue,r!==null&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=n,n=e.child;n!==null;)o=n,t=r,o.flags&=14680066,s=o.alternate,s===null?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,t=s.dependencies,o.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return Ne(qe,qe.current&1|2),e.child}t=t.sibling}o.tail!==null&&ot()>ul&&(e.flags|=128,r=!0,ec(o,!1),e.lanes=4194304)}else{if(!r)if(t=Dh(s),t!==null){if(e.flags|=128,r=!0,n=t.updateQueue,n!==null&&(e.updateQueue=n,e.flags|=4),ec(o,!0),o.tail===null&&o.tailMode==="hidden"&&!s.alternate&&!He)return Xt(e),null}else 2*ot()-o.renderingStartTime>ul&&n!==1073741824&&(e.flags|=128,r=!0,ec(o,!1),e.lanes=4194304);o.isBackwards?(s.sibling=e.child,e.child=s):(n=o.last,n!==null?n.sibling=s:e.child=s,o.last=s)}return o.tail!==null?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=ot(),e.sibling=null,n=qe.current,Ne(qe,r?n&1|2:n&1),e):(Xt(e),null);case 22:case 23:return ex(),r=e.memoizedState!==null,t!==null&&t.memoizedState!==null!==r&&(e.flags|=8192),r&&(e.mode&1)!==0?(Sn&1073741824)!==0&&(Xt(e),e.subtreeFlags&6&&(e.flags|=8192)):Xt(e),null;case 24:return null;case 25:return null}throw Error(A(156,e.tag))}function VA(t,e){switch(V1(e),e.tag){case 1:return un(e.type)&&Zh(),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return ll(),Ae(cn),Ae(Ft),F1(),t=e.flags,(t&65536)!==0&&(t&128)===0?(e.flags=t&-65537|128,e):null;case 5:return Y1(e),null;case 13:if(Ae(qe),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(A(340));sl()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return Ae(qe),null;case 4:return ll(),null;case 10:return A1(e.type._context),null;case 22:case 23:return ex(),null;case 24:return null;default:return null}}var Kd=!1,Gt=!1,LA=typeof WeakSet=="function"?WeakSet:Set,j=null;function Pa(t,e){var n=t.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){$e(t,e,r)}else n.current=null}function ab(t,e,n){try{n()}catch(r){$e(t,e,r)}}var ww=!1;function XA(t,e){if(Hv=Lh,t=zC(),E1(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var i=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var s=0,a=-1,l=-1,c=0,u=0,d=t,f=null;t:for(;;){for(var h;d!==n||i!==0&&d.nodeType!==3||(a=s+i),d!==o||r!==0&&d.nodeType!==3||(l=s+r),d.nodeType===3&&(s+=d.nodeValue.length),(h=d.firstChild)!==null;)f=d,d=h;for(;;){if(d===t)break t;if(f===n&&++c===i&&(a=s),f===o&&++u===r&&(l=s),(h=d.nextSibling)!==null)break;d=f,f=d.parentNode}d=h}n=a===-1||l===-1?null:{start:a,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(jv={focusedElem:t,selectionRange:n},Lh=!1,j=e;j!==null;)if(e=j,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,j=t;else for(;j!==null;){e=j;try{var p=e.alternate;if((e.flags&1024)!==0)switch(e.tag){case 0:case 11:case 15:break;case 1:if(p!==null){var m=p.memoizedProps,b=p.memoizedState,g=e.stateNode,v=g.getSnapshotBeforeUpdate(e.elementType===e.type?m:dr(e.type,m),b);g.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var y=e.stateNode.containerInfo;y.nodeType===1?y.textContent="":y.nodeType===9&&y.documentElement&&y.removeChild(y.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(A(163))}}catch(x){$e(e,e.return,x)}if(t=e.sibling,t!==null){t.return=e.return,j=t;break}j=e.return}return p=ww,ww=!1,p}function Lc(t,e,n){var r=e.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var i=r=r.next;do{if((i.tag&t)===t){var o=i.destroy;i.destroy=void 0,o!==void 0&&ab(e,n,o)}i=i.next}while(i!==r)}}function pm(t,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var n=e=e.next;do{if((n.tag&t)===t){var r=n.create;n.destroy=r()}n=n.next}while(n!==e)}}function lb(t){var e=t.ref;if(e!==null){var n=t.stateNode;switch(t.tag){case 5:t=n;break;default:t=n}typeof e=="function"?e(t):e.current=t}}function MM(t){var e=t.alternate;e!==null&&(t.alternate=null,MM(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&(delete e[Br],delete e[gu],delete e[Kv],delete e[bA],delete e[yA])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function RM(t){return t.tag===5||t.tag===3||t.tag===4}function Ow(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||RM(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function cb(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=Ah));else if(r!==4&&(t=t.child,t!==null))for(cb(t,e,n),t=t.sibling;t!==null;)cb(t,e,n),t=t.sibling}function ub(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(r!==4&&(t=t.child,t!==null))for(ub(t,e,n),t=t.sibling;t!==null;)ub(t,e,n),t=t.sibling}var Tt=null,fr=!1;function Bi(t,e,n){for(n=n.child;n!==null;)IM(t,e,n),n=n.sibling}function IM(t,e,n){if(jr&&typeof jr.onCommitFiberUnmount=="function")try{jr.onCommitFiberUnmount(sm,n)}catch{}switch(n.tag){case 5:Gt||Pa(n,e);case 6:var r=Tt,i=fr;Tt=null,Bi(t,e,n),Tt=r,fr=i,Tt!==null&&(fr?(t=Tt,n=n.stateNode,t.nodeType===8?t.parentNode.removeChild(n):t.removeChild(n)):Tt.removeChild(n.stateNode));break;case 18:Tt!==null&&(fr?(t=Tt,n=n.stateNode,t.nodeType===8?qg(t.parentNode,n):t.nodeType===1&&qg(t,n),du(t)):qg(Tt,n.stateNode));break;case 4:r=Tt,i=fr,Tt=n.stateNode.containerInfo,fr=!0,Bi(t,e,n),Tt=r,fr=i;break;case 0:case 11:case 14:case 15:if(!Gt&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){i=r=r.next;do{var o=i,s=o.destroy;o=o.tag,s!==void 0&&((o&2)!==0||(o&4)!==0)&&ab(n,e,s),i=i.next}while(i!==r)}Bi(t,e,n);break;case 1:if(!Gt&&(Pa(n,e),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(a){$e(n,e,a)}Bi(t,e,n);break;case 21:Bi(t,e,n);break;case 22:n.mode&1?(Gt=(r=Gt)||n.memoizedState!==null,Bi(t,e,n),Gt=r):Bi(t,e,n);break;default:Bi(t,e,n)}}function Tw(t){var e=t.updateQueue;if(e!==null){t.updateQueue=null;var n=t.stateNode;n===null&&(n=t.stateNode=new LA),e.forEach(function(r){var i=jA.bind(null,t,r);n.has(r)||(n.add(r),r.then(i,i))})}}function or(t,e){var n=e.deletions;if(n!==null)for(var r=0;r<n.length;r++){var i=n[r];try{var o=t,s=e,a=s;e:for(;a!==null;){switch(a.tag){case 5:Tt=a.stateNode,fr=!1;break e;case 3:Tt=a.stateNode.containerInfo,fr=!0;break e;case 4:Tt=a.stateNode.containerInfo,fr=!0;break e}a=a.return}if(Tt===null)throw Error(A(160));IM(o,s,i),Tt=null,fr=!1;var l=i.alternate;l!==null&&(l.return=null),i.return=null}catch(c){$e(i,e,c)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)zM(e,t),e=e.sibling}function zM(t,e){var n=t.alternate,r=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(or(e,t),Pr(t),r&4){try{Lc(3,t,t.return),pm(3,t)}catch(m){$e(t,t.return,m)}try{Lc(5,t,t.return)}catch(m){$e(t,t.return,m)}}break;case 1:or(e,t),Pr(t),r&512&&n!==null&&Pa(n,n.return);break;case 5:if(or(e,t),Pr(t),r&512&&n!==null&&Pa(n,n.return),t.flags&32){var i=t.stateNode;try{au(i,"")}catch(m){$e(t,t.return,m)}}if(r&4&&(i=t.stateNode,i!=null)){var o=t.memoizedProps,s=n!==null?n.memoizedProps:o,a=t.type,l=t.updateQueue;if(t.updateQueue=null,l!==null)try{a==="input"&&o.type==="radio"&&o.name!=null&&_P(i,o),Vv(a,s);var c=Vv(a,o);for(s=0;s<l.length;s+=2){var u=l[s],d=l[s+1];u==="style"?rC(i,d):u==="dangerouslySetInnerHTML"?tC(i,d):u==="children"?au(i,d):y1(i,u,d,c)}switch(a){case"input":Rv(i,o);break;case"textarea":$P(i,o);break;case"select":var f=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var h=o.value;h!=null?La(i,!!o.multiple,h,!1):f!==!!o.multiple&&(o.defaultValue!=null?La(i,!!o.multiple,o.defaultValue,!0):La(i,!!o.multiple,o.multiple?[]:"",!1))}i[gu]=o}catch(m){$e(t,t.return,m)}}break;case 6:if(or(e,t),Pr(t),r&4){if(t.stateNode===null)throw Error(A(162));i=t.stateNode,o=t.memoizedProps;try{i.nodeValue=o}catch(m){$e(t,t.return,m)}}break;case 3:if(or(e,t),Pr(t),r&4&&n!==null&&n.memoizedState.isDehydrated)try{du(e.containerInfo)}catch(m){$e(t,t.return,m)}break;case 4:or(e,t),Pr(t);break;case 13:or(e,t),Pr(t),i=t.child,i.flags&8192&&(o=i.memoizedState!==null,i.stateNode.isHidden=o,!o||i.alternate!==null&&i.alternate.memoizedState!==null||(_1=ot())),r&4&&Tw(t);break;case 22:if(u=n!==null&&n.memoizedState!==null,t.mode&1?(Gt=(c=Gt)||u,or(e,t),Gt=c):or(e,t),Pr(t),r&8192){if(c=t.memoizedState!==null,(t.stateNode.isHidden=c)&&!u&&(t.mode&1)!==0)for(j=t,u=t.child;u!==null;){for(d=j=u;j!==null;){switch(f=j,h=f.child,f.tag){case 0:case 11:case 14:case 15:Lc(4,f,f.return);break;case 1:Pa(f,f.return);var p=f.stateNode;if(typeof p.componentWillUnmount=="function"){r=f,n=f.return;try{e=r,p.props=e.memoizedProps,p.state=e.memoizedState,p.componentWillUnmount()}catch(m){$e(r,n,m)}}break;case 5:Pa(f,f.return);break;case 22:if(f.memoizedState!==null){Cw(d);continue}}h!==null?(h.return=f,j=h):Cw(d)}u=u.sibling}e:for(u=null,d=t;;){if(d.tag===5){if(u===null){u=d;try{i=d.stateNode,c?(o=i.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(a=d.stateNode,l=d.memoizedProps.style,s=l!=null&&l.hasOwnProperty("display")?l.display:null,a.style.display=nC("display",s))}catch(m){$e(t,t.return,m)}}}else if(d.tag===6){if(u===null)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(m){$e(t,t.return,m)}}else if((d.tag!==22&&d.tag!==23||d.memoizedState===null||d===t)&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===t)break e;for(;d.sibling===null;){if(d.return===null||d.return===t)break e;u===d&&(u=null),d=d.return}u===d&&(u=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:or(e,t),Pr(t),r&4&&Tw(t);break;case 21:break;default:or(e,t),Pr(t)}}function Pr(t){var e=t.flags;if(e&2){try{e:{for(var n=t.return;n!==null;){if(RM(n)){var r=n;break e}n=n.return}throw Error(A(160))}switch(r.tag){case 5:var i=r.stateNode;r.flags&32&&(au(i,""),r.flags&=-33);var o=Ow(t);ub(t,o,i);break;case 3:case 4:var s=r.stateNode.containerInfo,a=Ow(t);cb(t,a,s);break;default:throw Error(A(161))}}catch(l){$e(t,t.return,l)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function BA(t,e,n){j=t,EM(t)}function EM(t,e,n){for(var r=(t.mode&1)!==0;j!==null;){var i=j,o=i.child;if(i.tag===22&&r){var s=i.memoizedState!==null||Kd;if(!s){var a=i.alternate,l=a!==null&&a.memoizedState!==null||Gt;a=Kd;var c=Gt;if(Kd=s,(Gt=l)&&!c)for(j=i;j!==null;)s=j,l=s.child,s.tag===22&&s.memoizedState!==null?Mw(i):l!==null?(l.return=s,j=l):Mw(i);for(;o!==null;)j=o,EM(o),o=o.sibling;j=i,Kd=a,Gt=c}Pw(t)}else(i.subtreeFlags&8772)!==0&&o!==null?(o.return=i,j=o):Pw(t)}}function Pw(t){for(;j!==null;){var e=j;if((e.flags&8772)!==0){var n=e.alternate;try{if((e.flags&8772)!==0)switch(e.tag){case 0:case 11:case 15:Gt||pm(5,e);break;case 1:var r=e.stateNode;if(e.flags&4&&!Gt)if(n===null)r.componentDidMount();else{var i=e.elementType===e.type?n.memoizedProps:dr(e.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;o!==null&&cw(e,o,r);break;case 3:var s=e.updateQueue;if(s!==null){if(n=null,e.child!==null)switch(e.child.tag){case 5:n=e.child.stateNode;break;case 1:n=e.child.stateNode}cw(e,s,n)}break;case 5:var a=e.stateNode;if(n===null&&e.flags&4){n=a;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var c=e.alternate;if(c!==null){var u=c.memoizedState;if(u!==null){var d=u.dehydrated;d!==null&&du(d)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(A(163))}Gt||e.flags&512&&lb(e)}catch(f){$e(e,e.return,f)}}if(e===t){j=null;break}if(n=e.sibling,n!==null){n.return=e.return,j=n;break}j=e.return}}function Cw(t){for(;j!==null;){var e=j;if(e===t){j=null;break}var n=e.sibling;if(n!==null){n.return=e.return,j=n;break}j=e.return}}function Mw(t){for(;j!==null;){var e=j;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{pm(4,e)}catch(l){$e(e,n,l)}break;case 1:var r=e.stateNode;if(typeof r.componentDidMount=="function"){var i=e.return;try{r.componentDidMount()}catch(l){$e(e,i,l)}}var o=e.return;try{lb(e)}catch(l){$e(e,o,l)}break;case 5:var s=e.return;try{lb(e)}catch(l){$e(e,s,l)}}}catch(l){$e(e,e.return,l)}if(e===t){j=null;break}var a=e.sibling;if(a!==null){a.return=e.return,j=a;break}j=e.return}}var AA=Math.ceil,qh=Ei.ReactCurrentDispatcher,Q1=Ei.ReactCurrentOwner,Qn=Ei.ReactCurrentBatchConfig,ve=0,bt=null,lt=null,Et=0,Sn=0,Ca=Eo(0),pt=0,ku=null,Is=0,mm=0,J1=0,Xc=null,rn=null,_1=0,ul=1/0,di=null,Qh=!1,db=null,go=null,qd=!1,eo=null,Jh=0,Bc=0,fb=null,eh=-1,th=0;function _t(){return(ve&6)!==0?ot():eh!==-1?eh:eh=ot()}function vo(t){return(t.mode&1)===0?1:(ve&2)!==0&&Et!==0?Et&-Et:SA.transition!==null?(th===0&&(th=mC()),th):(t=Te,t!==0||(t=window.event,t=t===void 0?16:kC(t.type)),t)}function vr(t,e,n,r){if(50<Bc)throw Bc=0,fb=null,Error(A(185));id(t,n,r),((ve&2)===0||t!==bt)&&(t===bt&&((ve&2)===0&&(mm|=n),pt===4&&qi(t,Et)),dn(t,r),n===1&&ve===0&&(e.mode&1)===0&&(ul=ot()+500,dm&&No()))}function dn(t,e){var n=t.callbackNode;SB(t,e);var r=Vh(t,t===bt?Et:0);if(r===0)n!==null&&Bk(n),t.callbackNode=null,t.callbackPriority=0;else if(e=r&-r,t.callbackPriority!==e){if(n!=null&&Bk(n),e===1)t.tag===0?xA(Rw.bind(null,t)):WC(Rw.bind(null,t)),gA(function(){(ve&6)===0&&No()}),n=null;else{switch(gC(r)){case 1:n=O1;break;case 4:n=hC;break;case 16:n=Nh;break;case 536870912:n=pC;break;default:n=Nh}n=GM(n,NM.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function NM(t,e){if(eh=-1,th=0,(ve&6)!==0)throw Error(A(327));var n=t.callbackNode;if(Ga()&&t.callbackNode!==n)return null;var r=Vh(t,t===bt?Et:0);if(r===0)return null;if((r&30)!==0||(r&t.expiredLanes)!==0||e)e=_h(t,r);else{e=r;var i=ve;ve|=2;var o=LM();(bt!==t||Et!==e)&&(di=null,ul=ot()+500,vs(t,e));do try{WA();break}catch(a){VM(t,a)}while(1);B1(),qh.current=o,ve=i,lt!==null?e=0:(bt=null,Et=0,e=pt)}if(e!==0){if(e===2&&(i=Zv(t),i!==0&&(r=i,e=hb(t,i))),e===1)throw n=ku,vs(t,0),qi(t,r),dn(t,ot()),n;if(e===6)qi(t,r);else{if(i=t.current.alternate,(r&30)===0&&!ZA(i)&&(e=_h(t,r),e===2&&(o=Zv(t),o!==0&&(r=o,e=hb(t,o))),e===1))throw n=ku,vs(t,0),qi(t,r),dn(t,ot()),n;switch(t.finishedWork=i,t.finishedLanes=r,e){case 0:case 1:throw Error(A(345));case 2:qo(t,rn,di);break;case 3:if(qi(t,r),(r&130023424)===r&&(e=_1+500-ot(),10<e)){if(Vh(t,0)!==0)break;if(i=t.suspendedLanes,(i&r)!==r){_t(),t.pingedLanes|=t.suspendedLanes&i;break}t.timeoutHandle=Uv(qo.bind(null,t,rn,di),e);break}qo(t,rn,di);break;case 4:if(qi(t,r),(r&4194240)===r)break;for(e=t.eventTimes,i=-1;0<r;){var s=31-gr(r);o=1<<s,s=e[s],s>i&&(i=s),r&=~o}if(r=i,r=ot()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*AA(r/1960))-r,10<r){t.timeoutHandle=Uv(qo.bind(null,t,rn,di),r);break}qo(t,rn,di);break;case 5:qo(t,rn,di);break;default:throw Error(A(329))}}}return dn(t,ot()),t.callbackNode===n?NM.bind(null,t):null}function hb(t,e){var n=Xc;return t.current.memoizedState.isDehydrated&&(vs(t,e).flags|=256),t=_h(t,e),t!==2&&(e=rn,rn=n,e!==null&&pb(e)),t}function pb(t){rn===null?rn=t:rn.push.apply(rn,t)}function ZA(t){for(var e=t;;){if(e.flags&16384){var n=e.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var i=n[r],o=i.getSnapshot;i=i.value;try{if(!Sr(o(),i))return!1}catch{return!1}}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function qi(t,e){for(e&=~J1,e&=~mm,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-gr(e),r=1<<n;t[n]=-1,e&=~r}}function Rw(t){if((ve&6)!==0)throw Error(A(327));Ga();var e=Vh(t,0);if((e&1)===0)return dn(t,ot()),null;var n=_h(t,e);if(t.tag!==0&&n===2){var r=Zv(t);r!==0&&(e=r,n=hb(t,r))}if(n===1)throw n=ku,vs(t,0),qi(t,e),dn(t,ot()),n;if(n===6)throw Error(A(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,qo(t,rn,di),dn(t,ot()),null}function $1(t,e){var n=ve;ve|=1;try{return t(e)}finally{ve=n,ve===0&&(ul=ot()+500,dm&&No())}}function zs(t){eo!==null&&eo.tag===0&&(ve&6)===0&&Ga();var e=ve;ve|=1;var n=Qn.transition,r=Te;try{if(Qn.transition=null,Te=1,t)return t()}finally{Te=r,Qn.transition=n,ve=e,(ve&6)===0&&No()}}function ex(){Sn=Ca.current,Ae(Ca)}function vs(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(n!==-1&&(t.timeoutHandle=-1,mA(n)),lt!==null)for(n=lt.return;n!==null;){var r=n;switch(V1(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&Zh();break;case 3:ll(),Ae(cn),Ae(Ft),F1();break;case 5:Y1(r);break;case 4:ll();break;case 13:Ae(qe);break;case 19:Ae(qe);break;case 10:A1(r.type._context);break;case 22:case 23:ex()}n=n.return}if(bt=t,lt=t=bo(t.current,null),Et=Sn=e,pt=0,ku=null,J1=mm=Is=0,rn=Xc=null,as!==null){for(e=0;e<as.length;e++)if(n=as[e],r=n.interleaved,r!==null){n.interleaved=null;var i=r.next,o=n.pending;if(o!==null){var s=o.next;o.next=i,r.next=s}n.pending=r}as=null}return t}function VM(t,e){do{var n=lt;try{if(B1(),Jf.current=Kh,Uh){for(var r=Je.memoizedState;r!==null;){var i=r.queue;i!==null&&(i.pending=null),r=r.next}Uh=!1}if(Rs=0,vt=ft=Je=null,Vc=!1,yu=0,Q1.current=null,n===null||n.return===null){pt=1,ku=e,lt=null;break}e:{var o=t,s=n.return,a=n,l=e;if(e=Et,a.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var c=l,u=a,d=u.tag;if((u.mode&1)===0&&(d===0||d===11||d===15)){var f=u.alternate;f?(u.updateQueue=f.updateQueue,u.memoizedState=f.memoizedState,u.lanes=f.lanes):(u.updateQueue=null,u.memoizedState=null)}var h=gw(s);if(h!==null){h.flags&=-257,vw(h,s,a,o,e),h.mode&1&&mw(o,c,e),e=h,l=c;var p=e.updateQueue;if(p===null){var m=new Set;m.add(l),e.updateQueue=m}else p.add(l);break e}else{if((e&1)===0){mw(o,c,e),tx();break e}l=Error(A(426))}}else if(He&&a.mode&1){var b=gw(s);if(b!==null){(b.flags&65536)===0&&(b.flags|=256),vw(b,s,a,o,e),L1(cl(l,a));break e}}o=l=cl(l,a),pt!==4&&(pt=2),Xc===null?Xc=[o]:Xc.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e;var g=vM(o,l,e);lw(o,g);break e;case 1:a=l;var v=o.type,y=o.stateNode;if((o.flags&128)===0&&(typeof v.getDerivedStateFromError=="function"||y!==null&&typeof y.componentDidCatch=="function"&&(go===null||!go.has(y)))){o.flags|=65536,e&=-e,o.lanes|=e;var x=bM(o,a,e);lw(o,x);break e}}o=o.return}while(o!==null)}BM(n)}catch(k){e=k,lt===n&&n!==null&&(lt=n=n.return);continue}break}while(1)}function LM(){var t=qh.current;return qh.current=Kh,t===null?Kh:t}function tx(){(pt===0||pt===3||pt===2)&&(pt=4),bt===null||(Is&268435455)===0&&(mm&268435455)===0||qi(bt,Et)}function _h(t,e){var n=ve;ve|=2;var r=LM();(bt!==t||Et!==e)&&(di=null,vs(t,e));do try{GA();break}catch(i){VM(t,i)}while(1);if(B1(),ve=n,qh.current=r,lt!==null)throw Error(A(261));return bt=null,Et=0,pt}function GA(){for(;lt!==null;)XM(lt)}function WA(){for(;lt!==null&&!fB();)XM(lt)}function XM(t){var e=ZM(t.alternate,t,Sn);t.memoizedProps=t.pendingProps,e===null?BM(t):lt=e,Q1.current=null}function BM(t){var e=t;do{var n=e.alternate;if(t=e.return,(e.flags&32768)===0){if(n=NA(n,e,Sn),n!==null){lt=n;return}}else{if(n=VA(n,e),n!==null){n.flags&=32767,lt=n;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{pt=6,lt=null;return}}if(e=e.sibling,e!==null){lt=e;return}lt=e=t}while(e!==null);pt===0&&(pt=5)}function qo(t,e,n){var r=Te,i=Qn.transition;try{Qn.transition=null,Te=1,YA(t,e,n,r)}finally{Qn.transition=i,Te=r}return null}function YA(t,e,n,r){do Ga();while(eo!==null);if((ve&6)!==0)throw Error(A(327));n=t.finishedWork;var i=t.finishedLanes;if(n===null)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(A(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(kB(t,o),t===bt&&(lt=bt=null,Et=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||qd||(qd=!0,GM(Nh,function(){return Ga(),null})),o=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||o){o=Qn.transition,Qn.transition=null;var s=Te;Te=1;var a=ve;ve|=4,Q1.current=null,XA(t,n),zM(n,t),lA(jv),Lh=!!Hv,jv=Hv=null,t.current=n,BA(n),hB(),ve=a,Te=s,Qn.transition=o}else t.current=n;if(qd&&(qd=!1,eo=t,Jh=i),o=t.pendingLanes,o===0&&(go=null),gB(n.stateNode),dn(t,ot()),e!==null)for(r=t.onRecoverableError,n=0;n<e.length;n++)i=e[n],r(i.value,{componentStack:i.stack,digest:i.digest});if(Qh)throw Qh=!1,t=db,db=null,t;return(Jh&1)!==0&&t.tag!==0&&Ga(),o=t.pendingLanes,(o&1)!==0?t===fb?Bc++:(Bc=0,fb=t):Bc=0,No(),null}function Ga(){if(eo!==null){var t=gC(Jh),e=Qn.transition,n=Te;try{if(Qn.transition=null,Te=16>t?16:t,eo===null)var r=!1;else{if(t=eo,eo=null,Jh=0,(ve&6)!==0)throw Error(A(331));var i=ve;for(ve|=4,j=t.current;j!==null;){var o=j,s=o.child;if((j.flags&16)!==0){var a=o.deletions;if(a!==null){for(var l=0;l<a.length;l++){var c=a[l];for(j=c;j!==null;){var u=j;switch(u.tag){case 0:case 11:case 15:Lc(8,u,o)}var d=u.child;if(d!==null)d.return=u,j=d;else for(;j!==null;){u=j;var f=u.sibling,h=u.return;if(MM(u),u===c){j=null;break}if(f!==null){f.return=h,j=f;break}j=h}}}var p=o.alternate;if(p!==null){var m=p.child;if(m!==null){p.child=null;do{var b=m.sibling;m.sibling=null,m=b}while(m!==null)}}j=o}}if((o.subtreeFlags&2064)!==0&&s!==null)s.return=o,j=s;else e:for(;j!==null;){if(o=j,(o.flags&2048)!==0)switch(o.tag){case 0:case 11:case 15:Lc(9,o,o.return)}var g=o.sibling;if(g!==null){g.return=o.return,j=g;break e}j=o.return}}var v=t.current;for(j=v;j!==null;){s=j;var y=s.child;if((s.subtreeFlags&2064)!==0&&y!==null)y.return=s,j=y;else e:for(s=v;j!==null;){if(a=j,(a.flags&2048)!==0)try{switch(a.tag){case 0:case 11:case 15:pm(9,a)}}catch(k){$e(a,a.return,k)}if(a===s){j=null;break e}var x=a.sibling;if(x!==null){x.return=a.return,j=x;break e}j=a.return}}if(ve=i,No(),jr&&typeof jr.onPostCommitFiberRoot=="function")try{jr.onPostCommitFiberRoot(sm,t)}catch{}r=!0}return r}finally{Te=n,Qn.transition=e}}return!1}function Iw(t,e,n){e=cl(n,e),e=vM(t,e,1),t=mo(t,e,1),e=_t(),t!==null&&(id(t,1,e),dn(t,e))}function $e(t,e,n){if(t.tag===3)Iw(t,t,n);else for(;e!==null;){if(e.tag===3){Iw(e,t,n);break}else if(e.tag===1){var r=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(go===null||!go.has(r))){t=cl(n,t),t=bM(e,t,1),e=mo(e,t,1),t=_t(),e!==null&&(id(e,1,t),dn(e,t));break}}e=e.return}}function FA(t,e,n){var r=t.pingCache;r!==null&&r.delete(e),e=_t(),t.pingedLanes|=t.suspendedLanes&n,bt===t&&(Et&n)===n&&(pt===4||pt===3&&(Et&130023424)===Et&&500>ot()-_1?vs(t,0):J1|=n),dn(t,e)}function AM(t,e){e===0&&((t.mode&1)===0?e=1:(e=Zd,Zd<<=1,(Zd&130023424)===0&&(Zd=4194304)));var n=_t();t=Ti(t,e),t!==null&&(id(t,e,n),dn(t,n))}function HA(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),AM(t,n)}function jA(t,e){var n=0;switch(t.tag){case 13:var r=t.stateNode,i=t.memoizedState;i!==null&&(n=i.retryLane);break;case 19:r=t.stateNode;break;default:throw Error(A(314))}r!==null&&r.delete(e),AM(t,n)}var ZM;ZM=function(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps||cn.current)an=!0;else{if((t.lanes&n)===0&&(e.flags&128)===0)return an=!1,EA(t,e,n);an=(t.flags&131072)!==0}else an=!1,He&&(e.flags&1048576)!==0&&YC(e,Yh,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;$f(t,e),t=e.pendingProps;var i=ol(e,Ft.current);Za(e,n),i=j1(null,e,r,t,i,n);var o=D1();return e.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,un(r)?(o=!0,Gh(e)):o=!1,e.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,G1(e),i.updater=fm,e.stateNode=i,i._reactInternals=e,eb(e,r,t,n),e=rb(null,e,r,!0,o,n)):(e.tag=0,He&&o&&N1(e),Ut(null,e,i,n),e=e.child),e;case 16:r=e.elementType;e:{switch($f(t,e),t=e.pendingProps,i=r._init,r=i(r._payload),e.type=r,i=e.tag=UA(r),t=dr(r,t),i){case 0:e=nb(null,e,r,t,n);break e;case 1:e=xw(null,e,r,t,n);break e;case 11:e=bw(null,e,r,t,n);break e;case 14:e=yw(null,e,r,dr(r.type,t),n);break e}throw Error(A(306,r,""))}return e;case 0:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),nb(t,e,r,i,n);case 1:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),xw(t,e,r,i,n);case 3:e:{if(kM(e),t===null)throw Error(A(387));r=e.pendingProps,o=e.memoizedState,i=o.element,DC(t,e),jh(e,r,null,n);var s=e.memoizedState;if(r=s.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},e.updateQueue.baseState=o,e.memoizedState=o,e.flags&256){i=cl(Error(A(423)),e),e=Sw(t,e,r,n,i);break e}else if(r!==i){i=cl(Error(A(424)),e),e=Sw(t,e,r,n,i);break e}else for(Tn=po(e.stateNode.containerInfo.firstChild),Cn=e,He=!0,pr=null,n=QC(e,null,r,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(sl(),r===i){e=Pi(t,e,n);break e}Ut(t,e,r,n)}e=e.child}return e;case 5:return JC(e),t===null&&Jv(e),r=e.type,i=e.pendingProps,o=t!==null?t.memoizedProps:null,s=i.children,Dv(r,i)?s=null:o!==null&&Dv(r,o)&&(e.flags|=32),SM(t,e),Ut(t,e,s,n),e.child;case 6:return t===null&&Jv(e),null;case 13:return wM(t,e,n);case 4:return W1(e,e.stateNode.containerInfo),r=e.pendingProps,t===null?e.child=al(e,null,r,n):Ut(t,e,r,n),e.child;case 11:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),bw(t,e,r,i,n);case 7:return Ut(t,e,e.pendingProps,n),e.child;case 8:return Ut(t,e,e.pendingProps.children,n),e.child;case 12:return Ut(t,e,e.pendingProps.children,n),e.child;case 10:e:{if(r=e.type._context,i=e.pendingProps,o=e.memoizedProps,s=i.value,Ne(Fh,r._currentValue),r._currentValue=s,o!==null)if(Sr(o.value,s)){if(o.children===i.children&&!cn.current){e=Pi(t,e,n);break e}}else for(o=e.child,o!==null&&(o.return=e);o!==null;){var a=o.dependencies;if(a!==null){s=o.child;for(var l=a.firstContext;l!==null;){if(l.context===r){if(o.tag===1){l=xi(-1,n&-n),l.tag=2;var c=o.updateQueue;if(c!==null){c=c.shared;var u=c.pending;u===null?l.next=l:(l.next=u.next,u.next=l),c.pending=l}}o.lanes|=n,l=o.alternate,l!==null&&(l.lanes|=n),_v(o.return,n,e),a.lanes|=n;break}l=l.next}}else if(o.tag===10)s=o.type===e.type?null:o.child;else if(o.tag===18){if(s=o.return,s===null)throw Error(A(341));s.lanes|=n,a=s.alternate,a!==null&&(a.lanes|=n),_v(s,n,e),s=o.sibling}else s=o.child;if(s!==null)s.return=o;else for(s=o;s!==null;){if(s===e){s=null;break}if(o=s.sibling,o!==null){o.return=s.return,s=o;break}s=s.return}o=s}Ut(t,e,i.children,n),e=e.child}return e;case 9:return i=e.type,r=e.pendingProps.children,Za(e,n),i=_n(i),r=r(i),e.flags|=1,Ut(t,e,r,n),e.child;case 14:return r=e.type,i=dr(r,e.pendingProps),i=dr(r.type,i),yw(t,e,r,i,n);case 15:return yM(t,e,e.type,e.pendingProps,n);case 17:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:dr(r,i),$f(t,e),e.tag=1,un(r)?(t=!0,Gh(e)):t=!1,Za(e,n),KC(e,r,i),eb(e,r,i,n),rb(null,e,r,!0,t,n);case 19:return OM(t,e,n);case 22:return xM(t,e,n)}throw Error(A(156,e.tag))};function GM(t,e){return fC(t,e)}function DA(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Dn(t,e,n,r){return new DA(t,e,n,r)}function nx(t){return t=t.prototype,!(!t||!t.isReactComponent)}function UA(t){if(typeof t=="function")return nx(t)?1:0;if(t!=null){if(t=t.$$typeof,t===S1)return 11;if(t===k1)return 14}return 2}function bo(t,e){var n=t.alternate;return n===null?(n=Dn(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&14680064,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function nh(t,e,n,r,i,o){var s=2;if(r=t,typeof t=="function")nx(t)&&(s=1);else if(typeof t=="string")s=5;else e:switch(t){case va:return bs(n.children,i,o,e);case x1:s=8,i|=8;break;case Ov:return t=Dn(12,n,e,i|2),t.elementType=Ov,t.lanes=o,t;case Tv:return t=Dn(13,n,e,i),t.elementType=Tv,t.lanes=o,t;case Pv:return t=Dn(19,n,e,i),t.elementType=Pv,t.lanes=o,t;case qP:return gm(n,i,o,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case UP:s=10;break e;case KP:s=9;break e;case S1:s=11;break e;case k1:s=14;break e;case Fi:s=16,r=null;break e}throw Error(A(130,t==null?t:typeof t,""))}return e=Dn(s,n,e,i),e.elementType=t,e.type=r,e.lanes=o,e}function bs(t,e,n,r){return t=Dn(7,t,r,e),t.lanes=n,t}function gm(t,e,n,r){return t=Dn(22,t,r,e),t.elementType=qP,t.lanes=n,t.stateNode={isHidden:!1},t}function r0(t,e,n){return t=Dn(6,t,null,e),t.lanes=n,t}function i0(t,e,n){return e=Dn(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function KA(t,e,n,r,i){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Ag(0),this.expirationTimes=Ag(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ag(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function rx(t,e,n,r,i,o,s,a,l){return t=new KA(t,e,n,a,l),e===1?(e=1,o===!0&&(e|=8)):e=0,o=Dn(3,null,null,e),t.current=o,o.stateNode=t,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},G1(o),t}function qA(t,e,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:ga,key:r==null?null:""+r,children:t,containerInfo:e,implementation:n}}function WM(t){if(!t)return wo;t=t._reactInternals;e:{if(Gs(t)!==t||t.tag!==1)throw Error(A(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(un(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(A(171))}if(t.tag===1){var n=t.type;if(un(n))return GC(t,n,e)}return e}function YM(t,e,n,r,i,o,s,a,l){return t=rx(n,r,!0,t,i,o,s,a,l),t.context=WM(null),n=t.current,r=_t(),i=vo(n),o=xi(r,i),o.callback=e!=null?e:null,mo(n,o,i),t.current.lanes=i,id(t,i,r),dn(t,r),t}function vm(t,e,n,r){var i=e.current,o=_t(),s=vo(i);return n=WM(n),e.context===null?e.context=n:e.pendingContext=n,e=xi(o,s),e.payload={element:t},r=r===void 0?null:r,r!==null&&(e.callback=r),t=mo(i,e,s),t!==null&&(vr(t,i,s,o),Qf(t,i,s)),s}function $h(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function zw(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function ix(t,e){zw(t,e),(t=t.alternate)&&zw(t,e)}function QA(){return null}var FM=typeof reportError=="function"?reportError:function(t){console.error(t)};function ox(t){this._internalRoot=t}bm.prototype.render=ox.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(A(409));vm(t,e,null,null)};bm.prototype.unmount=ox.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;zs(function(){vm(null,t,null,null)}),e[Oi]=null}};function bm(t){this._internalRoot=t}bm.prototype.unstable_scheduleHydration=function(t){if(t){var e=yC();t={blockedOn:null,target:t,priority:e};for(var n=0;n<Ki.length&&e!==0&&e<Ki[n].priority;n++);Ki.splice(n,0,t),n===0&&SC(t)}};function sx(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function ym(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function Ew(){}function JA(t,e,n,r,i){if(i){if(typeof r=="function"){var o=r;r=function(){var c=$h(s);o.call(c)}}var s=YM(e,r,t,0,null,!1,!1,"",Ew);return t._reactRootContainer=s,t[Oi]=s.current,pu(t.nodeType===8?t.parentNode:t),zs(),s}for(;i=t.lastChild;)t.removeChild(i);if(typeof r=="function"){var a=r;r=function(){var c=$h(l);a.call(c)}}var l=rx(t,0,!1,null,null,!1,!1,"",Ew);return t._reactRootContainer=l,t[Oi]=l.current,pu(t.nodeType===8?t.parentNode:t),zs(function(){vm(e,l,n,r)}),l}function xm(t,e,n,r,i){var o=n._reactRootContainer;if(o){var s=o;if(typeof i=="function"){var a=i;i=function(){var l=$h(s);a.call(l)}}vm(e,s,t,i)}else s=JA(n,e,t,i,r);return $h(s)}vC=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=vc(e.pendingLanes);n!==0&&(T1(e,n|1),dn(e,ot()),(ve&6)===0&&(ul=ot()+500,No()))}break;case 13:zs(function(){var r=Ti(t,1);if(r!==null){var i=_t();vr(r,t,1,i)}}),ix(t,1)}};P1=function(t){if(t.tag===13){var e=Ti(t,134217728);if(e!==null){var n=_t();vr(e,t,134217728,n)}ix(t,134217728)}};bC=function(t){if(t.tag===13){var e=vo(t),n=Ti(t,e);if(n!==null){var r=_t();vr(n,t,e,r)}ix(t,e)}};yC=function(){return Te};xC=function(t,e){var n=Te;try{return Te=t,e()}finally{Te=n}};Xv=function(t,e,n){switch(e){case"input":if(Rv(t,n),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var i=um(r);if(!i)throw Error(A(90));JP(r),Rv(r,i)}}}break;case"textarea":$P(t,n);break;case"select":e=n.value,e!=null&&La(t,!!n.multiple,e,!1)}};sC=$1;aC=zs;var _A={usingClientEntryPoint:!1,Events:[sd,Sa,um,iC,oC,$1]},tc={findFiberByHostInstance:ss,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},$A={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ei.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=uC(t),t===null?null:t.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||QA,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Qd=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Qd.isDisabled&&Qd.supportsFiber)try{sm=Qd.inject($A),jr=Qd}catch{}}Nn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=_A;Nn.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!sx(e))throw Error(A(200));return qA(t,e,null,n)};Nn.createRoot=function(t,e){if(!sx(t))throw Error(A(299));var n=!1,r="",i=FM;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(r=e.identifierPrefix),e.onRecoverableError!==void 0&&(i=e.onRecoverableError)),e=rx(t,1,!1,null,null,n,!1,r,i),t[Oi]=e.current,pu(t.nodeType===8?t.parentNode:t),new ox(e)};Nn.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(A(188)):(t=Object.keys(t).join(","),Error(A(268,t)));return t=uC(e),t=t===null?null:t.stateNode,t};Nn.flushSync=function(t){return zs(t)};Nn.hydrate=function(t,e,n){if(!ym(e))throw Error(A(200));return xm(null,t,e,!0,n)};Nn.hydrateRoot=function(t,e,n){if(!sx(t))throw Error(A(405));var r=n!=null&&n.hydratedSources||null,i=!1,o="",s=FM;if(n!=null&&(n.unstable_strictMode===!0&&(i=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(s=n.onRecoverableError)),e=YM(e,null,t,1,n!=null?n:null,i,!1,o,s),t[Oi]=e.current,pu(t),r)for(t=0;t<r.length;t++)n=r[t],i=n._getVersion,i=i(n._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[n,i]:e.mutableSourceEagerHydrationData.push(n,i);return new bm(e)};Nn.render=function(t,e,n){if(!ym(e))throw Error(A(200));return xm(null,t,e,!1,n)};Nn.unmountComponentAtNode=function(t){if(!ym(t))throw Error(A(40));return t._reactRootContainer?(zs(function(){xm(null,null,t,!1,function(){t._reactRootContainer=null,t[Oi]=null})}),!0):!1};Nn.unstable_batchedUpdates=$1;Nn.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!ym(n))throw Error(A(200));if(t==null||t._reactInternals===void 0)throw Error(A(38));return xm(t,e,n,!1,r)};Nn.version="18.2.0-next-9e3b772b8-20220608";(function(t){function e(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}e(),t.exports=Nn})(om);var Nw=om.exports;kv.createRoot=Nw.createRoot,kv.hydrateRoot=Nw.hydrateRoot;class Se{constructor(){}lineAt(e){if(e<0||e>this.length)throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);return this.lineInner(e,!1,1,0)}line(e){if(e<1||e>this.lines)throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);return this.lineInner(e,!0,1,0)}replace(e,n,r){let i=[];return this.decompose(0,e,i,2),r.length&&r.decompose(0,r.length,i,3),this.decompose(n,this.length,i,1),Ar.from(i,this.length-(n-e)+r.length)}append(e){return this.replace(this.length,this.length,e)}slice(e,n=this.length){let r=[];return this.decompose(e,n,r,0),Ar.from(r,n-e)}eq(e){if(e==this)return!0;if(e.length!=this.length||e.lines!=this.lines)return!1;let n=this.scanIdentical(e,1),r=this.length-this.scanIdentical(e,-1),i=new Ac(this),o=new Ac(e);for(let s=n,a=n;;){if(i.next(s),o.next(s),s=0,i.lineBreak!=o.lineBreak||i.done!=o.done||i.value!=o.value)return!1;if(a+=i.value.length,i.done||a>=r)return!0}}iter(e=1){return new Ac(this,e)}iterRange(e,n=this.length){return new HM(this,e,n)}iterLines(e,n){let r;if(e==null)r=this.iter();else{n==null&&(n=this.lines+1);let i=this.line(e).from;r=this.iterRange(i,Math.max(i,n==this.lines+1?this.length:n<=1?0:this.line(n-1).to))}return new jM(r)}toString(){return this.sliceString(0)}toJSON(){let e=[];return this.flatten(e),e}static of(e){if(e.length==0)throw new RangeError("A document must have at least one line");return e.length==1&&!e[0]?Se.empty:e.length<=32?new it(e):Ar.from(it.split(e,[]))}}class it extends Se{constructor(e,n=eZ(e)){super(),this.text=e,this.length=n}get lines(){return this.text.length}get children(){return null}lineInner(e,n,r,i){for(let o=0;;o++){let s=this.text[o],a=i+s.length;if((n?r:a)>=e)return new tZ(i,a,r,s);i=a+1,r++}}decompose(e,n,r,i){let o=e<=0&&n>=this.length?this:new it(Vw(this.text,e,n),Math.min(n,this.length)-Math.max(0,e));if(i&1){let s=r.pop(),a=rh(o.text,s.text.slice(),0,o.length);if(a.length<=32)r.push(new it(a,s.length+o.length));else{let l=a.length>>1;r.push(new it(a.slice(0,l)),new it(a.slice(l)))}}else r.push(o)}replace(e,n,r){if(!(r instanceof it))return super.replace(e,n,r);let i=rh(this.text,rh(r.text,Vw(this.text,0,e)),n),o=this.length+r.length-(n-e);return i.length<=32?new it(i,o):Ar.from(it.split(i,[]),o)}sliceString(e,n=this.length,r=`
`){let i="";for(let o=0,s=0;o<=n&&s<this.text.length;s++){let a=this.text[s],l=o+a.length;o>e&&s&&(i+=r),e<l&&n>o&&(i+=a.slice(Math.max(0,e-o),n-o)),o=l+1}return i}flatten(e){for(let n of this.text)e.push(n)}scanIdentical(){return 0}static split(e,n){let r=[],i=-1;for(let o of e)r.push(o),i+=o.length+1,r.length==32&&(n.push(new it(r,i)),r=[],i=-1);return i>-1&&n.push(new it(r,i)),n}}class Ar extends Se{constructor(e,n){super(),this.children=e,this.length=n,this.lines=0;for(let r of e)this.lines+=r.lines}lineInner(e,n,r,i){for(let o=0;;o++){let s=this.children[o],a=i+s.length,l=r+s.lines-1;if((n?l:a)>=e)return s.lineInner(e,n,r,i);i=a+1,r=l+1}}decompose(e,n,r,i){for(let o=0,s=0;s<=n&&o<this.children.length;o++){let a=this.children[o],l=s+a.length;if(e<=l&&n>=s){let c=i&((s<=e?1:0)|(l>=n?2:0));s>=e&&l<=n&&!c?r.push(a):a.decompose(e-s,n-s,r,c)}s=l+1}}replace(e,n,r){if(r.lines<this.lines)for(let i=0,o=0;i<this.children.length;i++){let s=this.children[i],a=o+s.length;if(e>=o&&n<=a){let l=s.replace(e-o,n-o,r),c=this.lines-s.lines+l.lines;if(l.lines<c>>5-1&&l.lines>c>>5+1){let u=this.children.slice();return u[i]=l,new Ar(u,this.length-(n-e)+r.length)}return super.replace(o,a,l)}o=a+1}return super.replace(e,n,r)}sliceString(e,n=this.length,r=`
`){let i="";for(let o=0,s=0;o<this.children.length&&s<=n;o++){let a=this.children[o],l=s+a.length;s>e&&o&&(i+=r),e<l&&n>s&&(i+=a.sliceString(e-s,n-s,r)),s=l+1}return i}flatten(e){for(let n of this.children)n.flatten(e)}scanIdentical(e,n){if(!(e instanceof Ar))return 0;let r=0,[i,o,s,a]=n>0?[0,0,this.children.length,e.children.length]:[this.children.length-1,e.children.length-1,-1,-1];for(;;i+=n,o+=n){if(i==s||o==a)return r;let l=this.children[i],c=e.children[o];if(l!=c)return r+l.scanIdentical(c,n);r+=l.length+1}}static from(e,n=e.reduce((r,i)=>r+i.length+1,-1)){let r=0;for(let h of e)r+=h.lines;if(r<32){let h=[];for(let p of e)p.flatten(h);return new it(h,n)}let i=Math.max(32,r>>5),o=i<<1,s=i>>1,a=[],l=0,c=-1,u=[];function d(h){let p;if(h.lines>o&&h instanceof Ar)for(let m of h.children)d(m);else h.lines>s&&(l>s||!l)?(f(),a.push(h)):h instanceof it&&l&&(p=u[u.length-1])instanceof it&&h.lines+p.lines<=32?(l+=h.lines,c+=h.length+1,u[u.length-1]=new it(p.text.concat(h.text),p.length+1+h.length)):(l+h.lines>i&&f(),l+=h.lines,c+=h.length+1,u.push(h))}function f(){l!=0&&(a.push(u.length==1?u[0]:Ar.from(u,c)),c=-1,l=u.length=0)}for(let h of e)d(h);return f(),a.length==1?a[0]:new Ar(a,n)}}Se.empty=new it([""],0);function eZ(t){let e=-1;for(let n of t)e+=n.length+1;return e}function rh(t,e,n=0,r=1e9){for(let i=0,o=0,s=!0;o<t.length&&i<=r;o++){let a=t[o],l=i+a.length;l>=n&&(l>r&&(a=a.slice(0,r-i)),i<n&&(a=a.slice(n-i)),s?(e[e.length-1]+=a,s=!1):e.push(a)),i=l+1}return e}function Vw(t,e,n){return rh(t,[""],e,n)}class Ac{constructor(e,n=1){this.dir=n,this.done=!1,this.lineBreak=!1,this.value="",this.nodes=[e],this.offsets=[n>0?1:(e instanceof it?e.text.length:e.children.length)<<1]}nextInner(e,n){for(this.done=this.lineBreak=!1;;){let r=this.nodes.length-1,i=this.nodes[r],o=this.offsets[r],s=o>>1,a=i instanceof it?i.text.length:i.children.length;if(s==(n>0?a:0)){if(r==0)return this.done=!0,this.value="",this;n>0&&this.offsets[r-1]++,this.nodes.pop(),this.offsets.pop()}else if((o&1)==(n>0?0:1)){if(this.offsets[r]+=n,e==0)return this.lineBreak=!0,this.value=`
`,this;e--}else if(i instanceof it){let l=i.text[s+(n<0?-1:0)];if(this.offsets[r]+=n,l.length>Math.max(0,e))return this.value=e==0?l:n>0?l.slice(e):l.slice(0,l.length-e),this;e-=l.length}else{let l=i.children[s+(n<0?-1:0)];e>l.length?(e-=l.length,this.offsets[r]+=n):(n<0&&this.offsets[r]--,this.nodes.push(l),this.offsets.push(n>0?1:(l instanceof it?l.text.length:l.children.length)<<1))}}}next(e=0){return e<0&&(this.nextInner(-e,-this.dir),e=this.value.length),this.nextInner(e,this.dir)}}class HM{constructor(e,n,r){this.value="",this.done=!1,this.cursor=new Ac(e,n>r?-1:1),this.pos=n>r?e.length:0,this.from=Math.min(n,r),this.to=Math.max(n,r)}nextInner(e,n){if(n<0?this.pos<=this.from:this.pos>=this.to)return this.value="",this.done=!0,this;e+=Math.max(0,n<0?this.pos-this.to:this.from-this.pos);let r=n<0?this.pos-this.from:this.to-this.pos;e>r&&(e=r),r-=e;let{value:i}=this.cursor.next(e);return this.pos+=(i.length+e)*n,this.value=i.length<=r?i:n<0?i.slice(i.length-r):i.slice(0,r),this.done=!this.value,this}next(e=0){return e<0?e=Math.max(e,this.from-this.pos):e>0&&(e=Math.min(e,this.to-this.pos)),this.nextInner(e,this.cursor.dir)}get lineBreak(){return this.cursor.lineBreak&&this.value!=""}}class jM{constructor(e){this.inner=e,this.afterBreak=!0,this.value="",this.done=!1}next(e=0){let{done:n,lineBreak:r,value:i}=this.inner.next(e);return n?(this.done=!0,this.value=""):r?this.afterBreak?this.value="":(this.afterBreak=!0,this.next()):(this.value=i,this.afterBreak=!1),this}get lineBreak(){return!1}}typeof Symbol<"u"&&(Se.prototype[Symbol.iterator]=function(){return this.iter()},Ac.prototype[Symbol.iterator]=HM.prototype[Symbol.iterator]=jM.prototype[Symbol.iterator]=function(){return this});class tZ{constructor(e,n,r,i){this.from=e,this.to=n,this.number=r,this.text=i}get length(){return this.to-this.from}}let Wa="lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map(t=>t?parseInt(t,36):1);for(let t=1;t<Wa.length;t++)Wa[t]+=Wa[t-1];function nZ(t){for(let e=1;e<Wa.length;e+=2)if(Wa[e]>t)return Wa[e-1]<=t;return!1}function Lw(t){return t>=127462&&t<=127487}const Xw=8205;function qt(t,e,n=!0,r=!0){return(n?DM:rZ)(t,e,r)}function DM(t,e,n){if(e==t.length)return e;e&&UM(t.charCodeAt(e))&&KM(t.charCodeAt(e-1))&&e--;let r=Mt(t,e);for(e+=wn(r);e<t.length;){let i=Mt(t,e);if(r==Xw||i==Xw||n&&nZ(i))e+=wn(i),r=i;else if(Lw(i)){let o=0,s=e-2;for(;s>=0&&Lw(Mt(t,s));)o++,s-=2;if(o%2==0)break;e+=2}else break}return e}function rZ(t,e,n){for(;e>0;){let r=DM(t,e-2,n);if(r<e)return r;e--}return 0}function UM(t){return t>=56320&&t<57344}function KM(t){return t>=55296&&t<56320}function Mt(t,e){let n=t.charCodeAt(e);if(!KM(n)||e+1==t.length)return n;let r=t.charCodeAt(e+1);return UM(r)?(n-55296<<10)+(r-56320)+65536:n}function ax(t){return t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode((t>>10)+55296,(t&1023)+56320))}function wn(t){return t<65536?1:2}const mb=/\r\n?|\n/;var Kt=function(t){return t[t.Simple=0]="Simple",t[t.TrackDel=1]="TrackDel",t[t.TrackBefore=2]="TrackBefore",t[t.TrackAfter=3]="TrackAfter",t}(Kt||(Kt={}));class Ur{constructor(e){this.sections=e}get length(){let e=0;for(let n=0;n<this.sections.length;n+=2)e+=this.sections[n];return e}get newLength(){let e=0;for(let n=0;n<this.sections.length;n+=2){let r=this.sections[n+1];e+=r<0?this.sections[n]:r}return e}get empty(){return this.sections.length==0||this.sections.length==2&&this.sections[1]<0}iterGaps(e){for(let n=0,r=0,i=0;n<this.sections.length;){let o=this.sections[n++],s=this.sections[n++];s<0?(e(r,i,o),i+=o):i+=s,r+=o}}iterChangedRanges(e,n=!1){gb(this,e,n)}get invertedDesc(){let e=[];for(let n=0;n<this.sections.length;){let r=this.sections[n++],i=this.sections[n++];i<0?e.push(r,i):e.push(i,r)}return new Ur(e)}composeDesc(e){return this.empty?e:e.empty?this:qM(this,e)}mapDesc(e,n=!1){return e.empty?this:vb(this,e,n)}mapPos(e,n=-1,r=Kt.Simple){let i=0,o=0;for(let s=0;s<this.sections.length;){let a=this.sections[s++],l=this.sections[s++],c=i+a;if(l<0){if(c>e)return o+(e-i);o+=a}else{if(r!=Kt.Simple&&c>=e&&(r==Kt.TrackDel&&i<e&&c>e||r==Kt.TrackBefore&&i<e||r==Kt.TrackAfter&&c>e))return null;if(c>e||c==e&&n<0&&!a)return e==i||n<0?o:o+l;o+=l}i=c}if(e>i)throw new RangeError(`Position ${e} is out of range for changeset of length ${i}`);return o}touchesRange(e,n=e){for(let r=0,i=0;r<this.sections.length&&i<=n;){let o=this.sections[r++],s=this.sections[r++],a=i+o;if(s>=0&&i<=n&&a>=e)return i<e&&a>n?"cover":!0;i=a}return!1}toString(){let e="";for(let n=0;n<this.sections.length;){let r=this.sections[n++],i=this.sections[n++];e+=(e?" ":"")+r+(i>=0?":"+i:"")}return e}toJSON(){return this.sections}static fromJSON(e){if(!Array.isArray(e)||e.length%2||e.some(n=>typeof n!="number"))throw new RangeError("Invalid JSON representation of ChangeDesc");return new Ur(e)}static create(e){return new Ur(e)}}class ht extends Ur{constructor(e,n){super(e),this.inserted=n}apply(e){if(this.length!=e.length)throw new RangeError("Applying change set to a document with the wrong length");return gb(this,(n,r,i,o,s)=>e=e.replace(i,i+(r-n),s),!1),e}mapDesc(e,n=!1){return vb(this,e,n,!0)}invert(e){let n=this.sections.slice(),r=[];for(let i=0,o=0;i<n.length;i+=2){let s=n[i],a=n[i+1];if(a>=0){n[i]=a,n[i+1]=s;let l=i>>1;for(;r.length<l;)r.push(Se.empty);r.push(s?e.slice(o,o+s):Se.empty)}o+=s}return new ht(n,r)}compose(e){return this.empty?e:e.empty?this:qM(this,e,!0)}map(e,n=!1){return e.empty?this:vb(this,e,n,!0)}iterChanges(e,n=!1){gb(this,e,n)}get desc(){return Ur.create(this.sections)}filter(e){let n=[],r=[],i=[],o=new wu(this);e:for(let s=0,a=0;;){let l=s==e.length?1e9:e[s++];for(;a<l||a==l&&o.len==0;){if(o.done)break e;let u=Math.min(o.len,l-a);Zt(i,u,-1);let d=o.ins==-1?-1:o.off==0?o.ins:0;Zt(n,u,d),d>0&&to(r,n,o.text),o.forward(u),a+=u}let c=e[s++];for(;a<c;){if(o.done)break e;let u=Math.min(o.len,c-a);Zt(n,u,-1),Zt(i,u,o.ins==-1?-1:o.off==0?o.ins:0),o.forward(u),a+=u}}return{changes:new ht(n,r),filtered:Ur.create(i)}}toJSON(){let e=[];for(let n=0;n<this.sections.length;n+=2){let r=this.sections[n],i=this.sections[n+1];i<0?e.push(r):i==0?e.push([r]):e.push([r].concat(this.inserted[n>>1].toJSON()))}return e}static of(e,n,r){let i=[],o=[],s=0,a=null;function l(u=!1){if(!u&&!i.length)return;s<n&&Zt(i,n-s,-1);let d=new ht(i,o);a=a?a.compose(d.map(a)):d,i=[],o=[],s=0}function c(u){if(Array.isArray(u))for(let d of u)c(d);else if(u instanceof ht){if(u.length!=n)throw new RangeError(`Mismatched change set length (got ${u.length}, expected ${n})`);l(),a=a?a.compose(u.map(a)):u}else{let{from:d,to:f=d,insert:h}=u;if(d>f||d<0||f>n)throw new RangeError(`Invalid change range ${d} to ${f} (in doc of length ${n})`);let p=h?typeof h=="string"?Se.of(h.split(r||mb)):h:Se.empty,m=p.length;if(d==f&&m==0)return;d<s&&l(),d>s&&Zt(i,d-s,-1),Zt(i,f-d,m),to(o,i,p),s=f}}return c(e),l(!a),a}static empty(e){return new ht(e?[e,-1]:[],[])}static fromJSON(e){if(!Array.isArray(e))throw new RangeError("Invalid JSON representation of ChangeSet");let n=[],r=[];for(let i=0;i<e.length;i++){let o=e[i];if(typeof o=="number")n.push(o,-1);else{if(!Array.isArray(o)||typeof o[0]!="number"||o.some((s,a)=>a&&typeof s!="string"))throw new RangeError("Invalid JSON representation of ChangeSet");if(o.length==1)n.push(o[0],0);else{for(;r.length<i;)r.push(Se.empty);r[i]=Se.of(o.slice(1)),n.push(o[0],r[i].length)}}}return new ht(n,r)}static createSet(e,n){return new ht(e,n)}}function Zt(t,e,n,r=!1){if(e==0&&n<=0)return;let i=t.length-2;i>=0&&n<=0&&n==t[i+1]?t[i]+=e:e==0&&t[i]==0?t[i+1]+=n:r?(t[i]+=e,t[i+1]+=n):t.push(e,n)}function to(t,e,n){if(n.length==0)return;let r=e.length-2>>1;if(r<t.length)t[t.length-1]=t[t.length-1].append(n);else{for(;t.length<r;)t.push(Se.empty);t.push(n)}}function gb(t,e,n){let r=t.inserted;for(let i=0,o=0,s=0;s<t.sections.length;){let a=t.sections[s++],l=t.sections[s++];if(l<0)i+=a,o+=a;else{let c=i,u=o,d=Se.empty;for(;c+=a,u+=l,l&&r&&(d=d.append(r[s-2>>1])),!(n||s==t.sections.length||t.sections[s+1]<0);)a=t.sections[s++],l=t.sections[s++];e(i,c,o,u,d),i=c,o=u}}}function vb(t,e,n,r=!1){let i=[],o=r?[]:null,s=new wu(t),a=new wu(e);for(let l=-1;;)if(s.ins==-1&&a.ins==-1){let c=Math.min(s.len,a.len);Zt(i,c,-1),s.forward(c),a.forward(c)}else if(a.ins>=0&&(s.ins<0||l==s.i||s.off==0&&(a.len<s.len||a.len==s.len&&!n))){let c=a.len;for(Zt(i,a.ins,-1);c;){let u=Math.min(s.len,c);s.ins>=0&&l<s.i&&s.len<=u&&(Zt(i,0,s.ins),o&&to(o,i,s.text),l=s.i),s.forward(u),c-=u}a.next()}else if(s.ins>=0){let c=0,u=s.len;for(;u;)if(a.ins==-1){let d=Math.min(u,a.len);c+=d,u-=d,a.forward(d)}else if(a.ins==0&&a.len<u)u-=a.len,a.next();else break;Zt(i,c,l<s.i?s.ins:0),o&&l<s.i&&to(o,i,s.text),l=s.i,s.forward(s.len-u)}else{if(s.done&&a.done)return o?ht.createSet(i,o):Ur.create(i);throw new Error("Mismatched change set lengths")}}function qM(t,e,n=!1){let r=[],i=n?[]:null,o=new wu(t),s=new wu(e);for(let a=!1;;){if(o.done&&s.done)return i?ht.createSet(r,i):Ur.create(r);if(o.ins==0)Zt(r,o.len,0,a),o.next();else if(s.len==0&&!s.done)Zt(r,0,s.ins,a),i&&to(i,r,s.text),s.next();else{if(o.done||s.done)throw new Error("Mismatched change set lengths");{let l=Math.min(o.len2,s.len),c=r.length;if(o.ins==-1){let u=s.ins==-1?-1:s.off?0:s.ins;Zt(r,l,u,a),i&&u&&to(i,r,s.text)}else s.ins==-1?(Zt(r,o.off?0:o.len,l,a),i&&to(i,r,o.textBit(l))):(Zt(r,o.off?0:o.len,s.off?0:s.ins,a),i&&!s.off&&to(i,r,s.text));a=(o.ins>l||s.ins>=0&&s.len>l)&&(a||r.length>c),o.forward2(l),s.forward(l)}}}}class wu{constructor(e){this.set=e,this.i=0,this.next()}next(){let{sections:e}=this.set;this.i<e.length?(this.len=e[this.i++],this.ins=e[this.i++]):(this.len=0,this.ins=-2),this.off=0}get done(){return this.ins==-2}get len2(){return this.ins<0?this.len:this.ins}get text(){let{inserted:e}=this.set,n=this.i-2>>1;return n>=e.length?Se.empty:e[n]}textBit(e){let{inserted:n}=this.set,r=this.i-2>>1;return r>=n.length&&!e?Se.empty:n[r].slice(this.off,e==null?void 0:this.off+e)}forward(e){e==this.len?this.next():(this.len-=e,this.off+=e)}forward2(e){this.ins==-1?this.forward(e):e==this.ins?this.next():(this.ins-=e,this.off+=e)}}class cs{constructor(e,n,r){this.from=e,this.to=n,this.flags=r}get anchor(){return this.flags&16?this.to:this.from}get head(){return this.flags&16?this.from:this.to}get empty(){return this.from==this.to}get assoc(){return this.flags&4?-1:this.flags&8?1:0}get bidiLevel(){let e=this.flags&3;return e==3?null:e}get goalColumn(){let e=this.flags>>5;return e==33554431?void 0:e}map(e,n=-1){let r,i;return this.empty?r=i=e.mapPos(this.from,n):(r=e.mapPos(this.from,1),i=e.mapPos(this.to,-1)),r==this.from&&i==this.to?this:new cs(r,i,this.flags)}extend(e,n=e){if(e<=this.anchor&&n>=this.anchor)return V.range(e,n);let r=Math.abs(e-this.anchor)>Math.abs(n-this.anchor)?e:n;return V.range(this.anchor,r)}eq(e){return this.anchor==e.anchor&&this.head==e.head}toJSON(){return{anchor:this.anchor,head:this.head}}static fromJSON(e){if(!e||typeof e.anchor!="number"||typeof e.head!="number")throw new RangeError("Invalid JSON representation for SelectionRange");return V.range(e.anchor,e.head)}static create(e,n,r){return new cs(e,n,r)}}class V{constructor(e,n){this.ranges=e,this.mainIndex=n}map(e,n=-1){return e.empty?this:V.create(this.ranges.map(r=>r.map(e,n)),this.mainIndex)}eq(e){if(this.ranges.length!=e.ranges.length||this.mainIndex!=e.mainIndex)return!1;for(let n=0;n<this.ranges.length;n++)if(!this.ranges[n].eq(e.ranges[n]))return!1;return!0}get main(){return this.ranges[this.mainIndex]}asSingle(){return this.ranges.length==1?this:new V([this.main],0)}addRange(e,n=!0){return V.create([e].concat(this.ranges),n?0:this.mainIndex+1)}replaceRange(e,n=this.mainIndex){let r=this.ranges.slice();return r[n]=e,V.create(r,this.mainIndex)}toJSON(){return{ranges:this.ranges.map(e=>e.toJSON()),main:this.mainIndex}}static fromJSON(e){if(!e||!Array.isArray(e.ranges)||typeof e.main!="number"||e.main>=e.ranges.length)throw new RangeError("Invalid JSON representation for EditorSelection");return new V(e.ranges.map(n=>cs.fromJSON(n)),e.main)}static single(e,n=e){return new V([V.range(e,n)],0)}static create(e,n=0){if(e.length==0)throw new RangeError("A selection needs at least one range");for(let r=0,i=0;i<e.length;i++){let o=e[i];if(o.empty?o.from<=r:o.from<r)return V.normalized(e.slice(),n);r=o.to}return new V(e,n)}static cursor(e,n=0,r,i){return cs.create(e,e,(n==0?0:n<0?4:8)|(r==null?3:Math.min(2,r))|(i!=null?i:33554431)<<5)}static range(e,n,r){let i=(r!=null?r:33554431)<<5;return n<e?cs.create(n,e,16|i|8):cs.create(e,n,i|(n>e?4:0))}static normalized(e,n=0){let r=e[n];e.sort((i,o)=>i.from-o.from),n=e.indexOf(r);for(let i=1;i<e.length;i++){let o=e[i],s=e[i-1];if(o.empty?o.from<=s.to:o.from<s.to){let a=s.from,l=Math.max(o.to,s.to);i<=n&&n--,e.splice(--i,2,o.anchor>o.head?V.range(l,a):V.range(a,l))}}return new V(e,n)}}function QM(t,e){for(let n of t.ranges)if(n.to>e)throw new RangeError("Selection points outside of document")}let lx=0;class ${constructor(e,n,r,i,o){this.combine=e,this.compareInput=n,this.compare=r,this.isStatic=i,this.id=lx++,this.default=e([]),this.extensions=typeof o=="function"?o(this):o}static define(e={}){return new $(e.combine||(n=>n),e.compareInput||((n,r)=>n===r),e.compare||(e.combine?(n,r)=>n===r:cx),!!e.static,e.enables)}of(e){return new ih([],this,0,e)}compute(e,n){if(this.isStatic)throw new Error("Can't compute a static facet");return new ih(e,this,1,n)}computeN(e,n){if(this.isStatic)throw new Error("Can't compute a static facet");return new ih(e,this,2,n)}from(e,n){return n||(n=r=>r),this.compute([e],r=>n(r.field(e)))}}function cx(t,e){return t==e||t.length==e.length&&t.every((n,r)=>n===e[r])}class ih{constructor(e,n,r,i){this.dependencies=e,this.facet=n,this.type=r,this.value=i,this.id=lx++}dynamicSlot(e){var n;let r=this.value,i=this.facet.compareInput,o=this.id,s=e[o]>>1,a=this.type==2,l=!1,c=!1,u=[];for(let d of this.dependencies)d=="doc"?l=!0:d=="selection"?c=!0:(((n=e[d.id])!==null&&n!==void 0?n:1)&1)==0&&u.push(e[d.id]);return{create(d){return d.values[s]=r(d),1},update(d,f){if(l&&f.docChanged||c&&(f.docChanged||f.selection)||bb(d,u)){let h=r(d);if(a?!Bw(h,d.values[s],i):!i(h,d.values[s]))return d.values[s]=h,1}return 0},reconfigure:(d,f)=>{let h,p=f.config.address[o];if(p!=null){let m=tp(f,p);if(this.dependencies.every(b=>b instanceof $?f.facet(b)===d.facet(b):b instanceof kt?f.field(b,!1)==d.field(b,!1):!0)||(a?Bw(h=r(d),m,i):i(h=r(d),m)))return d.values[s]=m,0}else h=r(d);return d.values[s]=h,1}}}}function Bw(t,e,n){if(t.length!=e.length)return!1;for(let r=0;r<t.length;r++)if(!n(t[r],e[r]))return!1;return!0}function bb(t,e){let n=!1;for(let r of e)Zc(t,r)&1&&(n=!0);return n}function iZ(t,e,n){let r=n.map(l=>t[l.id]),i=n.map(l=>l.type),o=r.filter(l=>!(l&1)),s=t[e.id]>>1;function a(l){let c=[];for(let u=0;u<r.length;u++){let d=tp(l,r[u]);if(i[u]==2)for(let f of d)c.push(f);else c.push(d)}return e.combine(c)}return{create(l){for(let c of r)Zc(l,c);return l.values[s]=a(l),1},update(l,c){if(!bb(l,o))return 0;let u=a(l);return e.compare(u,l.values[s])?0:(l.values[s]=u,1)},reconfigure(l,c){let u=bb(l,r),d=c.config.facets[e.id],f=c.facet(e);if(d&&!u&&cx(n,d))return l.values[s]=f,0;let h=a(l);return e.compare(h,f)?(l.values[s]=f,0):(l.values[s]=h,1)}}}const Aw=$.define({static:!0});class kt{constructor(e,n,r,i,o){this.id=e,this.createF=n,this.updateF=r,this.compareF=i,this.spec=o,this.provides=void 0}static define(e){let n=new kt(lx++,e.create,e.update,e.compare||((r,i)=>r===i),e);return e.provide&&(n.provides=e.provide(n)),n}create(e){let n=e.facet(Aw).find(r=>r.field==this);return((n==null?void 0:n.create)||this.createF)(e)}slot(e){let n=e[this.id]>>1;return{create:r=>(r.values[n]=this.create(r),1),update:(r,i)=>{let o=r.values[n],s=this.updateF(o,i);return this.compareF(o,s)?0:(r.values[n]=s,1)},reconfigure:(r,i)=>i.config.address[this.id]!=null?(r.values[n]=i.field(this),0):(r.values[n]=this.create(r),1)}}init(e){return[this,Aw.of({field:this,create:e})]}get extension(){return this}}const es={lowest:4,low:3,default:2,high:1,highest:0};function nc(t){return e=>new JM(e,t)}const Ws={highest:nc(es.highest),high:nc(es.high),default:nc(es.default),low:nc(es.low),lowest:nc(es.lowest)};class JM{constructor(e,n){this.inner=e,this.prec=n}}class Sm{of(e){return new yb(this,e)}reconfigure(e){return Sm.reconfigure.of({compartment:this,extension:e})}get(e){return e.config.compartments.get(this)}}class yb{constructor(e,n){this.compartment=e,this.inner=n}}class ep{constructor(e,n,r,i,o,s){for(this.base=e,this.compartments=n,this.dynamicSlots=r,this.address=i,this.staticValues=o,this.facets=s,this.statusTemplate=[];this.statusTemplate.length<r.length;)this.statusTemplate.push(0)}staticFacet(e){let n=this.address[e.id];return n==null?e.default:this.staticValues[n>>1]}static resolve(e,n,r){let i=[],o=Object.create(null),s=new Map;for(let f of oZ(e,n,s))f instanceof kt?i.push(f):(o[f.facet.id]||(o[f.facet.id]=[])).push(f);let a=Object.create(null),l=[],c=[];for(let f of i)a[f.id]=c.length<<1,c.push(h=>f.slot(h));let u=r==null?void 0:r.config.facets;for(let f in o){let h=o[f],p=h[0].facet,m=u&&u[f]||[];if(h.every(b=>b.type==0))if(a[p.id]=l.length<<1|1,cx(m,h))l.push(r.facet(p));else{let b=p.combine(h.map(g=>g.value));l.push(r&&p.compare(b,r.facet(p))?r.facet(p):b)}else{for(let b of h)b.type==0?(a[b.id]=l.length<<1|1,l.push(b.value)):(a[b.id]=c.length<<1,c.push(g=>b.dynamicSlot(g)));a[p.id]=c.length<<1,c.push(b=>iZ(b,p,h))}}let d=c.map(f=>f(a));return new ep(e,s,d,a,l,o)}}function oZ(t,e,n){let r=[[],[],[],[],[]],i=new Map;function o(s,a){let l=i.get(s);if(l!=null){if(l<=a)return;let c=r[l].indexOf(s);c>-1&&r[l].splice(c,1),s instanceof yb&&n.delete(s.compartment)}if(i.set(s,a),Array.isArray(s))for(let c of s)o(c,a);else if(s instanceof yb){if(n.has(s.compartment))throw new RangeError("Duplicate use of compartment in extensions");let c=e.get(s.compartment)||s.inner;n.set(s.compartment,c),o(c,a)}else if(s instanceof JM)o(s.inner,s.prec);else if(s instanceof kt)r[a].push(s),s.provides&&o(s.provides,a);else if(s instanceof ih)r[a].push(s),s.facet.extensions&&o(s.facet.extensions,es.default);else{let c=s.extension;if(!c)throw new Error(`Unrecognized extension value in extension set (${s}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);o(c,a)}}return o(t,es.default),r.reduce((s,a)=>s.concat(a))}function Zc(t,e){if(e&1)return 2;let n=e>>1,r=t.status[n];if(r==4)throw new Error("Cyclic dependency between fields and/or facets");if(r&2)return r;t.status[n]=4;let i=t.computeSlot(t,t.config.dynamicSlots[n]);return t.status[n]=2|i}function tp(t,e){return e&1?t.config.staticValues[e>>1]:t.values[e>>1]}const _M=$.define(),$M=$.define({combine:t=>t.some(e=>e),static:!0}),e3=$.define({combine:t=>t.length?t[0]:void 0,static:!0}),t3=$.define(),n3=$.define(),r3=$.define(),i3=$.define({combine:t=>t.length?t[0]:!1});class Vo{constructor(e,n){this.type=e,this.value=n}static define(){return new sZ}}class sZ{of(e){return new Vo(this,e)}}class aZ{constructor(e){this.map=e}of(e){return new se(this,e)}}class se{constructor(e,n){this.type=e,this.value=n}map(e){let n=this.type.map(this.value,e);return n===void 0?void 0:n==this.value?this:new se(this.type,n)}is(e){return this.type==e}static define(e={}){return new aZ(e.map||(n=>n))}static mapEffects(e,n){if(!e.length)return e;let r=[];for(let i of e){let o=i.map(n);o&&r.push(o)}return r}}se.reconfigure=se.define();se.appendConfig=se.define();class mt{constructor(e,n,r,i,o,s){this.startState=e,this.changes=n,this.selection=r,this.effects=i,this.annotations=o,this.scrollIntoView=s,this._doc=null,this._state=null,r&&QM(r,n.newLength),o.some(a=>a.type==mt.time)||(this.annotations=o.concat(mt.time.of(Date.now())))}static create(e,n,r,i,o,s){return new mt(e,n,r,i,o,s)}get newDoc(){return this._doc||(this._doc=this.changes.apply(this.startState.doc))}get newSelection(){return this.selection||this.startState.selection.map(this.changes)}get state(){return this._state||this.startState.applyTransaction(this),this._state}annotation(e){for(let n of this.annotations)if(n.type==e)return n.value}get docChanged(){return!this.changes.empty}get reconfigured(){return this.startState.config!=this.state.config}isUserEvent(e){let n=this.annotation(mt.userEvent);return!!(n&&(n==e||n.length>e.length&&n.slice(0,e.length)==e&&n[e.length]=="."))}}mt.time=Vo.define();mt.userEvent=Vo.define();mt.addToHistory=Vo.define();mt.remote=Vo.define();function lZ(t,e){let n=[];for(let r=0,i=0;;){let o,s;if(r<t.length&&(i==e.length||e[i]>=t[r]))o=t[r++],s=t[r++];else if(i<e.length)o=e[i++],s=e[i++];else return n;!n.length||n[n.length-1]<o?n.push(o,s):n[n.length-1]<s&&(n[n.length-1]=s)}}function o3(t,e,n){var r;let i,o,s;return n?(i=e.changes,o=ht.empty(e.changes.length),s=t.changes.compose(e.changes)):(i=e.changes.map(t.changes),o=t.changes.mapDesc(e.changes,!0),s=t.changes.compose(i)),{changes:s,selection:e.selection?e.selection.map(o):(r=t.selection)===null||r===void 0?void 0:r.map(i),effects:se.mapEffects(t.effects,i).concat(se.mapEffects(e.effects,o)),annotations:t.annotations.length?t.annotations.concat(e.annotations):e.annotations,scrollIntoView:t.scrollIntoView||e.scrollIntoView}}function xb(t,e,n){let r=e.selection,i=Ya(e.annotations);return e.userEvent&&(i=i.concat(mt.userEvent.of(e.userEvent))),{changes:e.changes instanceof ht?e.changes:ht.of(e.changes||[],n,t.facet(e3)),selection:r&&(r instanceof V?r:V.single(r.anchor,r.head)),effects:Ya(e.effects),annotations:i,scrollIntoView:!!e.scrollIntoView}}function s3(t,e,n){let r=xb(t,e.length?e[0]:{},t.doc.length);e.length&&e[0].filter===!1&&(n=!1);for(let o=1;o<e.length;o++){e[o].filter===!1&&(n=!1);let s=!!e[o].sequential;r=o3(r,xb(t,e[o],s?r.changes.newLength:t.doc.length),s)}let i=mt.create(t,r.changes,r.selection,r.effects,r.annotations,r.scrollIntoView);return uZ(n?cZ(i):i)}function cZ(t){let e=t.startState,n=!0;for(let i of e.facet(t3)){let o=i(t);if(o===!1){n=!1;break}Array.isArray(o)&&(n=n===!0?o:lZ(n,o))}if(n!==!0){let i,o;if(n===!1)o=t.changes.invertedDesc,i=ht.empty(e.doc.length);else{let s=t.changes.filter(n);i=s.changes,o=s.filtered.mapDesc(s.changes).invertedDesc}t=mt.create(e,i,t.selection&&t.selection.map(o),se.mapEffects(t.effects,o),t.annotations,t.scrollIntoView)}let r=e.facet(n3);for(let i=r.length-1;i>=0;i--){let o=r[i](t);o instanceof mt?t=o:Array.isArray(o)&&o.length==1&&o[0]instanceof mt?t=o[0]:t=s3(e,Ya(o),!1)}return t}function uZ(t){let e=t.startState,n=e.facet(r3),r=t;for(let i=n.length-1;i>=0;i--){let o=n[i](t);o&&Object.keys(o).length&&(r=o3(r,xb(e,o,t.changes.newLength),!0))}return r==t?t:mt.create(e,t.changes,t.selection,r.effects,r.annotations,r.scrollIntoView)}const dZ=[];function Ya(t){return t==null?dZ:Array.isArray(t)?t:[t]}var je=function(t){return t[t.Word=0]="Word",t[t.Space=1]="Space",t[t.Other=2]="Other",t}(je||(je={}));const fZ=/[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;let Sb;try{Sb=new RegExp("[\\p{Alphabetic}\\p{Number}_]","u")}catch{}function hZ(t){if(Sb)return Sb.test(t);for(let e=0;e<t.length;e++){let n=t[e];if(/\w/.test(n)||n>"\x80"&&(n.toUpperCase()!=n.toLowerCase()||fZ.test(n)))return!0}return!1}function pZ(t){return e=>{if(!/\S/.test(e))return je.Space;if(hZ(e))return je.Word;for(let n=0;n<t.length;n++)if(e.indexOf(t[n])>-1)return je.Word;return je.Other}}class pe{constructor(e,n,r,i,o,s){this.config=e,this.doc=n,this.selection=r,this.values=i,this.status=e.statusTemplate.slice(),this.computeSlot=o,s&&(s._state=this);for(let a=0;a<this.config.dynamicSlots.length;a++)Zc(this,a<<1);this.computeSlot=null}field(e,n=!0){let r=this.config.address[e.id];if(r==null){if(n)throw new RangeError("Field is not present in this state");return}return Zc(this,r),tp(this,r)}update(...e){return s3(this,e,!0)}applyTransaction(e){let n=this.config,{base:r,compartments:i}=n;for(let s of e.effects)s.is(Sm.reconfigure)?(n&&(i=new Map,n.compartments.forEach((a,l)=>i.set(l,a)),n=null),i.set(s.value.compartment,s.value.extension)):s.is(se.reconfigure)?(n=null,r=s.value):s.is(se.appendConfig)&&(n=null,r=Ya(r).concat(s.value));let o;n?o=e.startState.values.slice():(n=ep.resolve(r,i,this),o=new pe(n,this.doc,this.selection,n.dynamicSlots.map(()=>null),(a,l)=>l.reconfigure(a,this),null).values),new pe(n,e.newDoc,e.newSelection,o,(s,a)=>a.update(s,e),e)}replaceSelection(e){return typeof e=="string"&&(e=this.toText(e)),this.changeByRange(n=>({changes:{from:n.from,to:n.to,insert:e},range:V.cursor(n.from+e.length)}))}changeByRange(e){let n=this.selection,r=e(n.ranges[0]),i=this.changes(r.changes),o=[r.range],s=Ya(r.effects);for(let a=1;a<n.ranges.length;a++){let l=e(n.ranges[a]),c=this.changes(l.changes),u=c.map(i);for(let f=0;f<a;f++)o[f]=o[f].map(u);let d=i.mapDesc(c,!0);o.push(l.range.map(d)),i=i.compose(u),s=se.mapEffects(s,u).concat(se.mapEffects(Ya(l.effects),d))}return{changes:i,selection:V.create(o,n.mainIndex),effects:s}}changes(e=[]){return e instanceof ht?e:ht.of(e,this.doc.length,this.facet(pe.lineSeparator))}toText(e){return Se.of(e.split(this.facet(pe.lineSeparator)||mb))}sliceDoc(e=0,n=this.doc.length){return this.doc.sliceString(e,n,this.lineBreak)}facet(e){let n=this.config.address[e.id];return n==null?e.default:(Zc(this,n),tp(this,n))}toJSON(e){let n={doc:this.sliceDoc(),selection:this.selection.toJSON()};if(e)for(let r in e){let i=e[r];i instanceof kt&&this.config.address[i.id]!=null&&(n[r]=i.spec.toJSON(this.field(e[r]),this))}return n}static fromJSON(e,n={},r){if(!e||typeof e.doc!="string")throw new RangeError("Invalid JSON representation for EditorState");let i=[];if(r){for(let o in r)if(Object.prototype.hasOwnProperty.call(e,o)){let s=r[o],a=e[o];i.push(s.init(l=>s.spec.fromJSON(a,l)))}}return pe.create({doc:e.doc,selection:V.fromJSON(e.selection),extensions:n.extensions?i.concat([n.extensions]):i})}static create(e={}){let n=ep.resolve(e.extensions||[],new Map),r=e.doc instanceof Se?e.doc:Se.of((e.doc||"").split(n.staticFacet(pe.lineSeparator)||mb)),i=e.selection?e.selection instanceof V?e.selection:V.single(e.selection.anchor,e.selection.head):V.single(0);return QM(i,r.length),n.staticFacet($M)||(i=i.asSingle()),new pe(n,r,i,n.dynamicSlots.map(()=>null),(o,s)=>s.create(o),null)}get tabSize(){return this.facet(pe.tabSize)}get lineBreak(){return this.facet(pe.lineSeparator)||`
`}get readOnly(){return this.facet(i3)}phrase(e,...n){for(let r of this.facet(pe.phrases))if(Object.prototype.hasOwnProperty.call(r,e)){e=r[e];break}return n.length&&(e=e.replace(/\$(\$|\d*)/g,(r,i)=>{if(i=="$")return"$";let o=+(i||1);return!o||o>n.length?r:n[o-1]})),e}languageDataAt(e,n,r=-1){let i=[];for(let o of this.facet(_M))for(let s of o(this,n,r))Object.prototype.hasOwnProperty.call(s,e)&&i.push(s[e]);return i}charCategorizer(e){return pZ(this.languageDataAt("wordChars",e).join(""))}wordAt(e){let{text:n,from:r,length:i}=this.doc.lineAt(e),o=this.charCategorizer(e),s=e-r,a=e-r;for(;s>0;){let l=qt(n,s,!1);if(o(n.slice(l,s))!=je.Word)break;s=l}for(;a<i;){let l=qt(n,a);if(o(n.slice(a,l))!=je.Word)break;a=l}return s==a?null:V.range(s+r,a+r)}}pe.allowMultipleSelections=$M;pe.tabSize=$.define({combine:t=>t.length?t[0]:4});pe.lineSeparator=e3;pe.readOnly=i3;pe.phrases=$.define({compare(t,e){let n=Object.keys(t),r=Object.keys(e);return n.length==r.length&&n.every(i=>t[i]==e[i])}});pe.languageData=_M;pe.changeFilter=t3;pe.transactionFilter=n3;pe.transactionExtender=r3;Sm.reconfigure=se.define();function ri(t,e,n={}){let r={};for(let i of t)for(let o of Object.keys(i)){let s=i[o],a=r[o];if(a===void 0)r[o]=s;else if(!(a===s||s===void 0))if(Object.hasOwnProperty.call(n,o))r[o]=n[o](a,s);else throw new Error("Config merge conflict for field "+o)}for(let i in e)r[i]===void 0&&(r[i]=e[i]);return r}class Es{eq(e){return this==e}range(e,n=e){return Ou.create(e,n,this)}}Es.prototype.startSide=Es.prototype.endSide=0;Es.prototype.point=!1;Es.prototype.mapMode=Kt.TrackDel;class Ou{constructor(e,n,r){this.from=e,this.to=n,this.value=r}static create(e,n,r){return new Ou(e,n,r)}}function kb(t,e){return t.from-e.from||t.value.startSide-e.value.startSide}class ux{constructor(e,n,r,i){this.from=e,this.to=n,this.value=r,this.maxPoint=i}get length(){return this.to[this.to.length-1]}findIndex(e,n,r,i=0){let o=r?this.to:this.from;for(let s=i,a=o.length;;){if(s==a)return s;let l=s+a>>1,c=o[l]-e||(r?this.value[l].endSide:this.value[l].startSide)-n;if(l==s)return c>=0?s:a;c>=0?a=l:s=l+1}}between(e,n,r,i){for(let o=this.findIndex(n,-1e9,!0),s=this.findIndex(r,1e9,!1,o);o<s;o++)if(i(this.from[o]+e,this.to[o]+e,this.value[o])===!1)return!1}map(e,n){let r=[],i=[],o=[],s=-1,a=-1;for(let l=0;l<this.value.length;l++){let c=this.value[l],u=this.from[l]+e,d=this.to[l]+e,f,h;if(u==d){let p=n.mapPos(u,c.startSide,c.mapMode);if(p==null||(f=h=p,c.startSide!=c.endSide&&(h=n.mapPos(u,c.endSide),h<f)))continue}else if(f=n.mapPos(u,c.startSide),h=n.mapPos(d,c.endSide),f>h||f==h&&c.startSide>0&&c.endSide<=0)continue;(h-f||c.endSide-c.startSide)<0||(s<0&&(s=f),c.point&&(a=Math.max(a,h-f)),r.push(c),i.push(f-s),o.push(h-s))}return{mapped:r.length?new ux(i,o,r,a):null,pos:s}}}class Oe{constructor(e,n,r,i){this.chunkPos=e,this.chunk=n,this.nextLayer=r,this.maxPoint=i}static create(e,n,r,i){return new Oe(e,n,r,i)}get length(){let e=this.chunk.length-1;return e<0?0:Math.max(this.chunkEnd(e),this.nextLayer.length)}get size(){if(this.isEmpty)return 0;let e=this.nextLayer.size;for(let n of this.chunk)e+=n.value.length;return e}chunkEnd(e){return this.chunkPos[e]+this.chunk[e].length}update(e){let{add:n=[],sort:r=!1,filterFrom:i=0,filterTo:o=this.length}=e,s=e.filter;if(n.length==0&&!s)return this;if(r&&(n=n.slice().sort(kb)),this.isEmpty)return n.length?Oe.of(n):this;let a=new a3(this,null,-1).goto(0),l=0,c=[],u=new Ci;for(;a.value||l<n.length;)if(l<n.length&&(a.from-n[l].from||a.startSide-n[l].value.startSide)>=0){let d=n[l++];u.addInner(d.from,d.to,d.value)||c.push(d)}else a.rangeIndex==1&&a.chunkIndex<this.chunk.length&&(l==n.length||this.chunkEnd(a.chunkIndex)<n[l].from)&&(!s||i>this.chunkEnd(a.chunkIndex)||o<this.chunkPos[a.chunkIndex])&&u.addChunk(this.chunkPos[a.chunkIndex],this.chunk[a.chunkIndex])?a.nextChunk():((!s||i>a.to||o<a.from||s(a.from,a.to,a.value))&&(u.addInner(a.from,a.to,a.value)||c.push(Ou.create(a.from,a.to,a.value))),a.next());return u.finishInner(this.nextLayer.isEmpty&&!c.length?Oe.empty:this.nextLayer.update({add:c,filter:s,filterFrom:i,filterTo:o}))}map(e){if(e.empty||this.isEmpty)return this;let n=[],r=[],i=-1;for(let s=0;s<this.chunk.length;s++){let a=this.chunkPos[s],l=this.chunk[s],c=e.touchesRange(a,a+l.length);if(c===!1)i=Math.max(i,l.maxPoint),n.push(l),r.push(e.mapPos(a));else if(c===!0){let{mapped:u,pos:d}=l.map(a,e);u&&(i=Math.max(i,u.maxPoint),n.push(u),r.push(d))}}let o=this.nextLayer.map(e);return n.length==0?o:new Oe(r,n,o||Oe.empty,i)}between(e,n,r){if(!this.isEmpty){for(let i=0;i<this.chunk.length;i++){let o=this.chunkPos[i],s=this.chunk[i];if(n>=o&&e<=o+s.length&&s.between(o,e-o,n-o,r)===!1)return}this.nextLayer.between(e,n,r)}}iter(e=0){return Tu.from([this]).goto(e)}get isEmpty(){return this.nextLayer==this}static iter(e,n=0){return Tu.from(e).goto(n)}static compare(e,n,r,i,o=-1){let s=e.filter(d=>d.maxPoint>0||!d.isEmpty&&d.maxPoint>=o),a=n.filter(d=>d.maxPoint>0||!d.isEmpty&&d.maxPoint>=o),l=Zw(s,a,r),c=new rc(s,l,o),u=new rc(a,l,o);r.iterGaps((d,f,h)=>Gw(c,d,u,f,h,i)),r.empty&&r.length==0&&Gw(c,0,u,0,0,i)}static eq(e,n,r=0,i){i==null&&(i=1e9-1);let o=e.filter(u=>!u.isEmpty&&n.indexOf(u)<0),s=n.filter(u=>!u.isEmpty&&e.indexOf(u)<0);if(o.length!=s.length)return!1;if(!o.length)return!0;let a=Zw(o,s),l=new rc(o,a,0).goto(r),c=new rc(s,a,0).goto(r);for(;;){if(l.to!=c.to||!wb(l.active,c.active)||l.point&&(!c.point||!l.point.eq(c.point)))return!1;if(l.to>i)return!0;l.next(),c.next()}}static spans(e,n,r,i,o=-1){let s=new rc(e,null,o).goto(n),a=n,l=s.openStart;for(;;){let c=Math.min(s.to,r);if(s.point){let u=s.activeForPoint(s.to),d=s.pointFrom<n?u.length+1:Math.min(u.length,l);i.point(a,c,s.point,u,d,s.pointRank),l=Math.min(s.openEnd(c),u.length)}else c>a&&(i.span(a,c,s.active,l),l=s.openEnd(c));if(s.to>r)return l+(s.point&&s.to>r?1:0);a=s.to,s.next()}}static of(e,n=!1){let r=new Ci;for(let i of e instanceof Ou?[e]:n?mZ(e):e)r.add(i.from,i.to,i.value);return r.finish()}}Oe.empty=new Oe([],[],null,-1);function mZ(t){if(t.length>1)for(let e=t[0],n=1;n<t.length;n++){let r=t[n];if(kb(e,r)>0)return t.slice().sort(kb);e=r}return t}Oe.empty.nextLayer=Oe.empty;class Ci{constructor(){this.chunks=[],this.chunkPos=[],this.chunkStart=-1,this.last=null,this.lastFrom=-1e9,this.lastTo=-1e9,this.from=[],this.to=[],this.value=[],this.maxPoint=-1,this.setMaxPoint=-1,this.nextLayer=null}finishChunk(e){this.chunks.push(new ux(this.from,this.to,this.value,this.maxPoint)),this.chunkPos.push(this.chunkStart),this.chunkStart=-1,this.setMaxPoint=Math.max(this.setMaxPoint,this.maxPoint),this.maxPoint=-1,e&&(this.from=[],this.to=[],this.value=[])}add(e,n,r){this.addInner(e,n,r)||(this.nextLayer||(this.nextLayer=new Ci)).add(e,n,r)}addInner(e,n,r){let i=e-this.lastTo||r.startSide-this.last.endSide;if(i<=0&&(e-this.lastFrom||r.startSide-this.last.startSide)<0)throw new Error("Ranges must be added sorted by `from` position and `startSide`");return i<0?!1:(this.from.length==250&&this.finishChunk(!0),this.chunkStart<0&&(this.chunkStart=e),this.from.push(e-this.chunkStart),this.to.push(n-this.chunkStart),this.last=r,this.lastFrom=e,this.lastTo=n,this.value.push(r),r.point&&(this.maxPoint=Math.max(this.maxPoint,n-e)),!0)}addChunk(e,n){if((e-this.lastTo||n.value[0].startSide-this.last.endSide)<0)return!1;this.from.length&&this.finishChunk(!0),this.setMaxPoint=Math.max(this.setMaxPoint,n.maxPoint),this.chunks.push(n),this.chunkPos.push(e);let r=n.value.length-1;return this.last=n.value[r],this.lastFrom=n.from[r]+e,this.lastTo=n.to[r]+e,!0}finish(){return this.finishInner(Oe.empty)}finishInner(e){if(this.from.length&&this.finishChunk(!1),this.chunks.length==0)return e;let n=Oe.create(this.chunkPos,this.chunks,this.nextLayer?this.nextLayer.finishInner(e):e,this.setMaxPoint);return this.from=null,n}}function Zw(t,e,n){let r=new Map;for(let o of t)for(let s=0;s<o.chunk.length;s++)o.chunk[s].maxPoint<=0&&r.set(o.chunk[s],o.chunkPos[s]);let i=new Set;for(let o of e)for(let s=0;s<o.chunk.length;s++){let a=r.get(o.chunk[s]);a!=null&&(n?n.mapPos(a):a)==o.chunkPos[s]&&!(n!=null&&n.touchesRange(a,a+o.chunk[s].length))&&i.add(o.chunk[s])}return i}class a3{constructor(e,n,r,i=0){this.layer=e,this.skip=n,this.minPoint=r,this.rank=i}get startSide(){return this.value?this.value.startSide:0}get endSide(){return this.value?this.value.endSide:0}goto(e,n=-1e9){return this.chunkIndex=this.rangeIndex=0,this.gotoInner(e,n,!1),this}gotoInner(e,n,r){for(;this.chunkIndex<this.layer.chunk.length;){let i=this.layer.chunk[this.chunkIndex];if(!(this.skip&&this.skip.has(i)||this.layer.chunkEnd(this.chunkIndex)<e||i.maxPoint<this.minPoint))break;this.chunkIndex++,r=!1}if(this.chunkIndex<this.layer.chunk.length){let i=this.layer.chunk[this.chunkIndex].findIndex(e-this.layer.chunkPos[this.chunkIndex],n,!0);(!r||this.rangeIndex<i)&&this.setRangeIndex(i)}this.next()}forward(e,n){(this.to-e||this.endSide-n)<0&&this.gotoInner(e,n,!0)}next(){for(;;)if(this.chunkIndex==this.layer.chunk.length){this.from=this.to=1e9,this.value=null;break}else{let e=this.layer.chunkPos[this.chunkIndex],n=this.layer.chunk[this.chunkIndex],r=e+n.from[this.rangeIndex];if(this.from=r,this.to=e+n.to[this.rangeIndex],this.value=n.value[this.rangeIndex],this.setRangeIndex(this.rangeIndex+1),this.minPoint<0||this.value.point&&this.to-this.from>=this.minPoint)break}}setRangeIndex(e){if(e==this.layer.chunk[this.chunkIndex].value.length){if(this.chunkIndex++,this.skip)for(;this.chunkIndex<this.layer.chunk.length&&this.skip.has(this.layer.chunk[this.chunkIndex]);)this.chunkIndex++;this.rangeIndex=0}else this.rangeIndex=e}nextChunk(){this.chunkIndex++,this.rangeIndex=0,this.next()}compare(e){return this.from-e.from||this.startSide-e.startSide||this.rank-e.rank||this.to-e.to||this.endSide-e.endSide}}class Tu{constructor(e){this.heap=e}static from(e,n=null,r=-1){let i=[];for(let o=0;o<e.length;o++)for(let s=e[o];!s.isEmpty;s=s.nextLayer)s.maxPoint>=r&&i.push(new a3(s,n,r,o));return i.length==1?i[0]:new Tu(i)}get startSide(){return this.value?this.value.startSide:0}goto(e,n=-1e9){for(let r of this.heap)r.goto(e,n);for(let r=this.heap.length>>1;r>=0;r--)o0(this.heap,r);return this.next(),this}forward(e,n){for(let r of this.heap)r.forward(e,n);for(let r=this.heap.length>>1;r>=0;r--)o0(this.heap,r);(this.to-e||this.value.endSide-n)<0&&this.next()}next(){if(this.heap.length==0)this.from=this.to=1e9,this.value=null,this.rank=-1;else{let e=this.heap[0];this.from=e.from,this.to=e.to,this.value=e.value,this.rank=e.rank,e.value&&e.next(),o0(this.heap,0)}}}function o0(t,e){for(let n=t[e];;){let r=(e<<1)+1;if(r>=t.length)break;let i=t[r];if(r+1<t.length&&i.compare(t[r+1])>=0&&(i=t[r+1],r++),n.compare(i)<0)break;t[r]=n,t[e]=i,e=r}}class rc{constructor(e,n,r){this.minPoint=r,this.active=[],this.activeTo=[],this.activeRank=[],this.minActive=-1,this.point=null,this.pointFrom=0,this.pointRank=0,this.to=-1e9,this.endSide=0,this.openStart=-1,this.cursor=Tu.from(e,n,r)}goto(e,n=-1e9){return this.cursor.goto(e,n),this.active.length=this.activeTo.length=this.activeRank.length=0,this.minActive=-1,this.to=e,this.endSide=n,this.openStart=-1,this.next(),this}forward(e,n){for(;this.minActive>-1&&(this.activeTo[this.minActive]-e||this.active[this.minActive].endSide-n)<0;)this.removeActive(this.minActive);this.cursor.forward(e,n)}removeActive(e){Jd(this.active,e),Jd(this.activeTo,e),Jd(this.activeRank,e),this.minActive=Ww(this.active,this.activeTo)}addActive(e){let n=0,{value:r,to:i,rank:o}=this.cursor;for(;n<this.activeRank.length&&this.activeRank[n]<=o;)n++;_d(this.active,n,r),_d(this.activeTo,n,i),_d(this.activeRank,n,o),e&&_d(e,n,this.cursor.from),this.minActive=Ww(this.active,this.activeTo)}next(){let e=this.to,n=this.point;this.point=null;let r=this.openStart<0?[]:null;for(;;){let i=this.minActive;if(i>-1&&(this.activeTo[i]-this.cursor.from||this.active[i].endSide-this.cursor.startSide)<0){if(this.activeTo[i]>e){this.to=this.activeTo[i],this.endSide=this.active[i].endSide;break}this.removeActive(i),r&&Jd(r,i)}else if(this.cursor.value)if(this.cursor.from>e){this.to=this.cursor.from,this.endSide=this.cursor.startSide;break}else{let o=this.cursor.value;if(!o.point)this.addActive(r),this.cursor.next();else if(n&&this.cursor.to==this.to&&this.cursor.from<this.cursor.to)this.cursor.next();else{this.point=o,this.pointFrom=this.cursor.from,this.pointRank=this.cursor.rank,this.to=this.cursor.to,this.endSide=o.endSide,this.cursor.next(),this.forward(this.to,this.endSide);break}}else{this.to=this.endSide=1e9;break}}if(r){this.openStart=0;for(let i=r.length-1;i>=0&&r[i]<e;i--)this.openStart++}}activeForPoint(e){if(!this.active.length)return this.active;let n=[];for(let r=this.active.length-1;r>=0&&!(this.activeRank[r]<this.pointRank);r--)(this.activeTo[r]>e||this.activeTo[r]==e&&this.active[r].endSide>=this.point.endSide)&&n.push(this.active[r]);return n.reverse()}openEnd(e){let n=0;for(let r=this.activeTo.length-1;r>=0&&this.activeTo[r]>e;r--)n++;return n}}function Gw(t,e,n,r,i,o){t.goto(e),n.goto(r);let s=r+i,a=r,l=r-e;for(;;){let c=t.to+l-n.to||t.endSide-n.endSide,u=c<0?t.to+l:n.to,d=Math.min(u,s);if(t.point||n.point?t.point&&n.point&&(t.point==n.point||t.point.eq(n.point))&&wb(t.activeForPoint(t.to+l),n.activeForPoint(n.to))||o.comparePoint(a,d,t.point,n.point):d>a&&!wb(t.active,n.active)&&o.compareRange(a,d,t.active,n.active),u>s)break;a=u,c<=0&&t.next(),c>=0&&n.next()}}function wb(t,e){if(t.length!=e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!=e[n]&&!t[n].eq(e[n]))return!1;return!0}function Jd(t,e){for(let n=e,r=t.length-1;n<r;n++)t[n]=t[n+1];t.pop()}function _d(t,e,n){for(let r=t.length-1;r>=e;r--)t[r+1]=t[r];t[e]=n}function Ww(t,e){let n=-1,r=1e9;for(let i=0;i<e.length;i++)(e[i]-r||t[i].endSide-t[n].endSide)<0&&(n=i,r=e[i]);return n}function ld(t,e,n=t.length){let r=0;for(let i=0;i<n;)t.charCodeAt(i)==9?(r+=e-r%e,i++):(r++,i=qt(t,i));return r}function Ob(t,e,n,r){for(let i=0,o=0;;){if(o>=e)return i;if(i==t.length)break;o+=t.charCodeAt(i)==9?n-o%n:1,i=qt(t,i)}return r===!0?-1:t.length}const Tb="\u037C",Yw=typeof Symbol>"u"?"__"+Tb:Symbol.for(Tb),Pb=typeof Symbol>"u"?"__styleSet"+Math.floor(Math.random()*1e8):Symbol("styleSet"),Fw=typeof globalThis<"u"?globalThis:typeof window<"u"?window:{};class Oo{constructor(e,n){this.rules=[];let{finish:r}=n||{};function i(s){return/^@/.test(s)?[s]:s.split(/,\s*/)}function o(s,a,l,c){let u=[],d=/^@(\w+)\b/.exec(s[0]),f=d&&d[1]=="keyframes";if(d&&a==null)return l.push(s[0]+";");for(let h in a){let p=a[h];if(/&/.test(h))o(h.split(/,\s*/).map(m=>s.map(b=>m.replace(/&/,b))).reduce((m,b)=>m.concat(b)),p,l);else if(p&&typeof p=="object"){if(!d)throw new RangeError("The value of a property ("+h+") should be a primitive value.");o(i(h),p,u,f)}else p!=null&&u.push(h.replace(/_.*/,"").replace(/[A-Z]/g,m=>"-"+m.toLowerCase())+": "+p+";")}(u.length||f)&&l.push((r&&!d&&!c?s.map(r):s).join(", ")+" {"+u.join(" ")+"}")}for(let s in e)o(i(s),e[s],this.rules)}getRules(){return this.rules.join(`
`)}static newName(){let e=Fw[Yw]||1;return Fw[Yw]=e+1,Tb+e.toString(36)}static mount(e,n){(e[Pb]||new gZ(e)).mount(Array.isArray(n)?n:[n])}}let $d=null;class gZ{constructor(e){if(!e.head&&e.adoptedStyleSheets&&typeof CSSStyleSheet<"u"){if($d)return e.adoptedStyleSheets=[$d.sheet].concat(e.adoptedStyleSheets),e[Pb]=$d;this.sheet=new CSSStyleSheet,e.adoptedStyleSheets=[this.sheet].concat(e.adoptedStyleSheets),$d=this}else{this.styleTag=(e.ownerDocument||e).createElement("style");let n=e.head||e;n.insertBefore(this.styleTag,n.firstChild)}this.modules=[],e[Pb]=this}mount(e){let n=this.sheet,r=0,i=0;for(let o=0;o<e.length;o++){let s=e[o],a=this.modules.indexOf(s);if(a<i&&a>-1&&(this.modules.splice(a,1),i--,a=-1),a==-1){if(this.modules.splice(i++,0,s),n)for(let l=0;l<s.rules.length;l++)n.insertRule(s.rules[l],r++)}else{for(;i<a;)r+=this.modules[i++].rules.length;r+=s.rules.length,i++}}if(!n){let o="";for(let s=0;s<this.modules.length;s++)o+=this.modules[s].getRules()+`
`;this.styleTag.textContent=o}}}var To={8:"Backspace",9:"Tab",10:"Enter",12:"NumLock",13:"Enter",16:"Shift",17:"Control",18:"Alt",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",44:"PrintScreen",45:"Insert",46:"Delete",59:";",61:"=",91:"Meta",92:"Meta",106:"*",107:"+",108:",",109:"-",110:".",111:"/",144:"NumLock",145:"ScrollLock",160:"Shift",161:"Shift",162:"Control",163:"Control",164:"Alt",165:"Alt",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},Pu={48:")",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",59:":",61:"+",173:"_",186:":",187:"+",188:"<",189:"_",190:">",191:"?",192:"~",219:"{",220:"|",221:"}",222:'"'},Hw=typeof navigator<"u"&&/Chrome\/(\d+)/.exec(navigator.userAgent);typeof navigator<"u"&&/Gecko\/\d+/.test(navigator.userAgent);var vZ=typeof navigator<"u"&&/Mac/.test(navigator.platform),bZ=typeof navigator<"u"&&/MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent),yZ=vZ||Hw&&+Hw[1]<57;for(var Rt=0;Rt<10;Rt++)To[48+Rt]=To[96+Rt]=String(Rt);for(var Rt=1;Rt<=24;Rt++)To[Rt+111]="F"+Rt;for(var Rt=65;Rt<=90;Rt++)To[Rt]=String.fromCharCode(Rt+32),Pu[Rt]=String.fromCharCode(Rt);for(var s0 in To)Pu.hasOwnProperty(s0)||(Pu[s0]=To[s0]);function xZ(t){var e=yZ&&(t.ctrlKey||t.altKey||t.metaKey)||bZ&&t.shiftKey&&t.key&&t.key.length==1||t.key=="Unidentified",n=!e&&t.key||(t.shiftKey?Pu:To)[t.keyCode]||t.key||"Unidentified";return n=="Esc"&&(n="Escape"),n=="Del"&&(n="Delete"),n=="Left"&&(n="ArrowLeft"),n=="Up"&&(n="ArrowUp"),n=="Right"&&(n="ArrowRight"),n=="Down"&&(n="ArrowDown"),n}function np(t){let e;return t.nodeType==11?e=t.getSelection?t:t.ownerDocument:e=t,e.getSelection()}function dl(t,e){return e?t==e||t.contains(e.nodeType!=1?e.parentNode:e):!1}function SZ(t){let e=t.activeElement;for(;e&&e.shadowRoot;)e=e.shadowRoot.activeElement;return e}function oh(t,e){if(!e.anchorNode)return!1;try{return dl(t,e.anchorNode)}catch{return!1}}function Cu(t){return t.nodeType==3?fl(t,0,t.nodeValue.length).getClientRects():t.nodeType==1?t.getClientRects():[]}function rp(t,e,n,r){return n?jw(t,e,n,r,-1)||jw(t,e,n,r,1):!1}function ip(t){for(var e=0;;e++)if(t=t.previousSibling,!t)return e}function jw(t,e,n,r,i){for(;;){if(t==n&&e==r)return!0;if(e==(i<0?0:Mu(t))){if(t.nodeName=="DIV")return!1;let o=t.parentNode;if(!o||o.nodeType!=1)return!1;e=ip(t)+(i<0?0:1),t=o}else if(t.nodeType==1){if(t=t.childNodes[e+(i<0?-1:0)],t.nodeType==1&&t.contentEditable=="false")return!1;e=i<0?Mu(t):0}else return!1}}function Mu(t){return t.nodeType==3?t.nodeValue.length:t.childNodes.length}const l3={left:0,right:0,top:0,bottom:0};function dx(t,e){let n=e?t.left:t.right;return{left:n,right:n,top:t.top,bottom:t.bottom}}function kZ(t){return{left:0,right:t.innerWidth,top:0,bottom:t.innerHeight}}function wZ(t,e,n,r,i,o,s,a){let l=t.ownerDocument,c=l.defaultView||window;for(let u=t;u;)if(u.nodeType==1){let d,f=u==l.body;if(f)d=kZ(c);else{if(u.scrollHeight<=u.clientHeight&&u.scrollWidth<=u.clientWidth){u=u.assignedSlot||u.parentNode;continue}let m=u.getBoundingClientRect();d={left:m.left,right:m.left+u.clientWidth,top:m.top,bottom:m.top+u.clientHeight}}let h=0,p=0;if(i=="nearest")e.top<d.top?(p=-(d.top-e.top+s),n>0&&e.bottom>d.bottom+p&&(p=e.bottom-d.bottom+p+s)):e.bottom>d.bottom&&(p=e.bottom-d.bottom+s,n<0&&e.top-p<d.top&&(p=-(d.top+p-e.top+s)));else{let m=e.bottom-e.top,b=d.bottom-d.top;p=(i=="center"&&m<=b?e.top+m/2-b/2:i=="start"||i=="center"&&n<0?e.top-s:e.bottom-b+s)-d.top}if(r=="nearest"?e.left<d.left?(h=-(d.left-e.left+o),n>0&&e.right>d.right+h&&(h=e.right-d.right+h+o)):e.right>d.right&&(h=e.right-d.right+o,n<0&&e.left<d.left+h&&(h=-(d.left+h-e.left+o))):h=(r=="center"?e.left+(e.right-e.left)/2-(d.right-d.left)/2:r=="start"==a?e.left-o:e.right-(d.right-d.left)+o)-d.left,h||p)if(f)c.scrollBy(h,p);else{let m=0,b=0;if(p){let g=u.scrollTop;u.scrollTop+=p,b=u.scrollTop-g}if(h){let g=u.scrollLeft;u.scrollLeft+=h,m=u.scrollLeft-g}e={left:e.left-m,top:e.top-b,right:e.right-m,bottom:e.bottom-b},m&&Math.abs(m-h)<1&&(r="nearest"),b&&Math.abs(b-p)<1&&(i="nearest")}if(f)break;u=u.assignedSlot||u.parentNode}else if(u.nodeType==11)u=u.host;else break}class OZ{constructor(){this.anchorNode=null,this.anchorOffset=0,this.focusNode=null,this.focusOffset=0}eq(e){return this.anchorNode==e.anchorNode&&this.anchorOffset==e.anchorOffset&&this.focusNode==e.focusNode&&this.focusOffset==e.focusOffset}setRange(e){this.set(e.anchorNode,e.anchorOffset,e.focusNode,e.focusOffset)}set(e,n,r,i){this.anchorNode=e,this.anchorOffset=n,this.focusNode=r,this.focusOffset=i}}let ia=null;function c3(t){if(t.setActive)return t.setActive();if(ia)return t.focus(ia);let e=[];for(let n=t;n&&(e.push(n,n.scrollTop,n.scrollLeft),n!=n.ownerDocument);n=n.parentNode);if(t.focus(ia==null?{get preventScroll(){return ia={preventScroll:!0},!0}}:void 0),!ia){ia=!1;for(let n=0;n<e.length;){let r=e[n++],i=e[n++],o=e[n++];r.scrollTop!=i&&(r.scrollTop=i),r.scrollLeft!=o&&(r.scrollLeft=o)}}}let Dw;function fl(t,e,n=e){let r=Dw||(Dw=document.createRange());return r.setEnd(t,n),r.setStart(t,e),r}function Fa(t,e,n){let r={key:e,code:e,keyCode:n,which:n,cancelable:!0},i=new KeyboardEvent("keydown",r);i.synthetic=!0,t.dispatchEvent(i);let o=new KeyboardEvent("keyup",r);return o.synthetic=!0,t.dispatchEvent(o),i.defaultPrevented||o.defaultPrevented}function TZ(t){for(;t;){if(t&&(t.nodeType==9||t.nodeType==11&&t.host))return t;t=t.assignedSlot||t.parentNode}return null}function u3(t){for(;t.attributes.length;)t.removeAttributeNode(t.attributes[0])}function PZ(t,e){let n=e.focusNode,r=e.focusOffset;if(!n||e.anchorNode!=n||e.anchorOffset!=r)return!1;for(;;)if(r){if(n.nodeType!=1)return!1;let i=n.childNodes[r-1];i.contentEditable=="false"?r--:(n=i,r=Mu(n))}else{if(n==t)return!0;r=ip(n),n=n.parentNode}}class Yt{constructor(e,n,r=!0){this.node=e,this.offset=n,this.precise=r}static before(e,n){return new Yt(e.parentNode,ip(e),n)}static after(e,n){return new Yt(e.parentNode,ip(e)+1,n)}}const fx=[];class Ze{constructor(){this.parent=null,this.dom=null,this.dirty=2}get editorView(){if(!this.parent)throw new Error("Accessing view in orphan content view");return this.parent.editorView}get overrideDOMText(){return null}get posAtStart(){return this.parent?this.parent.posBefore(this):0}get posAtEnd(){return this.posAtStart+this.length}posBefore(e){let n=this.posAtStart;for(let r of this.children){if(r==e)return n;n+=r.length+r.breakAfter}throw new RangeError("Invalid child in posBefore")}posAfter(e){return this.posBefore(e)+e.length}coordsAt(e,n){return null}sync(e){if(this.dirty&2){let n=this.dom,r=null,i;for(let o of this.children){if(o.dirty){if(!o.dom&&(i=r?r.nextSibling:n.firstChild)){let s=Ze.get(i);(!s||!s.parent&&s.canReuseDOM(o))&&o.reuseDOM(i)}o.sync(e),o.dirty=0}if(i=r?r.nextSibling:n.firstChild,e&&!e.written&&e.node==n&&i!=o.dom&&(e.written=!0),o.dom.parentNode==n)for(;i&&i!=o.dom;)i=Uw(i);else n.insertBefore(o.dom,i);r=o.dom}for(i=r?r.nextSibling:n.firstChild,i&&e&&e.node==n&&(e.written=!0);i;)i=Uw(i)}else if(this.dirty&1)for(let n of this.children)n.dirty&&(n.sync(e),n.dirty=0)}reuseDOM(e){}localPosFromDOM(e,n){let r;if(e==this.dom)r=this.dom.childNodes[n];else{let i=Mu(e)==0?0:n==0?-1:1;for(;;){let o=e.parentNode;if(o==this.dom)break;i==0&&o.firstChild!=o.lastChild&&(e==o.firstChild?i=-1:i=1),e=o}i<0?r=e:r=e.nextSibling}if(r==this.dom.firstChild)return 0;for(;r&&!Ze.get(r);)r=r.nextSibling;if(!r)return this.length;for(let i=0,o=0;;i++){let s=this.children[i];if(s.dom==r)return o;o+=s.length+s.breakAfter}}domBoundsAround(e,n,r=0){let i=-1,o=-1,s=-1,a=-1;for(let l=0,c=r,u=r;l<this.children.length;l++){let d=this.children[l],f=c+d.length;if(c<e&&f>n)return d.domBoundsAround(e,n,c);if(f>=e&&i==-1&&(i=l,o=c),c>n&&d.dom.parentNode==this.dom){s=l,a=u;break}u=f,c=f+d.breakAfter}return{from:o,to:a<0?r+this.length:a,startDOM:(i?this.children[i-1].dom.nextSibling:null)||this.dom.firstChild,endDOM:s<this.children.length&&s>=0?this.children[s].dom:null}}markDirty(e=!1){this.dirty|=2,this.markParentsDirty(e)}markParentsDirty(e){for(let n=this.parent;n;n=n.parent){if(e&&(n.dirty|=2),n.dirty&1)return;n.dirty|=1,e=!1}}setParent(e){this.parent!=e&&(this.parent=e,this.dirty&&this.markParentsDirty(!0))}setDOM(e){this.dom&&(this.dom.cmView=null),this.dom=e,e.cmView=this}get rootView(){for(let e=this;;){let n=e.parent;if(!n)return e;e=n}}replaceChildren(e,n,r=fx){this.markDirty();for(let i=e;i<n;i++){let o=this.children[i];o.parent==this&&o.destroy()}this.children.splice(e,n-e,...r);for(let i=0;i<r.length;i++)r[i].setParent(this)}ignoreMutation(e){return!1}ignoreEvent(e){return!1}childCursor(e=this.length){return new d3(this.children,e,this.children.length)}childPos(e,n=1){return this.childCursor().findPos(e,n)}toString(){let e=this.constructor.name.replace("View","");return e+(this.children.length?"("+this.children.join()+")":this.length?"["+(e=="Text"?this.text:this.length)+"]":"")+(this.breakAfter?"#":"")}static get(e){return e.cmView}get isEditable(){return!0}merge(e,n,r,i,o,s){return!1}become(e){return!1}canReuseDOM(e){return e.constructor==this.constructor}getSide(){return 0}destroy(){this.parent=null}}Ze.prototype.breakAfter=0;function Uw(t){let e=t.nextSibling;return t.parentNode.removeChild(t),e}class d3{constructor(e,n,r){this.children=e,this.pos=n,this.i=r,this.off=0}findPos(e,n=1){for(;;){if(e>this.pos||e==this.pos&&(n>0||this.i==0||this.children[this.i-1].breakAfter))return this.off=e-this.pos,this;let r=this.children[--this.i];this.pos-=r.length+r.breakAfter}}}function f3(t,e,n,r,i,o,s,a,l){let{children:c}=t,u=c.length?c[e]:null,d=o.length?o[o.length-1]:null,f=d?d.breakAfter:s;if(!(e==r&&u&&!s&&!f&&o.length<2&&u.merge(n,i,o.length?d:null,n==0,a,l))){if(r<c.length){let h=c[r];h&&i<h.length?(e==r&&(h=h.split(i),i=0),!f&&d&&h.merge(0,i,d,!0,0,l)?o[o.length-1]=h:(i&&h.merge(0,i,null,!1,0,l),o.push(h))):h!=null&&h.breakAfter&&(d?d.breakAfter=1:s=1),r++}for(u&&(u.breakAfter=s,n>0&&(!s&&o.length&&u.merge(n,u.length,o[0],!1,a,0)?u.breakAfter=o.shift().breakAfter:(n<u.length||u.children.length&&u.children[u.children.length-1].length==0)&&u.merge(n,u.length,null,!1,a,0),e++));e<r&&o.length;)if(c[r-1].become(o[o.length-1]))r--,o.pop(),l=o.length?0:a;else if(c[e].become(o[0]))e++,o.shift(),a=o.length?0:l;else break;!o.length&&e&&r<c.length&&!c[e-1].breakAfter&&c[r].merge(0,0,c[e-1],!1,a,l)&&e--,(e<r||o.length)&&t.replaceChildren(e,r,o)}}function h3(t,e,n,r,i,o){let s=t.childCursor(),{i:a,off:l}=s.findPos(n,1),{i:c,off:u}=s.findPos(e,-1),d=e-n;for(let f of r)d+=f.length;t.length+=d,f3(t,c,u,a,l,r,0,i,o)}let On=typeof navigator<"u"?navigator:{userAgent:"",vendor:"",platform:""},Cb=typeof document<"u"?document:{documentElement:{style:{}}};const Mb=/Edge\/(\d+)/.exec(On.userAgent),p3=/MSIE \d/.test(On.userAgent),Rb=/Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(On.userAgent),km=!!(p3||Rb||Mb),Kw=!km&&/gecko\/(\d+)/i.test(On.userAgent),a0=!km&&/Chrome\/(\d+)/.exec(On.userAgent),qw="webkitFontSmoothing"in Cb.documentElement.style,m3=!km&&/Apple Computer/.test(On.vendor),Qw=m3&&(/Mobile\/\w+/.test(On.userAgent)||On.maxTouchPoints>2);var _={mac:Qw||/Mac/.test(On.platform),windows:/Win/.test(On.platform),linux:/Linux|X11/.test(On.platform),ie:km,ie_version:p3?Cb.documentMode||6:Rb?+Rb[1]:Mb?+Mb[1]:0,gecko:Kw,gecko_version:Kw?+(/Firefox\/(\d+)/.exec(On.userAgent)||[0,0])[1]:0,chrome:!!a0,chrome_version:a0?+a0[1]:0,ios:Qw,android:/Android\b/.test(On.userAgent),webkit:qw,safari:m3,webkit_version:qw?+(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent)||[0,0])[1]:0,tabSize:Cb.documentElement.style.tabSize!=null?"tab-size":"-moz-tab-size"};const CZ=256;class Po extends Ze{constructor(e){super(),this.text=e}get length(){return this.text.length}createDOM(e){this.setDOM(e||document.createTextNode(this.text))}sync(e){this.dom||this.createDOM(),this.dom.nodeValue!=this.text&&(e&&e.node==this.dom&&(e.written=!0),this.dom.nodeValue=this.text)}reuseDOM(e){e.nodeType==3&&this.createDOM(e)}merge(e,n,r){return r&&(!(r instanceof Po)||this.length-(n-e)+r.length>CZ)?!1:(this.text=this.text.slice(0,e)+(r?r.text:"")+this.text.slice(n),this.markDirty(),!0)}split(e){let n=new Po(this.text.slice(e));return this.text=this.text.slice(0,e),this.markDirty(),n}localPosFromDOM(e,n){return e==this.dom?n:n?this.text.length:0}domAtPos(e){return new Yt(this.dom,e)}domBoundsAround(e,n,r){return{from:r,to:r+this.length,startDOM:this.dom,endDOM:this.dom.nextSibling}}coordsAt(e,n){return Ib(this.dom,e,n)}}class $r extends Ze{constructor(e,n=[],r=0){super(),this.mark=e,this.children=n,this.length=r;for(let i of n)i.setParent(this)}setAttrs(e){if(u3(e),this.mark.class&&(e.className=this.mark.class),this.mark.attrs)for(let n in this.mark.attrs)e.setAttribute(n,this.mark.attrs[n]);return e}reuseDOM(e){e.nodeName==this.mark.tagName.toUpperCase()&&(this.setDOM(e),this.dirty|=6)}sync(e){this.dom?this.dirty&4&&this.setAttrs(this.dom):this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))),super.sync(e)}merge(e,n,r,i,o,s){return r&&(!(r instanceof $r&&r.mark.eq(this.mark))||e&&o<=0||n<this.length&&s<=0)?!1:(h3(this,e,n,r?r.children:[],o-1,s-1),this.markDirty(),!0)}split(e){let n=[],r=0,i=-1,o=0;for(let a of this.children){let l=r+a.length;l>e&&n.push(r<e?a.split(e-r):a),i<0&&r>=e&&(i=o),r=l,o++}let s=this.length-e;return this.length=e,i>-1&&(this.children.length=i,this.markDirty()),new $r(this.mark,n,s)}domAtPos(e){return b3(this,e)}coordsAt(e,n){return x3(this,e,n)}}function Ib(t,e,n){let r=t.nodeValue.length;e>r&&(e=r);let i=e,o=e,s=0;e==0&&n<0||e==r&&n>=0?_.chrome||_.gecko||(e?(i--,s=1):o<r&&(o++,s=-1)):n<0?i--:o<r&&o++;let a=fl(t,i,o).getClientRects();if(!a.length)return l3;let l=a[(s?s<0:n>=0)?0:a.length-1];return _.safari&&!s&&l.width==0&&(l=Array.prototype.find.call(a,c=>c.width)||l),s?dx(l,s<0):l||null}class no extends Ze{constructor(e,n,r){super(),this.widget=e,this.length=n,this.side=r,this.prevWidget=null}static create(e,n,r){return new(e.customView||no)(e,n,r)}split(e){let n=no.create(this.widget,this.length-e,this.side);return this.length-=e,n}sync(){(!this.dom||!this.widget.updateDOM(this.dom))&&(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}getSide(){return this.side}merge(e,n,r,i,o,s){return r&&(!(r instanceof no)||!this.widget.compare(r.widget)||e>0&&o<=0||n<this.length&&s<=0)?!1:(this.length=e+(r?r.length:0)+(this.length-n),!0)}become(e){return e.length==this.length&&e instanceof no&&e.side==this.side&&this.widget.constructor==e.widget.constructor?(this.widget.eq(e.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=e.widget,!0):!1}ignoreMutation(){return!0}ignoreEvent(e){return this.widget.ignoreEvent(e)}get overrideDOMText(){if(this.length==0)return Se.empty;let e=this;for(;e.parent;)e=e.parent;let n=e.editorView,r=n&&n.state.doc,i=this.posAtStart;return r?r.slice(i,i+this.length):Se.empty}domAtPos(e){return e==0?Yt.before(this.dom):Yt.after(this.dom,e==this.length)}domBoundsAround(){return null}coordsAt(e,n){let r=this.dom.getClientRects(),i=null;if(!r.length)return l3;for(let o=e>0?r.length-1:0;i=r[o],!(e>0?o==0:o==r.length-1||i.top<i.bottom);o+=e>0?-1:1);return this.length?i:dx(i,this.side>0)}get isEditable(){return!1}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class g3 extends no{domAtPos(e){let{topView:n,text:r}=this.widget;return n?zb(e,0,n,r,(i,o)=>i.domAtPos(o),i=>new Yt(r,Math.min(i,r.nodeValue.length))):new Yt(r,Math.min(e,r.nodeValue.length))}sync(){this.setDOM(this.widget.toDOM())}localPosFromDOM(e,n){let{topView:r,text:i}=this.widget;return r?v3(e,n,r,i):Math.min(n,this.length)}ignoreMutation(){return!1}get overrideDOMText(){return null}coordsAt(e,n){let{topView:r,text:i}=this.widget;return r?zb(e,n,r,i,(o,s,a)=>o.coordsAt(s,a),(o,s)=>Ib(i,o,s)):Ib(i,e,n)}destroy(){var e;super.destroy(),(e=this.widget.topView)===null||e===void 0||e.destroy()}get isEditable(){return!0}canReuseDOM(){return!0}}function zb(t,e,n,r,i,o){if(n instanceof $r){for(let s=n.dom.firstChild;s;s=s.nextSibling){let a=Ze.get(s);if(!a)return o(t,e);let l=dl(s,r),c=a.length+(l?r.nodeValue.length:0);if(t<c||t==c&&a.getSide()<=0)return l?zb(t,e,a,r,i,o):i(a,t,e);t-=c}return i(n,n.length,-1)}else return n.dom==r?o(t,e):i(n,t,e)}function v3(t,e,n,r){if(n instanceof $r)for(let i of n.children){let o=0,s=dl(i.dom,r);if(dl(i.dom,t))return o+(s?v3(t,e,i,r):i.localPosFromDOM(t,e));o+=s?r.nodeValue.length:i.length}else if(n.dom==r)return Math.min(e,r.nodeValue.length);return n.localPosFromDOM(t,e)}class hl extends Ze{constructor(e){super(),this.side=e}get length(){return 0}merge(){return!1}become(e){return e instanceof hl&&e.side==this.side}split(){return new hl(this.side)}sync(){if(!this.dom){let e=document.createElement("img");e.className="cm-widgetBuffer",e.setAttribute("aria-hidden","true"),this.setDOM(e)}}getSide(){return this.side}domAtPos(e){return Yt.before(this.dom)}localPosFromDOM(){return 0}domBoundsAround(){return null}coordsAt(e){let n=this.dom.getBoundingClientRect(),r=MZ(this,this.side>0?-1:1);return r&&r.top<n.bottom&&r.bottom>n.top?{left:n.left,right:n.right,top:r.top,bottom:r.bottom}:n}get overrideDOMText(){return Se.empty}}Po.prototype.children=no.prototype.children=hl.prototype.children=fx;function MZ(t,e){let n=t.parent,r=n?n.children.indexOf(t):-1;for(;n&&r>=0;)if(e<0?r>0:r<n.children.length){let i=n.children[r+e];if(i instanceof Po){let o=i.coordsAt(e<0?i.length:0,e);if(o)return o}r+=e}else if(n instanceof $r&&n.parent)r=n.parent.children.indexOf(n)+(e<0?0:1),n=n.parent;else{let i=n.dom.lastChild;if(i&&i.nodeName=="BR")return i.getClientRects()[0];break}}function b3(t,e){let n=t.dom,{children:r}=t,i=0;for(let o=0;i<r.length;i++){let s=r[i],a=o+s.length;if(!(a==o&&s.getSide()<=0)){if(e>o&&e<a&&s.dom.parentNode==n)return s.domAtPos(e-o);if(e<=o)break;o=a}}for(let o=i;o>0;o--){let s=r[o-1];if(s.dom.parentNode==n)return s.domAtPos(s.length)}for(let o=i;o<r.length;o++){let s=r[o];if(s.dom.parentNode==n)return s.domAtPos(0)}return new Yt(n,0)}function y3(t,e,n){let r,{children:i}=t;n>0&&e instanceof $r&&i.length&&(r=i[i.length-1])instanceof $r&&r.mark.eq(e.mark)?y3(r,e.children[0],n-1):(i.push(e),e.setParent(t)),t.length+=e.length}function x3(t,e,n){let r=null,i=-1,o=null,s=-1;function a(c,u){for(let d=0,f=0;d<c.children.length&&f<=u;d++){let h=c.children[d],p=f+h.length;p>=u&&(h.children.length?a(h,u-f):!o&&(p>u||f==p&&h.getSide()>0)?(o=h,s=u-f):(f<u||f==p&&h.getSide()<0)&&(r=h,i=u-f)),f=p}}a(t,e);let l=(n<0?r:o)||r||o;return l?l.coordsAt(Math.max(0,l==r?i:s),n):RZ(t)}function RZ(t){let e=t.dom.lastChild;if(!e)return t.dom.getBoundingClientRect();let n=Cu(e);return n[n.length-1]||null}function Eb(t,e){for(let n in t)n=="class"&&e.class?e.class+=" "+t.class:n=="style"&&e.style?e.style+=";"+t.style:e[n]=t[n];return e}function hx(t,e){if(t==e)return!0;if(!t||!e)return!1;let n=Object.keys(t),r=Object.keys(e);if(n.length!=r.length)return!1;for(let i of n)if(r.indexOf(i)==-1||t[i]!==e[i])return!1;return!0}function Nb(t,e,n){let r=null;if(e)for(let i in e)n&&i in n||t.removeAttribute(r=i);if(n)for(let i in n)e&&e[i]==n[i]||t.setAttribute(r=i,n[i]);return!!r}class Ni{eq(e){return!1}updateDOM(e){return!1}compare(e){return this==e||this.constructor==e.constructor&&this.eq(e)}get estimatedHeight(){return-1}ignoreEvent(e){return!0}get customView(){return null}destroy(e){}}var Ve=function(t){return t[t.Text=0]="Text",t[t.WidgetBefore=1]="WidgetBefore",t[t.WidgetAfter=2]="WidgetAfter",t[t.WidgetRange=3]="WidgetRange",t}(Ve||(Ve={}));class F extends Es{constructor(e,n,r,i){super(),this.startSide=e,this.endSide=n,this.widget=r,this.spec=i}get heightRelevant(){return!1}static mark(e){return new wm(e)}static widget(e){let n=e.side||0,r=!!e.block;return n+=r?n>0?3e8:-4e8:n>0?1e8:-1e8,new Ns(e,n,n,r,e.widget||null,!1)}static replace(e){let n=!!e.block,r,i;if(e.isBlockGap)r=-5e8,i=4e8;else{let{start:o,end:s}=S3(e,n);r=(o?n?-3e8:-1:5e8)-1,i=(s?n?2e8:1:-6e8)+1}return new Ns(e,r,i,n,e.widget||null,!0)}static line(e){return new cd(e)}static set(e,n=!1){return Oe.of(e,n)}hasHeight(){return this.widget?this.widget.estimatedHeight>-1:!1}}F.none=Oe.empty;class wm extends F{constructor(e){let{start:n,end:r}=S3(e);super(n?-1:5e8,r?1:-6e8,null,e),this.tagName=e.tagName||"span",this.class=e.class||"",this.attrs=e.attributes||null}eq(e){return this==e||e instanceof wm&&this.tagName==e.tagName&&this.class==e.class&&hx(this.attrs,e.attrs)}range(e,n=e){if(e>=n)throw new RangeError("Mark decorations may not be empty");return super.range(e,n)}}wm.prototype.point=!1;class cd extends F{constructor(e){super(-2e8,-2e8,null,e)}eq(e){return e instanceof cd&&hx(this.spec.attributes,e.spec.attributes)}range(e,n=e){if(n!=e)throw new RangeError("Line decoration ranges must be zero-length");return super.range(e,n)}}cd.prototype.mapMode=Kt.TrackBefore;cd.prototype.point=!0;class Ns extends F{constructor(e,n,r,i,o,s){super(n,r,o,e),this.block=i,this.isReplace=s,this.mapMode=i?n<=0?Kt.TrackBefore:Kt.TrackAfter:Kt.TrackDel}get type(){return this.startSide<this.endSide?Ve.WidgetRange:this.startSide<=0?Ve.WidgetBefore:Ve.WidgetAfter}get heightRelevant(){return this.block||!!this.widget&&this.widget.estimatedHeight>=5}eq(e){return e instanceof Ns&&IZ(this.widget,e.widget)&&this.block==e.block&&this.startSide==e.startSide&&this.endSide==e.endSide}range(e,n=e){if(this.isReplace&&(e>n||e==n&&this.startSide>0&&this.endSide<=0))throw new RangeError("Invalid range for replacement decoration");if(!this.isReplace&&n!=e)throw new RangeError("Widget decorations can only have zero-length ranges");return super.range(e,n)}}Ns.prototype.point=!0;function S3(t,e=!1){let{inclusiveStart:n,inclusiveEnd:r}=t;return n==null&&(n=t.inclusive),r==null&&(r=t.inclusive),{start:n!=null?n:e,end:r!=null?r:e}}function IZ(t,e){return t==e||!!(t&&e&&t.compare(e))}function Vb(t,e,n,r=0){let i=n.length-1;i>=0&&n[i]+r>=t?n[i]=Math.max(n[i],e):n.push(t,e)}class Qt extends Ze{constructor(){super(...arguments),this.children=[],this.length=0,this.prevAttrs=void 0,this.attrs=null,this.breakAfter=0}merge(e,n,r,i,o,s){if(r){if(!(r instanceof Qt))return!1;this.dom||r.transferDOM(this)}return i&&this.setDeco(r?r.attrs:null),h3(this,e,n,r?r.children:[],o,s),!0}split(e){let n=new Qt;if(n.breakAfter=this.breakAfter,this.length==0)return n;let{i:r,off:i}=this.childPos(e);i&&(n.append(this.children[r].split(i),0),this.children[r].merge(i,this.children[r].length,null,!1,0,0),r++);for(let o=r;o<this.children.length;o++)n.append(this.children[o],0);for(;r>0&&this.children[r-1].length==0;)this.children[--r].destroy();return this.children.length=r,this.markDirty(),this.length=e,n}transferDOM(e){!this.dom||(this.markDirty(),e.setDOM(this.dom),e.prevAttrs=this.prevAttrs===void 0?this.attrs:this.prevAttrs,this.prevAttrs=void 0,this.dom=null)}setDeco(e){hx(this.attrs,e)||(this.dom&&(this.prevAttrs=this.attrs,this.markDirty()),this.attrs=e)}append(e,n){y3(this,e,n)}addLineDeco(e){let n=e.spec.attributes,r=e.spec.class;n&&(this.attrs=Eb(n,this.attrs||{})),r&&(this.attrs=Eb({class:r},this.attrs||{}))}domAtPos(e){return b3(this,e)}reuseDOM(e){e.nodeName=="DIV"&&(this.setDOM(e),this.dirty|=6)}sync(e){var n;this.dom?this.dirty&4&&(u3(this.dom),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0):(this.setDOM(document.createElement("div")),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0),this.prevAttrs!==void 0&&(Nb(this.dom,this.prevAttrs,this.attrs),this.dom.classList.add("cm-line"),this.prevAttrs=void 0),super.sync(e);let r=this.dom.lastChild;for(;r&&Ze.get(r)instanceof $r;)r=r.lastChild;if(!r||!this.length||r.nodeName!="BR"&&((n=Ze.get(r))===null||n===void 0?void 0:n.isEditable)==!1&&(!_.ios||!this.children.some(i=>i instanceof Po))){let i=document.createElement("BR");i.cmIgnore=!0,this.dom.appendChild(i)}}measureTextSize(){if(this.children.length==0||this.length>20)return null;let e=0;for(let n of this.children){if(!(n instanceof Po)||/[^ -~]/.test(n.text))return null;let r=Cu(n.dom);if(r.length!=1)return null;e+=r[0].width}return e?{lineHeight:this.dom.getBoundingClientRect().height,charWidth:e/this.length}:null}coordsAt(e,n){return x3(this,e,n)}become(e){return!1}get type(){return Ve.Text}static find(e,n){for(let r=0,i=0;r<e.children.length;r++){let o=e.children[r],s=i+o.length;if(s>=n){if(o instanceof Qt)return o;if(s>n)break}i=s+o.breakAfter}return null}}class ys extends Ze{constructor(e,n,r){super(),this.widget=e,this.length=n,this.type=r,this.breakAfter=0,this.prevWidget=null}merge(e,n,r,i,o,s){return r&&(!(r instanceof ys)||!this.widget.compare(r.widget)||e>0&&o<=0||n<this.length&&s<=0)?!1:(this.length=e+(r?r.length:0)+(this.length-n),!0)}domAtPos(e){return e==0?Yt.before(this.dom):Yt.after(this.dom,e==this.length)}split(e){let n=this.length-e;this.length=e;let r=new ys(this.widget,n,this.type);return r.breakAfter=this.breakAfter,r}get children(){return fx}sync(){(!this.dom||!this.widget.updateDOM(this.dom))&&(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}get overrideDOMText(){return this.parent?this.parent.view.state.doc.slice(this.posAtStart,this.posAtEnd):Se.empty}domBoundsAround(){return null}become(e){return e instanceof ys&&e.type==this.type&&e.widget.constructor==this.widget.constructor?(e.widget.eq(this.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=e.widget,this.length=e.length,this.breakAfter=e.breakAfter,!0):!1}ignoreMutation(){return!0}ignoreEvent(e){return this.widget.ignoreEvent(e)}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class px{constructor(e,n,r,i){this.doc=e,this.pos=n,this.end=r,this.disallowBlockEffectsFor=i,this.content=[],this.curLine=null,this.breakAtStart=0,this.pendingBuffer=0,this.atCursorPos=!0,this.openStart=-1,this.openEnd=-1,this.text="",this.textOff=0,this.cursor=e.iter(),this.skip=n}posCovered(){if(this.content.length==0)return!this.breakAtStart&&this.doc.lineAt(this.pos).from!=this.pos;let e=this.content[this.content.length-1];return!e.breakAfter&&!(e instanceof ys&&e.type==Ve.WidgetBefore)}getLine(){return this.curLine||(this.content.push(this.curLine=new Qt),this.atCursorPos=!0),this.curLine}flushBuffer(e){this.pendingBuffer&&(this.curLine.append(ef(new hl(-1),e),e.length),this.pendingBuffer=0)}addBlockWidget(e){this.flushBuffer([]),this.curLine=null,this.content.push(e)}finish(e){e?this.pendingBuffer=0:this.flushBuffer([]),this.posCovered()||this.getLine()}buildText(e,n,r){for(;e>0;){if(this.textOff==this.text.length){let{value:o,lineBreak:s,done:a}=this.cursor.next(this.skip);if(this.skip=0,a)throw new Error("Ran out of text content when drawing inline views");if(s){this.posCovered()||this.getLine(),this.content.length?this.content[this.content.length-1].breakAfter=1:this.breakAtStart=1,this.flushBuffer([]),this.curLine=null,e--;continue}else this.text=o,this.textOff=0}let i=Math.min(this.text.length-this.textOff,e,512);this.flushBuffer(n.slice(n.length-r)),this.getLine().append(ef(new Po(this.text.slice(this.textOff,this.textOff+i)),n),r),this.atCursorPos=!0,this.textOff+=i,e-=i,r=0}}span(e,n,r,i){this.buildText(n-e,r,i),this.pos=n,this.openStart<0&&(this.openStart=i)}point(e,n,r,i,o,s){if(this.disallowBlockEffectsFor[s]&&r instanceof Ns){if(r.block)throw new RangeError("Block decorations may not be specified via plugins");if(n>this.doc.lineAt(this.pos).to)throw new RangeError("Decorations that replace line breaks may not be specified via plugins")}let a=n-e;if(r instanceof Ns)if(r.block){let{type:l}=r;l==Ve.WidgetAfter&&!this.posCovered()&&this.getLine(),this.addBlockWidget(new ys(r.widget||new Jw("div"),a,l))}else{let l=no.create(r.widget||new Jw("span"),a,a?0:r.startSide),c=this.atCursorPos&&!l.isEditable&&o<=i.length&&(e<n||r.startSide>0),u=!l.isEditable&&(e<n||r.startSide<=0),d=this.getLine();this.pendingBuffer==2&&!c&&(this.pendingBuffer=0),this.flushBuffer(i),c&&(d.append(ef(new hl(1),i),o),o=i.length+Math.max(0,o-i.length)),d.append(ef(l,i),o),this.atCursorPos=u,this.pendingBuffer=u?e<n?1:2:0}else this.doc.lineAt(this.pos).from==this.pos&&this.getLine().addLineDeco(r);a&&(this.textOff+a<=this.text.length?this.textOff+=a:(this.skip+=a-(this.text.length-this.textOff),this.text="",this.textOff=0),this.pos=n),this.openStart<0&&(this.openStart=o)}static build(e,n,r,i,o){let s=new px(e,n,r,o);return s.openEnd=Oe.spans(i,n,r,s),s.openStart<0&&(s.openStart=s.openEnd),s.finish(s.openEnd),s}}function ef(t,e){for(let n of e)t=new $r(n,[t],t.length);return t}class Jw extends Ni{constructor(e){super(),this.tag=e}eq(e){return e.tag==this.tag}toDOM(){return document.createElement(this.tag)}updateDOM(e){return e.nodeName.toLowerCase()==this.tag}}const k3=$.define(),w3=$.define(),O3=$.define(),T3=$.define(),Lb=$.define(),P3=$.define(),C3=$.define({combine:t=>t.some(e=>e)}),M3=$.define({combine:t=>t.some(e=>e)});class op{constructor(e,n="nearest",r="nearest",i=5,o=5){this.range=e,this.y=n,this.x=r,this.yMargin=i,this.xMargin=o}map(e){return e.empty?this:new op(this.range.map(e),this.y,this.x,this.yMargin,this.xMargin)}}const _w=se.define({map:(t,e)=>t.map(e)});function Mn(t,e,n){let r=t.facet(T3);r.length?r[0](e):window.onerror?window.onerror(String(e),n,void 0,void 0,e):n?console.error(n+":",e):console.error(e)}const Om=$.define({combine:t=>t.length?t[0]:!0});let zZ=0;const yc=$.define();class nt{constructor(e,n,r,i){this.id=e,this.create=n,this.domEventHandlers=r,this.extension=i(this)}static define(e,n){const{eventHandlers:r,provide:i,decorations:o}=n||{};return new nt(zZ++,e,r,s=>{let a=[yc.of(s)];return o&&a.push(Ru.of(l=>{let c=l.plugin(s);return c?o(c):F.none})),i&&a.push(i(s)),a})}static fromClass(e,n){return nt.define(r=>new e(r),n)}}class l0{constructor(e){this.spec=e,this.mustUpdate=null,this.value=null}update(e){if(this.value){if(this.mustUpdate){let n=this.mustUpdate;if(this.mustUpdate=null,this.value.update)try{this.value.update(n)}catch(r){if(Mn(n.state,r,"CodeMirror plugin crashed"),this.value.destroy)try{this.value.destroy()}catch{}this.deactivate()}}}else if(this.spec)try{this.value=this.spec.create(e)}catch(n){Mn(e.state,n,"CodeMirror plugin crashed"),this.deactivate()}return this}destroy(e){var n;if(!((n=this.value)===null||n===void 0)&&n.destroy)try{this.value.destroy()}catch(r){Mn(e.state,r,"CodeMirror plugin crashed")}}deactivate(){this.spec=this.value=null}}const R3=$.define(),mx=$.define(),Ru=$.define(),I3=$.define(),z3=$.define(),xc=$.define();class Kr{constructor(e,n,r,i){this.fromA=e,this.toA=n,this.fromB=r,this.toB=i}join(e){return new Kr(Math.min(this.fromA,e.fromA),Math.max(this.toA,e.toA),Math.min(this.fromB,e.fromB),Math.max(this.toB,e.toB))}addToSet(e){let n=e.length,r=this;for(;n>0;n--){let i=e[n-1];if(!(i.fromA>r.toA)){if(i.toA<r.fromA)break;r=r.join(i),e.splice(n-1,1)}}return e.splice(n,0,r),e}static extendWithRanges(e,n){if(n.length==0)return e;let r=[];for(let i=0,o=0,s=0,a=0;;i++){let l=i==e.length?null:e[i],c=s-a,u=l?l.fromB:1e9;for(;o<n.length&&n[o]<u;){let d=n[o],f=n[o+1],h=Math.max(a,d),p=Math.min(u,f);if(h<=p&&new Kr(h+c,p+c,h,p).addToSet(r),f>u)break;o+=2}if(!l)return r;new Kr(l.fromA,l.toA,l.fromB,l.toB).addToSet(r),s=l.toA,a=l.toB}}}class sp{constructor(e,n,r){this.view=e,this.state=n,this.transactions=r,this.flags=0,this.startState=e.state,this.changes=ht.empty(this.startState.doc.length);for(let s of r)this.changes=this.changes.compose(s.changes);let i=[];this.changes.iterChangedRanges((s,a,l,c)=>i.push(new Kr(s,a,l,c))),this.changedRanges=i;let o=e.hasFocus;o!=e.inputState.notifiedFocused&&(e.inputState.notifiedFocused=o,this.flags|=1)}static create(e,n,r){return new sp(e,n,r)}get viewportChanged(){return(this.flags&4)>0}get heightChanged(){return(this.flags&2)>0}get geometryChanged(){return this.docChanged||(this.flags&10)>0}get focusChanged(){return(this.flags&1)>0}get docChanged(){return!this.changes.empty}get selectionSet(){return this.transactions.some(e=>e.selection)}get empty(){return this.flags==0&&this.transactions.length==0}}var Qe=function(t){return t[t.LTR=0]="LTR",t[t.RTL=1]="RTL",t}(Qe||(Qe={}));const Xb=Qe.LTR,EZ=Qe.RTL;function E3(t){let e=[];for(let n=0;n<t.length;n++)e.push(1<<+t[n]);return e}const NZ=E3("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),VZ=E3("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),Bb=Object.create(null),Cr=[];for(let t of["()","[]","{}"]){let e=t.charCodeAt(0),n=t.charCodeAt(1);Bb[e]=n,Bb[n]=-e}function LZ(t){return t<=247?NZ[t]:1424<=t&&t<=1524?2:1536<=t&&t<=1785?VZ[t-1536]:1774<=t&&t<=2220?4:8192<=t&&t<=8203?256:64336<=t&&t<=65023?4:t==8204?256:1}const XZ=/[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;class Ha{constructor(e,n,r){this.from=e,this.to=n,this.level=r}get dir(){return this.level%2?EZ:Xb}side(e,n){return this.dir==n==e?this.to:this.from}static find(e,n,r,i){let o=-1;for(let s=0;s<e.length;s++){let a=e[s];if(a.from<=n&&a.to>=n){if(a.level==r)return s;(o<0||(i!=0?i<0?a.from<n:a.to>n:e[o].level>a.level))&&(o=s)}}if(o<0)throw new RangeError("Index out of range");return o}}const Ke=[];function BZ(t,e){let n=t.length,r=e==Xb?1:2,i=e==Xb?2:1;if(!t||r==1&&!XZ.test(t))return N3(n);for(let s=0,a=r,l=r;s<n;s++){let c=LZ(t.charCodeAt(s));c==512?c=a:c==8&&l==4&&(c=16),Ke[s]=c==4?2:c,c&7&&(l=c),a=c}for(let s=0,a=r,l=r;s<n;s++){let c=Ke[s];if(c==128)s<n-1&&a==Ke[s+1]&&a&24?c=Ke[s]=a:Ke[s]=256;else if(c==64){let u=s+1;for(;u<n&&Ke[u]==64;)u++;let d=s&&a==8||u<n&&Ke[u]==8?l==1?1:8:256;for(let f=s;f<u;f++)Ke[f]=d;s=u-1}else c==8&&l==1&&(Ke[s]=1);a=c,c&7&&(l=c)}for(let s=0,a=0,l=0,c,u,d;s<n;s++)if(u=Bb[c=t.charCodeAt(s)])if(u<0){for(let f=a-3;f>=0;f-=3)if(Cr[f+1]==-u){let h=Cr[f+2],p=h&2?r:h&4?h&1?i:r:0;p&&(Ke[s]=Ke[Cr[f]]=p),a=f;break}}else{if(Cr.length==189)break;Cr[a++]=s,Cr[a++]=c,Cr[a++]=l}else if((d=Ke[s])==2||d==1){let f=d==r;l=f?0:1;for(let h=a-3;h>=0;h-=3){let p=Cr[h+2];if(p&2)break;if(f)Cr[h+2]|=2;else{if(p&4)break;Cr[h+2]|=4}}}for(let s=0;s<n;s++)if(Ke[s]==256){let a=s+1;for(;a<n&&Ke[a]==256;)a++;let l=(s?Ke[s-1]:r)==1,c=(a<n?Ke[a]:r)==1,u=l==c?l?1:2:r;for(let d=s;d<a;d++)Ke[d]=u;s=a-1}let o=[];if(r==1)for(let s=0;s<n;){let a=s,l=Ke[s++]!=1;for(;s<n&&l==(Ke[s]!=1);)s++;if(l)for(let c=s;c>a;){let u=c,d=Ke[--c]!=2;for(;c>a&&d==(Ke[c-1]!=2);)c--;o.push(new Ha(c,u,d?2:1))}else o.push(new Ha(a,s,0))}else for(let s=0;s<n;){let a=s,l=Ke[s++]==2;for(;s<n&&l==(Ke[s]==2);)s++;o.push(new Ha(a,s,l?1:2))}return o}function N3(t){return[new Ha(0,t,0)]}let V3="";function AZ(t,e,n,r,i){var o;let s=r.head-t.from,a=-1;if(s==0){if(!i||!t.length)return null;e[0].level!=n&&(s=e[0].side(!1,n),a=0)}else if(s==t.length){if(i)return null;let f=e[e.length-1];f.level!=n&&(s=f.side(!0,n),a=e.length-1)}a<0&&(a=Ha.find(e,s,(o=r.bidiLevel)!==null&&o!==void 0?o:-1,r.assoc));let l=e[a];s==l.side(i,n)&&(l=e[a+=i?1:-1],s=l.side(!i,n));let c=i==(l.dir==n),u=qt(t.text,s,c);if(V3=t.text.slice(Math.min(s,u),Math.max(s,u)),u!=l.side(i,n))return V.cursor(u+t.from,c?-1:1,l.level);let d=a==(i?e.length-1:0)?null:e[a+(i?1:-1)];return!d&&l.level!=n?V.cursor(i?t.to:t.from,i?-1:1,n):d&&d.level<l.level?V.cursor(d.side(!i,n)+t.from,i?1:-1,d.level):V.cursor(u+t.from,i?-1:1,l.level)}const ro="\uFFFF";class L3{constructor(e,n){this.points=e,this.text="",this.lineSeparator=n.facet(pe.lineSeparator)}append(e){this.text+=e}lineBreak(){this.text+=ro}readRange(e,n){if(!e)return this;let r=e.parentNode;for(let i=e;;){this.findPointBefore(r,i),this.readNode(i);let o=i.nextSibling;if(o==n)break;let s=Ze.get(i),a=Ze.get(o);(s&&a?s.breakAfter:(s?s.breakAfter:$w(i))||$w(o)&&(i.nodeName!="BR"||i.cmIgnore))&&this.lineBreak(),i=o}return this.findPointBefore(r,n),this}readTextNode(e){let n=e.nodeValue;for(let r of this.points)r.node==e&&(r.pos=this.text.length+Math.min(r.offset,n.length));for(let r=0,i=this.lineSeparator?null:/\r\n?|\n/g;;){let o=-1,s=1,a;if(this.lineSeparator?(o=n.indexOf(this.lineSeparator,r),s=this.lineSeparator.length):(a=i.exec(n))&&(o=a.index,s=a[0].length),this.append(n.slice(r,o<0?n.length:o)),o<0)break;if(this.lineBreak(),s>1)for(let l of this.points)l.node==e&&l.pos>this.text.length&&(l.pos-=s-1);r=o+s}}readNode(e){if(e.cmIgnore)return;let n=Ze.get(e),r=n&&n.overrideDOMText;if(r!=null){this.findPointInside(e,r.length);for(let i=r.iter();!i.next().done;)i.lineBreak?this.lineBreak():this.append(i.value)}else e.nodeType==3?this.readTextNode(e):e.nodeName=="BR"?e.nextSibling&&this.lineBreak():e.nodeType==1&&this.readRange(e.firstChild,null)}findPointBefore(e,n){for(let r of this.points)r.node==e&&e.childNodes[r.offset]==n&&(r.pos=this.text.length)}findPointInside(e,n){for(let r of this.points)(e.nodeType==3?r.node==e:e.contains(r.node))&&(r.pos=this.text.length+Math.min(n,r.offset))}}function $w(t){return t.nodeType==1&&/^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName)}class e2{constructor(e,n){this.node=e,this.offset=n,this.pos=-1}}class t2 extends Ze{constructor(e){super(),this.view=e,this.compositionDeco=F.none,this.decorations=[],this.dynamicDecorationMap=[],this.minWidth=0,this.minWidthFrom=0,this.minWidthTo=0,this.impreciseAnchor=null,this.impreciseHead=null,this.forceSelection=!1,this.lastUpdate=Date.now(),this.setDOM(e.contentDOM),this.children=[new Qt],this.children[0].setParent(this),this.updateDeco(),this.updateInner([new Kr(0,0,0,e.state.doc.length)],0)}get editorView(){return this.view}get length(){return this.view.state.doc.length}update(e){let n=e.changedRanges;this.minWidth>0&&n.length&&(n.every(({fromA:s,toA:a})=>a<this.minWidthFrom||s>this.minWidthTo)?(this.minWidthFrom=e.changes.mapPos(this.minWidthFrom,1),this.minWidthTo=e.changes.mapPos(this.minWidthTo,1)):this.minWidth=this.minWidthFrom=this.minWidthTo=0),this.view.inputState.composing<0?this.compositionDeco=F.none:(e.transactions.length||this.dirty)&&(this.compositionDeco=GZ(this.view,e.changes)),(_.ie||_.chrome)&&!this.compositionDeco.size&&e&&e.state.doc.lines!=e.startState.doc.lines&&(this.forceSelection=!0);let r=this.decorations,i=this.updateDeco(),o=HZ(r,i,e.changes);return n=Kr.extendWithRanges(n,o),this.dirty==0&&n.length==0?!1:(this.updateInner(n,e.startState.doc.length),e.transactions.length&&(this.lastUpdate=Date.now()),!0)}updateInner(e,n){this.view.viewState.mustMeasureContent=!0,this.updateChildren(e,n);let{observer:r}=this.view;r.ignore(()=>{this.dom.style.height=this.view.viewState.contentHeight+"px",this.dom.style.flexBasis=this.minWidth?this.minWidth+"px":"";let o=_.chrome||_.ios?{node:r.selectionRange.focusNode,written:!1}:void 0;this.sync(o),this.dirty=0,o&&(o.written||r.selectionRange.focusNode!=o.node)&&(this.forceSelection=!0),this.dom.style.height=""});let i=[];if(this.view.viewport.from||this.view.viewport.to<this.view.state.doc.length)for(let o of this.children)o instanceof ys&&o.widget instanceof n2&&i.push(o.dom);r.updateGaps(i)}updateChildren(e,n){let r=this.childCursor(n);for(let i=e.length-1;;i--){let o=i>=0?e[i]:null;if(!o)break;let{fromA:s,toA:a,fromB:l,toB:c}=o,{content:u,breakAtStart:d,openStart:f,openEnd:h}=px.build(this.view.state.doc,l,c,this.decorations,this.dynamicDecorationMap),{i:p,off:m}=r.findPos(a,1),{i:b,off:g}=r.findPos(s,-1);f3(this,b,g,p,m,u,d,f,h)}}updateSelection(e=!1,n=!1){if((e||!this.view.observer.selectionRange.focusNode)&&this.view.observer.readSelectionRange(),!(n||this.mayControlSelection()))return;let r=this.forceSelection;this.forceSelection=!1;let i=this.view.state.selection.main,o=this.domAtPos(i.anchor),s=i.empty?o:this.domAtPos(i.head);if(_.gecko&&i.empty&&ZZ(o)){let l=document.createTextNode("");this.view.observer.ignore(()=>o.node.insertBefore(l,o.node.childNodes[o.offset]||null)),o=s=new Yt(l,0),r=!0}let a=this.view.observer.selectionRange;(r||!a.focusNode||!rp(o.node,o.offset,a.anchorNode,a.anchorOffset)||!rp(s.node,s.offset,a.focusNode,a.focusOffset))&&(this.view.observer.ignore(()=>{_.android&&_.chrome&&this.dom.contains(a.focusNode)&&jZ(a.focusNode,this.dom)&&(this.dom.blur(),this.dom.focus({preventScroll:!0}));let l=np(this.view.root);if(l)if(i.empty){if(_.gecko){let c=YZ(o.node,o.offset);if(c&&c!=3){let u=B3(o.node,o.offset,c==1?1:-1);u&&(o=new Yt(u,c==1?0:u.nodeValue.length))}}l.collapse(o.node,o.offset),i.bidiLevel!=null&&a.cursorBidiLevel!=null&&(a.cursorBidiLevel=i.bidiLevel)}else if(l.extend){l.collapse(o.node,o.offset);try{l.extend(s.node,s.offset)}catch{}}else{let c=document.createRange();i.anchor>i.head&&([o,s]=[s,o]),c.setEnd(s.node,s.offset),c.setStart(o.node,o.offset),l.removeAllRanges(),l.addRange(c)}}),this.view.observer.setSelectionRange(o,s)),this.impreciseAnchor=o.precise?null:new Yt(a.anchorNode,a.anchorOffset),this.impreciseHead=s.precise?null:new Yt(a.focusNode,a.focusOffset)}enforceCursorAssoc(){if(this.compositionDeco.size)return;let{view:e}=this,n=e.state.selection.main,r=np(e.root),{anchorNode:i,anchorOffset:o}=e.observer.selectionRange;if(!r||!n.empty||!n.assoc||!r.modify)return;let s=Qt.find(this,n.head);if(!s)return;let a=s.posAtStart;if(n.head==a||n.head==a+s.length)return;let l=this.coordsAt(n.head,-1),c=this.coordsAt(n.head,1);if(!l||!c||l.bottom>c.top)return;let u=this.domAtPos(n.head+n.assoc);r.collapse(u.node,u.offset),r.modify("move",n.assoc<0?"forward":"backward","lineboundary"),e.observer.readSelectionRange();let d=e.observer.selectionRange;e.docView.posFromDOM(d.anchorNode,d.anchorOffset)!=n.from&&r.collapse(i,o)}mayControlSelection(){let e=this.view.root.activeElement;return e==this.dom||oh(this.dom,this.view.observer.selectionRange)&&!(e&&this.dom.contains(e))}nearest(e){for(let n=e;n;){let r=Ze.get(n);if(r&&r.rootView==this)return r;n=n.parentNode}return null}posFromDOM(e,n){let r=this.nearest(e);if(!r)throw new RangeError("Trying to find position for a DOM position outside of the document");return r.localPosFromDOM(e,n)+r.posAtStart}domAtPos(e){let{i:n,off:r}=this.childCursor().findPos(e,-1);for(;n<this.children.length-1;){let i=this.children[n];if(r<i.length||i instanceof Qt)break;n++,r=0}return this.children[n].domAtPos(r)}coordsAt(e,n){for(let r=this.length,i=this.children.length-1;;i--){let o=this.children[i],s=r-o.breakAfter-o.length;if(e>s||e==s&&o.type!=Ve.WidgetBefore&&o.type!=Ve.WidgetAfter&&(!i||n==2||this.children[i-1].breakAfter||this.children[i-1].type==Ve.WidgetBefore&&n>-2))return o.coordsAt(e-s,n);r=s}}measureVisibleLineHeights(e){let n=[],{from:r,to:i}=e,o=this.view.contentDOM.clientWidth,s=o>Math.max(this.view.scrollDOM.clientWidth,this.minWidth)+1,a=-1,l=this.view.textDirection==Qe.LTR;for(let c=0,u=0;u<this.children.length;u++){let d=this.children[u],f=c+d.length;if(f>i)break;if(c>=r){let h=d.dom.getBoundingClientRect();if(n.push(h.height),s){let p=d.dom.lastChild,m=p?Cu(p):[];if(m.length){let b=m[m.length-1],g=l?b.right-h.left:h.right-b.left;g>a&&(a=g,this.minWidth=o,this.minWidthFrom=c,this.minWidthTo=f)}}}c=f+d.breakAfter}return n}textDirectionAt(e){let{i:n}=this.childPos(e,1);return getComputedStyle(this.children[n].dom).direction=="rtl"?Qe.RTL:Qe.LTR}measureTextSize(){for(let i of this.children)if(i instanceof Qt){let o=i.measureTextSize();if(o)return o}let e=document.createElement("div"),n,r;return e.className="cm-line",e.style.width="99999px",e.textContent="abc def ghi jkl mno pqr stu",this.view.observer.ignore(()=>{this.dom.appendChild(e);let i=Cu(e.firstChild)[0];n=e.getBoundingClientRect().height,r=i?i.width/27:7,e.remove()}),{lineHeight:n,charWidth:r}}childCursor(e=this.length){let n=this.children.length;return n&&(e-=this.children[--n].length),new d3(this.children,e,n)}computeBlockGapDeco(){let e=[],n=this.view.viewState;for(let r=0,i=0;;i++){let o=i==n.viewports.length?null:n.viewports[i],s=o?o.from-1:this.length;if(s>r){let a=n.lineBlockAt(s).bottom-n.lineBlockAt(r).top;e.push(F.replace({widget:new n2(a),block:!0,inclusive:!0,isBlockGap:!0}).range(r,s))}if(!o)break;r=o.to+1}return F.set(e)}updateDeco(){let e=this.view.state.facet(Ru).map((n,r)=>(this.dynamicDecorationMap[r]=typeof n=="function")?n(this.view):n);for(let n=e.length;n<e.length+3;n++)this.dynamicDecorationMap[n]=!1;return this.decorations=[...e,this.compositionDeco,this.computeBlockGapDeco(),this.view.viewState.lineGapDeco]}scrollIntoView(e){let{range:n}=e,r=this.coordsAt(n.head,n.empty?n.assoc:n.head>n.anchor?-1:1),i;if(!r)return;!n.empty&&(i=this.coordsAt(n.anchor,n.anchor>n.head?-1:1))&&(r={left:Math.min(r.left,i.left),top:Math.min(r.top,i.top),right:Math.max(r.right,i.right),bottom:Math.max(r.bottom,i.bottom)});let o=0,s=0,a=0,l=0;for(let u of this.view.state.facet(z3).map(d=>d(this.view)))if(u){let{left:d,right:f,top:h,bottom:p}=u;d!=null&&(o=Math.max(o,d)),f!=null&&(s=Math.max(s,f)),h!=null&&(a=Math.max(a,h)),p!=null&&(l=Math.max(l,p))}let c={left:r.left-o,top:r.top-a,right:r.right+s,bottom:r.bottom+l};wZ(this.view.scrollDOM,c,n.head<n.anchor?-1:1,e.x,e.y,e.xMargin,e.yMargin,this.view.textDirection==Qe.LTR)}}function ZZ(t){return t.node.nodeType==1&&t.node.firstChild&&(t.offset==0||t.node.childNodes[t.offset-1].contentEditable=="false")&&(t.offset==t.node.childNodes.length||t.node.childNodes[t.offset].contentEditable=="false")}class n2 extends Ni{constructor(e){super(),this.height=e}toDOM(){let e=document.createElement("div");return this.updateDOM(e),e}eq(e){return e.height==this.height}updateDOM(e){return e.style.height=this.height+"px",!0}get estimatedHeight(){return this.height}}function X3(t){let e=t.observer.selectionRange,n=e.focusNode&&B3(e.focusNode,e.focusOffset,0);if(!n)return null;let r=t.docView.nearest(n);if(!r)return null;if(r instanceof Qt){let i=n;for(;i.parentNode!=r.dom;)i=i.parentNode;let o=i.previousSibling;for(;o&&!Ze.get(o);)o=o.previousSibling;let s=o?Ze.get(o).posAtEnd:r.posAtStart;return{from:s,to:s,node:i,text:n}}else{for(;;){let{parent:o}=r;if(!o)return null;if(o instanceof Qt)break;r=o}let i=r.posAtStart;return{from:i,to:i+r.length,node:r.dom,text:n}}}function GZ(t,e){let n=X3(t);if(!n)return F.none;let{from:r,to:i,node:o,text:s}=n,a=e.mapPos(r,1),l=Math.max(a,e.mapPos(i,-1)),{state:c}=t,u=o.nodeType==3?o.nodeValue:new L3([],c).readRange(o.firstChild,null).text;if(l-a<u.length)if(c.doc.sliceString(a,Math.min(c.doc.length,a+u.length),ro)==u)l=a+u.length;else if(c.doc.sliceString(Math.max(0,l-u.length),l,ro)==u)a=l-u.length;else return F.none;else if(c.doc.sliceString(a,l,ro)!=u)return F.none;let d=Ze.get(o);return d instanceof g3?d=d.widget.topView:d&&(d.parent=null),F.set(F.replace({widget:new WZ(o,s,d),inclusive:!0}).range(a,l))}class WZ extends Ni{constructor(e,n,r){super(),this.top=e,this.text=n,this.topView=r}eq(e){return this.top==e.top&&this.text==e.text}toDOM(){return this.top}ignoreEvent(){return!1}get customView(){return g3}}function B3(t,e,n){for(;;){if(t.nodeType==3)return t;if(t.nodeType==1&&e>0&&n<=0)t=t.childNodes[e-1],e=Mu(t);else if(t.nodeType==1&&e<t.childNodes.length&&n>=0)t=t.childNodes[e],e=0;else return null}}function YZ(t,e){return t.nodeType!=1?0:(e&&t.childNodes[e-1].contentEditable=="false"?1:0)|(e<t.childNodes.length&&t.childNodes[e].contentEditable=="false"?2:0)}class FZ{constructor(){this.changes=[]}compareRange(e,n){Vb(e,n,this.changes)}comparePoint(e,n){Vb(e,n,this.changes)}}function HZ(t,e,n){let r=new FZ;return Oe.compare(t,e,n,r),r.changes}function jZ(t,e){for(let n=t;n&&n!=e;n=n.assignedSlot||n.parentNode)if(n.nodeType==1&&n.contentEditable=="false")return!0;return!1}function DZ(t,e,n=1){let r=t.charCategorizer(e),i=t.doc.lineAt(e),o=e-i.from;if(i.length==0)return V.cursor(e);o==0?n=1:o==i.length&&(n=-1);let s=o,a=o;n<0?s=qt(i.text,o,!1):a=qt(i.text,o);let l=r(i.text.slice(s,a));for(;s>0;){let c=qt(i.text,s,!1);if(r(i.text.slice(c,s))!=l)break;s=c}for(;a<i.length;){let c=qt(i.text,a);if(r(i.text.slice(a,c))!=l)break;a=c}return V.range(s+i.from,a+i.from)}function UZ(t,e){return e.left>t?e.left-t:Math.max(0,t-e.right)}function KZ(t,e){return e.top>t?e.top-t:Math.max(0,t-e.bottom)}function c0(t,e){return t.top<e.bottom-1&&t.bottom>e.top+1}function r2(t,e){return e<t.top?{top:e,left:t.left,right:t.right,bottom:t.bottom}:t}function i2(t,e){return e>t.bottom?{top:t.top,left:t.left,right:t.right,bottom:e}:t}function Ab(t,e,n){let r,i,o,s,a=!1,l,c,u,d;for(let p=t.firstChild;p;p=p.nextSibling){let m=Cu(p);for(let b=0;b<m.length;b++){let g=m[b];i&&c0(i,g)&&(g=r2(i2(g,i.bottom),i.top));let v=UZ(e,g),y=KZ(n,g);if(v==0&&y==0)return p.nodeType==3?o2(p,e,n):Ab(p,e,n);(!r||s>y||s==y&&o>v)&&(r=p,i=g,o=v,s=y,a=!v||(v>0?b<m.length-1:b>0)),v==0?n>g.bottom&&(!u||u.bottom<g.bottom)?(l=p,u=g):n<g.top&&(!d||d.top>g.top)&&(c=p,d=g):u&&c0(u,g)?u=i2(u,g.bottom):d&&c0(d,g)&&(d=r2(d,g.top))}}if(u&&u.bottom>=n?(r=l,i=u):d&&d.top<=n&&(r=c,i=d),!r)return{node:t,offset:0};let f=Math.max(i.left,Math.min(i.right,e));if(r.nodeType==3)return o2(r,f,n);if(a&&r.contentEditable!="false")return Ab(r,f,n);let h=Array.prototype.indexOf.call(t.childNodes,r)+(e>=(i.left+i.right)/2?1:0);return{node:t,offset:h}}function o2(t,e,n){let r=t.nodeValue.length,i=-1,o=1e9,s=0;for(let a=0;a<r;a++){let l=fl(t,a,a+1).getClientRects();for(let c=0;c<l.length;c++){let u=l[c];if(u.top==u.bottom)continue;s||(s=e-u.left);let d=(u.top>n?u.top-n:n-u.bottom)-1;if(u.left-1<=e&&u.right+1>=e&&d<o){let f=e>=(u.left+u.right)/2,h=f;if((_.chrome||_.gecko)&&fl(t,a).getBoundingClientRect().left==u.right&&(h=!f),d<=0)return{node:t,offset:a+(h?1:0)};i=a+(h?1:0),o=d}}}return{node:t,offset:i>-1?i:s>0?t.nodeValue.length:0}}function A3(t,{x:e,y:n},r,i=-1){var o;let s=t.contentDOM.getBoundingClientRect(),a=s.top+t.viewState.paddingTop,l,{docHeight:c}=t.viewState,u=n-a;if(u<0)return 0;if(u>c)return t.state.doc.length;for(let g=t.defaultLineHeight/2,v=!1;l=t.elementAtHeight(u),l.type!=Ve.Text;)for(;u=i>0?l.bottom+g:l.top-g,!(u>=0&&u<=c);){if(v)return r?null:0;v=!0,i=-i}n=a+u;let d=l.from;if(d<t.viewport.from)return t.viewport.from==0?0:r?null:s2(t,s,l,e,n);if(d>t.viewport.to)return t.viewport.to==t.state.doc.length?t.state.doc.length:r?null:s2(t,s,l,e,n);let f=t.dom.ownerDocument,h=t.root.elementFromPoint?t.root:f,p=h.elementFromPoint(e,n);p&&!t.contentDOM.contains(p)&&(p=null),p||(e=Math.max(s.left+1,Math.min(s.right-1,e)),p=h.elementFromPoint(e,n),p&&!t.contentDOM.contains(p)&&(p=null));let m,b=-1;if(p&&((o=t.docView.nearest(p))===null||o===void 0?void 0:o.isEditable)!=!1){if(f.caretPositionFromPoint){let g=f.caretPositionFromPoint(e,n);g&&({offsetNode:m,offset:b}=g)}else if(f.caretRangeFromPoint){let g=f.caretRangeFromPoint(e,n);g&&({startContainer:m,startOffset:b}=g,(!t.contentDOM.contains(m)||_.safari&&qZ(m,b,e)||_.chrome&&QZ(m,b,e))&&(m=void 0))}}if(!m||!t.docView.dom.contains(m)){let g=Qt.find(t.docView,d);if(!g)return u>l.top+l.height/2?l.to:l.from;({node:m,offset:b}=Ab(g.dom,e,n))}return t.docView.posFromDOM(m,b)}function s2(t,e,n,r,i){let o=Math.round((r-e.left)*t.defaultCharacterWidth);if(t.lineWrapping&&n.height>t.defaultLineHeight*1.5){let a=Math.floor((i-n.top)/t.defaultLineHeight);o+=a*t.viewState.heightOracle.lineLength}let s=t.state.sliceDoc(n.from,n.to);return n.from+Ob(s,o,t.state.tabSize)}function qZ(t,e,n){let r;if(t.nodeType!=3||e!=(r=t.nodeValue.length))return!1;for(let i=t.nextSibling;i;i=i.nextSibling)if(i.nodeType!=1||i.nodeName!="BR")return!1;return fl(t,r-1,r).getBoundingClientRect().left>n}function QZ(t,e,n){if(e!=0)return!1;for(let i=t;;){let o=i.parentNode;if(!o||o.nodeType!=1||o.firstChild!=i)return!1;if(o.classList.contains("cm-line"))break;i=o}let r=t.nodeType==1?t.getBoundingClientRect():fl(t,0,Math.max(t.nodeValue.length,1)).getBoundingClientRect();return n-r.left>5}function JZ(t,e,n,r){let i=t.state.doc.lineAt(e.head),o=!r||!t.lineWrapping?null:t.coordsAtPos(e.assoc<0&&e.head>i.from?e.head-1:e.head);if(o){let l=t.dom.getBoundingClientRect(),c=t.textDirectionAt(i.from),u=t.posAtCoords({x:n==(c==Qe.LTR)?l.right-1:l.left+1,y:(o.top+o.bottom)/2});if(u!=null)return V.cursor(u,n?-1:1)}let s=Qt.find(t.docView,e.head),a=s?n?s.posAtEnd:s.posAtStart:n?i.to:i.from;return V.cursor(a,n?-1:1)}function a2(t,e,n,r){let i=t.state.doc.lineAt(e.head),o=t.bidiSpans(i),s=t.textDirectionAt(i.from);for(let a=e,l=null;;){let c=AZ(i,o,s,a,n),u=V3;if(!c){if(i.number==(n?t.state.doc.lines:1))return a;u=`
`,i=t.state.doc.line(i.number+(n?1:-1)),o=t.bidiSpans(i),c=V.cursor(n?i.from:i.to)}if(l){if(!l(u))return a}else{if(!r)return c;l=r(u)}a=c}}function _Z(t,e,n){let r=t.state.charCategorizer(e),i=r(n);return o=>{let s=r(o);return i==je.Space&&(i=s),i==s}}function $Z(t,e,n,r){let i=e.head,o=n?1:-1;if(i==(n?t.state.doc.length:0))return V.cursor(i,e.assoc);let s=e.goalColumn,a,l=t.contentDOM.getBoundingClientRect(),c=t.coordsAtPos(i),u=t.documentTop;if(c)s==null&&(s=c.left-l.left),a=o<0?c.top:c.bottom;else{let h=t.viewState.lineBlockAt(i);s==null&&(s=Math.min(l.right-l.left,t.defaultCharacterWidth*(i-h.from))),a=(o<0?h.top:h.bottom)+u}let d=l.left+s,f=r!=null?r:t.defaultLineHeight>>1;for(let h=0;;h+=10){let p=a+(f+h)*o,m=A3(t,{x:d,y:p},!1,o);if(p<l.top||p>l.bottom||(o<0?m<i:m>i))return V.cursor(m,e.assoc,void 0,s)}}function u0(t,e,n){let r=t.state.facet(I3).map(i=>i(t));for(;;){let i=!1;for(let o of r)o.between(n.from-1,n.from+1,(s,a,l)=>{n.from>s&&n.from<a&&(n=e.head>n.from?V.cursor(s,1):V.cursor(a,-1),i=!0)});if(!i)return n}}class e7{constructor(e){this.lastKeyCode=0,this.lastKeyTime=0,this.lastTouchTime=0,this.lastFocusTime=0,this.lastScrollTop=0,this.lastScrollLeft=0,this.chromeScrollHack=-1,this.pendingIOSKey=void 0,this.lastSelectionOrigin=null,this.lastSelectionTime=0,this.lastEscPress=0,this.lastContextMenu=0,this.scrollHandlers=[],this.registeredEvents=[],this.customHandlers=[],this.composing=-1,this.compositionFirstChange=null,this.compositionEndedAt=0,this.mouseSelection=null;for(let n in yt){let r=yt[n];e.contentDOM.addEventListener(n,i=>{!l2(e,i)||this.ignoreDuringComposition(i)||n=="keydown"&&this.keydown(e,i)||(this.mustFlushObserver(i)&&e.observer.forceFlush(),this.runCustomHandlers(n,e,i)?i.preventDefault():r(e,i))},Zb[n]),this.registeredEvents.push(n)}_.chrome&&_.chrome_version==102&&e.scrollDOM.addEventListener("wheel",()=>{this.chromeScrollHack<0?e.contentDOM.style.pointerEvents="none":window.clearTimeout(this.chromeScrollHack),this.chromeScrollHack=setTimeout(()=>{this.chromeScrollHack=-1,e.contentDOM.style.pointerEvents=""},100)},{passive:!0}),this.notifiedFocused=e.hasFocus,_.safari&&e.contentDOM.addEventListener("input",()=>null)}setSelectionOrigin(e){this.lastSelectionOrigin=e,this.lastSelectionTime=Date.now()}ensureHandlers(e,n){var r;let i;this.customHandlers=[];for(let o of n)if(i=(r=o.update(e).spec)===null||r===void 0?void 0:r.domEventHandlers){this.customHandlers.push({plugin:o.value,handlers:i});for(let s in i)this.registeredEvents.indexOf(s)<0&&s!="scroll"&&(this.registeredEvents.push(s),e.contentDOM.addEventListener(s,a=>{!l2(e,a)||this.runCustomHandlers(s,e,a)&&a.preventDefault()}))}}runCustomHandlers(e,n,r){for(let i of this.customHandlers){let o=i.handlers[e];if(o)try{if(o.call(i.plugin,r,n)||r.defaultPrevented)return!0}catch(s){Mn(n.state,s)}}return!1}runScrollHandlers(e,n){this.lastScrollTop=e.scrollDOM.scrollTop,this.lastScrollLeft=e.scrollDOM.scrollLeft;for(let r of this.customHandlers){let i=r.handlers.scroll;if(i)try{i.call(r.plugin,n,e)}catch(o){Mn(e.state,o)}}}keydown(e,n){if(this.lastKeyCode=n.keyCode,this.lastKeyTime=Date.now(),n.keyCode==9&&Date.now()<this.lastEscPress+2e3)return!0;if(_.android&&_.chrome&&!n.synthetic&&(n.keyCode==13||n.keyCode==8))return e.observer.delayAndroidKey(n.key,n.keyCode),!0;let r;return _.ios&&!n.synthetic&&!n.altKey&&!n.metaKey&&((r=Z3.find(i=>i.keyCode==n.keyCode))&&!n.ctrlKey||t7.indexOf(n.key)>-1&&n.ctrlKey&&!n.shiftKey)?(this.pendingIOSKey=r||n,setTimeout(()=>this.flushIOSKey(e),250),!0):!1}flushIOSKey(e){let n=this.pendingIOSKey;return n?(this.pendingIOSKey=void 0,Fa(e.contentDOM,n.key,n.keyCode)):!1}ignoreDuringComposition(e){return/^key/.test(e.type)?this.composing>0?!0:_.safari&&!_.ios&&Date.now()-this.compositionEndedAt<100?(this.compositionEndedAt=0,!0):!1:!1}mustFlushObserver(e){return e.type=="keydown"&&e.keyCode!=229}startMouseSelection(e){this.mouseSelection&&this.mouseSelection.destroy(),this.mouseSelection=e}update(e){this.mouseSelection&&this.mouseSelection.update(e),e.transactions.length&&(this.lastKeyCode=this.lastSelectionTime=0)}destroy(){this.mouseSelection&&this.mouseSelection.destroy()}}const Z3=[{key:"Backspace",keyCode:8,inputType:"deleteContentBackward"},{key:"Enter",keyCode:13,inputType:"insertParagraph"},{key:"Delete",keyCode:46,inputType:"deleteContentForward"}],t7="dthko",G3=[16,17,18,20,91,92,224,225];class n7{constructor(e,n,r,i){this.view=e,this.style=r,this.mustSelect=i,this.lastEvent=n;let o=e.contentDOM.ownerDocument;o.addEventListener("mousemove",this.move=this.move.bind(this)),o.addEventListener("mouseup",this.up=this.up.bind(this)),this.extend=n.shiftKey,this.multiple=e.state.facet(pe.allowMultipleSelections)&&r7(e,n),this.dragMove=i7(e,n),this.dragging=o7(e,n)&&H3(n)==1?null:!1,this.dragging===!1&&(n.preventDefault(),this.select(n))}move(e){if(e.buttons==0)return this.destroy();this.dragging===!1&&this.select(this.lastEvent=e)}up(e){this.dragging==null&&this.select(this.lastEvent),this.dragging||e.preventDefault(),this.destroy()}destroy(){let e=this.view.contentDOM.ownerDocument;e.removeEventListener("mousemove",this.move),e.removeEventListener("mouseup",this.up),this.view.inputState.mouseSelection=null}select(e){let n=this.style.get(e,this.extend,this.multiple);(this.mustSelect||!n.eq(this.view.state.selection)||n.main.assoc!=this.view.state.selection.main.assoc)&&this.view.dispatch({selection:n,userEvent:"select.pointer",scrollIntoView:!0}),this.mustSelect=!1}update(e){e.docChanged&&this.dragging&&(this.dragging=this.dragging.map(e.changes)),this.style.update(e)&&setTimeout(()=>this.select(this.lastEvent),20)}}function r7(t,e){let n=t.state.facet(k3);return n.length?n[0](e):_.mac?e.metaKey:e.ctrlKey}function i7(t,e){let n=t.state.facet(w3);return n.length?n[0](e):_.mac?!e.altKey:!e.ctrlKey}function o7(t,e){let{main:n}=t.state.selection;if(n.empty)return!1;let r=np(t.root);if(!r||r.rangeCount==0)return!0;let i=r.getRangeAt(0).getClientRects();for(let o=0;o<i.length;o++){let s=i[o];if(s.left<=e.clientX&&s.right>=e.clientX&&s.top<=e.clientY&&s.bottom>=e.clientY)return!0}return!1}function l2(t,e){if(!e.bubbles)return!0;if(e.defaultPrevented)return!1;for(let n=e.target,r;n!=t.contentDOM;n=n.parentNode)if(!n||n.nodeType==11||(r=Ze.get(n))&&r.ignoreEvent(e))return!1;return!0}const yt=Object.create(null),Zb=Object.create(null),W3=_.ie&&_.ie_version<15||_.ios&&_.webkit_version<604;function s7(t){let e=t.dom.parentNode;if(!e)return;let n=e.appendChild(document.createElement("textarea"));n.style.cssText="position: fixed; left: -10000px; top: 10px",n.focus(),setTimeout(()=>{t.focus(),n.remove(),Y3(t,n.value)},50)}function Y3(t,e){let{state:n}=t,r,i=1,o=n.toText(e),s=o.lines==n.selection.ranges.length;if(Gb!=null&&n.selection.ranges.every(l=>l.empty)&&Gb==o.toString()){let l=-1;r=n.changeByRange(c=>{let u=n.doc.lineAt(c.from);if(u.from==l)return{range:c};l=u.from;let d=n.toText((s?o.line(i++).text:e)+n.lineBreak);return{changes:{from:u.from,insert:d},range:V.cursor(c.from+d.length)}})}else s?r=n.changeByRange(l=>{let c=o.line(i++);return{changes:{from:l.from,to:l.to,insert:c.text},range:V.cursor(l.from+c.length)}}):r=n.replaceSelection(o);t.dispatch(r,{userEvent:"input.paste",scrollIntoView:!0})}yt.keydown=(t,e)=>{t.inputState.setSelectionOrigin("select"),e.keyCode==27?t.inputState.lastEscPress=Date.now():G3.indexOf(e.keyCode)<0&&(t.inputState.lastEscPress=0)};yt.touchstart=(t,e)=>{t.inputState.lastTouchTime=Date.now(),t.inputState.setSelectionOrigin("select.pointer")};yt.touchmove=t=>{t.inputState.setSelectionOrigin("select.pointer")};Zb.touchstart=Zb.touchmove={passive:!0};yt.mousedown=(t,e)=>{if(t.observer.flush(),t.inputState.lastTouchTime>Date.now()-2e3)return;let n=null;for(let r of t.state.facet(O3))if(n=r(t,e),n)break;if(!n&&e.button==0&&(n=c7(t,e)),n){let r=t.root.activeElement!=t.contentDOM;r&&t.observer.ignore(()=>c3(t.contentDOM)),t.inputState.startMouseSelection(new n7(t,e,n,r))}};function c2(t,e,n,r){if(r==1)return V.cursor(e,n);if(r==2)return DZ(t.state,e,n);{let i=Qt.find(t.docView,e),o=t.state.doc.lineAt(i?i.posAtEnd:e),s=i?i.posAtStart:o.from,a=i?i.posAtEnd:o.to;return a<t.state.doc.length&&a==o.to&&a++,V.range(s,a)}}let F3=(t,e)=>t>=e.top&&t<=e.bottom,u2=(t,e,n)=>F3(e,n)&&t>=n.left&&t<=n.right;function a7(t,e,n,r){let i=Qt.find(t.docView,e);if(!i)return 1;let o=e-i.posAtStart;if(o==0)return 1;if(o==i.length)return-1;let s=i.coordsAt(o,-1);if(s&&u2(n,r,s))return-1;let a=i.coordsAt(o,1);return a&&u2(n,r,a)?1:s&&F3(r,s)?-1:1}function d2(t,e){let n=t.posAtCoords({x:e.clientX,y:e.clientY},!1);return{pos:n,bias:a7(t,n,e.clientX,e.clientY)}}const l7=_.ie&&_.ie_version<=11;let f2=null,h2=0,p2=0;function H3(t){if(!l7)return t.detail;let e=f2,n=p2;return f2=t,p2=Date.now(),h2=!e||n>Date.now()-400&&Math.abs(e.clientX-t.clientX)<2&&Math.abs(e.clientY-t.clientY)<2?(h2+1)%3:1}function c7(t,e){let n=d2(t,e),r=H3(e),i=t.state.selection,o=n,s=e;return{update(a){a.docChanged&&(n.pos=a.changes.mapPos(n.pos),i=i.map(a.changes),s=null)},get(a,l,c){let u;s&&a.clientX==s.clientX&&a.clientY==s.clientY?u=o:(u=o=d2(t,a),s=a);let d=c2(t,u.pos,u.bias,r);if(n.pos!=u.pos&&!l){let f=c2(t,n.pos,n.bias,r),h=Math.min(f.from,d.from),p=Math.max(f.to,d.to);d=h<d.from?V.range(h,p):V.range(p,h)}return l?i.replaceRange(i.main.extend(d.from,d.to)):c&&i.ranges.length>1&&i.ranges.some(f=>f.eq(d))?u7(i,d):c?i.addRange(d):V.create([d])}}}function u7(t,e){for(let n=0;;n++)if(t.ranges[n].eq(e))return V.create(t.ranges.slice(0,n).concat(t.ranges.slice(n+1)),t.mainIndex==n?0:t.mainIndex-(t.mainIndex>n?1:0))}yt.dragstart=(t,e)=>{let{selection:{main:n}}=t.state,{mouseSelection:r}=t.inputState;r&&(r.dragging=n),e.dataTransfer&&(e.dataTransfer.setData("Text",t.state.sliceDoc(n.from,n.to)),e.dataTransfer.effectAllowed="copyMove")};function m2(t,e,n,r){if(!n)return;let i=t.posAtCoords({x:e.clientX,y:e.clientY},!1);e.preventDefault();let{mouseSelection:o}=t.inputState,s=r&&o&&o.dragging&&o.dragMove?{from:o.dragging.from,to:o.dragging.to}:null,a={from:i,insert:n},l=t.state.changes(s?[s,a]:a);t.focus(),t.dispatch({changes:l,selection:{anchor:l.mapPos(i,-1),head:l.mapPos(i,1)},userEvent:s?"move.drop":"input.drop"})}yt.drop=(t,e)=>{if(!e.dataTransfer)return;if(t.state.readOnly)return e.preventDefault();let n=e.dataTransfer.files;if(n&&n.length){e.preventDefault();let r=Array(n.length),i=0,o=()=>{++i==n.length&&m2(t,e,r.filter(s=>s!=null).join(t.state.lineBreak),!1)};for(let s=0;s<n.length;s++){let a=new FileReader;a.onerror=o,a.onload=()=>{/[\x00-\x08\x0e-\x1f]{2}/.test(a.result)||(r[s]=a.result),o()},a.readAsText(n[s])}}else m2(t,e,e.dataTransfer.getData("Text"),!0)};yt.paste=(t,e)=>{if(t.state.readOnly)return e.preventDefault();t.observer.flush();let n=W3?null:e.clipboardData;n?(Y3(t,n.getData("text/plain")),e.preventDefault()):s7(t)};function d7(t,e){let n=t.dom.parentNode;if(!n)return;let r=n.appendChild(document.createElement("textarea"));r.style.cssText="position: fixed; left: -10000px; top: 10px",r.value=e,r.focus(),r.selectionEnd=e.length,r.selectionStart=0,setTimeout(()=>{r.remove(),t.focus()},50)}function f7(t){let e=[],n=[],r=!1;for(let i of t.selection.ranges)i.empty||(e.push(t.sliceDoc(i.from,i.to)),n.push(i));if(!e.length){let i=-1;for(let{from:o}of t.selection.ranges){let s=t.doc.lineAt(o);s.number>i&&(e.push(s.text),n.push({from:s.from,to:Math.min(t.doc.length,s.to+1)})),i=s.number}r=!0}return{text:e.join(t.lineBreak),ranges:n,linewise:r}}let Gb=null;yt.copy=yt.cut=(t,e)=>{let{text:n,ranges:r,linewise:i}=f7(t.state);if(!n&&!i)return;Gb=i?n:null;let o=W3?null:e.clipboardData;o?(e.preventDefault(),o.clearData(),o.setData("text/plain",n)):d7(t,n),e.type=="cut"&&!t.state.readOnly&&t.dispatch({changes:r,scrollIntoView:!0,userEvent:"delete.cut"})};function j3(t){setTimeout(()=>{t.hasFocus!=t.inputState.notifiedFocused&&t.update([])},10)}yt.focus=t=>{t.inputState.lastFocusTime=Date.now(),!t.scrollDOM.scrollTop&&(t.inputState.lastScrollTop||t.inputState.lastScrollLeft)&&(t.scrollDOM.scrollTop=t.inputState.lastScrollTop,t.scrollDOM.scrollLeft=t.inputState.lastScrollLeft),j3(t)};yt.blur=t=>{t.observer.clearSelectionRange(),j3(t)};yt.compositionstart=yt.compositionupdate=t=>{t.inputState.compositionFirstChange==null&&(t.inputState.compositionFirstChange=!0),t.inputState.composing<0&&(t.inputState.composing=0)};yt.compositionend=t=>{t.inputState.composing=-1,t.inputState.compositionEndedAt=Date.now(),t.inputState.compositionFirstChange=null,_.chrome&&_.android&&t.observer.flushSoon(),setTimeout(()=>{t.inputState.composing<0&&t.docView.compositionDeco.size&&t.update([])},50)};yt.contextmenu=t=>{t.inputState.lastContextMenu=Date.now()};yt.beforeinput=(t,e)=>{var n;let r;if(_.chrome&&_.android&&(r=Z3.find(i=>i.inputType==e.inputType))&&(t.observer.delayAndroidKey(r.key,r.keyCode),r.key=="Backspace"||r.key=="Delete")){let i=((n=window.visualViewport)===null||n===void 0?void 0:n.height)||0;setTimeout(()=>{var o;(((o=window.visualViewport)===null||o===void 0?void 0:o.height)||0)>i+10&&t.hasFocus&&(t.contentDOM.blur(),t.focus())},100)}};const g2=["pre-wrap","normal","pre-line","break-spaces"];class h7{constructor(e){this.lineWrapping=e,this.doc=Se.empty,this.heightSamples={},this.lineHeight=14,this.charWidth=7,this.lineLength=30,this.heightChanged=!1}heightForGap(e,n){let r=this.doc.lineAt(n).number-this.doc.lineAt(e).number+1;return this.lineWrapping&&(r+=Math.ceil((n-e-r*this.lineLength*.5)/this.lineLength)),this.lineHeight*r}heightForLine(e){return this.lineWrapping?(1+Math.max(0,Math.ceil((e-this.lineLength)/(this.lineLength-5))))*this.lineHeight:this.lineHeight}setDoc(e){return this.doc=e,this}mustRefreshForWrapping(e){return g2.indexOf(e)>-1!=this.lineWrapping}mustRefreshForHeights(e){let n=!1;for(let r=0;r<e.length;r++){let i=e[r];i<0?r++:this.heightSamples[Math.floor(i*10)]||(n=!0,this.heightSamples[Math.floor(i*10)]=!0)}return n}refresh(e,n,r,i,o){let s=g2.indexOf(e)>-1,a=Math.round(n)!=Math.round(this.lineHeight)||this.lineWrapping!=s;if(this.lineWrapping=s,this.lineHeight=n,this.charWidth=r,this.lineLength=i,a){this.heightSamples={};for(let l=0;l<o.length;l++){let c=o[l];c<0?l++:this.heightSamples[Math.floor(c*10)]=!0}}return a}}class p7{constructor(e,n){this.from=e,this.heights=n,this.index=0}get more(){return this.index<this.heights.length}}class io{constructor(e,n,r,i,o){this.from=e,this.length=n,this.top=r,this.height=i,this.type=o}get to(){return this.from+this.length}get bottom(){return this.top+this.height}join(e){let n=(Array.isArray(this.type)?this.type:[this]).concat(Array.isArray(e.type)?e.type:[e]);return new io(this.from,this.length+e.length,this.top,this.height+e.height,n)}}var Be=function(t){return t[t.ByPos=0]="ByPos",t[t.ByHeight=1]="ByHeight",t[t.ByPosNoHeight=2]="ByPosNoHeight",t}(Be||(Be={}));const sh=.001;class $t{constructor(e,n,r=2){this.length=e,this.height=n,this.flags=r}get outdated(){return(this.flags&2)>0}set outdated(e){this.flags=(e?2:0)|this.flags&-3}setHeight(e,n){this.height!=n&&(Math.abs(this.height-n)>sh&&(e.heightChanged=!0),this.height=n)}replace(e,n,r){return $t.of(r)}decomposeLeft(e,n){n.push(this)}decomposeRight(e,n){n.push(this)}applyChanges(e,n,r,i){let o=this;for(let s=i.length-1;s>=0;s--){let{fromA:a,toA:l,fromB:c,toB:u}=i[s],d=o.lineAt(a,Be.ByPosNoHeight,n,0,0),f=d.to>=l?d:o.lineAt(l,Be.ByPosNoHeight,n,0,0);for(u+=f.to-l,l=f.to;s>0&&d.from<=i[s-1].toA;)a=i[s-1].fromA,c=i[s-1].fromB,s--,a<d.from&&(d=o.lineAt(a,Be.ByPosNoHeight,n,0,0));c+=d.from-a,a=d.from;let h=gx.build(r,e,c,u);o=o.replace(a,l,h)}return o.updateHeight(r,0)}static empty(){return new kn(0,0)}static of(e){if(e.length==1)return e[0];let n=0,r=e.length,i=0,o=0;for(;;)if(n==r)if(i>o*2){let a=e[n-1];a.break?e.splice(--n,1,a.left,null,a.right):e.splice(--n,1,a.left,a.right),r+=1+a.break,i-=a.size}else if(o>i*2){let a=e[r];a.break?e.splice(r,1,a.left,null,a.right):e.splice(r,1,a.left,a.right),r+=2+a.break,o-=a.size}else break;else if(i<o){let a=e[n++];a&&(i+=a.size)}else{let a=e[--r];a&&(o+=a.size)}let s=0;return e[n-1]==null?(s=1,n--):e[n]==null&&(s=1,r++),new m7($t.of(e.slice(0,n)),s,$t.of(e.slice(r)))}}$t.prototype.size=1;class D3 extends $t{constructor(e,n,r){super(e,n),this.type=r}blockAt(e,n,r,i){return new io(i,this.length,r,this.height,this.type)}lineAt(e,n,r,i,o){return this.blockAt(0,r,i,o)}forEachLine(e,n,r,i,o,s){e<=o+this.length&&n>=o&&s(this.blockAt(0,r,i,o))}updateHeight(e,n=0,r=!1,i){return i&&i.from<=n&&i.more&&this.setHeight(e,i.heights[i.index++]),this.outdated=!1,this}toString(){return`block(${this.length})`}}class kn extends D3{constructor(e,n){super(e,n,Ve.Text),this.collapsed=0,this.widgetHeight=0}replace(e,n,r){let i=r[0];return r.length==1&&(i instanceof kn||i instanceof Pt&&i.flags&4)&&Math.abs(this.length-i.length)<10?(i instanceof Pt?i=new kn(i.length,this.height):i.height=this.height,this.outdated||(i.outdated=!1),i):$t.of(r)}updateHeight(e,n=0,r=!1,i){return i&&i.from<=n&&i.more?this.setHeight(e,i.heights[i.index++]):(r||this.outdated)&&this.setHeight(e,Math.max(this.widgetHeight,e.heightForLine(this.length-this.collapsed))),this.outdated=!1,this}toString(){return`line(${this.length}${this.collapsed?-this.collapsed:""}${this.widgetHeight?":"+this.widgetHeight:""})`}}class Pt extends $t{constructor(e){super(e,0)}lines(e,n){let r=e.lineAt(n).number,i=e.lineAt(n+this.length).number;return{firstLine:r,lastLine:i,lineHeight:this.height/(i-r+1)}}blockAt(e,n,r,i){let{firstLine:o,lastLine:s,lineHeight:a}=this.lines(n,i),l=Math.max(0,Math.min(s-o,Math.floor((e-r)/a))),{from:c,length:u}=n.line(o+l);return new io(c,u,r+a*l,a,Ve.Text)}lineAt(e,n,r,i,o){if(n==Be.ByHeight)return this.blockAt(e,r,i,o);if(n==Be.ByPosNoHeight){let{from:d,to:f}=r.lineAt(e);return new io(d,f-d,0,0,Ve.Text)}let{firstLine:s,lineHeight:a}=this.lines(r,o),{from:l,length:c,number:u}=r.lineAt(e);return new io(l,c,i+a*(u-s),a,Ve.Text)}forEachLine(e,n,r,i,o,s){let{firstLine:a,lineHeight:l}=this.lines(r,o);for(let c=Math.max(e,o),u=Math.min(o+this.length,n);c<=u;){let d=r.lineAt(c);c==e&&(i+=l*(d.number-a)),s(new io(d.from,d.length,i,l,Ve.Text)),i+=l,c=d.to+1}}replace(e,n,r){let i=this.length-n;if(i>0){let o=r[r.length-1];o instanceof Pt?r[r.length-1]=new Pt(o.length+i):r.push(null,new Pt(i-1))}if(e>0){let o=r[0];o instanceof Pt?r[0]=new Pt(e+o.length):r.unshift(new Pt(e-1),null)}return $t.of(r)}decomposeLeft(e,n){n.push(new Pt(e-1),null)}decomposeRight(e,n){n.push(null,new Pt(this.length-e-1))}updateHeight(e,n=0,r=!1,i){let o=n+this.length;if(i&&i.from<=n+this.length&&i.more){let s=[],a=Math.max(n,i.from),l=-1,c=e.heightChanged;for(i.from>n&&s.push(new Pt(i.from-n-1).updateHeight(e,n));a<=o&&i.more;){let d=e.doc.lineAt(a).length;s.length&&s.push(null);let f=i.heights[i.index++];l==-1?l=f:Math.abs(f-l)>=sh&&(l=-2);let h=new kn(d,f);h.outdated=!1,s.push(h),a+=d+1}a<=o&&s.push(null,new Pt(o-a).updateHeight(e,a));let u=$t.of(s);return e.heightChanged=c||l<0||Math.abs(u.height-this.height)>=sh||Math.abs(l-this.lines(e.doc,n).lineHeight)>=sh,u}else(r||this.outdated)&&(this.setHeight(e,e.heightForGap(n,n+this.length)),this.outdated=!1);return this}toString(){return`gap(${this.length})`}}class m7 extends $t{constructor(e,n,r){super(e.length+n+r.length,e.height+r.height,n|(e.outdated||r.outdated?2:0)),this.left=e,this.right=r,this.size=e.size+r.size}get break(){return this.flags&1}blockAt(e,n,r,i){let o=r+this.left.height;return e<o?this.left.blockAt(e,n,r,i):this.right.blockAt(e,n,o,i+this.left.length+this.break)}lineAt(e,n,r,i,o){let s=i+this.left.height,a=o+this.left.length+this.break,l=n==Be.ByHeight?e<s:e<a,c=l?this.left.lineAt(e,n,r,i,o):this.right.lineAt(e,n,r,s,a);if(this.break||(l?c.to<a:c.from>a))return c;let u=n==Be.ByPosNoHeight?Be.ByPosNoHeight:Be.ByPos;return l?c.join(this.right.lineAt(a,u,r,s,a)):this.left.lineAt(a,u,r,i,o).join(c)}forEachLine(e,n,r,i,o,s){let a=i+this.left.height,l=o+this.left.length+this.break;if(this.break)e<l&&this.left.forEachLine(e,n,r,i,o,s),n>=l&&this.right.forEachLine(e,n,r,a,l,s);else{let c=this.lineAt(l,Be.ByPos,r,i,o);e<c.from&&this.left.forEachLine(e,c.from-1,r,i,o,s),c.to>=e&&c.from<=n&&s(c),n>c.to&&this.right.forEachLine(c.to+1,n,r,a,l,s)}}replace(e,n,r){let i=this.left.length+this.break;if(n<i)return this.balanced(this.left.replace(e,n,r),this.right);if(e>this.left.length)return this.balanced(this.left,this.right.replace(e-i,n-i,r));let o=[];e>0&&this.decomposeLeft(e,o);let s=o.length;for(let a of r)o.push(a);if(e>0&&v2(o,s-1),n<this.length){let a=o.length;this.decomposeRight(n,o),v2(o,a)}return $t.of(o)}decomposeLeft(e,n){let r=this.left.length;if(e<=r)return this.left.decomposeLeft(e,n);n.push(this.left),this.break&&(r++,e>=r&&n.push(null)),e>r&&this.right.decomposeLeft(e-r,n)}decomposeRight(e,n){let r=this.left.length,i=r+this.break;if(e>=i)return this.right.decomposeRight(e-i,n);e<r&&this.left.decomposeRight(e,n),this.break&&e<i&&n.push(null),n.push(this.right)}balanced(e,n){return e.size>2*n.size||n.size>2*e.size?$t.of(this.break?[e,null,n]:[e,n]):(this.left=e,this.right=n,this.height=e.height+n.height,this.outdated=e.outdated||n.outdated,this.size=e.size+n.size,this.length=e.length+this.break+n.length,this)}updateHeight(e,n=0,r=!1,i){let{left:o,right:s}=this,a=n+o.length+this.break,l=null;return i&&i.from<=n+o.length&&i.more?l=o=o.updateHeight(e,n,r,i):o.updateHeight(e,n,r),i&&i.from<=a+s.length&&i.more?l=s=s.updateHeight(e,a,r,i):s.updateHeight(e,a,r),l?this.balanced(o,s):(this.height=this.left.height+this.right.height,this.outdated=!1,this)}toString(){return this.left+(this.break?" ":"-")+this.right}}function v2(t,e){let n,r;t[e]==null&&(n=t[e-1])instanceof Pt&&(r=t[e+1])instanceof Pt&&t.splice(e-1,3,new Pt(n.length+1+r.length))}const g7=5;class gx{constructor(e,n){this.pos=e,this.oracle=n,this.nodes=[],this.lineStart=-1,this.lineEnd=-1,this.covering=null,this.writtenTo=e}get isCovered(){return this.covering&&this.nodes[this.nodes.length-1]==this.covering}span(e,n){if(this.lineStart>-1){let r=Math.min(n,this.lineEnd),i=this.nodes[this.nodes.length-1];i instanceof kn?i.length+=r-this.pos:(r>this.pos||!this.isCovered)&&this.nodes.push(new kn(r-this.pos,-1)),this.writtenTo=r,n>r&&(this.nodes.push(null),this.writtenTo++,this.lineStart=-1)}this.pos=n}point(e,n,r){if(e<n||r.heightRelevant){let i=r.widget?r.widget.estimatedHeight:0;i<0&&(i=this.oracle.lineHeight);let o=n-e;r.block?this.addBlock(new D3(o,i,r.type)):(o||i>=g7)&&this.addLineDeco(i,o)}else n>e&&this.span(e,n);this.lineEnd>-1&&this.lineEnd<this.pos&&(this.lineEnd=this.oracle.doc.lineAt(this.pos).to)}enterLine(){if(this.lineStart>-1)return;let{from:e,to:n}=this.oracle.doc.lineAt(this.pos);this.lineStart=e,this.lineEnd=n,this.writtenTo<e&&((this.writtenTo<e-1||this.nodes[this.nodes.length-1]==null)&&this.nodes.push(this.blankContent(this.writtenTo,e-1)),this.nodes.push(null)),this.pos>e&&this.nodes.push(new kn(this.pos-e,-1)),this.writtenTo=this.pos}blankContent(e,n){let r=new Pt(n-e);return this.oracle.doc.lineAt(e).to==n&&(r.flags|=4),r}ensureLine(){this.enterLine();let e=this.nodes.length?this.nodes[this.nodes.length-1]:null;if(e instanceof kn)return e;let n=new kn(0,-1);return this.nodes.push(n),n}addBlock(e){this.enterLine(),e.type==Ve.WidgetAfter&&!this.isCovered&&this.ensureLine(),this.nodes.push(e),this.writtenTo=this.pos=this.pos+e.length,e.type!=Ve.WidgetBefore&&(this.covering=e)}addLineDeco(e,n){let r=this.ensureLine();r.length+=n,r.collapsed+=n,r.widgetHeight=Math.max(r.widgetHeight,e),this.writtenTo=this.pos=this.pos+n}finish(e){let n=this.nodes.length==0?null:this.nodes[this.nodes.length-1];this.lineStart>-1&&!(n instanceof kn)&&!this.isCovered?this.nodes.push(new kn(0,-1)):(this.writtenTo<this.pos||n==null)&&this.nodes.push(this.blankContent(this.writtenTo,this.pos));let r=e;for(let i of this.nodes)i instanceof kn&&i.updateHeight(this.oracle,r),r+=i?i.length:1;return this.nodes}static build(e,n,r,i){let o=new gx(r,e);return Oe.spans(n,r,i,o,0),o.finish(r)}}function v7(t,e,n){let r=new b7;return Oe.compare(t,e,n,r,0),r.changes}class b7{constructor(){this.changes=[]}compareRange(){}comparePoint(e,n,r,i){(e<n||r&&r.heightRelevant||i&&i.heightRelevant)&&Vb(e,n,this.changes,5)}}function y7(t,e){let n=t.getBoundingClientRect(),r=t.ownerDocument,i=r.defaultView||window,o=Math.max(0,n.left),s=Math.min(i.innerWidth,n.right),a=Math.max(0,n.top),l=Math.min(i.innerHeight,n.bottom);for(let c=t.parentNode;c&&c!=r.body;)if(c.nodeType==1){let u=c,d=window.getComputedStyle(u);if((u.scrollHeight>u.clientHeight||u.scrollWidth>u.clientWidth)&&d.overflow!="visible"){let f=u.getBoundingClientRect();o=Math.max(o,f.left),s=Math.min(s,f.right),a=Math.max(a,f.top),l=c==t.parentNode?f.bottom:Math.min(l,f.bottom)}c=d.position=="absolute"||d.position=="fixed"?u.offsetParent:u.parentNode}else if(c.nodeType==11)c=c.host;else break;return{left:o-n.left,right:Math.max(o,s)-n.left,top:a-(n.top+e),bottom:Math.max(a,l)-(n.top+e)}}function x7(t,e){let n=t.getBoundingClientRect();return{left:0,right:n.right-n.left,top:e,bottom:n.bottom-(n.top+e)}}class d0{constructor(e,n,r){this.from=e,this.to=n,this.size=r}static same(e,n){if(e.length!=n.length)return!1;for(let r=0;r<e.length;r++){let i=e[r],o=n[r];if(i.from!=o.from||i.to!=o.to||i.size!=o.size)return!1}return!0}draw(e){return F.replace({widget:new S7(this.size,e)}).range(this.from,this.to)}}class S7 extends Ni{constructor(e,n){super(),this.size=e,this.vertical=n}eq(e){return e.size==this.size&&e.vertical==this.vertical}toDOM(){let e=document.createElement("div");return this.vertical?e.style.height=this.size+"px":(e.style.width=this.size+"px",e.style.height="2px",e.style.display="inline-block"),e}get estimatedHeight(){return this.vertical?this.size:-1}}class b2{constructor(e){this.state=e,this.pixelViewport={left:0,right:window.innerWidth,top:0,bottom:0},this.inView=!0,this.paddingTop=0,this.paddingBottom=0,this.contentDOMWidth=0,this.contentDOMHeight=0,this.editorHeight=0,this.editorWidth=0,this.scaler=y2,this.scrollTarget=null,this.printing=!1,this.mustMeasureContent=!0,this.defaultTextDirection=Qe.LTR,this.visibleRanges=[],this.mustEnforceCursorAssoc=!1;let n=e.facet(mx).some(r=>typeof r!="function"&&r.class=="cm-lineWrapping");this.heightOracle=new h7(n),this.stateDeco=e.facet(Ru).filter(r=>typeof r!="function"),this.heightMap=$t.empty().applyChanges(this.stateDeco,Se.empty,this.heightOracle.setDoc(e.doc),[new Kr(0,0,0,e.doc.length)]),this.viewport=this.getViewport(0,null),this.updateViewportLines(),this.updateForViewport(),this.lineGaps=this.ensureLineGaps([]),this.lineGapDeco=F.set(this.lineGaps.map(r=>r.draw(!1))),this.computeVisibleRanges()}updateForViewport(){let e=[this.viewport],{main:n}=this.state.selection;for(let r=0;r<=1;r++){let i=r?n.head:n.anchor;if(!e.some(({from:o,to:s})=>i>=o&&i<=s)){let{from:o,to:s}=this.lineBlockAt(i);e.push(new tf(o,s))}}this.viewports=e.sort((r,i)=>r.from-i.from),this.scaler=this.heightMap.height<=7e6?y2:new O7(this.heightOracle.doc,this.heightMap,this.viewports)}updateViewportLines(){this.viewportLines=[],this.heightMap.forEachLine(this.viewport.from,this.viewport.to,this.state.doc,0,0,e=>{this.viewportLines.push(this.scaler.scale==1?e:Sc(e,this.scaler))})}update(e,n=null){this.state=e.state;let r=this.stateDeco;this.stateDeco=this.state.facet(Ru).filter(c=>typeof c!="function");let i=e.changedRanges,o=Kr.extendWithRanges(i,v7(r,this.stateDeco,e?e.changes:ht.empty(this.state.doc.length))),s=this.heightMap.height;this.heightMap=this.heightMap.applyChanges(this.stateDeco,e.startState.doc,this.heightOracle.setDoc(this.state.doc),o),this.heightMap.height!=s&&(e.flags|=2);let a=o.length?this.mapViewport(this.viewport,e.changes):this.viewport;(n&&(n.range.head<a.from||n.range.head>a.to)||!this.viewportIsAppropriate(a))&&(a=this.getViewport(0,n));let l=!e.changes.empty||e.flags&2||a.from!=this.viewport.from||a.to!=this.viewport.to;this.viewport=a,this.updateForViewport(),l&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>2e3<<1)&&this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps,e.changes))),e.flags|=this.computeVisibleRanges(),n&&(this.scrollTarget=n),!this.mustEnforceCursorAssoc&&e.selectionSet&&e.view.lineWrapping&&e.state.selection.main.empty&&e.state.selection.main.assoc&&!e.state.facet(M3)&&(this.mustEnforceCursorAssoc=!0)}measure(e){let n=e.contentDOM,r=window.getComputedStyle(n),i=this.heightOracle,o=r.whiteSpace;this.defaultTextDirection=r.direction=="rtl"?Qe.RTL:Qe.LTR;let s=this.heightOracle.mustRefreshForWrapping(o),a=s||this.mustMeasureContent||this.contentDOMHeight!=n.clientHeight;this.contentDOMHeight=n.clientHeight,this.mustMeasureContent=!1;let l=0,c=0,u=parseInt(r.paddingTop)||0,d=parseInt(r.paddingBottom)||0;(this.paddingTop!=u||this.paddingBottom!=d)&&(this.paddingTop=u,this.paddingBottom=d,l|=10),this.editorWidth!=e.scrollDOM.clientWidth&&(i.lineWrapping&&(a=!0),this.editorWidth=e.scrollDOM.clientWidth,l|=8);let f=(this.printing?x7:y7)(n,this.paddingTop),h=f.top-this.pixelViewport.top,p=f.bottom-this.pixelViewport.bottom;this.pixelViewport=f;let m=this.pixelViewport.bottom>this.pixelViewport.top&&this.pixelViewport.right>this.pixelViewport.left;if(m!=this.inView&&(this.inView=m,m&&(a=!0)),!this.inView&&!this.scrollTarget)return 0;let b=n.clientWidth;if((this.contentDOMWidth!=b||this.editorHeight!=e.scrollDOM.clientHeight)&&(this.contentDOMWidth=b,this.editorHeight=e.scrollDOM.clientHeight,l|=8),a){let v=e.docView.measureVisibleLineHeights(this.viewport);if(i.mustRefreshForHeights(v)&&(s=!0),s||i.lineWrapping&&Math.abs(b-this.contentDOMWidth)>i.charWidth){let{lineHeight:y,charWidth:x}=e.docView.measureTextSize();s=y>0&&i.refresh(o,y,x,b/x,v),s&&(e.docView.minWidth=0,l|=8)}h>0&&p>0?c=Math.max(h,p):h<0&&p<0&&(c=Math.min(h,p)),i.heightChanged=!1;for(let y of this.viewports){let x=y.from==this.viewport.from?v:e.docView.measureVisibleLineHeights(y);this.heightMap=(s?$t.empty().applyChanges(this.stateDeco,Se.empty,this.heightOracle,[new Kr(0,0,0,e.state.doc.length)]):this.heightMap).updateHeight(i,0,s,new p7(y.from,x))}i.heightChanged&&(l|=2)}let g=!this.viewportIsAppropriate(this.viewport,c)||this.scrollTarget&&(this.scrollTarget.range.head<this.viewport.from||this.scrollTarget.range.head>this.viewport.to);return g&&(this.viewport=this.getViewport(c,this.scrollTarget)),this.updateForViewport(),(l&2||g)&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>2e3<<1)&&this.updateLineGaps(this.ensureLineGaps(s?[]:this.lineGaps,e)),l|=this.computeVisibleRanges(),this.mustEnforceCursorAssoc&&(this.mustEnforceCursorAssoc=!1,e.docView.enforceCursorAssoc()),l}get visibleTop(){return this.scaler.fromDOM(this.pixelViewport.top)}get visibleBottom(){return this.scaler.fromDOM(this.pixelViewport.bottom)}getViewport(e,n){let r=.5-Math.max(-.5,Math.min(.5,e/1e3/2)),i=this.heightMap,o=this.state.doc,{visibleTop:s,visibleBottom:a}=this,l=new tf(i.lineAt(s-r*1e3,Be.ByHeight,o,0,0).from,i.lineAt(a+(1-r)*1e3,Be.ByHeight,o,0,0).to);if(n){let{head:c}=n.range;if(c<l.from||c>l.to){let u=Math.min(this.editorHeight,this.pixelViewport.bottom-this.pixelViewport.top),d=i.lineAt(c,Be.ByPos,o,0,0),f;n.y=="center"?f=(d.top+d.bottom)/2-u/2:n.y=="start"||n.y=="nearest"&&c<l.from?f=d.top:f=d.bottom-u,l=new tf(i.lineAt(f-1e3/2,Be.ByHeight,o,0,0).from,i.lineAt(f+u+1e3/2,Be.ByHeight,o,0,0).to)}}return l}mapViewport(e,n){let r=n.mapPos(e.from,-1),i=n.mapPos(e.to,1);return new tf(this.heightMap.lineAt(r,Be.ByPos,this.state.doc,0,0).from,this.heightMap.lineAt(i,Be.ByPos,this.state.doc,0,0).to)}viewportIsAppropriate({from:e,to:n},r=0){if(!this.inView)return!0;let{top:i}=this.heightMap.lineAt(e,Be.ByPos,this.state.doc,0,0),{bottom:o}=this.heightMap.lineAt(n,Be.ByPos,this.state.doc,0,0),{visibleTop:s,visibleBottom:a}=this;return(e==0||i<=s-Math.max(10,Math.min(-r,250)))&&(n==this.state.doc.length||o>=a+Math.max(10,Math.min(r,250)))&&i>s-2*1e3&&o<a+2*1e3}mapLineGaps(e,n){if(!e.length||n.empty)return e;let r=[];for(let i of e)n.touchesRange(i.from,i.to)||r.push(new d0(n.mapPos(i.from),n.mapPos(i.to),i.size));return r}ensureLineGaps(e,n){let r=this.heightOracle.lineWrapping,i=r?1e4:2e3,o=i>>1,s=i<<1;if(this.defaultTextDirection!=Qe.LTR&&!r)return[];let a=[],l=(c,u,d,f)=>{if(u-c<o)return;let h=this.state.selection.main,p=[h.from];h.empty||p.push(h.to);for(let b of p)if(b>c&&b<u){l(c,b-10,d,f),l(b+10,u,d,f);return}let m=w7(e,b=>b.from>=d.from&&b.to<=d.to&&Math.abs(b.from-c)<o&&Math.abs(b.to-u)<o&&!p.some(g=>b.from<g&&b.to>g));if(!m){if(u<d.to&&n&&r&&n.visibleRanges.some(b=>b.from<=u&&b.to>=u)){let b=n.moveToLineBoundary(V.cursor(u),!1,!0).head;b>c&&(u=b)}m=new d0(c,u,this.gapSize(d,c,u,f))}a.push(m)};for(let c of this.viewportLines){if(c.length<s)continue;let u=k7(c.from,c.to,this.stateDeco);if(u.total<s)continue;let d=this.scrollTarget?this.scrollTarget.range.head:null,f,h;if(r){let p=i/this.heightOracle.lineLength*this.heightOracle.lineHeight,m,b;if(d!=null){let g=rf(u,d),v=((this.visibleBottom-this.visibleTop)/2+p)/c.height;m=g-v,b=g+v}else m=(this.visibleTop-c.top-p)/c.height,b=(this.visibleBottom-c.top+p)/c.height;f=nf(u,m),h=nf(u,b)}else{let p=u.total*this.heightOracle.charWidth,m=i*this.heightOracle.charWidth,b,g;if(d!=null){let v=rf(u,d),y=((this.pixelViewport.right-this.pixelViewport.left)/2+m)/p;b=v-y,g=v+y}else b=(this.pixelViewport.left-m)/p,g=(this.pixelViewport.right+m)/p;f=nf(u,b),h=nf(u,g)}f>c.from&&l(c.from,f,c,u),h<c.to&&l(h,c.to,c,u)}return a}gapSize(e,n,r,i){let o=rf(i,r)-rf(i,n);return this.heightOracle.lineWrapping?e.height*o:i.total*this.heightOracle.charWidth*o}updateLineGaps(e){d0.same(e,this.lineGaps)||(this.lineGaps=e,this.lineGapDeco=F.set(e.map(n=>n.draw(this.heightOracle.lineWrapping))))}computeVisibleRanges(){let e=this.stateDeco;this.lineGaps.length&&(e=e.concat(this.lineGapDeco));let n=[];Oe.spans(e,this.viewport.from,this.viewport.to,{span(i,o){n.push({from:i,to:o})},point(){}},20);let r=n.length!=this.visibleRanges.length||this.visibleRanges.some((i,o)=>i.from!=n[o].from||i.to!=n[o].to);return this.visibleRanges=n,r?4:0}lineBlockAt(e){return e>=this.viewport.from&&e<=this.viewport.to&&this.viewportLines.find(n=>n.from<=e&&n.to>=e)||Sc(this.heightMap.lineAt(e,Be.ByPos,this.state.doc,0,0),this.scaler)}lineBlockAtHeight(e){return Sc(this.heightMap.lineAt(this.scaler.fromDOM(e),Be.ByHeight,this.state.doc,0,0),this.scaler)}elementAtHeight(e){return Sc(this.heightMap.blockAt(this.scaler.fromDOM(e),this.state.doc,0,0),this.scaler)}get docHeight(){return this.scaler.toDOM(this.heightMap.height)}get contentHeight(){return this.docHeight+this.paddingTop+this.paddingBottom}}class tf{constructor(e,n){this.from=e,this.to=n}}function k7(t,e,n){let r=[],i=t,o=0;return Oe.spans(n,t,e,{span(){},point(s,a){s>i&&(r.push({from:i,to:s}),o+=s-i),i=a}},20),i<e&&(r.push({from:i,to:e}),o+=e-i),{total:o,ranges:r}}function nf({total:t,ranges:e},n){if(n<=0)return e[0].from;if(n>=1)return e[e.length-1].to;let r=Math.floor(t*n);for(let i=0;;i++){let{from:o,to:s}=e[i],a=s-o;if(r<=a)return o+r;r-=a}}function rf(t,e){let n=0;for(let{from:r,to:i}of t.ranges){if(e<=i){n+=e-r;break}n+=i-r}return n/t.total}function w7(t,e){for(let n of t)if(e(n))return n}const y2={toDOM(t){return t},fromDOM(t){return t},scale:1};class O7{constructor(e,n,r){let i=0,o=0,s=0;this.viewports=r.map(({from:a,to:l})=>{let c=n.lineAt(a,Be.ByPos,e,0,0).top,u=n.lineAt(l,Be.ByPos,e,0,0).bottom;return i+=u-c,{from:a,to:l,top:c,bottom:u,domTop:0,domBottom:0}}),this.scale=(7e6-i)/(n.height-i);for(let a of this.viewports)a.domTop=s+(a.top-o)*this.scale,s=a.domBottom=a.domTop+(a.bottom-a.top),o=a.bottom}toDOM(e){for(let n=0,r=0,i=0;;n++){let o=n<this.viewports.length?this.viewports[n]:null;if(!o||e<o.top)return i+(e-r)*this.scale;if(e<=o.bottom)return o.domTop+(e-o.top);r=o.bottom,i=o.domBottom}}fromDOM(e){for(let n=0,r=0,i=0;;n++){let o=n<this.viewports.length?this.viewports[n]:null;if(!o||e<o.domTop)return r+(e-i)/this.scale;if(e<=o.domBottom)return o.top+(e-o.domTop);r=o.bottom,i=o.domBottom}}}function Sc(t,e){if(e.scale==1)return t;let n=e.toDOM(t.top),r=e.toDOM(t.bottom);return new io(t.from,t.length,n,r-n,Array.isArray(t.type)?t.type.map(i=>Sc(i,e)):t.type)}const of=$.define({combine:t=>t.join(" ")}),Wb=$.define({combine:t=>t.indexOf(!0)>-1}),Yb=Oo.newName(),U3=Oo.newName(),K3=Oo.newName(),q3={"&light":"."+U3,"&dark":"."+K3};function Fb(t,e,n){return new Oo(e,{finish(r){return/&/.test(r)?r.replace(/&\w*/,i=>{if(i=="&")return t;if(!n||!n[i])throw new RangeError(`Unsupported selector: ${i}`);return n[i]}):t+" "+r}})}const T7=Fb("."+Yb,{"&.cm-editor":{position:"relative !important",boxSizing:"border-box","&.cm-focused":{outline:"1px dotted #212121"},display:"flex !important",flexDirection:"column"},".cm-scroller":{display:"flex !important",alignItems:"flex-start !important",fontFamily:"monospace",lineHeight:1.4,height:"100%",overflowX:"auto",position:"relative",zIndex:0},".cm-content":{margin:0,flexGrow:2,flexShrink:0,minHeight:"100%",display:"block",whiteSpace:"pre",wordWrap:"normal",boxSizing:"border-box",padding:"4px 0",outline:"none","&[contenteditable=true]":{WebkitUserModify:"read-write-plaintext-only"}},".cm-lineWrapping":{whiteSpace_fallback:"pre-wrap",whiteSpace:"break-spaces",wordBreak:"break-word",overflowWrap:"anywhere",flexShrink:1},"&light .cm-content":{caretColor:"black"},"&dark .cm-content":{caretColor:"white"},".cm-line":{display:"block",padding:"0 2px 0 6px"},".cm-layer":{contain:"size style","& > *":{position:"absolute"}},"&light .cm-selectionBackground":{background:"#d9d9d9"},"&dark .cm-selectionBackground":{background:"#222"},"&light.cm-focused .cm-selectionBackground":{background:"#d7d4f0"},"&dark.cm-focused .cm-selectionBackground":{background:"#233"},".cm-cursorLayer":{pointerEvents:"none"},"&.cm-focused .cm-cursorLayer":{animation:"steps(1) cm-blink 1.2s infinite"},"@keyframes cm-blink":{"0%":{},"50%":{opacity:0},"100%":{}},"@keyframes cm-blink2":{"0%":{},"50%":{opacity:0},"100%":{}},".cm-cursor, .cm-dropCursor":{borderLeft:"1.2px solid black",marginLeft:"-0.6px",pointerEvents:"none"},".cm-cursor":{display:"none"},"&dark .cm-cursor":{borderLeftColor:"#444"},"&.cm-focused .cm-cursor":{display:"block"},"&light .cm-activeLine":{backgroundColor:"#cceeff44"},"&dark .cm-activeLine":{backgroundColor:"#99eeff33"},"&light .cm-specialChar":{color:"red"},"&dark .cm-specialChar":{color:"#f78"},".cm-gutters":{flexShrink:0,display:"flex",height:"100%",boxSizing:"border-box",left:0,zIndex:200},"&light .cm-gutters":{backgroundColor:"#f5f5f5",color:"#6c6c6c",borderRight:"1px solid #ddd"},"&dark .cm-gutters":{backgroundColor:"#333338",color:"#ccc"},".cm-gutter":{display:"flex !important",flexDirection:"column",flexShrink:0,boxSizing:"border-box",minHeight:"100%",overflow:"hidden"},".cm-gutterElement":{boxSizing:"border-box"},".cm-lineNumbers .cm-gutterElement":{padding:"0 3px 0 5px",minWidth:"20px",textAlign:"right",whiteSpace:"nowrap"},"&light .cm-activeLineGutter":{backgroundColor:"#e2f2ff"},"&dark .cm-activeLineGutter":{backgroundColor:"#222227"},".cm-panels":{boxSizing:"border-box",position:"sticky",left:0,right:0},"&light .cm-panels":{backgroundColor:"#f5f5f5",color:"black"},"&light .cm-panels-top":{borderBottom:"1px solid #ddd"},"&light .cm-panels-bottom":{borderTop:"1px solid #ddd"},"&dark .cm-panels":{backgroundColor:"#333338",color:"white"},".cm-tab":{display:"inline-block",overflow:"hidden",verticalAlign:"bottom"},".cm-widgetBuffer":{verticalAlign:"text-top",height:"1em",width:0,display:"inline"},".cm-placeholder":{color:"#888",display:"inline-block",verticalAlign:"top"},".cm-button":{verticalAlign:"middle",color:"inherit",fontSize:"70%",padding:".2em 1em",borderRadius:"1px"},"&light .cm-button":{backgroundImage:"linear-gradient(#eff1f5, #d9d9df)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#b4b4b4, #d0d3d6)"}},"&dark .cm-button":{backgroundImage:"linear-gradient(#393939, #111)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#111, #333)"}},".cm-textfield":{verticalAlign:"middle",color:"inherit",fontSize:"70%",border:"1px solid silver",padding:".2em .5em"},"&light .cm-textfield":{backgroundColor:"white"},"&dark .cm-textfield":{border:"1px solid #555",backgroundColor:"inherit"}},q3);class P7{constructor(e,n,r,i){this.typeOver=i,this.bounds=null,this.text="";let{impreciseHead:o,impreciseAnchor:s}=e.docView;if(e.state.readOnly&&n>-1)this.newSel=null;else if(n>-1&&(this.bounds=e.docView.domBoundsAround(n,r,0))){let a=o||s?[]:M7(e),l=new L3(a,e.state);l.readRange(this.bounds.startDOM,this.bounds.endDOM),this.text=l.text,this.newSel=R7(a,this.bounds.from)}else{let a=e.observer.selectionRange,l=o&&o.node==a.focusNode&&o.offset==a.focusOffset||!dl(e.contentDOM,a.focusNode)?e.state.selection.main.head:e.docView.posFromDOM(a.focusNode,a.focusOffset),c=s&&s.node==a.anchorNode&&s.offset==a.anchorOffset||!dl(e.contentDOM,a.anchorNode)?e.state.selection.main.anchor:e.docView.posFromDOM(a.anchorNode,a.anchorOffset);this.newSel=V.single(c,l)}}}function Q3(t,e){let n,{newSel:r}=e,i=t.state.selection.main;if(e.bounds){let{from:o,to:s}=e.bounds,a=i.from,l=null;(t.inputState.lastKeyCode===8&&t.inputState.lastKeyTime>Date.now()-100||_.android&&e.text.length<s-o)&&(a=i.to,l="end");let c=C7(t.state.doc.sliceString(o,s,ro),e.text,a-o,l);c&&(_.chrome&&t.inputState.lastKeyCode==13&&c.toB==c.from+2&&e.text.slice(c.from,c.toB)==ro+ro&&c.toB--,n={from:o+c.from,to:o+c.toA,insert:Se.of(e.text.slice(c.from,c.toB).split(ro))})}else r&&(!t.hasFocus||!t.state.facet(Om)||r.main.eq(i))&&(r=null);if(!n&&!r)return!1;if(!n&&e.typeOver&&!i.empty&&r&&r.main.empty?n={from:i.from,to:i.to,insert:t.state.doc.slice(i.from,i.to)}:n&&n.from>=i.from&&n.to<=i.to&&(n.from!=i.from||n.to!=i.to)&&i.to-i.from-(n.to-n.from)<=4?n={from:i.from,to:i.to,insert:t.state.doc.slice(i.from,n.from).append(n.insert).append(t.state.doc.slice(n.to,i.to))}:(_.mac||_.android)&&n&&n.from==n.to&&n.from==i.head-1&&/^\. ?$/.test(n.insert.toString())?(r&&n.insert.length==2&&(r=V.single(r.main.anchor-1,r.main.head-1)),n={from:i.from,to:i.to,insert:Se.of([" "])}):_.chrome&&n&&n.from==n.to&&n.from==i.head&&n.insert.toString()==`
 `&&t.lineWrapping&&(r&&(r=V.single(r.main.anchor-1,r.main.head-1)),n={from:i.from,to:i.to,insert:Se.of([" "])}),n){let o=t.state;if(_.ios&&t.inputState.flushIOSKey(t)||_.android&&(n.from==i.from&&n.to==i.to&&n.insert.length==1&&n.insert.lines==2&&Fa(t.contentDOM,"Enter",13)||n.from==i.from-1&&n.to==i.to&&n.insert.length==0&&Fa(t.contentDOM,"Backspace",8)||n.from==i.from&&n.to==i.to+1&&n.insert.length==0&&Fa(t.contentDOM,"Delete",46)))return!0;let s=n.insert.toString();if(t.state.facet(P3).some(c=>c(t,n.from,n.to,s)))return!0;t.inputState.composing>=0&&t.inputState.composing++;let a;if(n.from>=i.from&&n.to<=i.to&&n.to-n.from>=(i.to-i.from)/3&&(!r||r.main.empty&&r.main.from==n.from+n.insert.length)&&t.inputState.composing<0){let c=i.from<n.from?o.sliceDoc(i.from,n.from):"",u=i.to>n.to?o.sliceDoc(n.to,i.to):"";a=o.replaceSelection(t.state.toText(c+n.insert.sliceString(0,void 0,t.state.lineBreak)+u))}else{let c=o.changes(n),u=r&&!o.selection.main.eq(r.main)&&r.main.to<=c.newLength?r.main:void 0;if(o.selection.ranges.length>1&&t.inputState.composing>=0&&n.to<=i.to&&n.to>=i.to-10){let d=t.state.sliceDoc(n.from,n.to),f=X3(t)||t.state.doc.lineAt(i.head),h=i.to-n.to,p=i.to-i.from;a=o.changeByRange(m=>{if(m.from==i.from&&m.to==i.to)return{changes:c,range:u||m.map(c)};let b=m.to-h,g=b-d.length;if(m.to-m.from!=p||t.state.sliceDoc(g,b)!=d||f&&m.to>=f.from&&m.from<=f.to)return{range:m};let v=o.changes({from:g,to:b,insert:n.insert}),y=m.to-i.to;return{changes:v,range:u?V.range(Math.max(0,u.anchor+y),Math.max(0,u.head+y)):m.map(v)}})}else a={changes:c,selection:u&&o.selection.replaceRange(u)}}let l="input.type";return t.composing&&(l+=".compose",t.inputState.compositionFirstChange&&(l+=".start",t.inputState.compositionFirstChange=!1)),t.dispatch(a,{scrollIntoView:!0,userEvent:l}),!0}else if(r&&!r.main.eq(i)){let o=!1,s="select";return t.inputState.lastSelectionTime>Date.now()-50&&(t.inputState.lastSelectionOrigin=="select"&&(o=!0),s=t.inputState.lastSelectionOrigin),t.dispatch({selection:r,scrollIntoView:o,userEvent:s}),!0}else return!1}function C7(t,e,n,r){let i=Math.min(t.length,e.length),o=0;for(;o<i&&t.charCodeAt(o)==e.charCodeAt(o);)o++;if(o==i&&t.length==e.length)return null;let s=t.length,a=e.length;for(;s>0&&a>0&&t.charCodeAt(s-1)==e.charCodeAt(a-1);)s--,a--;if(r=="end"){let l=Math.max(0,o-Math.min(s,a));n-=s+l-o}if(s<o&&t.length<e.length){let l=n<=o&&n>=s?o-n:0;o-=l,a=o+(a-s),s=o}else if(a<o){let l=n<=o&&n>=a?o-n:0;o-=l,s=o+(s-a),a=o}return{from:o,toA:s,toB:a}}function M7(t){let e=[];if(t.root.activeElement!=t.contentDOM)return e;let{anchorNode:n,anchorOffset:r,focusNode:i,focusOffset:o}=t.observer.selectionRange;return n&&(e.push(new e2(n,r)),(i!=n||o!=r)&&e.push(new e2(i,o))),e}function R7(t,e){if(t.length==0)return null;let n=t[0].pos,r=t.length==2?t[1].pos:n;return n>-1&&r>-1?V.single(n+e,r+e):null}const I7={childList:!0,characterData:!0,subtree:!0,attributes:!0,characterDataOldValue:!0},f0=_.ie&&_.ie_version<=11;class z7{constructor(e){this.view=e,this.active=!1,this.selectionRange=new OZ,this.selectionChanged=!1,this.delayedFlush=-1,this.resizeTimeout=-1,this.queue=[],this.delayedAndroidKey=null,this.flushingAndroidKey=-1,this.lastChange=0,this.scrollTargets=[],this.intersection=null,this.resize=null,this.intersecting=!1,this.gapIntersection=null,this.gaps=[],this.parentCheck=-1,this.dom=e.contentDOM,this.observer=new MutationObserver(n=>{for(let r of n)this.queue.push(r);(_.ie&&_.ie_version<=11||_.ios&&e.composing)&&n.some(r=>r.type=="childList"&&r.removedNodes.length||r.type=="characterData"&&r.oldValue.length>r.target.nodeValue.length)?this.flushSoon():this.flush()}),f0&&(this.onCharData=n=>{this.queue.push({target:n.target,type:"characterData",oldValue:n.prevValue}),this.flushSoon()}),this.onSelectionChange=this.onSelectionChange.bind(this),this.onResize=this.onResize.bind(this),this.onPrint=this.onPrint.bind(this),this.onScroll=this.onScroll.bind(this),typeof ResizeObserver=="function"&&(this.resize=new ResizeObserver(()=>{var n;((n=this.view.docView)===null||n===void 0?void 0:n.lastUpdate)<Date.now()-75&&this.onResize()}),this.resize.observe(e.scrollDOM)),this.addWindowListeners(this.win=e.win),this.start(),typeof IntersectionObserver=="function"&&(this.intersection=new IntersectionObserver(n=>{this.parentCheck<0&&(this.parentCheck=setTimeout(this.listenForScroll.bind(this),1e3)),n.length>0&&n[n.length-1].intersectionRatio>0!=this.intersecting&&(this.intersecting=!this.intersecting,this.intersecting!=this.view.inView&&this.onScrollChanged(document.createEvent("Event")))},{}),this.intersection.observe(this.dom),this.gapIntersection=new IntersectionObserver(n=>{n.length>0&&n[n.length-1].intersectionRatio>0&&this.onScrollChanged(document.createEvent("Event"))},{})),this.listenForScroll(),this.readSelectionRange()}onScrollChanged(e){this.view.inputState.runScrollHandlers(this.view,e),this.intersecting&&this.view.measure()}onScroll(e){this.intersecting&&this.flush(!1),this.onScrollChanged(e)}onResize(){this.resizeTimeout<0&&(this.resizeTimeout=setTimeout(()=>{this.resizeTimeout=-1,this.view.requestMeasure()},50))}onPrint(){this.view.viewState.printing=!0,this.view.measure(),setTimeout(()=>{this.view.viewState.printing=!1,this.view.requestMeasure()},500)}updateGaps(e){if(this.gapIntersection&&(e.length!=this.gaps.length||this.gaps.some((n,r)=>n!=e[r]))){this.gapIntersection.disconnect();for(let n of e)this.gapIntersection.observe(n);this.gaps=e}}onSelectionChange(e){let n=this.selectionChanged;if(!this.readSelectionRange()||this.delayedAndroidKey)return;let{view:r}=this,i=this.selectionRange;if(r.state.facet(Om)?r.root.activeElement!=this.dom:!oh(r.dom,i))return;let o=i.anchorNode&&r.docView.nearest(i.anchorNode);if(o&&o.ignoreEvent(e)){n||(this.selectionChanged=!1);return}(_.ie&&_.ie_version<=11||_.android&&_.chrome)&&!r.state.selection.main.empty&&i.focusNode&&rp(i.focusNode,i.focusOffset,i.anchorNode,i.anchorOffset)?this.flushSoon():this.flush(!1)}readSelectionRange(){let{view:e}=this,n=_.safari&&e.root.nodeType==11&&SZ(this.dom.ownerDocument)==this.dom&&E7(this.view)||np(e.root);if(!n||this.selectionRange.eq(n))return!1;let r=oh(this.dom,n);return r&&!this.selectionChanged&&e.inputState.lastFocusTime>Date.now()-200&&e.inputState.lastTouchTime<Date.now()-300&&PZ(this.dom,n)?(this.view.inputState.lastFocusTime=0,e.docView.updateSelection(),!1):(this.selectionRange.setRange(n),r&&(this.selectionChanged=!0),!0)}setSelectionRange(e,n){this.selectionRange.set(e.node,e.offset,n.node,n.offset),this.selectionChanged=!1}clearSelectionRange(){this.selectionRange.set(null,0,null,0)}listenForScroll(){this.parentCheck=-1;let e=0,n=null;for(let r=this.dom;r;)if(r.nodeType==1)!n&&e<this.scrollTargets.length&&this.scrollTargets[e]==r?e++:n||(n=this.scrollTargets.slice(0,e)),n&&n.push(r),r=r.assignedSlot||r.parentNode;else if(r.nodeType==11)r=r.host;else break;if(e<this.scrollTargets.length&&!n&&(n=this.scrollTargets.slice(0,e)),n){for(let r of this.scrollTargets)r.removeEventListener("scroll",this.onScroll);for(let r of this.scrollTargets=n)r.addEventListener("scroll",this.onScroll)}}ignore(e){if(!this.active)return e();try{return this.stop(),e()}finally{this.start(),this.clear()}}start(){this.active||(this.observer.observe(this.dom,I7),f0&&this.dom.addEventListener("DOMCharacterDataModified",this.onCharData),this.active=!0)}stop(){!this.active||(this.active=!1,this.observer.disconnect(),f0&&this.dom.removeEventListener("DOMCharacterDataModified",this.onCharData))}clear(){this.processRecords(),this.queue.length=0,this.selectionChanged=!1}delayAndroidKey(e,n){var r;if(!this.delayedAndroidKey){let i=()=>{let o=this.delayedAndroidKey;o&&(this.clearDelayedAndroidKey(),!this.flush()&&o.force&&Fa(this.dom,o.key,o.keyCode))};this.flushingAndroidKey=this.view.win.requestAnimationFrame(i)}(!this.delayedAndroidKey||e=="Enter")&&(this.delayedAndroidKey={key:e,keyCode:n,force:this.lastChange<Date.now()-50||!!(!((r=this.delayedAndroidKey)===null||r===void 0)&&r.force)})}clearDelayedAndroidKey(){this.win.cancelAnimationFrame(this.flushingAndroidKey),this.delayedAndroidKey=null,this.flushingAndroidKey=-1}flushSoon(){this.delayedFlush<0&&(this.delayedFlush=this.view.win.requestAnimationFrame(()=>{this.delayedFlush=-1,this.flush()}))}forceFlush(){this.delayedFlush>=0&&(this.view.win.cancelAnimationFrame(this.delayedFlush),this.delayedFlush=-1),this.flush()}processRecords(){let e=this.queue;for(let o of this.observer.takeRecords())e.push(o);e.length&&(this.queue=[]);let n=-1,r=-1,i=!1;for(let o of e){let s=this.readMutation(o);!s||(s.typeOver&&(i=!0),n==-1?{from:n,to:r}=s:(n=Math.min(s.from,n),r=Math.max(s.to,r)))}return{from:n,to:r,typeOver:i}}readChange(){let{from:e,to:n,typeOver:r}=this.processRecords(),i=this.selectionChanged&&oh(this.dom,this.selectionRange);return e<0&&!i?null:(e>-1&&(this.lastChange=Date.now()),this.view.inputState.lastFocusTime=0,this.selectionChanged=!1,new P7(this.view,e,n,r))}flush(e=!0){if(this.delayedFlush>=0||this.delayedAndroidKey)return!1;e&&this.readSelectionRange();let n=this.readChange();if(!n)return!1;let r=this.view.state,i=Q3(this.view,n);return this.view.state==r&&this.view.update([]),i}readMutation(e){let n=this.view.docView.nearest(e.target);if(!n||n.ignoreMutation(e))return null;if(n.markDirty(e.type=="attributes"),e.type=="attributes"&&(n.dirty|=4),e.type=="childList"){let r=x2(n,e.previousSibling||e.target.previousSibling,-1),i=x2(n,e.nextSibling||e.target.nextSibling,1);return{from:r?n.posAfter(r):n.posAtStart,to:i?n.posBefore(i):n.posAtEnd,typeOver:!1}}else return e.type=="characterData"?{from:n.posAtStart,to:n.posAtEnd,typeOver:e.target.nodeValue==e.oldValue}:null}setWindow(e){e!=this.win&&(this.removeWindowListeners(this.win),this.win=e,this.addWindowListeners(this.win))}addWindowListeners(e){e.addEventListener("resize",this.onResize),e.addEventListener("beforeprint",this.onPrint),e.addEventListener("scroll",this.onScroll),e.document.addEventListener("selectionchange",this.onSelectionChange)}removeWindowListeners(e){e.removeEventListener("scroll",this.onScroll),e.removeEventListener("resize",this.onResize),e.removeEventListener("beforeprint",this.onPrint),e.document.removeEventListener("selectionchange",this.onSelectionChange)}destroy(){var e,n,r;this.stop(),(e=this.intersection)===null||e===void 0||e.disconnect(),(n=this.gapIntersection)===null||n===void 0||n.disconnect(),(r=this.resize)===null||r===void 0||r.disconnect();for(let i of this.scrollTargets)i.removeEventListener("scroll",this.onScroll);this.removeWindowListeners(this.win),clearTimeout(this.parentCheck),clearTimeout(this.resizeTimeout),this.win.cancelAnimationFrame(this.delayedFlush),this.win.cancelAnimationFrame(this.flushingAndroidKey)}}function x2(t,e,n){for(;e;){let r=Ze.get(e);if(r&&r.parent==t)return r;let i=e.parentNode;e=i!=t.dom?i:n>0?e.nextSibling:e.previousSibling}return null}function E7(t){let e=null;function n(l){l.preventDefault(),l.stopImmediatePropagation(),e=l.getTargetRanges()[0]}if(t.contentDOM.addEventListener("beforeinput",n,!0),t.dom.ownerDocument.execCommand("indent"),t.contentDOM.removeEventListener("beforeinput",n,!0),!e)return null;let r=e.startContainer,i=e.startOffset,o=e.endContainer,s=e.endOffset,a=t.docView.domAtPos(t.state.selection.main.anchor);return rp(a.node,a.offset,o,s)&&([r,i,o,s]=[o,s,r,i]),{anchorNode:r,anchorOffset:i,focusNode:o,focusOffset:s}}class K{constructor(e={}){this.plugins=[],this.pluginMap=new Map,this.editorAttrs={},this.contentAttrs={},this.bidiCache=[],this.destroyed=!1,this.updateState=2,this.measureScheduled=-1,this.measureRequests=[],this.contentDOM=document.createElement("div"),this.scrollDOM=document.createElement("div"),this.scrollDOM.tabIndex=-1,this.scrollDOM.className="cm-scroller",this.scrollDOM.appendChild(this.contentDOM),this.announceDOM=document.createElement("div"),this.announceDOM.style.cssText="position: absolute; top: -10000px",this.announceDOM.setAttribute("aria-live","polite"),this.dom=document.createElement("div"),this.dom.appendChild(this.announceDOM),this.dom.appendChild(this.scrollDOM),this._dispatch=e.dispatch||(n=>this.update([n])),this.dispatch=this.dispatch.bind(this),this._root=e.root||TZ(e.parent)||document,this.viewState=new b2(e.state||pe.create(e)),this.plugins=this.state.facet(yc).map(n=>new l0(n));for(let n of this.plugins)n.update(this);this.observer=new z7(this),this.inputState=new e7(this),this.inputState.ensureHandlers(this,this.plugins),this.docView=new t2(this),this.mountStyles(),this.updateAttrs(),this.updateState=0,this.requestMeasure(),e.parent&&e.parent.appendChild(this.dom)}get state(){return this.viewState.state}get viewport(){return this.viewState.viewport}get visibleRanges(){return this.viewState.visibleRanges}get inView(){return this.viewState.inView}get composing(){return this.inputState.composing>0}get compositionStarted(){return this.inputState.composing>=0}get root(){return this._root}get win(){return this.dom.ownerDocument.defaultView||window}dispatch(...e){this._dispatch(e.length==1&&e[0]instanceof mt?e[0]:this.state.update(...e))}update(e){if(this.updateState!=0)throw new Error("Calls to EditorView.update are not allowed while an update is in progress");let n=!1,r=!1,i,o=this.state;for(let c of e){if(c.startState!=o)throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");o=c.state}if(this.destroyed){this.viewState.state=o;return}let s=this.observer.delayedAndroidKey,a=null;if(s?(this.observer.clearDelayedAndroidKey(),a=this.observer.readChange(),(a&&!this.state.doc.eq(o.doc)||!this.state.selection.eq(o.selection))&&(a=null)):this.observer.clear(),o.facet(pe.phrases)!=this.state.facet(pe.phrases))return this.setState(o);i=sp.create(this,o,e);let l=this.viewState.scrollTarget;try{this.updateState=2;for(let c of e){if(l&&(l=l.map(c.changes)),c.scrollIntoView){let{main:u}=c.state.selection;l=new op(u.empty?u:V.cursor(u.head,u.head>u.anchor?-1:1))}for(let u of c.effects)u.is(_w)&&(l=u.value)}this.viewState.update(i,l),this.bidiCache=ap.update(this.bidiCache,i.changes),i.empty||(this.updatePlugins(i),this.inputState.update(i)),n=this.docView.update(i),this.state.facet(xc)!=this.styleModules&&this.mountStyles(),r=this.updateAttrs(),this.showAnnouncements(e),this.docView.updateSelection(n,e.some(c=>c.isUserEvent("select.pointer")))}finally{this.updateState=0}if(i.startState.facet(of)!=i.state.facet(of)&&(this.viewState.mustMeasureContent=!0),(n||r||l||this.viewState.mustEnforceCursorAssoc||this.viewState.mustMeasureContent)&&this.requestMeasure(),!i.empty)for(let c of this.state.facet(Lb))c(i);a&&!Q3(this,a)&&s.force&&Fa(this.contentDOM,s.key,s.keyCode)}setState(e){if(this.updateState!=0)throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");if(this.destroyed){this.viewState.state=e;return}this.updateState=2;let n=this.hasFocus;try{for(let r of this.plugins)r.destroy(this);this.viewState=new b2(e),this.plugins=e.facet(yc).map(r=>new l0(r)),this.pluginMap.clear();for(let r of this.plugins)r.update(this);this.docView=new t2(this),this.inputState.ensureHandlers(this,this.plugins),this.mountStyles(),this.updateAttrs(),this.bidiCache=[]}finally{this.updateState=0}n&&this.focus(),this.requestMeasure()}updatePlugins(e){let n=e.startState.facet(yc),r=e.state.facet(yc);if(n!=r){let i=[];for(let o of r){let s=n.indexOf(o);if(s<0)i.push(new l0(o));else{let a=this.plugins[s];a.mustUpdate=e,i.push(a)}}for(let o of this.plugins)o.mustUpdate!=e&&o.destroy(this);this.plugins=i,this.pluginMap.clear(),this.inputState.ensureHandlers(this,this.plugins)}else for(let i of this.plugins)i.mustUpdate=e;for(let i=0;i<this.plugins.length;i++)this.plugins[i].update(this)}measure(e=!0){if(this.destroyed)return;this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.measureScheduled=0,e&&this.observer.forceFlush();let n=null,{scrollHeight:r,scrollTop:i,clientHeight:o}=this.scrollDOM,s=i>r-o-4?r:i;try{for(let a=0;;a++){this.updateState=1;let l=this.viewport,c=this.viewState.lineBlockAtHeight(s),u=this.viewState.measure(this);if(!u&&!this.measureRequests.length&&this.viewState.scrollTarget==null)break;if(a>5){console.warn(this.measureRequests.length?"Measure loop restarted more than 5 times":"Viewport failed to stabilize");break}let d=[];u&4||([this.measureRequests,d]=[d,this.measureRequests]);let f=d.map(b=>{try{return b.read(this)}catch(g){return Mn(this.state,g),S2}}),h=sp.create(this,this.state,[]),p=!1,m=!1;h.flags|=u,n?n.flags|=u:n=h,this.updateState=2,h.empty||(this.updatePlugins(h),this.inputState.update(h),this.updateAttrs(),p=this.docView.update(h));for(let b=0;b<d.length;b++)if(f[b]!=S2)try{let g=d[b];g.write&&g.write(f[b],this)}catch(g){Mn(this.state,g)}if(this.viewState.editorHeight)if(this.viewState.scrollTarget)this.docView.scrollIntoView(this.viewState.scrollTarget),this.viewState.scrollTarget=null,m=!0;else{let b=this.viewState.lineBlockAt(c.from).top-c.top;(b>1||b<-1)&&(this.scrollDOM.scrollTop+=b,m=!0)}if(p&&this.docView.updateSelection(!0),this.viewport.from==l.from&&this.viewport.to==l.to&&!m&&this.measureRequests.length==0)break}}finally{this.updateState=0,this.measureScheduled=-1}if(n&&!n.empty)for(let a of this.state.facet(Lb))a(n)}get themeClasses(){return Yb+" "+(this.state.facet(Wb)?K3:U3)+" "+this.state.facet(of)}updateAttrs(){let e=k2(this,R3,{class:"cm-editor"+(this.hasFocus?" cm-focused ":" ")+this.themeClasses}),n={spellcheck:"false",autocorrect:"off",autocapitalize:"off",translate:"no",contenteditable:this.state.facet(Om)?"true":"false",class:"cm-content",style:`${_.tabSize}: ${this.state.tabSize}`,role:"textbox","aria-multiline":"true"};this.state.readOnly&&(n["aria-readonly"]="true"),k2(this,mx,n);let r=this.observer.ignore(()=>{let i=Nb(this.contentDOM,this.contentAttrs,n),o=Nb(this.dom,this.editorAttrs,e);return i||o});return this.editorAttrs=e,this.contentAttrs=n,r}showAnnouncements(e){let n=!0;for(let r of e)for(let i of r.effects)if(i.is(K.announce)){n&&(this.announceDOM.textContent=""),n=!1;let o=this.announceDOM.appendChild(document.createElement("div"));o.textContent=i.value}}mountStyles(){this.styleModules=this.state.facet(xc),Oo.mount(this.root,this.styleModules.concat(T7).reverse())}readMeasured(){if(this.updateState==2)throw new Error("Reading the editor layout isn't allowed during an update");this.updateState==0&&this.measureScheduled>-1&&this.measure(!1)}requestMeasure(e){if(this.measureScheduled<0&&(this.measureScheduled=this.win.requestAnimationFrame(()=>this.measure())),e){if(e.key!=null){for(let n=0;n<this.measureRequests.length;n++)if(this.measureRequests[n].key===e.key){this.measureRequests[n]=e;return}}this.measureRequests.push(e)}}plugin(e){let n=this.pluginMap.get(e);return(n===void 0||n&&n.spec!=e)&&this.pluginMap.set(e,n=this.plugins.find(r=>r.spec==e)||null),n&&n.update(this).value}get documentTop(){return this.contentDOM.getBoundingClientRect().top+this.viewState.paddingTop}get documentPadding(){return{top:this.viewState.paddingTop,bottom:this.viewState.paddingBottom}}elementAtHeight(e){return this.readMeasured(),this.viewState.elementAtHeight(e)}lineBlockAtHeight(e){return this.readMeasured(),this.viewState.lineBlockAtHeight(e)}get viewportLineBlocks(){return this.viewState.viewportLines}lineBlockAt(e){return this.viewState.lineBlockAt(e)}get contentHeight(){return this.viewState.contentHeight}moveByChar(e,n,r){return u0(this,e,a2(this,e,n,r))}moveByGroup(e,n){return u0(this,e,a2(this,e,n,r=>_Z(this,e.head,r)))}moveToLineBoundary(e,n,r=!0){return JZ(this,e,n,r)}moveVertically(e,n,r){return u0(this,e,$Z(this,e,n,r))}domAtPos(e){return this.docView.domAtPos(e)}posAtDOM(e,n=0){return this.docView.posFromDOM(e,n)}posAtCoords(e,n=!0){return this.readMeasured(),A3(this,e,n)}coordsAtPos(e,n=1){this.readMeasured();let r=this.docView.coordsAt(e,n);if(!r||r.left==r.right)return r;let i=this.state.doc.lineAt(e),o=this.bidiSpans(i),s=o[Ha.find(o,e-i.from,-1,n)];return dx(r,s.dir==Qe.LTR==n>0)}get defaultCharacterWidth(){return this.viewState.heightOracle.charWidth}get defaultLineHeight(){return this.viewState.heightOracle.lineHeight}get textDirection(){return this.viewState.defaultTextDirection}textDirectionAt(e){return!this.state.facet(C3)||e<this.viewport.from||e>this.viewport.to?this.textDirection:(this.readMeasured(),this.docView.textDirectionAt(e))}get lineWrapping(){return this.viewState.heightOracle.lineWrapping}bidiSpans(e){if(e.length>N7)return N3(e.length);let n=this.textDirectionAt(e.from);for(let i of this.bidiCache)if(i.from==e.from&&i.dir==n)return i.order;let r=BZ(e.text,n);return this.bidiCache.push(new ap(e.from,e.to,n,r)),r}get hasFocus(){var e;return(this.dom.ownerDocument.hasFocus()||_.safari&&((e=this.inputState)===null||e===void 0?void 0:e.lastContextMenu)>Date.now()-3e4)&&this.root.activeElement==this.contentDOM}focus(){this.observer.ignore(()=>{c3(this.contentDOM),this.docView.updateSelection()})}setRoot(e){this._root!=e&&(this._root=e,this.observer.setWindow((e.nodeType==9?e:e.ownerDocument).defaultView||window),this.mountStyles())}destroy(){for(let e of this.plugins)e.destroy(this);this.plugins=[],this.inputState.destroy(),this.dom.remove(),this.observer.destroy(),this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.destroyed=!0}static scrollIntoView(e,n={}){return _w.of(new op(typeof e=="number"?V.cursor(e):e,n.y,n.x,n.yMargin,n.xMargin))}static domEventHandlers(e){return nt.define(()=>({}),{eventHandlers:e})}static theme(e,n){let r=Oo.newName(),i=[of.of(r),xc.of(Fb(`.${r}`,e))];return n&&n.dark&&i.push(Wb.of(!0)),i}static baseTheme(e){return Ws.lowest(xc.of(Fb("."+Yb,e,q3)))}static findFromDOM(e){var n;let r=e.querySelector(".cm-content"),i=r&&Ze.get(r)||Ze.get(e);return((n=i==null?void 0:i.rootView)===null||n===void 0?void 0:n.view)||null}}K.styleModule=xc;K.inputHandler=P3;K.perLineTextDirection=C3;K.exceptionSink=T3;K.updateListener=Lb;K.editable=Om;K.mouseSelectionStyle=O3;K.dragMovesSelection=w3;K.clickAddsSelectionRange=k3;K.decorations=Ru;K.atomicRanges=I3;K.scrollMargins=z3;K.darkTheme=Wb;K.contentAttributes=mx;K.editorAttributes=R3;K.lineWrapping=K.contentAttributes.of({class:"cm-lineWrapping"});K.announce=se.define();const N7=4096,S2={};class ap{constructor(e,n,r,i){this.from=e,this.to=n,this.dir=r,this.order=i}static update(e,n){if(n.empty)return e;let r=[],i=e.length?e[e.length-1].dir:Qe.LTR;for(let o=Math.max(0,e.length-10);o<e.length;o++){let s=e[o];s.dir==i&&!n.touchesRange(s.from,s.to)&&r.push(new ap(n.mapPos(s.from,1),n.mapPos(s.to,-1),s.dir,s.order))}return r}}function k2(t,e,n){for(let r=t.state.facet(e),i=r.length-1;i>=0;i--){let o=r[i],s=typeof o=="function"?o(t):o;s&&Eb(s,n)}return n}const V7=_.mac?"mac":_.windows?"win":_.linux?"linux":"key";function L7(t,e){const n=t.split(/-(?!$)/);let r=n[n.length-1];r=="Space"&&(r=" ");let i,o,s,a;for(let l=0;l<n.length-1;++l){const c=n[l];if(/^(cmd|meta|m)$/i.test(c))a=!0;else if(/^a(lt)?$/i.test(c))i=!0;else if(/^(c|ctrl|control)$/i.test(c))o=!0;else if(/^s(hift)?$/i.test(c))s=!0;else if(/^mod$/i.test(c))e=="mac"?a=!0:o=!0;else throw new Error("Unrecognized modifier name: "+c)}return i&&(r="Alt-"+r),o&&(r="Ctrl-"+r),a&&(r="Meta-"+r),s&&(r="Shift-"+r),r}function sf(t,e,n){return e.altKey&&(t="Alt-"+t),e.ctrlKey&&(t="Ctrl-"+t),e.metaKey&&(t="Meta-"+t),n!==!1&&e.shiftKey&&(t="Shift-"+t),t}const X7=Ws.default(K.domEventHandlers({keydown(t,e){return _3(J3(e.state),t,e,"editor")}})),ud=$.define({enables:X7}),w2=new WeakMap;function J3(t){let e=t.facet(ud),n=w2.get(e);return n||w2.set(e,n=Z7(e.reduce((r,i)=>r.concat(i),[]))),n}function B7(t,e,n){return _3(J3(t.state),e,t,n)}let Qi=null;const A7=4e3;function Z7(t,e=V7){let n=Object.create(null),r=Object.create(null),i=(s,a)=>{let l=r[s];if(l==null)r[s]=a;else if(l!=a)throw new Error("Key binding "+s+" is used both as a regular binding and as a multi-stroke prefix")},o=(s,a,l,c)=>{var u,d;let f=n[s]||(n[s]=Object.create(null)),h=a.split(/ (?!$)/).map(b=>L7(b,e));for(let b=1;b<h.length;b++){let g=h.slice(0,b).join(" ");i(g,!0),f[g]||(f[g]={preventDefault:!0,run:[v=>{let y=Qi={view:v,prefix:g,scope:s};return setTimeout(()=>{Qi==y&&(Qi=null)},A7),!0}]})}let p=h.join(" ");i(p,!1);let m=f[p]||(f[p]={preventDefault:!1,run:((d=(u=f._any)===null||u===void 0?void 0:u.run)===null||d===void 0?void 0:d.slice())||[]});l&&m.run.push(l),c&&(m.preventDefault=!0)};for(let s of t){let a=s.scope?s.scope.split(" "):["editor"];if(s.any)for(let c of a){let u=n[c]||(n[c]=Object.create(null));u._any||(u._any={preventDefault:!1,run:[]});for(let d in u)u[d].run.push(s.any)}let l=s[e]||s.key;if(!!l)for(let c of a)o(c,l,s.run,s.preventDefault),s.shift&&o(c,"Shift-"+l,s.shift,s.preventDefault)}return n}function _3(t,e,n,r){let i=xZ(e),o=Mt(i,0),s=wn(o)==i.length&&i!=" ",a="",l=!1;Qi&&Qi.view==n&&Qi.scope==r&&(a=Qi.prefix+" ",(l=G3.indexOf(e.keyCode)<0)&&(Qi=null));let c=new Set,u=p=>{if(p){for(let m of p.run)if(!c.has(m)&&(c.add(m),m(n,e)))return!0;p.preventDefault&&(l=!0)}return!1},d=t[r],f,h;if(d){if(u(d[a+sf(i,e,!s)]))return!0;if(s&&(e.altKey||e.metaKey||e.ctrlKey)&&(f=To[e.keyCode])&&f!=i){if(u(d[a+sf(f,e,!0)]))return!0;if(e.shiftKey&&(h=Pu[e.keyCode])!=i&&h!=f&&u(d[a+sf(h,e,!1)]))return!0}else if(s&&e.shiftKey&&u(d[a+sf(i,e,!0)]))return!0;if(u(d._any))return!0}return l}class $3{constructor(e,n,r,i,o){this.className=e,this.left=n,this.top=r,this.width=i,this.height=o}draw(){let e=document.createElement("div");return e.className=this.className,this.adjust(e),e}update(e,n){return n.className!=this.className?!1:(this.adjust(e),!0)}adjust(e){e.style.left=this.left+"px",e.style.top=this.top+"px",this.width>=0&&(e.style.width=this.width+"px"),e.style.height=this.height+"px"}eq(e){return this.left==e.left&&this.top==e.top&&this.width==e.width&&this.height==e.height&&this.className==e.className}}function G7(t,e){return t.constructor==e.constructor&&t.eq(e)}class W7{constructor(e,n){this.view=e,this.layer=n,this.drawn=[],this.measureReq={read:this.measure.bind(this),write:this.draw.bind(this)},this.dom=e.scrollDOM.appendChild(document.createElement("div")),this.dom.classList.add("cm-layer"),n.above&&this.dom.classList.add("cm-layer-above"),n.class&&this.dom.classList.add(n.class),this.dom.setAttribute("aria-hidden","true"),this.setOrder(e.state),e.requestMeasure(this.measureReq),n.mount&&n.mount(this.dom,e)}update(e){e.startState.facet(ah)!=e.state.facet(ah)&&this.setOrder(e.state),(this.layer.update(e,this.dom)||e.geometryChanged)&&e.view.requestMeasure(this.measureReq)}setOrder(e){let n=0,r=e.facet(ah);for(;n<r.length&&r[n]!=this.layer;)n++;this.dom.style.zIndex=String((this.layer.above?150:-1)-n)}measure(){return this.layer.markers(this.view)}draw(e){if(e.length!=this.drawn.length||e.some((n,r)=>!G7(n,this.drawn[r]))){let n=this.dom.firstChild,r=0;for(let i of e)i.update&&n&&i.constructor&&this.drawn[r].constructor&&i.update(n,this.drawn[r])?(n=n.nextSibling,r++):this.dom.insertBefore(i.draw(),n);for(;n;){let i=n.nextSibling;n.remove(),n=i}this.drawn=e}}destroy(){this.dom.remove()}}const ah=$.define();function eR(t){return[nt.define(e=>new W7(e,t)),ah.of(t)]}const tR=!_.ios,Iu=$.define({combine(t){return ri(t,{cursorBlinkRate:1200,drawRangeCursor:!0},{cursorBlinkRate:(e,n)=>Math.min(e,n),drawRangeCursor:(e,n)=>e||n})}});function Y7(t={}){return[Iu.of(t),F7,H7,j7,M3.of(!0)]}function nR(t){return t.startState.facet(Iu)!=t.startState.facet(Iu)}const F7=eR({above:!0,markers(t){let{state:e}=t,n=e.facet(Iu),r=[];for(let i of e.selection.ranges){let o=i==e.selection.main;if(i.empty?!o||tR:n.drawRangeCursor){let s=U7(t,i,o);s&&r.push(s)}}return r},update(t,e){t.transactions.some(r=>r.scrollIntoView)&&(e.style.animationName=e.style.animationName=="cm-blink"?"cm-blink2":"cm-blink");let n=nR(t);return n&&O2(t.state,e),t.docChanged||t.selectionSet||n},mount(t,e){O2(e.state,t)},class:"cm-cursorLayer"});function O2(t,e){e.style.animationDuration=t.facet(Iu).cursorBlinkRate+"ms"}const H7=eR({above:!1,markers(t){return t.state.selection.ranges.map(e=>e.empty?[]:D7(t,e)).reduce((e,n)=>e.concat(n))},update(t,e){return t.docChanged||t.selectionSet||t.viewportChanged||nR(t)},class:"cm-selectionLayer"}),rR={".cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"}}};tR&&(rR[".cm-line"].caretColor="transparent !important");const j7=Ws.highest(K.theme(rR));function iR(t){let e=t.scrollDOM.getBoundingClientRect();return{left:(t.textDirection==Qe.LTR?e.left:e.right-t.scrollDOM.clientWidth)-t.scrollDOM.scrollLeft,top:e.top-t.scrollDOM.scrollTop}}function T2(t,e,n){let r=V.cursor(e);return{from:Math.max(n.from,t.moveToLineBoundary(r,!1,!0).from),to:Math.min(n.to,t.moveToLineBoundary(r,!0,!0).from),type:Ve.Text}}function P2(t,e){let n=t.lineBlockAt(e);if(Array.isArray(n.type)){for(let r of n.type)if(r.to>e||r.to==e&&(r.to==n.to||r.type==Ve.Text))return r}return n}function D7(t,e){if(e.to<=t.viewport.from||e.from>=t.viewport.to)return[];let n=Math.max(e.from,t.viewport.from),r=Math.min(e.to,t.viewport.to),i=t.textDirection==Qe.LTR,o=t.contentDOM,s=o.getBoundingClientRect(),a=iR(t),l=window.getComputedStyle(o.firstChild),c=s.left+parseInt(l.paddingLeft)+Math.min(0,parseInt(l.textIndent)),u=s.right-parseInt(l.paddingRight),d=P2(t,n),f=P2(t,r),h=d.type==Ve.Text?d:null,p=f.type==Ve.Text?f:null;if(t.lineWrapping&&(h&&(h=T2(t,n,h)),p&&(p=T2(t,r,p))),h&&p&&h.from==p.from)return b(g(e.from,e.to,h));{let y=h?g(e.from,null,h):v(d,!1),x=p?g(null,e.to,p):v(f,!0),k=[];return(h||d).to<(p||f).from-1?k.push(m(c,y.bottom,u,x.top)):y.bottom<x.top&&t.elementAtHeight((y.bottom+x.top)/2).type==Ve.Text&&(y.bottom=x.top=(y.bottom+x.top)/2),b(y).concat(k).concat(b(x))}function m(y,x,k,O){return new $3("cm-selectionBackground",y-a.left,x-a.top-.01,k-y,O-x+.01)}function b({top:y,bottom:x,horizontal:k}){let O=[];for(let T=0;T<k.length;T+=2)O.push(m(k[T],y,k[T+1],x));return O}function g(y,x,k){let O=1e9,T=-1e9,M=[];function E(D,J,ae,oe,Y){let ee=t.coordsAtPos(D,D==k.to?-2:2),L=t.coordsAtPos(ae,ae==k.from?2:-2);O=Math.min(ee.top,L.top,O),T=Math.max(ee.bottom,L.bottom,T),Y==Qe.LTR?M.push(i&&J?c:ee.left,i&&oe?u:L.right):M.push(!i&&oe?c:L.left,!i&&J?u:ee.right)}let I=y!=null?y:k.from,B=x!=null?x:k.to;for(let D of t.visibleRanges)if(D.to>I&&D.from<B)for(let J=Math.max(D.from,I),ae=Math.min(D.to,B);;){let oe=t.state.doc.lineAt(J);for(let Y of t.bidiSpans(oe)){let ee=Y.from+oe.from,L=Y.to+oe.from;if(ee>=ae)break;L>J&&E(Math.max(ee,J),y==null&&ee<=I,Math.min(L,ae),x==null&&L>=B,Y.dir)}if(J=oe.to+1,J>=ae)break}return M.length==0&&E(I,y==null,B,x==null,t.textDirection),{top:O,bottom:T,horizontal:M}}function v(y,x){let k=s.top+(x?y.top:y.bottom);return{top:k,bottom:k,horizontal:[]}}}function U7(t,e,n){let r=t.coordsAtPos(e.head,e.assoc||1);if(!r)return null;let i=iR(t);return new $3(n?"cm-cursor cm-cursor-primary":"cm-cursor cm-cursor-secondary",r.left-i.left,r.top-i.top,-1,r.bottom-r.top)}const oR=se.define({map(t,e){return t==null?null:e.mapPos(t)}}),kc=kt.define({create(){return null},update(t,e){return t!=null&&(t=e.changes.mapPos(t)),e.effects.reduce((n,r)=>r.is(oR)?r.value:n,t)}}),K7=nt.fromClass(class{constructor(t){this.view=t,this.cursor=null,this.measureReq={read:this.readPos.bind(this),write:this.drawCursor.bind(this)}}update(t){var e;let n=t.state.field(kc);n==null?this.cursor!=null&&((e=this.cursor)===null||e===void 0||e.remove(),this.cursor=null):(this.cursor||(this.cursor=this.view.scrollDOM.appendChild(document.createElement("div")),this.cursor.className="cm-dropCursor"),(t.startState.field(kc)!=n||t.docChanged||t.geometryChanged)&&this.view.requestMeasure(this.measureReq))}readPos(){let t=this.view.state.field(kc),e=t!=null&&this.view.coordsAtPos(t);if(!e)return null;let n=this.view.scrollDOM.getBoundingClientRect();return{left:e.left-n.left+this.view.scrollDOM.scrollLeft,top:e.top-n.top+this.view.scrollDOM.scrollTop,height:e.bottom-e.top}}drawCursor(t){this.cursor&&(t?(this.cursor.style.left=t.left+"px",this.cursor.style.top=t.top+"px",this.cursor.style.height=t.height+"px"):this.cursor.style.left="-100000px")}destroy(){this.cursor&&this.cursor.remove()}setDropPos(t){this.view.state.field(kc)!=t&&this.view.dispatch({effects:oR.of(t)})}},{eventHandlers:{dragover(t){this.setDropPos(this.view.posAtCoords({x:t.clientX,y:t.clientY}))},dragleave(t){(t.target==this.view.contentDOM||!this.view.contentDOM.contains(t.relatedTarget))&&this.setDropPos(null)},dragend(){this.setDropPos(null)},drop(){this.setDropPos(null)}}});function q7(){return[kc,K7]}function C2(t,e,n,r,i){e.lastIndex=0;for(let o=t.iterRange(n,r),s=n,a;!o.next().done;s+=o.value.length)if(!o.lineBreak)for(;a=e.exec(o.value);)i(s+a.index,a)}function Q7(t,e){let n=t.visibleRanges;if(n.length==1&&n[0].from==t.viewport.from&&n[0].to==t.viewport.to)return n;let r=[];for(let{from:i,to:o}of n)i=Math.max(t.state.doc.lineAt(i).from,i-e),o=Math.min(t.state.doc.lineAt(o).to,o+e),r.length&&r[r.length-1].to>=i?r[r.length-1].to=o:r.push({from:i,to:o});return r}class J7{constructor(e){const{regexp:n,decoration:r,decorate:i,boundary:o,maxLength:s=1e3}=e;if(!n.global)throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");if(this.regexp=n,i)this.addMatch=(a,l,c,u)=>i(u,c,c+a[0].length,a,l);else if(typeof r=="function")this.addMatch=(a,l,c,u)=>{let d=r(a,l,c);d&&u(c,c+a[0].length,d)};else if(r)this.addMatch=(a,l,c,u)=>u(c,c+a[0].length,r);else throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");this.boundary=o,this.maxLength=s}createDeco(e){let n=new Ci,r=n.add.bind(n);for(let{from:i,to:o}of Q7(e,this.maxLength))C2(e.state.doc,this.regexp,i,o,(s,a)=>this.addMatch(a,e,s,r));return n.finish()}updateDeco(e,n){let r=1e9,i=-1;return e.docChanged&&e.changes.iterChanges((o,s,a,l)=>{l>e.view.viewport.from&&a<e.view.viewport.to&&(r=Math.min(a,r),i=Math.max(l,i))}),e.viewportChanged||i-r>1e3?this.createDeco(e.view):i>-1?this.updateRange(e.view,n.map(e.changes),r,i):n}updateRange(e,n,r,i){for(let o of e.visibleRanges){let s=Math.max(o.from,r),a=Math.min(o.to,i);if(a>s){let l=e.state.doc.lineAt(s),c=l.to<a?e.state.doc.lineAt(a):l,u=Math.max(o.from,l.from),d=Math.min(o.to,c.to);if(this.boundary){for(;s>l.from;s--)if(this.boundary.test(l.text[s-1-l.from])){u=s;break}for(;a<c.to;a++)if(this.boundary.test(c.text[a-c.from])){d=a;break}}let f=[],h,p=(m,b,g)=>f.push(g.range(m,b));if(l==c)for(this.regexp.lastIndex=u-l.from;(h=this.regexp.exec(l.text))&&h.index<d-l.from;)this.addMatch(h,e,h.index+l.from,p);else C2(e.state.doc,this.regexp,u,d,(m,b)=>this.addMatch(b,e,m,p));n=n.update({filterFrom:u,filterTo:d,filter:(m,b)=>m<u||b>d,add:f})}}return n}}const Hb=/x/.unicode!=null?"gu":"g",_7=new RegExp(`[\0-\b
-\x7F-\x9F\xAD\u061C\u200B\u200E\u200F\u2028\u2029\u202D\u202E\u2066\u2067\u2069\uFEFF\uFFF9-\uFFFC]`,Hb),$7={0:"null",7:"bell",8:"backspace",10:"newline",11:"vertical tab",13:"carriage return",27:"escape",8203:"zero width space",8204:"zero width non-joiner",8205:"zero width joiner",8206:"left-to-right mark",8207:"right-to-left mark",8232:"line separator",8237:"left-to-right override",8238:"right-to-left override",8294:"left-to-right isolate",8295:"right-to-left isolate",8297:"pop directional isolate",8233:"paragraph separator",65279:"zero width no-break space",65532:"object replacement"};let h0=null;function eG(){var t;if(h0==null&&typeof document<"u"&&document.body){let e=document.body.style;h0=((t=e.tabSize)!==null&&t!==void 0?t:e.MozTabSize)!=null}return h0||!1}const lh=$.define({combine(t){let e=ri(t,{render:null,specialChars:_7,addSpecialChars:null});return(e.replaceTabs=!eG())&&(e.specialChars=new RegExp("	|"+e.specialChars.source,Hb)),e.addSpecialChars&&(e.specialChars=new RegExp(e.specialChars.source+"|"+e.addSpecialChars.source,Hb)),e}});function tG(t={}){return[lh.of(t),nG()]}let M2=null;function nG(){return M2||(M2=nt.fromClass(class{constructor(t){this.view=t,this.decorations=F.none,this.decorationCache=Object.create(null),this.decorator=this.makeDecorator(t.state.facet(lh)),this.decorations=this.decorator.createDeco(t)}makeDecorator(t){return new J7({regexp:t.specialChars,decoration:(e,n,r)=>{let{doc:i}=n.state,o=Mt(e[0],0);if(o==9){let s=i.lineAt(r),a=n.state.tabSize,l=ld(s.text,a,r-s.from);return F.replace({widget:new sG((a-l%a)*this.view.defaultCharacterWidth)})}return this.decorationCache[o]||(this.decorationCache[o]=F.replace({widget:new oG(t,o)}))},boundary:t.replaceTabs?void 0:/[^]/})}update(t){let e=t.state.facet(lh);t.startState.facet(lh)!=e?(this.decorator=this.makeDecorator(e),this.decorations=this.decorator.createDeco(t.view)):this.decorations=this.decorator.updateDeco(t,this.decorations)}},{decorations:t=>t.decorations}))}const rG="\u2022";function iG(t){return t>=32?rG:t==10?"\u2424":String.fromCharCode(9216+t)}class oG extends Ni{constructor(e,n){super(),this.options=e,this.code=n}eq(e){return e.code==this.code}toDOM(e){let n=iG(this.code),r=e.state.phrase("Control character")+" "+($7[this.code]||"0x"+this.code.toString(16)),i=this.options.render&&this.options.render(this.code,r,n);if(i)return i;let o=document.createElement("span");return o.textContent=n,o.title=r,o.setAttribute("aria-label",r),o.className="cm-specialChar",o}ignoreEvent(){return!1}}class sG extends Ni{constructor(e){super(),this.width=e}eq(e){return e.width==this.width}toDOM(){let e=document.createElement("span");return e.textContent="	",e.className="cm-tab",e.style.width=this.width+"px",e}ignoreEvent(){return!1}}function aG(){return cG}const lG=F.line({class:"cm-activeLine"}),cG=nt.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.docChanged||t.selectionSet)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=-1,n=[];for(let r of t.state.selection.ranges){let i=t.lineBlockAt(r.head);i.from>e&&(n.push(lG.range(i.from)),e=i.from)}return F.set(n)}},{decorations:t=>t.decorations});class uG extends Ni{constructor(e){super(),this.content=e}toDOM(){let e=document.createElement("span");return e.className="cm-placeholder",e.style.pointerEvents="none",e.appendChild(typeof this.content=="string"?document.createTextNode(this.content):this.content),typeof this.content=="string"?e.setAttribute("aria-label","placeholder "+this.content):e.setAttribute("aria-hidden","true"),e}ignoreEvent(){return!1}}function dG(t){return nt.fromClass(class{constructor(e){this.view=e,this.placeholder=F.set([F.widget({widget:new uG(t),side:1}).range(0)])}get decorations(){return this.view.state.doc.length?F.none:this.placeholder}},{decorations:e=>e.decorations})}const jb=2e3;function fG(t,e,n){let r=Math.min(e.line,n.line),i=Math.max(e.line,n.line),o=[];if(e.off>jb||n.off>jb||e.col<0||n.col<0){let s=Math.min(e.off,n.off),a=Math.max(e.off,n.off);for(let l=r;l<=i;l++){let c=t.doc.line(l);c.length<=a&&o.push(V.range(c.from+s,c.to+a))}}else{let s=Math.min(e.col,n.col),a=Math.max(e.col,n.col);for(let l=r;l<=i;l++){let c=t.doc.line(l),u=Ob(c.text,s,t.tabSize,!0);if(u<0)o.push(V.cursor(c.to));else{let d=Ob(c.text,a,t.tabSize);o.push(V.range(c.from+u,c.from+d))}}}return o}function hG(t,e){let n=t.coordsAtPos(t.viewport.from);return n?Math.round(Math.abs((n.left-e)/t.defaultCharacterWidth)):-1}function R2(t,e){let n=t.posAtCoords({x:e.clientX,y:e.clientY},!1),r=t.state.doc.lineAt(n),i=n-r.from,o=i>jb?-1:i==r.length?hG(t,e.clientX):ld(r.text,t.state.tabSize,n-r.from);return{line:r.number,col:o,off:i}}function pG(t,e){let n=R2(t,e),r=t.state.selection;return n?{update(i){if(i.docChanged){let o=i.changes.mapPos(i.startState.doc.line(n.line).from),s=i.state.doc.lineAt(o);n={line:s.number,col:n.col,off:Math.min(n.off,s.length)},r=r.map(i.changes)}},get(i,o,s){let a=R2(t,i);if(!a)return r;let l=fG(t.state,n,a);return l.length?s?V.create(l.concat(r.ranges)):V.create(l):r}}:null}function mG(t){let e=(t==null?void 0:t.eventFilter)||(n=>n.altKey&&n.button==0);return K.mouseSelectionStyle.of((n,r)=>e(r)?pG(n,r):null)}const gG={Alt:[18,t=>t.altKey],Control:[17,t=>t.ctrlKey],Shift:[16,t=>t.shiftKey],Meta:[91,t=>t.metaKey]},vG={style:"cursor: crosshair"};function bG(t={}){let[e,n]=gG[t.key||"Alt"],r=nt.fromClass(class{constructor(i){this.view=i,this.isDown=!1}set(i){this.isDown!=i&&(this.isDown=i,this.view.update([]))}},{eventHandlers:{keydown(i){this.set(i.keyCode==e||n(i))},keyup(i){(i.keyCode==e||!n(i))&&this.set(!1)},mousemove(i){this.set(n(i))}}});return[r,K.contentAttributes.of(i=>{var o;return!((o=i.plugin(r))===null||o===void 0)&&o.isDown?vG:null})]}const af="-10000px";class sR{constructor(e,n,r){this.facet=n,this.createTooltipView=r,this.input=e.state.facet(n),this.tooltips=this.input.filter(i=>i),this.tooltipViews=this.tooltips.map(r)}update(e){var n;let r=e.state.facet(this.facet),i=r.filter(s=>s);if(r===this.input){for(let s of this.tooltipViews)s.update&&s.update(e);return!1}let o=[];for(let s=0;s<i.length;s++){let a=i[s],l=-1;if(!!a){for(let c=0;c<this.tooltips.length;c++){let u=this.tooltips[c];u&&u.create==a.create&&(l=c)}if(l<0)o[s]=this.createTooltipView(a);else{let c=o[s]=this.tooltipViews[l];c.update&&c.update(e)}}}for(let s of this.tooltipViews)o.indexOf(s)<0&&(s.dom.remove(),(n=s.destroy)===null||n===void 0||n.call(s));return this.input=r,this.tooltips=i,this.tooltipViews=o,!0}}function yG(t){let{win:e}=t;return{top:0,left:0,bottom:e.innerHeight,right:e.innerWidth}}const p0=$.define({combine:t=>{var e,n,r;return{position:_.ios?"absolute":((e=t.find(i=>i.position))===null||e===void 0?void 0:e.position)||"fixed",parent:((n=t.find(i=>i.parent))===null||n===void 0?void 0:n.parent)||null,tooltipSpace:((r=t.find(i=>i.tooltipSpace))===null||r===void 0?void 0:r.tooltipSpace)||yG}}}),aR=nt.fromClass(class{constructor(t){this.view=t,this.inView=!0,this.lastTransaction=0,this.measureTimeout=-1;let e=t.state.facet(p0);this.position=e.position,this.parent=e.parent,this.classes=t.themeClasses,this.createContainer(),this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this},this.manager=new sR(t,vx,n=>this.createTooltip(n)),this.intersectionObserver=typeof IntersectionObserver=="function"?new IntersectionObserver(n=>{Date.now()>this.lastTransaction-50&&n.length>0&&n[n.length-1].intersectionRatio<1&&this.measureSoon()},{threshold:[1]}):null,this.observeIntersection(),t.win.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this)),this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let t of this.manager.tooltipViews)this.intersectionObserver.observe(t.dom)}}measureSoon(){this.measureTimeout<0&&(this.measureTimeout=setTimeout(()=>{this.measureTimeout=-1,this.maybeMeasure()},50))}update(t){t.transactions.length&&(this.lastTransaction=Date.now());let e=this.manager.update(t);e&&this.observeIntersection();let n=e||t.geometryChanged,r=t.state.facet(p0);if(r.position!=this.position){this.position=r.position;for(let i of this.manager.tooltipViews)i.dom.style.position=this.position;n=!0}if(r.parent!=this.parent){this.parent&&this.container.remove(),this.parent=r.parent,this.createContainer();for(let i of this.manager.tooltipViews)this.container.appendChild(i.dom);n=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=this.view.themeClasses);n&&this.maybeMeasure()}createTooltip(t){let e=t.create(this.view);if(e.dom.classList.add("cm-tooltip"),t.arrow&&!e.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")){let n=document.createElement("div");n.className="cm-tooltip-arrow",e.dom.appendChild(n)}return e.dom.style.position=this.position,e.dom.style.top=af,this.container.appendChild(e.dom),e.mount&&e.mount(this.view),e}destroy(){var t,e;this.view.win.removeEventListener("resize",this.measureSoon);for(let n of this.manager.tooltipViews)n.dom.remove(),(t=n.destroy)===null||t===void 0||t.call(n);(e=this.intersectionObserver)===null||e===void 0||e.disconnect(),clearTimeout(this.measureTimeout)}readMeasure(){let t=this.view.dom.getBoundingClientRect();return{editor:t,parent:this.parent?this.container.getBoundingClientRect():t,pos:this.manager.tooltips.map((e,n)=>{let r=this.manager.tooltipViews[n];return r.getCoords?r.getCoords(e.pos):this.view.coordsAtPos(e.pos)}),size:this.manager.tooltipViews.map(({dom:e})=>e.getBoundingClientRect()),space:this.view.state.facet(p0).tooltipSpace(this.view)}}writeMeasure(t){let{editor:e,space:n}=t,r=[];for(let i=0;i<this.manager.tooltips.length;i++){let o=this.manager.tooltips[i],s=this.manager.tooltipViews[i],{dom:a}=s,l=t.pos[i],c=t.size[i];if(!l||l.bottom<=Math.max(e.top,n.top)||l.top>=Math.min(e.bottom,n.bottom)||l.right<Math.max(e.left,n.left)-.1||l.left>Math.min(e.right,n.right)+.1){a.style.top=af;continue}let u=o.arrow?s.dom.querySelector(".cm-tooltip-arrow"):null,d=u?7:0,f=c.right-c.left,h=c.bottom-c.top,p=s.offset||SG,m=this.view.textDirection==Qe.LTR,b=c.width>n.right-n.left?m?n.left:n.right-c.width:m?Math.min(l.left-(u?14:0)+p.x,n.right-f):Math.max(n.left,l.left-f+(u?14:0)-p.x),g=!!o.above;!o.strictSide&&(g?l.top-(c.bottom-c.top)-p.y<n.top:l.bottom+(c.bottom-c.top)+p.y>n.bottom)&&g==n.bottom-l.bottom>l.top-n.top&&(g=!g);let v=(g?l.top-n.top:n.bottom-l.bottom)-d;if(v<h&&s.resize!==!1){if(v<this.view.defaultLineHeight){a.style.top=af;continue}a.style.height=(h=v)+"px"}else a.style.height&&(a.style.height="");let y=g?l.top-h-d-p.y:l.bottom+d+p.y,x=b+f;if(s.overlap!==!0)for(let k of r)k.left<x&&k.right>b&&k.top<y+h&&k.bottom>y&&(y=g?k.top-h-2-d:k.bottom+d+2);this.position=="absolute"?(a.style.top=y-t.parent.top+"px",a.style.left=b-t.parent.left+"px"):(a.style.top=y+"px",a.style.left=b+"px"),u&&(u.style.left=`${l.left+(m?p.x:-p.x)-(b+14-7)}px`),s.overlap!==!0&&r.push({left:b,top:y,right:x,bottom:y+h}),a.classList.toggle("cm-tooltip-above",g),a.classList.toggle("cm-tooltip-below",!g),s.positioned&&s.positioned(t.space)}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let t of this.manager.tooltipViews)t.dom.style.top=af}},{eventHandlers:{scroll(){this.maybeMeasure()}}}),xG=K.baseTheme({".cm-tooltip":{zIndex:100,boxSizing:"border-box"},"&light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"&light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},"&dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:`${7}px`,width:`${7*2}px`,position:"absolute",zIndex:-1,overflow:"hidden","&:before, &:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:`${7}px solid transparent`,borderRight:`${7}px solid transparent`},".cm-tooltip-above &":{bottom:`-${7}px`,"&:before":{borderTop:`${7}px solid #bbb`},"&:after":{borderTop:`${7}px solid #f5f5f5`,bottom:"1px"}},".cm-tooltip-below &":{top:`-${7}px`,"&:before":{borderBottom:`${7}px solid #bbb`},"&:after":{borderBottom:`${7}px solid #f5f5f5`,top:"1px"}}},"&dark .cm-tooltip .cm-tooltip-arrow":{"&:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"&:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}}),SG={x:0,y:0},vx=$.define({enables:[aR,xG]}),lp=$.define();class bx{constructor(e){this.view=e,this.mounted=!1,this.dom=document.createElement("div"),this.dom.classList.add("cm-tooltip-hover"),this.manager=new sR(e,lp,n=>this.createHostedView(n))}static create(e){return new bx(e)}createHostedView(e){let n=e.create(this.view);return n.dom.classList.add("cm-tooltip-section"),this.dom.appendChild(n.dom),this.mounted&&n.mount&&n.mount(this.view),n}mount(e){for(let n of this.manager.tooltipViews)n.mount&&n.mount(e);this.mounted=!0}positioned(e){for(let n of this.manager.tooltipViews)n.positioned&&n.positioned(e)}update(e){this.manager.update(e)}}const kG=vx.compute([lp],t=>{let e=t.facet(lp).filter(n=>n);return e.length===0?null:{pos:Math.min(...e.map(n=>n.pos)),end:Math.max(...e.filter(n=>n.end!=null).map(n=>n.end)),create:bx.create,above:e[0].above,arrow:e.some(n=>n.arrow)}});class wG{constructor(e,n,r,i,o){this.view=e,this.source=n,this.field=r,this.setHover=i,this.hoverTime=o,this.hoverTimeout=-1,this.restartTimeout=-1,this.pending=null,this.lastMove={x:0,y:0,target:e.dom,time:0},this.checkHover=this.checkHover.bind(this),e.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this)),e.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),this.restartTimeout=setTimeout(()=>this.startHover(),20))}get active(){return this.view.state.field(this.field)}checkHover(){if(this.hoverTimeout=-1,this.active)return;let e=Date.now()-this.lastMove.time;e<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-e):this.startHover()}startHover(){clearTimeout(this.restartTimeout);let{lastMove:e}=this,n=this.view.contentDOM.contains(e.target)?this.view.posAtCoords(e):null;if(n==null)return;let r=this.view.coordsAtPos(n);if(r==null||e.y<r.top||e.y>r.bottom||e.x<r.left-this.view.defaultCharacterWidth||e.x>r.right+this.view.defaultCharacterWidth)return;let i=this.view.bidiSpans(this.view.state.doc.lineAt(n)).find(a=>a.from<=n&&a.to>=n),o=i&&i.dir==Qe.RTL?-1:1,s=this.source(this.view,n,e.x<r.left?-o:o);if(s!=null&&s.then){let a=this.pending={pos:n};s.then(l=>{this.pending==a&&(this.pending=null,l&&this.view.dispatch({effects:this.setHover.of(l)}))},l=>Mn(this.view.state,l,"hover tooltip"))}else s&&this.view.dispatch({effects:this.setHover.of(s)})}mousemove(e){var n;this.lastMove={x:e.clientX,y:e.clientY,target:e.target,time:Date.now()},this.hoverTimeout<0&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));let r=this.active;if(r&&!I2(this.lastMove.target)||this.pending){let{pos:i}=r||this.pending,o=(n=r==null?void 0:r.end)!==null&&n!==void 0?n:i;(i==o?this.view.posAtCoords(this.lastMove)!=i:!OG(this.view,i,o,e.clientX,e.clientY,6))&&(this.view.dispatch({effects:this.setHover.of(null)}),this.pending=null)}}mouseleave(e){clearTimeout(this.hoverTimeout),this.hoverTimeout=-1,this.active&&!I2(e.relatedTarget)&&this.view.dispatch({effects:this.setHover.of(null)})}destroy(){clearTimeout(this.hoverTimeout),this.view.dom.removeEventListener("mouseleave",this.mouseleave),this.view.dom.removeEventListener("mousemove",this.mousemove)}}function I2(t){for(let e=t;e;e=e.parentNode)if(e.nodeType==1&&e.classList.contains("cm-tooltip"))return!0;return!1}function OG(t,e,n,r,i,o){let s=document.createRange(),a=t.domAtPos(e),l=t.domAtPos(n);s.setEnd(l.node,l.offset),s.setStart(a.node,a.offset);let c=s.getClientRects();s.detach();for(let u=0;u<c.length;u++){let d=c[u];if(Math.max(d.top-i,i-d.bottom,d.left-r,r-d.right)<=o)return!0}return!1}function TG(t,e={}){let n=se.define(),r=kt.define({create(){return null},update(i,o){if(i&&(e.hideOnChange&&(o.docChanged||o.selection)||e.hideOn&&e.hideOn(o,i)))return null;if(i&&o.docChanged){let s=o.changes.mapPos(i.pos,-1,Kt.TrackDel);if(s==null)return null;let a=Object.assign(Object.create(null),i);a.pos=s,i.end!=null&&(a.end=o.changes.mapPos(i.end)),i=a}for(let s of o.effects)s.is(n)&&(i=s.value),s.is(CG)&&(i=null);return i},provide:i=>lp.from(i)});return[r,nt.define(i=>new wG(i,t,r,n,e.hoverTime||300)),kG]}function PG(t,e){let n=t.plugin(aR);if(!n)return null;let r=n.manager.tooltips.indexOf(e);return r<0?null:n.manager.tooltipViews[r]}const CG=se.define(),z2=$.define({combine(t){let e,n;for(let r of t)e=e||r.topContainer,n=n||r.bottomContainer;return{topContainer:e,bottomContainer:n}}});function zu(t,e){let n=t.plugin(lR),r=n?n.specs.indexOf(e):-1;return r>-1?n.panels[r]:null}const lR=nt.fromClass(class{constructor(t){this.input=t.state.facet(pl),this.specs=this.input.filter(n=>n),this.panels=this.specs.map(n=>n(t));let e=t.state.facet(z2);this.top=new lf(t,!0,e.topContainer),this.bottom=new lf(t,!1,e.bottomContainer),this.top.sync(this.panels.filter(n=>n.top)),this.bottom.sync(this.panels.filter(n=>!n.top));for(let n of this.panels)n.dom.classList.add("cm-panel"),n.mount&&n.mount()}update(t){let e=t.state.facet(z2);this.top.container!=e.topContainer&&(this.top.sync([]),this.top=new lf(t.view,!0,e.topContainer)),this.bottom.container!=e.bottomContainer&&(this.bottom.sync([]),this.bottom=new lf(t.view,!1,e.bottomContainer)),this.top.syncClasses(),this.bottom.syncClasses();let n=t.state.facet(pl);if(n!=this.input){let r=n.filter(l=>l),i=[],o=[],s=[],a=[];for(let l of r){let c=this.specs.indexOf(l),u;c<0?(u=l(t.view),a.push(u)):(u=this.panels[c],u.update&&u.update(t)),i.push(u),(u.top?o:s).push(u)}this.specs=r,this.panels=i,this.top.sync(o),this.bottom.sync(s);for(let l of a)l.dom.classList.add("cm-panel"),l.mount&&l.mount()}else for(let r of this.panels)r.update&&r.update(t)}destroy(){this.top.sync([]),this.bottom.sync([])}},{provide:t=>K.scrollMargins.of(e=>{let n=e.plugin(t);return n&&{top:n.top.scrollMargin(),bottom:n.bottom.scrollMargin()}})});class lf{constructor(e,n,r){this.view=e,this.top=n,this.container=r,this.dom=void 0,this.classes="",this.panels=[],this.syncClasses()}sync(e){for(let n of this.panels)n.destroy&&e.indexOf(n)<0&&n.destroy();this.panels=e,this.syncDOM()}syncDOM(){if(this.panels.length==0){this.dom&&(this.dom.remove(),this.dom=void 0);return}if(!this.dom){this.dom=document.createElement("div"),this.dom.className=this.top?"cm-panels cm-panels-top":"cm-panels cm-panels-bottom",this.dom.style[this.top?"top":"bottom"]="0";let n=this.container||this.view.dom;n.insertBefore(this.dom,this.top?n.firstChild:null)}let e=this.dom.firstChild;for(let n of this.panels)if(n.dom.parentNode==this.dom){for(;e!=n.dom;)e=E2(e);e=e.nextSibling}else this.dom.insertBefore(n.dom,e);for(;e;)e=E2(e)}scrollMargin(){return!this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top)}syncClasses(){if(!(!this.container||this.classes==this.view.themeClasses)){for(let e of this.classes.split(" "))e&&this.container.classList.remove(e);for(let e of(this.classes=this.view.themeClasses).split(" "))e&&this.container.classList.add(e)}}}function E2(t){let e=t.nextSibling;return t.remove(),e}const pl=$.define({enables:lR});class Mi extends Es{compare(e){return this==e||this.constructor==e.constructor&&this.eq(e)}eq(e){return!1}destroy(e){}}Mi.prototype.elementClass="";Mi.prototype.toDOM=void 0;Mi.prototype.mapMode=Kt.TrackBefore;Mi.prototype.startSide=Mi.prototype.endSide=-1;Mi.prototype.point=!0;const ch=$.define(),MG={class:"",renderEmptyElements:!1,elementStyle:"",markers:()=>Oe.empty,lineMarker:()=>null,lineMarkerChange:null,initialSpacer:null,updateSpacer:null,domEventHandlers:{}},Gc=$.define();function RG(t){return[cR(),Gc.of(Object.assign(Object.assign({},MG),t))]}const Db=$.define({combine:t=>t.some(e=>e)});function cR(t){let e=[IG];return t&&t.fixed===!1&&e.push(Db.of(!0)),e}const IG=nt.fromClass(class{constructor(t){this.view=t,this.prevViewport=t.viewport,this.dom=document.createElement("div"),this.dom.className="cm-gutters",this.dom.setAttribute("aria-hidden","true"),this.dom.style.minHeight=this.view.contentHeight+"px",this.gutters=t.state.facet(Gc).map(e=>new V2(t,e));for(let e of this.gutters)this.dom.appendChild(e.dom);this.fixed=!t.state.facet(Db),this.fixed&&(this.dom.style.position="sticky"),this.syncGutters(!1),t.scrollDOM.insertBefore(this.dom,t.contentDOM)}update(t){if(this.updateGutters(t)){let e=this.prevViewport,n=t.view.viewport,r=Math.min(e.to,n.to)-Math.max(e.from,n.from);this.syncGutters(r<(n.to-n.from)*.8)}t.geometryChanged&&(this.dom.style.minHeight=this.view.contentHeight+"px"),this.view.state.facet(Db)!=!this.fixed&&(this.fixed=!this.fixed,this.dom.style.position=this.fixed?"sticky":""),this.prevViewport=t.view.viewport}syncGutters(t){let e=this.dom.nextSibling;t&&this.dom.remove();let n=Oe.iter(this.view.state.facet(ch),this.view.viewport.from),r=[],i=this.gutters.map(o=>new zG(o,this.view.viewport,-this.view.documentPadding.top));for(let o of this.view.viewportLineBlocks){let s;if(Array.isArray(o.type)){for(let a of o.type)if(a.type==Ve.Text){s=a;break}}else s=o.type==Ve.Text?o:void 0;if(!!s){r.length&&(r=[]),uR(n,r,o.from);for(let a of i)a.line(this.view,s,r)}}for(let o of i)o.finish();t&&this.view.scrollDOM.insertBefore(this.dom,e)}updateGutters(t){let e=t.startState.facet(Gc),n=t.state.facet(Gc),r=t.docChanged||t.heightChanged||t.viewportChanged||!Oe.eq(t.startState.facet(ch),t.state.facet(ch),t.view.viewport.from,t.view.viewport.to);if(e==n)for(let i of this.gutters)i.update(t)&&(r=!0);else{r=!0;let i=[];for(let o of n){let s=e.indexOf(o);s<0?i.push(new V2(this.view,o)):(this.gutters[s].update(t),i.push(this.gutters[s]))}for(let o of this.gutters)o.dom.remove(),i.indexOf(o)<0&&o.destroy();for(let o of i)this.dom.appendChild(o.dom);this.gutters=i}return r}destroy(){for(let t of this.gutters)t.destroy();this.dom.remove()}},{provide:t=>K.scrollMargins.of(e=>{let n=e.plugin(t);return!n||n.gutters.length==0||!n.fixed?null:e.textDirection==Qe.LTR?{left:n.dom.offsetWidth}:{right:n.dom.offsetWidth}})});function N2(t){return Array.isArray(t)?t:[t]}function uR(t,e,n){for(;t.value&&t.from<=n;)t.from==n&&e.push(t.value),t.next()}class zG{constructor(e,n,r){this.gutter=e,this.height=r,this.localMarkers=[],this.i=0,this.cursor=Oe.iter(e.markers,n.from)}line(e,n,r){this.localMarkers.length&&(this.localMarkers=[]),uR(this.cursor,this.localMarkers,n.from);let i=r.length?this.localMarkers.concat(r):this.localMarkers,o=this.gutter.config.lineMarker(e,n,i);o&&i.unshift(o);let s=this.gutter;if(i.length==0&&!s.config.renderEmptyElements)return;let a=n.top-this.height;if(this.i==s.elements.length){let l=new dR(e,n.height,a,i);s.elements.push(l),s.dom.appendChild(l.dom)}else s.elements[this.i].update(e,n.height,a,i);this.height=n.bottom,this.i++}finish(){let e=this.gutter;for(;e.elements.length>this.i;){let n=e.elements.pop();e.dom.removeChild(n.dom),n.destroy()}}}class V2{constructor(e,n){this.view=e,this.config=n,this.elements=[],this.spacer=null,this.dom=document.createElement("div"),this.dom.className="cm-gutter"+(this.config.class?" "+this.config.class:"");for(let r in n.domEventHandlers)this.dom.addEventListener(r,i=>{let o=e.lineBlockAtHeight(i.clientY-e.documentTop);n.domEventHandlers[r](e,o,i)&&i.preventDefault()});this.markers=N2(n.markers(e)),n.initialSpacer&&(this.spacer=new dR(e,0,0,[n.initialSpacer(e)]),this.dom.appendChild(this.spacer.dom),this.spacer.dom.style.cssText+="visibility: hidden; pointer-events: none")}update(e){let n=this.markers;if(this.markers=N2(this.config.markers(e.view)),this.spacer&&this.config.updateSpacer){let i=this.config.updateSpacer(this.spacer.markers[0],e);i!=this.spacer.markers[0]&&this.spacer.update(e.view,0,0,[i])}let r=e.view.viewport;return!Oe.eq(this.markers,n,r.from,r.to)||(this.config.lineMarkerChange?this.config.lineMarkerChange(e):!1)}destroy(){for(let e of this.elements)e.destroy()}}class dR{constructor(e,n,r,i){this.height=-1,this.above=0,this.markers=[],this.dom=document.createElement("div"),this.dom.className="cm-gutterElement",this.update(e,n,r,i)}update(e,n,r,i){this.height!=n&&(this.dom.style.height=(this.height=n)+"px"),this.above!=r&&(this.dom.style.marginTop=(this.above=r)?r+"px":""),EG(this.markers,i)||this.setMarkers(e,i)}setMarkers(e,n){let r="cm-gutterElement",i=this.dom.firstChild;for(let o=0,s=0;;){let a=s,l=o<n.length?n[o++]:null,c=!1;if(l){let u=l.elementClass;u&&(r+=" "+u);for(let d=s;d<this.markers.length;d++)if(this.markers[d].compare(l)){a=d,c=!0;break}}else a=this.markers.length;for(;s<a;){let u=this.markers[s++];if(u.toDOM){u.destroy(i);let d=i.nextSibling;i.remove(),i=d}}if(!l)break;l.toDOM&&(c?i=i.nextSibling:this.dom.insertBefore(l.toDOM(e),i)),c&&s++}this.dom.className=r,this.markers=n}destroy(){this.setMarkers(null,[])}}function EG(t,e){if(t.length!=e.length)return!1;for(let n=0;n<t.length;n++)if(!t[n].compare(e[n]))return!1;return!0}const NG=$.define(),Ma=$.define({combine(t){return ri(t,{formatNumber:String,domEventHandlers:{}},{domEventHandlers(e,n){let r=Object.assign({},e);for(let i in n){let o=r[i],s=n[i];r[i]=o?(a,l,c)=>o(a,l,c)||s(a,l,c):s}return r}})}});class m0 extends Mi{constructor(e){super(),this.number=e}eq(e){return this.number==e.number}toDOM(){return document.createTextNode(this.number)}}function g0(t,e){return t.state.facet(Ma).formatNumber(e,t.state)}const VG=Gc.compute([Ma],t=>({class:"cm-lineNumbers",renderEmptyElements:!1,markers(e){return e.state.facet(NG)},lineMarker(e,n,r){return r.some(i=>i.toDOM)?null:new m0(g0(e,e.state.doc.lineAt(n.from).number))},lineMarkerChange:e=>e.startState.facet(Ma)!=e.state.facet(Ma),initialSpacer(e){return new m0(g0(e,L2(e.state.doc.lines)))},updateSpacer(e,n){let r=g0(n.view,L2(n.view.state.doc.lines));return r==e.number?e:new m0(r)},domEventHandlers:t.facet(Ma).domEventHandlers}));function LG(t={}){return[Ma.of(t),cR(),VG]}function L2(t){let e=9;for(;e<t;)e=e*10+9;return e}const XG=new class extends Mi{constructor(){super(...arguments),this.elementClass="cm-activeLineGutter"}},BG=ch.compute(["selection"],t=>{let e=[],n=-1;for(let r of t.selection.ranges){let i=t.doc.lineAt(r.head).from;i>n&&(n=i,e.push(XG.range(i)))}return Oe.of(e)});function AG(){return BG}const fR=1024;let ZG=0;class v0{constructor(e,n){this.from=e,this.to=n}}class de{constructor(e={}){this.id=ZG++,this.perNode=!!e.perNode,this.deserialize=e.deserialize||(()=>{throw new Error("This node type doesn't define a deserialize function")})}add(e){if(this.perNode)throw new RangeError("Can't add per-node props to node types");return typeof e!="function"&&(e=pn.match(e)),n=>{let r=e(n);return r===void 0?null:[this,r]}}}de.closedBy=new de({deserialize:t=>t.split(" ")});de.openedBy=new de({deserialize:t=>t.split(" ")});de.group=new de({deserialize:t=>t.split(" ")});de.contextHash=new de({perNode:!0});de.lookAhead=new de({perNode:!0});de.mounted=new de({perNode:!0});const GG=Object.create(null);class pn{constructor(e,n,r,i=0){this.name=e,this.props=n,this.id=r,this.flags=i}static define(e){let n=e.props&&e.props.length?Object.create(null):GG,r=(e.top?1:0)|(e.skipped?2:0)|(e.error?4:0)|(e.name==null?8:0),i=new pn(e.name||"",n,e.id,r);if(e.props){for(let o of e.props)if(Array.isArray(o)||(o=o(i)),o){if(o[0].perNode)throw new RangeError("Can't store a per-node prop on a node type");n[o[0].id]=o[1]}}return i}prop(e){return this.props[e.id]}get isTop(){return(this.flags&1)>0}get isSkipped(){return(this.flags&2)>0}get isError(){return(this.flags&4)>0}get isAnonymous(){return(this.flags&8)>0}is(e){if(typeof e=="string"){if(this.name==e)return!0;let n=this.prop(de.group);return n?n.indexOf(e)>-1:!1}return this.id==e}static match(e){let n=Object.create(null);for(let r in e)for(let i of r.split(" "))n[i]=e[r];return r=>{for(let i=r.prop(de.group),o=-1;o<(i?i.length:0);o++){let s=n[o<0?r.name:i[o]];if(s)return s}}}}pn.none=new pn("",Object.create(null),0,8);class yx{constructor(e){this.types=e;for(let n=0;n<e.length;n++)if(e[n].id!=n)throw new RangeError("Node type ids should correspond to array positions when creating a node set")}extend(...e){let n=[];for(let r of this.types){let i=null;for(let o of e){let s=o(r);s&&(i||(i=Object.assign({},r.props)),i[s[0].id]=s[1])}n.push(i?new pn(r.name,i,r.id,r.flags):r)}return new yx(n)}}const cf=new WeakMap,X2=new WeakMap;var It;(function(t){t[t.ExcludeBuffers=1]="ExcludeBuffers",t[t.IncludeAnonymous=2]="IncludeAnonymous",t[t.IgnoreMounts=4]="IgnoreMounts",t[t.IgnoreOverlays=8]="IgnoreOverlays"})(It||(It={}));class ct{constructor(e,n,r,i,o){if(this.type=e,this.children=n,this.positions=r,this.length=i,this.props=null,o&&o.length){this.props=Object.create(null);for(let[s,a]of o)this.props[typeof s=="number"?s:s.id]=a}}toString(){let e=this.prop(de.mounted);if(e&&!e.overlay)return e.tree.toString();let n="";for(let r of this.children){let i=r.toString();i&&(n&&(n+=","),n+=i)}return this.type.name?(/\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(n.length?"("+n+")":""):n}cursor(e=0){return new dp(this.topNode,e)}cursorAt(e,n=0,r=0){let i=cf.get(this)||this.topNode,o=new dp(i);return o.moveTo(e,n),cf.set(this,o._tree),o}get topNode(){return new Si(this,0,0,null)}resolve(e,n=0){let r=ml(cf.get(this)||this.topNode,e,n,!1);return cf.set(this,r),r}resolveInner(e,n=0){let r=ml(X2.get(this)||this.topNode,e,n,!0);return X2.set(this,r),r}iterate(e){let{enter:n,leave:r,from:i=0,to:o=this.length}=e;for(let s=this.cursor((e.mode||0)|It.IncludeAnonymous);;){let a=!1;if(s.from<=o&&s.to>=i&&(s.type.isAnonymous||n(s)!==!1)){if(s.firstChild())continue;a=!0}for(;a&&r&&!s.type.isAnonymous&&r(s),!s.nextSibling();){if(!s.parent())return;a=!0}}}prop(e){return e.perNode?this.props?this.props[e.id]:void 0:this.type.prop(e)}get propValues(){let e=[];if(this.props)for(let n in this.props)e.push([+n,this.props[n]]);return e}balance(e={}){return this.children.length<=8?this:kx(pn.none,this.children,this.positions,0,this.children.length,0,this.length,(n,r,i)=>new ct(this.type,n,r,i,this.propValues),e.makeTree||((n,r,i)=>new ct(pn.none,n,r,i)))}static build(e){return YG(e)}}ct.empty=new ct(pn.none,[],[],0);class xx{constructor(e,n){this.buffer=e,this.index=n}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}get pos(){return this.index}next(){this.index-=4}fork(){return new xx(this.buffer,this.index)}}class Ys{constructor(e,n,r){this.buffer=e,this.length=n,this.set=r}get type(){return pn.none}toString(){let e=[];for(let n=0;n<this.buffer.length;)e.push(this.childString(n)),n=this.buffer[n+3];return e.join(",")}childString(e){let n=this.buffer[e],r=this.buffer[e+3],i=this.set.types[n],o=i.name;if(/\W/.test(o)&&!i.isError&&(o=JSON.stringify(o)),e+=4,r==e)return o;let s=[];for(;e<r;)s.push(this.childString(e)),e=this.buffer[e+3];return o+"("+s.join(",")+")"}findChild(e,n,r,i,o){let{buffer:s}=this,a=-1;for(let l=e;l!=n&&!(hR(o,i,s[l+1],s[l+2])&&(a=l,r>0));l=s[l+3]);return a}slice(e,n,r){let i=this.buffer,o=new Uint16Array(n-e),s=0;for(let a=e,l=0;a<n;){o[l++]=i[a++],o[l++]=i[a++]-r;let c=o[l++]=i[a++]-r;o[l++]=i[a++]-e,s=Math.max(s,c)}return new Ys(o,s,this.set)}}function hR(t,e,n,r){switch(t){case-2:return n<e;case-1:return r>=e&&n<e;case 0:return n<e&&r>e;case 1:return n<=e&&r>e;case 2:return r>e;case 4:return!0}}function pR(t,e){let n=t.childBefore(e);for(;n;){let r=n.lastChild;if(!r||r.to!=n.to)break;r.type.isError&&r.from==r.to?(t=n,n=r.prevSibling):n=r}return t}function ml(t,e,n,r){for(var i;t.from==t.to||(n<1?t.from>=e:t.from>e)||(n>-1?t.to<=e:t.to<e);){let s=!r&&t instanceof Si&&t.index<0?null:t.parent;if(!s)return t;t=s}let o=r?0:It.IgnoreOverlays;if(r)for(let s=t,a=s.parent;a;s=a,a=s.parent)s instanceof Si&&s.index<0&&((i=a.enter(e,n,o))===null||i===void 0?void 0:i.from)!=s.from&&(t=a);for(;;){let s=t.enter(e,n,o);if(!s)return t;t=s}}class Si{constructor(e,n,r,i){this._tree=e,this.from=n,this.index=r,this._parent=i}get type(){return this._tree.type}get name(){return this._tree.type.name}get to(){return this.from+this._tree.length}nextChild(e,n,r,i,o=0){for(let s=this;;){for(let{children:a,positions:l}=s._tree,c=n>0?a.length:-1;e!=c;e+=n){let u=a[e],d=l[e]+s.from;if(!!hR(i,r,d,d+u.length)){if(u instanceof Ys){if(o&It.ExcludeBuffers)continue;let f=u.findChild(0,u.buffer.length,n,r-d,i);if(f>-1)return new oo(new WG(s,u,e,d),null,f)}else if(o&It.IncludeAnonymous||!u.type.isAnonymous||Sx(u)){let f;if(!(o&It.IgnoreMounts)&&u.props&&(f=u.prop(de.mounted))&&!f.overlay)return new Si(f.tree,d,e,s);let h=new Si(u,d,e,s);return o&It.IncludeAnonymous||!h.type.isAnonymous?h:h.nextChild(n<0?u.children.length-1:0,n,r,i)}}}if(o&It.IncludeAnonymous||!s.type.isAnonymous||(s.index>=0?e=s.index+n:e=n<0?-1:s._parent._tree.children.length,s=s._parent,!s))return null}}get firstChild(){return this.nextChild(0,1,0,4)}get lastChild(){return this.nextChild(this._tree.children.length-1,-1,0,4)}childAfter(e){return this.nextChild(0,1,e,2)}childBefore(e){return this.nextChild(this._tree.children.length-1,-1,e,-2)}enter(e,n,r=0){let i;if(!(r&It.IgnoreOverlays)&&(i=this._tree.prop(de.mounted))&&i.overlay){let o=e-this.from;for(let{from:s,to:a}of i.overlay)if((n>0?s<=o:s<o)&&(n<0?a>=o:a>o))return new Si(i.tree,i.overlay[0].from+this.from,-1,this)}return this.nextChild(0,1,e,n,r)}nextSignificantParent(){let e=this;for(;e.type.isAnonymous&&e._parent;)e=e._parent;return e}get parent(){return this._parent?this._parent.nextSignificantParent():null}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4):null}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4):null}cursor(e=0){return new dp(this,e)}get tree(){return this._tree}toTree(){return this._tree}resolve(e,n=0){return ml(this,e,n,!1)}resolveInner(e,n=0){return ml(this,e,n,!0)}enterUnfinishedNodesBefore(e){return pR(this,e)}getChild(e,n=null,r=null){let i=cp(this,e,n,r);return i.length?i[0]:null}getChildren(e,n=null,r=null){return cp(this,e,n,r)}toString(){return this._tree.toString()}get node(){return this}matchContext(e){return up(this,e)}}function cp(t,e,n,r){let i=t.cursor(),o=[];if(!i.firstChild())return o;if(n!=null){for(;!i.type.is(n);)if(!i.nextSibling())return o}for(;;){if(r!=null&&i.type.is(r))return o;if(i.type.is(e)&&o.push(i.node),!i.nextSibling())return r==null?o:[]}}function up(t,e,n=e.length-1){for(let r=t.parent;n>=0;r=r.parent){if(!r)return!1;if(!r.type.isAnonymous){if(e[n]&&e[n]!=r.name)return!1;n--}}return!0}class WG{constructor(e,n,r,i){this.parent=e,this.buffer=n,this.index=r,this.start=i}}class oo{get name(){return this.type.name}get from(){return this.context.start+this.context.buffer.buffer[this.index+1]}get to(){return this.context.start+this.context.buffer.buffer[this.index+2]}constructor(e,n,r){this.context=e,this._parent=n,this.index=r,this.type=e.buffer.set.types[e.buffer.buffer[r]]}child(e,n,r){let{buffer:i}=this.context,o=i.findChild(this.index+4,i.buffer[this.index+3],e,n-this.context.start,r);return o<0?null:new oo(this.context,this,o)}get firstChild(){return this.child(1,0,4)}get lastChild(){return this.child(-1,0,4)}childAfter(e){return this.child(1,e,2)}childBefore(e){return this.child(-1,e,-2)}enter(e,n,r=0){if(r&It.ExcludeBuffers)return null;let{buffer:i}=this.context,o=i.findChild(this.index+4,i.buffer[this.index+3],n>0?1:-1,e-this.context.start,n);return o<0?null:new oo(this.context,this,o)}get parent(){return this._parent||this.context.parent.nextSignificantParent()}externalSibling(e){return this._parent?null:this.context.parent.nextChild(this.context.index+e,e,0,4)}get nextSibling(){let{buffer:e}=this.context,n=e.buffer[this.index+3];return n<(this._parent?e.buffer[this._parent.index+3]:e.buffer.length)?new oo(this.context,this._parent,n):this.externalSibling(1)}get prevSibling(){let{buffer:e}=this.context,n=this._parent?this._parent.index+4:0;return this.index==n?this.externalSibling(-1):new oo(this.context,this._parent,e.findChild(n,this.index,-1,0,4))}cursor(e=0){return new dp(this,e)}get tree(){return null}toTree(){let e=[],n=[],{buffer:r}=this.context,i=this.index+4,o=r.buffer[this.index+3];if(o>i){let s=r.buffer[this.index+1];e.push(r.slice(i,o,s)),n.push(0)}return new ct(this.type,e,n,this.to-this.from)}resolve(e,n=0){return ml(this,e,n,!1)}resolveInner(e,n=0){return ml(this,e,n,!0)}enterUnfinishedNodesBefore(e){return pR(this,e)}toString(){return this.context.buffer.childString(this.index)}getChild(e,n=null,r=null){let i=cp(this,e,n,r);return i.length?i[0]:null}getChildren(e,n=null,r=null){return cp(this,e,n,r)}get node(){return this}matchContext(e){return up(this,e)}}class dp{get name(){return this.type.name}constructor(e,n=0){if(this.mode=n,this.buffer=null,this.stack=[],this.index=0,this.bufferNode=null,e instanceof Si)this.yieldNode(e);else{this._tree=e.context.parent,this.buffer=e.context;for(let r=e._parent;r;r=r._parent)this.stack.unshift(r.index);this.bufferNode=e,this.yieldBuf(e.index)}}yieldNode(e){return e?(this._tree=e,this.type=e.type,this.from=e.from,this.to=e.to,!0):!1}yieldBuf(e,n){this.index=e;let{start:r,buffer:i}=this.buffer;return this.type=n||i.set.types[i.buffer[e]],this.from=r+i.buffer[e+1],this.to=r+i.buffer[e+2],!0}yield(e){return e?e instanceof Si?(this.buffer=null,this.yieldNode(e)):(this.buffer=e.context,this.yieldBuf(e.index,e.type)):!1}toString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString()}enterChild(e,n,r){if(!this.buffer)return this.yield(this._tree.nextChild(e<0?this._tree._tree.children.length-1:0,e,n,r,this.mode));let{buffer:i}=this.buffer,o=i.findChild(this.index+4,i.buffer[this.index+3],e,n-this.buffer.start,r);return o<0?!1:(this.stack.push(this.index),this.yieldBuf(o))}firstChild(){return this.enterChild(1,0,4)}lastChild(){return this.enterChild(-1,0,4)}childAfter(e){return this.enterChild(1,e,2)}childBefore(e){return this.enterChild(-1,e,-2)}enter(e,n,r=this.mode){return this.buffer?r&It.ExcludeBuffers?!1:this.enterChild(1,e,n):this.yield(this._tree.enter(e,n,r))}parent(){if(!this.buffer)return this.yieldNode(this.mode&It.IncludeAnonymous?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let e=this.mode&It.IncludeAnonymous?this.buffer.parent:this.buffer.parent.nextSignificantParent();return this.buffer=null,this.yieldNode(e)}sibling(e){if(!this.buffer)return this._tree._parent?this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+e,e,0,4,this.mode)):!1;let{buffer:n}=this.buffer,r=this.stack.length-1;if(e<0){let i=r<0?0:this.stack[r]+4;if(this.index!=i)return this.yieldBuf(n.findChild(i,this.index,-1,0,4))}else{let i=n.buffer[this.index+3];if(i<(r<0?n.buffer.length:n.buffer[this.stack[r]+3]))return this.yieldBuf(i)}return r<0?this.yield(this.buffer.parent.nextChild(this.buffer.index+e,e,0,4,this.mode)):!1}nextSibling(){return this.sibling(1)}prevSibling(){return this.sibling(-1)}atLastNode(e){let n,r,{buffer:i}=this;if(i){if(e>0){if(this.index<i.buffer.buffer.length)return!1}else for(let o=0;o<this.index;o++)if(i.buffer.buffer[o+3]<this.index)return!1;({index:n,parent:r}=i)}else({index:n,_parent:r}=this._tree);for(;r;{index:n,_parent:r}=r)if(n>-1)for(let o=n+e,s=e<0?-1:r._tree.children.length;o!=s;o+=e){let a=r._tree.children[o];if(this.mode&It.IncludeAnonymous||a instanceof Ys||!a.type.isAnonymous||Sx(a))return!1}return!0}move(e,n){if(n&&this.enterChild(e,0,4))return!0;for(;;){if(this.sibling(e))return!0;if(this.atLastNode(e)||!this.parent())return!1}}next(e=!0){return this.move(1,e)}prev(e=!0){return this.move(-1,e)}moveTo(e,n=0){for(;(this.from==this.to||(n<1?this.from>=e:this.from>e)||(n>-1?this.to<=e:this.to<e))&&this.parent(););for(;this.enterChild(1,e,n););return this}get node(){if(!this.buffer)return this._tree;let e=this.bufferNode,n=null,r=0;if(e&&e.context==this.buffer){e:for(let i=this.index,o=this.stack.length;o>=0;){for(let s=e;s;s=s._parent)if(s.index==i){if(i==this.index)return s;n=s,r=o+1;break e}i=this.stack[--o]}}for(let i=r;i<this.stack.length;i++)n=new oo(this.buffer,n,this.stack[i]);return this.bufferNode=new oo(this.buffer,n,this.index)}get tree(){return this.buffer?null:this._tree._tree}iterate(e,n){for(let r=0;;){let i=!1;if(this.type.isAnonymous||e(this)!==!1){if(this.firstChild()){r++;continue}this.type.isAnonymous||(i=!0)}for(;i&&n&&n(this),i=this.type.isAnonymous,!this.nextSibling();){if(!r)return;this.parent(),r--,i=!0}}}matchContext(e){if(!this.buffer)return up(this.node,e);let{buffer:n}=this.buffer,{types:r}=n.set;for(let i=e.length-1,o=this.stack.length-1;i>=0;o--){if(o<0)return up(this.node,e,i);let s=r[n.buffer[this.stack[o]]];if(!s.isAnonymous){if(e[i]&&e[i]!=s.name)return!1;i--}}return!0}}function Sx(t){return t.children.some(e=>e instanceof Ys||!e.type.isAnonymous||Sx(e))}function YG(t){var e;let{buffer:n,nodeSet:r,maxBufferLength:i=fR,reused:o=[],minRepeatType:s=r.types.length}=t,a=Array.isArray(n)?new xx(n,n.length):n,l=r.types,c=0,u=0;function d(x,k,O,T,M){let{id:E,start:I,end:B,size:D}=a,J=u;for(;D<0;)if(a.next(),D==-1){let L=o[E];O.push(L),T.push(I-x);return}else if(D==-3){c=E;return}else if(D==-4){u=E;return}else throw new RangeError(`Unrecognized record size: ${D}`);let ae=l[E],oe,Y,ee=I-x;if(B-I<=i&&(Y=m(a.pos-k,M))){let L=new Uint16Array(Y.size-Y.skip),W=a.pos-Y.size,q=L.length;for(;a.pos>W;)q=b(Y.start,L,q);oe=new Ys(L,B-Y.start,r),ee=Y.start-x}else{let L=a.pos-D;a.next();let W=[],q=[],le=E>=s?E:-1,ue=0,re=B;for(;a.pos>L;)le>=0&&a.id==le&&a.size>=0?(a.end<=re-i&&(h(W,q,I,ue,a.end,re,le,J),ue=W.length,re=a.end),a.next()):d(I,L,W,q,le);if(le>=0&&ue>0&&ue<W.length&&h(W,q,I,ue,I,re,le,J),W.reverse(),q.reverse(),le>-1&&ue>0){let Ce=f(ae);oe=kx(ae,W,q,0,W.length,0,B-I,Ce,Ce)}else oe=p(ae,W,q,B-I,J-B)}O.push(oe),T.push(ee)}function f(x){return(k,O,T)=>{let M=0,E=k.length-1,I,B;if(E>=0&&(I=k[E])instanceof ct){if(!E&&I.type==x&&I.length==T)return I;(B=I.prop(de.lookAhead))&&(M=O[E]+I.length+B)}return p(x,k,O,T,M)}}function h(x,k,O,T,M,E,I,B){let D=[],J=[];for(;x.length>T;)D.push(x.pop()),J.push(k.pop()+O-M);x.push(p(r.types[I],D,J,E-M,B-E)),k.push(M-O)}function p(x,k,O,T,M=0,E){if(c){let I=[de.contextHash,c];E=E?[I].concat(E):[I]}if(M>25){let I=[de.lookAhead,M];E=E?[I].concat(E):[I]}return new ct(x,k,O,T,E)}function m(x,k){let O=a.fork(),T=0,M=0,E=0,I=O.end-i,B={size:0,start:0,skip:0};e:for(let D=O.pos-x;O.pos>D;){let J=O.size;if(O.id==k&&J>=0){B.size=T,B.start=M,B.skip=E,E+=4,T+=4,O.next();continue}let ae=O.pos-J;if(J<0||ae<D||O.start<I)break;let oe=O.id>=s?4:0,Y=O.start;for(O.next();O.pos>ae;){if(O.size<0)if(O.size==-3)oe+=4;else break e;else O.id>=s&&(oe+=4);O.next()}M=Y,T+=J,E+=oe}return(k<0||T==x)&&(B.size=T,B.start=M,B.skip=E),B.size>4?B:void 0}function b(x,k,O){let{id:T,start:M,end:E,size:I}=a;if(a.next(),I>=0&&T<s){let B=O;if(I>4){let D=a.pos-(I-4);for(;a.pos>D;)O=b(x,k,O)}k[--O]=B,k[--O]=E-x,k[--O]=M-x,k[--O]=T}else I==-3?c=T:I==-4&&(u=T);return O}let g=[],v=[];for(;a.pos>0;)d(t.start||0,t.bufferStart||0,g,v,-1);let y=(e=t.length)!==null&&e!==void 0?e:g.length?v[0]+g[0].length:0;return new ct(l[t.topID],g.reverse(),v.reverse(),y)}const B2=new WeakMap;function uh(t,e){if(!t.isAnonymous||e instanceof Ys||e.type!=t)return 1;let n=B2.get(e);if(n==null){n=1;for(let r of e.children){if(r.type!=t||!(r instanceof ct)){n=1;break}n+=uh(t,r)}B2.set(e,n)}return n}function kx(t,e,n,r,i,o,s,a,l){let c=0;for(let p=r;p<i;p++)c+=uh(t,e[p]);let u=Math.ceil(c*1.5/8),d=[],f=[];function h(p,m,b,g,v){for(let y=b;y<g;){let x=y,k=m[y],O=uh(t,p[y]);for(y++;y<g;y++){let T=uh(t,p[y]);if(O+T>=u)break;O+=T}if(y==x+1){if(O>u){let T=p[x];h(T.children,T.positions,0,T.children.length,m[x]+v);continue}d.push(p[x])}else{let T=m[y-1]+p[y-1].length-k;d.push(kx(t,p,m,x,y,k,T,null,l))}f.push(k+v-o)}}return h(e,n,r,i,0),(a||l)(d,f,s)}class xs{constructor(e,n,r,i,o=!1,s=!1){this.from=e,this.to=n,this.tree=r,this.offset=i,this.open=(o?1:0)|(s?2:0)}get openStart(){return(this.open&1)>0}get openEnd(){return(this.open&2)>0}static addTree(e,n=[],r=!1){let i=[new xs(0,e.length,e,0,!1,r)];for(let o of n)o.to>e.length&&i.push(o);return i}static applyChanges(e,n,r=128){if(!n.length)return e;let i=[],o=1,s=e.length?e[0]:null;for(let a=0,l=0,c=0;;a++){let u=a<n.length?n[a]:null,d=u?u.fromA:1e9;if(d-l>=r)for(;s&&s.from<d;){let f=s;if(l>=f.from||d<=f.to||c){let h=Math.max(f.from,l)-c,p=Math.min(f.to,d)-c;f=h>=p?null:new xs(h,p,f.tree,f.offset+c,a>0,!!u)}if(f&&i.push(f),s.to>d)break;s=o<e.length?e[o++]:null}if(!u)break;l=u.toA,c=u.toA-u.toB}return i}}class mR{startParse(e,n,r){return typeof e=="string"&&(e=new FG(e)),r=r?r.length?r.map(i=>new v0(i.from,i.to)):[new v0(0,0)]:[new v0(0,e.length)],this.createParse(e,n||[],r)}parse(e,n,r){let i=this.startParse(e,n,r);for(;;){let o=i.advance();if(o)return o}}}class FG{constructor(e){this.string=e}get length(){return this.string.length}chunk(e){return this.string.slice(e)}get lineChunks(){return!1}read(e,n){return this.string.slice(e,n)}}new de({perNode:!0});let HG=0;class Wt{constructor(e,n,r){this.set=e,this.base=n,this.modified=r,this.id=HG++}static define(e){if(e!=null&&e.base)throw new Error("Can not derive from a modified tag");let n=new Wt([],null,[]);if(n.set.push(n),e)for(let r of e.set)n.set.push(r);return n}static defineModifier(){let e=new fp;return n=>n.modified.indexOf(e)>-1?n:fp.get(n.base||n,n.modified.concat(e).sort((r,i)=>r.id-i.id))}}let jG=0;class fp{constructor(){this.instances=[],this.id=jG++}static get(e,n){if(!n.length)return e;let r=n[0].instances.find(a=>a.base==e&&DG(n,a.modified));if(r)return r;let i=[],o=new Wt(i,e,n);for(let a of n)a.instances.push(o);let s=UG(n);for(let a of e.set)if(!a.modified.length)for(let l of s)i.push(fp.get(a,l));return o}}function DG(t,e){return t.length==e.length&&t.every((n,r)=>n==e[r])}function UG(t){let e=[[]];for(let n=0;n<t.length;n++)for(let r=0,i=e.length;r<i;r++)e.push(e[r].concat(t[n]));return e.sort((n,r)=>r.length-n.length)}function gR(t){let e=Object.create(null);for(let n in t){let r=t[n];Array.isArray(r)||(r=[r]);for(let i of n.split(" "))if(i){let o=[],s=2,a=i;for(let d=0;;){if(a=="..."&&d>0&&d+3==i.length){s=1;break}let f=/^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(a);if(!f)throw new RangeError("Invalid path: "+i);if(o.push(f[0]=="*"?"":f[0][0]=='"'?JSON.parse(f[0]):f[0]),d+=f[0].length,d==i.length)break;let h=i[d++];if(d==i.length&&h=="!"){s=0;break}if(h!="/")throw new RangeError("Invalid path: "+i);a=i.slice(d)}let l=o.length-1,c=o[l];if(!c)throw new RangeError("Invalid path: "+i);let u=new hp(r,s,l>0?o.slice(0,l):null);e[c]=u.sort(e[c])}}return vR.add(e)}const vR=new de;class hp{constructor(e,n,r,i){this.tags=e,this.mode=n,this.context=r,this.next=i}get opaque(){return this.mode==0}get inherit(){return this.mode==1}sort(e){return!e||e.depth<this.depth?(this.next=e,this):(e.next=this.sort(e.next),e)}get depth(){return this.context?this.context.length:0}}hp.empty=new hp([],2,null);function bR(t,e){let n=Object.create(null);for(let o of t)if(!Array.isArray(o.tag))n[o.tag.id]=o.class;else for(let s of o.tag)n[s.id]=o.class;let{scope:r,all:i=null}=e||{};return{style:o=>{let s=i;for(let a of o)for(let l of a.set){let c=n[l.id];if(c){s=s?s+" "+c:c;break}}return s},scope:r}}function KG(t,e){let n=null;for(let r of t){let i=r.style(e);i&&(n=n?n+" "+i:i)}return n}function qG(t,e,n,r=0,i=t.length){let o=new QG(r,Array.isArray(e)?e:[e],n);o.highlightRange(t.cursor(),r,i,"",o.highlighters),o.flush(i)}class QG{constructor(e,n,r){this.at=e,this.highlighters=n,this.span=r,this.class=""}startSpan(e,n){n!=this.class&&(this.flush(e),e>this.at&&(this.at=e),this.class=n)}flush(e){e>this.at&&this.class&&this.span(this.at,e,this.class)}highlightRange(e,n,r,i,o){let{type:s,from:a,to:l}=e;if(a>=r||l<=n)return;s.isTop&&(o=this.highlighters.filter(h=>!h.scope||h.scope(s)));let c=i,u=JG(e)||hp.empty,d=KG(o,u.tags);if(d&&(c&&(c+=" "),c+=d,u.mode==1&&(i+=(i?" ":"")+d)),this.startSpan(e.from,c),u.opaque)return;let f=e.tree&&e.tree.prop(de.mounted);if(f&&f.overlay){let h=e.node.enter(f.overlay[0].from+a,1),p=this.highlighters.filter(b=>!b.scope||b.scope(f.tree.type)),m=e.firstChild();for(let b=0,g=a;;b++){let v=b<f.overlay.length?f.overlay[b]:null,y=v?v.from+a:l,x=Math.max(n,g),k=Math.min(r,y);if(x<k&&m)for(;e.from<k&&(this.highlightRange(e,x,k,i,o),this.startSpan(Math.min(k,e.to),c),!(e.to>=y||!e.nextSibling())););if(!v||y>r)break;g=v.to+a,g>n&&(this.highlightRange(h.cursor(),Math.max(n,v.from+a),Math.min(r,g),i,p),this.startSpan(g,c))}m&&e.parent()}else if(e.firstChild()){do if(!(e.to<=n)){if(e.from>=r)break;this.highlightRange(e,n,r,i,o),this.startSpan(Math.min(r,e.to),c)}while(e.nextSibling());e.parent()}}}function JG(t){let e=t.type.prop(vR);for(;e&&e.context&&!t.matchContext(e.context);)e=e.next;return e||null}const G=Wt.define,uf=G(),ji=G(),A2=G(ji),Z2=G(ji),Di=G(),df=G(Di),b0=G(Di),zr=G(),Ho=G(zr),Mr=G(),Rr=G(),Ub=G(),ic=G(Ub),ff=G(),R={comment:uf,lineComment:G(uf),blockComment:G(uf),docComment:G(uf),name:ji,variableName:G(ji),typeName:A2,tagName:G(A2),propertyName:Z2,attributeName:G(Z2),className:G(ji),labelName:G(ji),namespace:G(ji),macroName:G(ji),literal:Di,string:df,docString:G(df),character:G(df),attributeValue:G(df),number:b0,integer:G(b0),float:G(b0),bool:G(Di),regexp:G(Di),escape:G(Di),color:G(Di),url:G(Di),keyword:Mr,self:G(Mr),null:G(Mr),atom:G(Mr),unit:G(Mr),modifier:G(Mr),operatorKeyword:G(Mr),controlKeyword:G(Mr),definitionKeyword:G(Mr),moduleKeyword:G(Mr),operator:Rr,derefOperator:G(Rr),arithmeticOperator:G(Rr),logicOperator:G(Rr),bitwiseOperator:G(Rr),compareOperator:G(Rr),updateOperator:G(Rr),definitionOperator:G(Rr),typeOperator:G(Rr),controlOperator:G(Rr),punctuation:Ub,separator:G(Ub),bracket:ic,angleBracket:G(ic),squareBracket:G(ic),paren:G(ic),brace:G(ic),content:zr,heading:Ho,heading1:G(Ho),heading2:G(Ho),heading3:G(Ho),heading4:G(Ho),heading5:G(Ho),heading6:G(Ho),contentSeparator:G(zr),list:G(zr),quote:G(zr),emphasis:G(zr),strong:G(zr),link:G(zr),monospace:G(zr),strikethrough:G(zr),inserted:G(),deleted:G(),changed:G(),invalid:G(),meta:ff,documentMeta:G(ff),annotation:G(ff),processingInstruction:G(ff),definition:Wt.defineModifier(),constant:Wt.defineModifier(),function:Wt.defineModifier(),standard:Wt.defineModifier(),local:Wt.defineModifier(),special:Wt.defineModifier()};bR([{tag:R.link,class:"tok-link"},{tag:R.heading,class:"tok-heading"},{tag:R.emphasis,class:"tok-emphasis"},{tag:R.strong,class:"tok-strong"},{tag:R.keyword,class:"tok-keyword"},{tag:R.atom,class:"tok-atom"},{tag:R.bool,class:"tok-bool"},{tag:R.url,class:"tok-url"},{tag:R.labelName,class:"tok-labelName"},{tag:R.inserted,class:"tok-inserted"},{tag:R.deleted,class:"tok-deleted"},{tag:R.literal,class:"tok-literal"},{tag:R.string,class:"tok-string"},{tag:R.number,class:"tok-number"},{tag:[R.regexp,R.escape,R.special(R.string)],class:"tok-string2"},{tag:R.variableName,class:"tok-variableName"},{tag:R.local(R.variableName),class:"tok-variableName tok-local"},{tag:R.definition(R.variableName),class:"tok-variableName tok-definition"},{tag:R.special(R.variableName),class:"tok-variableName2"},{tag:R.definition(R.propertyName),class:"tok-propertyName tok-definition"},{tag:R.typeName,class:"tok-typeName"},{tag:R.namespace,class:"tok-namespace"},{tag:R.className,class:"tok-className"},{tag:R.macroName,class:"tok-macroName"},{tag:R.propertyName,class:"tok-propertyName"},{tag:R.operator,class:"tok-operator"},{tag:R.comment,class:"tok-comment"},{tag:R.meta,class:"tok-meta"},{tag:R.invalid,class:"tok-invalid"},{tag:R.punctuation,class:"tok-punctuation"}]);var y0;const Eu=new de;function _G(t){return $.define({combine:t?e=>e.concat(t):void 0})}class Un{constructor(e,n,r=[],i=""){this.data=e,this.name=i,pe.prototype.hasOwnProperty("tree")||Object.defineProperty(pe.prototype,"tree",{get(){return xt(this)}}),this.parser=n,this.extension=[Co.of(this),pe.languageData.of((o,s,a)=>o.facet(G2(o,s,a)))].concat(r)}isActiveAt(e,n,r=-1){return G2(e,n,r)==this.data}findRegions(e){let n=e.facet(Co);if((n==null?void 0:n.data)==this.data)return[{from:0,to:e.doc.length}];if(!n||!n.allowsNesting)return[];let r=[],i=(o,s)=>{if(o.prop(Eu)==this.data){r.push({from:s,to:s+o.length});return}let a=o.prop(de.mounted);if(a){if(a.tree.prop(Eu)==this.data){if(a.overlay)for(let l of a.overlay)r.push({from:l.from+s,to:l.to+s});else r.push({from:s,to:s+o.length});return}else if(a.overlay){let l=r.length;if(i(a.tree,a.overlay[0].from+s),r.length>l)return}}for(let l=0;l<o.children.length;l++){let c=o.children[l];c instanceof ct&&i(c,o.positions[l]+s)}};return i(xt(e),0),r}get allowsNesting(){return!0}}Un.setState=se.define();function G2(t,e,n){let r=t.facet(Co);if(!r)return null;let i=r.data;if(r.allowsNesting)for(let o=xt(t).topNode;o;o=o.enter(e,n,It.ExcludeBuffers))i=o.type.prop(Eu)||i;return i}class pp extends Un{constructor(e,n,r){super(e,n,[],r),this.parser=n}static define(e){let n=_G(e.languageData);return new pp(n,e.parser.configure({props:[Eu.add(r=>r.isTop?n:void 0)]}),e.name)}configure(e,n){return new pp(this.data,this.parser.configure(e),n||this.name)}get allowsNesting(){return this.parser.hasWrappers()}}function xt(t){let e=t.field(Un.state,!1);return e?e.tree:ct.empty}function $G(t,e=t.doc.length){var n;return((n=t.field(Un.state,!1))===null||n===void 0?void 0:n.context.isDone(e))||!1}class eW{constructor(e,n=e.length){this.doc=e,this.length=n,this.cursorPos=0,this.string="",this.cursor=e.iter()}syncTo(e){return this.string=this.cursor.next(e-this.cursorPos).value,this.cursorPos=e+this.string.length,this.cursorPos-this.string.length}chunk(e){return this.syncTo(e),this.string}get lineChunks(){return!0}read(e,n){let r=this.cursorPos-this.string.length;return e<r||n>=this.cursorPos?this.doc.sliceString(e,n):this.string.slice(e-r,n-r)}}let oc=null;class mp{constructor(e,n,r=[],i,o,s,a,l){this.parser=e,this.state=n,this.fragments=r,this.tree=i,this.treeLen=o,this.viewport=s,this.skipped=a,this.scheduleOn=l,this.parse=null,this.tempSkipped=[]}static create(e,n,r){return new mp(e,n,[],ct.empty,0,r,[],null)}startParse(){return this.parser.startParse(new eW(this.state.doc),this.fragments)}work(e,n){return n!=null&&n>=this.state.doc.length&&(n=void 0),this.tree!=ct.empty&&this.isDone(n!=null?n:this.state.doc.length)?(this.takeTree(),!0):this.withContext(()=>{var r;if(typeof e=="number"){let i=Date.now()+e;e=()=>Date.now()>i}for(this.parse||(this.parse=this.startParse()),n!=null&&(this.parse.stoppedAt==null||this.parse.stoppedAt>n)&&n<this.state.doc.length&&this.parse.stopAt(n);;){let i=this.parse.advance();if(i)if(this.fragments=this.withoutTempSkipped(xs.addTree(i,this.fragments,this.parse.stoppedAt!=null)),this.treeLen=(r=this.parse.stoppedAt)!==null&&r!==void 0?r:this.state.doc.length,this.tree=i,this.parse=null,this.treeLen<(n!=null?n:this.state.doc.length))this.parse=this.startParse();else return!0;if(e())return!1}})}takeTree(){let e,n;this.parse&&(e=this.parse.parsedPos)>=this.treeLen&&((this.parse.stoppedAt==null||this.parse.stoppedAt>e)&&this.parse.stopAt(e),this.withContext(()=>{for(;!(n=this.parse.advance()););}),this.treeLen=e,this.tree=n,this.fragments=this.withoutTempSkipped(xs.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(e){let n=oc;oc=this;try{return e()}finally{oc=n}}withoutTempSkipped(e){for(let n;n=this.tempSkipped.pop();)e=W2(e,n.from,n.to);return e}changes(e,n){let{fragments:r,tree:i,treeLen:o,viewport:s,skipped:a}=this;if(this.takeTree(),!e.empty){let l=[];if(e.iterChangedRanges((c,u,d,f)=>l.push({fromA:c,toA:u,fromB:d,toB:f})),r=xs.applyChanges(r,l),i=ct.empty,o=0,s={from:e.mapPos(s.from,-1),to:e.mapPos(s.to,1)},this.skipped.length){a=[];for(let c of this.skipped){let u=e.mapPos(c.from,1),d=e.mapPos(c.to,-1);u<d&&a.push({from:u,to:d})}}}return new mp(this.parser,n,r,i,o,s,a,this.scheduleOn)}updateViewport(e){if(this.viewport.from==e.from&&this.viewport.to==e.to)return!1;this.viewport=e;let n=this.skipped.length;for(let r=0;r<this.skipped.length;r++){let{from:i,to:o}=this.skipped[r];i<e.to&&o>e.from&&(this.fragments=W2(this.fragments,i,o),this.skipped.splice(r--,1))}return this.skipped.length>=n?!1:(this.reset(),!0)}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(e,n){this.skipped.push({from:e,to:n})}static getSkippingParser(e){return new class extends mR{createParse(n,r,i){let o=i[0].from,s=i[i.length-1].to;return{parsedPos:o,advance(){let l=oc;if(l){for(let c of i)l.tempSkipped.push(c);e&&(l.scheduleOn=l.scheduleOn?Promise.all([l.scheduleOn,e]):e)}return this.parsedPos=s,new ct(pn.none,[],[],s-o)},stoppedAt:null,stopAt(){}}}}}isDone(e){e=Math.min(e,this.state.doc.length);let n=this.fragments;return this.treeLen>=e&&n.length&&n[0].from==0&&n[0].to>=e}static get(){return oc}}function W2(t,e,n){return xs.applyChanges(t,[{fromA:e,toA:n,fromB:e,toB:n}])}class gl{constructor(e){this.context=e,this.tree=e.tree}apply(e){if(!e.docChanged&&this.tree==this.context.tree)return this;let n=this.context.changes(e.changes,e.state),r=this.context.treeLen==e.startState.doc.length?void 0:Math.max(e.changes.mapPos(this.context.treeLen),n.viewport.to);return n.work(20,r)||n.takeTree(),new gl(n)}static init(e){let n=Math.min(3e3,e.doc.length),r=mp.create(e.facet(Co).parser,e,{from:0,to:n});return r.work(20,n)||r.takeTree(),new gl(r)}}Un.state=kt.define({create:gl.init,update(t,e){for(let n of e.effects)if(n.is(Un.setState))return n.value;return e.startState.facet(Co)!=e.state.facet(Co)?gl.init(e.state):t.apply(e)}});let yR=t=>{let e=setTimeout(()=>t(),500);return()=>clearTimeout(e)};typeof requestIdleCallback<"u"&&(yR=t=>{let e=-1,n=setTimeout(()=>{e=requestIdleCallback(t,{timeout:500-100})},100);return()=>e<0?clearTimeout(n):cancelIdleCallback(e)});const x0=typeof navigator<"u"&&((y0=navigator.scheduling)===null||y0===void 0?void 0:y0.isInputPending)?()=>navigator.scheduling.isInputPending():null,tW=nt.fromClass(class{constructor(e){this.view=e,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(e){let n=this.view.state.field(Un.state).context;(n.updateViewport(e.view.viewport)||this.view.viewport.to>n.treeLen)&&this.scheduleWork(),e.docChanged&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(n)}scheduleWork(){if(this.working)return;let{state:e}=this.view,n=e.field(Un.state);(n.tree!=n.context.tree||!n.context.isDone(e.doc.length))&&(this.working=yR(this.work))}work(e){this.working=null;let n=Date.now();if(this.chunkEnd<n&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=n+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:r,viewport:{to:i}}=this.view,o=r.field(Un.state);if(o.tree==o.context.tree&&o.context.isDone(i+1e5))return;let s=Date.now()+Math.min(this.chunkBudget,100,e&&!x0?Math.max(25,e.timeRemaining()-5):1e9),a=o.context.treeLen<i&&r.doc.length>i+1e3,l=o.context.work(()=>x0&&x0()||Date.now()>s,i+(a?0:1e5));this.chunkBudget-=Date.now()-n,(l||this.chunkBudget<=0)&&(o.context.takeTree(),this.view.dispatch({effects:Un.setState.of(new gl(o.context))})),this.chunkBudget>0&&!(l&&!a)&&this.scheduleWork(),this.checkAsyncSchedule(o.context)}checkAsyncSchedule(e){e.scheduleOn&&(this.workScheduled++,e.scheduleOn.then(()=>this.scheduleWork()).catch(n=>Mn(this.view.state,n)).then(()=>this.workScheduled--),e.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return!!(this.working||this.workScheduled>0)}},{eventHandlers:{focus(){this.scheduleWork()}}}),Co=$.define({combine(t){return t.length?t[0]:null},enables:t=>[Un.state,tW,K.contentAttributes.compute([t],e=>{let n=e.facet(t);return n&&n.name?{"data-language":n.name}:{}})]});class nW{constructor(e,n=[]){this.language=e,this.support=n,this.extension=[e,n]}}const rW=$.define(),dd=$.define({combine:t=>{if(!t.length)return"  ";if(!/^(?: +|\t+)$/.test(t[0]))throw new Error("Invalid indent unit: "+JSON.stringify(t[0]));return t[0]}});function gp(t){let e=t.facet(dd);return e.charCodeAt(0)==9?t.tabSize*e.length:e.length}function Nu(t,e){let n="",r=t.tabSize;if(t.facet(dd).charCodeAt(0)==9)for(;e>=r;)n+="	",e-=r;for(let i=0;i<e;i++)n+=" ";return n}function wx(t,e){t instanceof pe&&(t=new Tm(t));for(let r of t.state.facet(rW)){let i=r(t,e);if(i!==void 0)return i}let n=xt(t.state);return n?iW(t,n,e):null}class Tm{constructor(e,n={}){this.state=e,this.options=n,this.unit=gp(e)}lineAt(e,n=1){let r=this.state.doc.lineAt(e),{simulateBreak:i,simulateDoubleBreak:o}=this.options;return i!=null&&i>=r.from&&i<=r.to?o&&i==e?{text:"",from:e}:(n<0?i<e:i<=e)?{text:r.text.slice(i-r.from),from:i}:{text:r.text.slice(0,i-r.from),from:r.from}:r}textAfterPos(e,n=1){if(this.options.simulateDoubleBreak&&e==this.options.simulateBreak)return"";let{text:r,from:i}=this.lineAt(e,n);return r.slice(e-i,Math.min(r.length,e+100-i))}column(e,n=1){let{text:r,from:i}=this.lineAt(e,n),o=this.countColumn(r,e-i),s=this.options.overrideIndentation?this.options.overrideIndentation(i):-1;return s>-1&&(o+=s-this.countColumn(r,r.search(/\S|$/))),o}countColumn(e,n=e.length){return ld(e,this.state.tabSize,n)}lineIndent(e,n=1){let{text:r,from:i}=this.lineAt(e,n),o=this.options.overrideIndentation;if(o){let s=o(i);if(s>-1)return s}return this.countColumn(r,r.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const xR=new de;function iW(t,e,n){return SR(e.resolveInner(n).enterUnfinishedNodesBefore(n),n,t)}function oW(t){return t.pos==t.options.simulateBreak&&t.options.simulateDoubleBreak}function sW(t){let e=t.type.prop(xR);if(e)return e;let n=t.firstChild,r;if(n&&(r=n.type.prop(de.closedBy))){let i=t.lastChild,o=i&&r.indexOf(i.name)>-1;return s=>uW(s,!0,1,void 0,o&&!oW(s)?i.from:void 0)}return t.parent==null?aW:null}function SR(t,e,n){for(;t;t=t.parent){let r=sW(t);if(r)return r(Ox.create(n,e,t))}return null}function aW(){return 0}class Ox extends Tm{constructor(e,n,r){super(e.state,e.options),this.base=e,this.pos=n,this.node=r}static create(e,n,r){return new Ox(e,n,r)}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){let e=this.state.doc.lineAt(this.node.from);for(;;){let n=this.node.resolve(e.from);for(;n.parent&&n.parent.from==n.from;)n=n.parent;if(lW(n,this.node))break;e=this.state.doc.lineAt(n.from)}return this.lineIndent(e.from)}continue(){let e=this.node.parent;return e?SR(e,this.pos,this.base):0}}function lW(t,e){for(let n=e;n;n=n.parent)if(t==n)return!0;return!1}function cW(t){let e=t.node,n=e.childAfter(e.from),r=e.lastChild;if(!n)return null;let i=t.options.simulateBreak,o=t.state.doc.lineAt(n.from),s=i==null||i<=o.from?o.to:Math.min(o.to,i);for(let a=n.to;;){let l=e.childAfter(a);if(!l||l==r)return null;if(!l.type.isSkipped)return l.from<s?n:null;a=l.to}}function uW(t,e,n,r,i){let o=t.textAfter,s=o.match(/^\s*/)[0].length,a=r&&o.slice(s,s+r.length)==r||i==t.pos+s,l=e?cW(t):null;return l?a?t.column(l.from):t.column(l.to):t.baseIndent+(a?0:t.unit*n)}const dW=200;function fW(){return pe.transactionFilter.of(t=>{if(!t.docChanged||!t.isUserEvent("input.type")&&!t.isUserEvent("input.complete"))return t;let e=t.startState.languageDataAt("indentOnInput",t.startState.selection.main.head);if(!e.length)return t;let n=t.newDoc,{head:r}=t.newSelection.main,i=n.lineAt(r);if(r>i.from+dW)return t;let o=n.sliceString(i.from,r);if(!e.some(c=>c.test(o)))return t;let{state:s}=t,a=-1,l=[];for(let{head:c}of s.selection.ranges){let u=s.doc.lineAt(c);if(u.from==a)continue;a=u.from;let d=wx(s,u.from);if(d==null)continue;let f=/^\s*/.exec(u.text)[0],h=Nu(s,d);f!=h&&l.push({from:u.from,to:u.from+f.length,insert:h})}return l.length?[t,{changes:l,sequential:!0}]:t})}const hW=$.define(),kR=new de;function Y2(t){let e=t.firstChild,n=t.lastChild;return e&&e.to<n.from?{from:e.to,to:n.type.isError?t.to:n.from}:null}function pW(t,e,n){let r=xt(t);if(r.length<n)return null;let i=r.resolveInner(n,1),o=null;for(let s=i;s;s=s.parent){if(s.to<=n||s.from>n)continue;if(o&&s.from<e)break;let a=s.type.prop(kR);if(a&&(s.to<r.length-50||r.length==t.doc.length||!mW(s))){let l=a(s,t);l&&l.from<=n&&l.from>=e&&l.to>n&&(o=l)}}return o}function mW(t){let e=t.lastChild;return e&&e.to==t.to&&e.type.isError}function vp(t,e,n){for(let r of t.facet(hW)){let i=r(t,e,n);if(i)return i}return pW(t,e,n)}function wR(t,e){let n=e.mapPos(t.from,1),r=e.mapPos(t.to,-1);return n>=r?void 0:{from:n,to:r}}const Pm=se.define({map:wR}),fd=se.define({map:wR});function OR(t){let e=[];for(let{head:n}of t.state.selection.ranges)e.some(r=>r.from<=n&&r.to>=n)||e.push(t.lineBlockAt(n));return e}const Vs=kt.define({create(){return F.none},update(t,e){t=t.map(e.changes);for(let n of e.effects)n.is(Pm)&&!gW(t,n.value.from,n.value.to)?t=t.update({add:[F2.range(n.value.from,n.value.to)]}):n.is(fd)&&(t=t.update({filter:(r,i)=>n.value.from!=r||n.value.to!=i,filterFrom:n.value.from,filterTo:n.value.to}));if(e.selection){let n=!1,{head:r}=e.selection.main;t.between(r,r,(i,o)=>{i<r&&o>r&&(n=!0)}),n&&(t=t.update({filterFrom:r,filterTo:r,filter:(i,o)=>o<=r||i>=r}))}return t},provide:t=>K.decorations.from(t),toJSON(t,e){let n=[];return t.between(0,e.doc.length,(r,i)=>{n.push(r,i)}),n},fromJSON(t){if(!Array.isArray(t)||t.length%2)throw new RangeError("Invalid JSON for fold state");let e=[];for(let n=0;n<t.length;){let r=t[n++],i=t[n++];if(typeof r!="number"||typeof i!="number")throw new RangeError("Invalid JSON for fold state");e.push(F2.range(r,i))}return F.set(e,!0)}});function bp(t,e,n){var r;let i=null;return(r=t.field(Vs,!1))===null||r===void 0||r.between(e,n,(o,s)=>{(!i||i.from>o)&&(i={from:o,to:s})}),i}function gW(t,e,n){let r=!1;return t.between(e,e,(i,o)=>{i==e&&o==n&&(r=!0)}),r}function TR(t,e){return t.field(Vs,!1)?e:e.concat(se.appendConfig.of(MR()))}const vW=t=>{for(let e of OR(t)){let n=vp(t.state,e.from,e.to);if(n)return t.dispatch({effects:TR(t.state,[Pm.of(n),PR(t,n)])}),!0}return!1},bW=t=>{if(!t.state.field(Vs,!1))return!1;let e=[];for(let n of OR(t)){let r=bp(t.state,n.from,n.to);r&&e.push(fd.of(r),PR(t,r,!1))}return e.length&&t.dispatch({effects:e}),e.length>0};function PR(t,e,n=!0){let r=t.state.doc.lineAt(e.from).number,i=t.state.doc.lineAt(e.to).number;return K.announce.of(`${t.state.phrase(n?"Folded lines":"Unfolded lines")} ${r} ${t.state.phrase("to")} ${i}.`)}const yW=t=>{let{state:e}=t,n=[];for(let r=0;r<e.doc.length;){let i=t.lineBlockAt(r),o=vp(e,i.from,i.to);o&&n.push(Pm.of(o)),r=(o?t.lineBlockAt(o.to):i).to+1}return n.length&&t.dispatch({effects:TR(t.state,n)}),!!n.length},xW=t=>{let e=t.state.field(Vs,!1);if(!e||!e.size)return!1;let n=[];return e.between(0,t.state.doc.length,(r,i)=>{n.push(fd.of({from:r,to:i}))}),t.dispatch({effects:n}),!0},SW=[{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:vW},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:bW},{key:"Ctrl-Alt-[",run:yW},{key:"Ctrl-Alt-]",run:xW}],kW={placeholderDOM:null,placeholderText:"\u2026"},CR=$.define({combine(t){return ri(t,kW)}});function MR(t){let e=[Vs,TW];return t&&e.push(CR.of(t)),e}const F2=F.replace({widget:new class extends Ni{toDOM(t){let{state:e}=t,n=e.facet(CR),r=o=>{let s=t.lineBlockAt(t.posAtDOM(o.target)),a=bp(t.state,s.from,s.to);a&&t.dispatch({effects:fd.of(a)}),o.preventDefault()};if(n.placeholderDOM)return n.placeholderDOM(t,r);let i=document.createElement("span");return i.textContent=n.placeholderText,i.setAttribute("aria-label",e.phrase("folded code")),i.title=e.phrase("unfold"),i.className="cm-foldPlaceholder",i.onclick=r,i}}}),wW={openText:"\u2304",closedText:"\u203A",markerDOM:null,domEventHandlers:{},foldingChanged:()=>!1};class S0 extends Mi{constructor(e,n){super(),this.config=e,this.open=n}eq(e){return this.config==e.config&&this.open==e.open}toDOM(e){if(this.config.markerDOM)return this.config.markerDOM(this.open);let n=document.createElement("span");return n.textContent=this.open?this.config.openText:this.config.closedText,n.title=e.state.phrase(this.open?"Fold line":"Unfold line"),n}}function OW(t={}){let e=Object.assign(Object.assign({},wW),t),n=new S0(e,!0),r=new S0(e,!1),i=nt.fromClass(class{constructor(s){this.from=s.viewport.from,this.markers=this.buildMarkers(s)}update(s){(s.docChanged||s.viewportChanged||s.startState.facet(Co)!=s.state.facet(Co)||s.startState.field(Vs,!1)!=s.state.field(Vs,!1)||xt(s.startState)!=xt(s.state)||e.foldingChanged(s))&&(this.markers=this.buildMarkers(s.view))}buildMarkers(s){let a=new Ci;for(let l of s.viewportLineBlocks){let c=bp(s.state,l.from,l.to)?r:vp(s.state,l.from,l.to)?n:null;c&&a.add(l.from,l.from,c)}return a.finish()}}),{domEventHandlers:o}=e;return[i,RG({class:"cm-foldGutter",markers(s){var a;return((a=s.plugin(i))===null||a===void 0?void 0:a.markers)||Oe.empty},initialSpacer(){return new S0(e,!1)},domEventHandlers:Object.assign(Object.assign({},o),{click:(s,a,l)=>{if(o.click&&o.click(s,a,l))return!0;let c=bp(s.state,a.from,a.to);if(c)return s.dispatch({effects:fd.of(c)}),!0;let u=vp(s.state,a.from,a.to);return u?(s.dispatch({effects:Pm.of(u)}),!0):!1}})}),MR()]}const TW=K.baseTheme({".cm-foldPlaceholder":{backgroundColor:"#eee",border:"1px solid #ddd",color:"#888",borderRadius:".2em",margin:"0 1px",padding:"0 1px",cursor:"pointer"},".cm-foldGutter span":{padding:"0 1px",cursor:"pointer"}});class El{constructor(e,n){this.specs=e;let r;function i(a){let l=Oo.newName();return(r||(r=Object.create(null)))["."+l]=a,l}const o=typeof n.all=="string"?n.all:n.all?i(n.all):void 0,s=n.scope;this.scope=s instanceof Un?a=>a.prop(Eu)==s.data:s?a=>a==s:void 0,this.style=bR(e.map(a=>({tag:a.tag,class:a.class||i(Object.assign({},a,{tag:null}))})),{all:o}).style,this.module=r?new Oo(r):null,this.themeType=n.themeType}static define(e,n){return new El(e,n||{})}}const Kb=$.define(),RR=$.define({combine(t){return t.length?[t[0]]:null}});function k0(t){let e=t.facet(Kb);return e.length?e:t.facet(RR)}function Tx(t,e){let n=[CW],r;return t instanceof El&&(t.module&&n.push(K.styleModule.of(t.module)),r=t.themeType),e!=null&&e.fallback?n.push(RR.of(t)):r?n.push(Kb.computeN([K.darkTheme],i=>i.facet(K.darkTheme)==(r=="dark")?[t]:[])):n.push(Kb.of(t)),n}class PW{constructor(e){this.markCache=Object.create(null),this.tree=xt(e.state),this.decorations=this.buildDeco(e,k0(e.state))}update(e){let n=xt(e.state),r=k0(e.state),i=r!=k0(e.startState);n.length<e.view.viewport.to&&!i&&n.type==this.tree.type?this.decorations=this.decorations.map(e.changes):(n!=this.tree||e.viewportChanged||i)&&(this.tree=n,this.decorations=this.buildDeco(e.view,r))}buildDeco(e,n){if(!n||!this.tree.length)return F.none;let r=new Ci;for(let{from:i,to:o}of e.visibleRanges)qG(this.tree,n,(s,a,l)=>{r.add(s,a,this.markCache[l]||(this.markCache[l]=F.mark({class:l})))},i,o);return r.finish()}}const CW=Ws.high(nt.fromClass(PW,{decorations:t=>t.decorations})),MW=El.define([{tag:R.meta,color:"#7a757a"},{tag:R.link,textDecoration:"underline"},{tag:R.heading,textDecoration:"underline",fontWeight:"bold"},{tag:R.emphasis,fontStyle:"italic"},{tag:R.strong,fontWeight:"bold"},{tag:R.strikethrough,textDecoration:"line-through"},{tag:R.keyword,color:"#708"},{tag:[R.atom,R.bool,R.url,R.contentSeparator,R.labelName],color:"#219"},{tag:[R.literal,R.inserted],color:"#164"},{tag:[R.string,R.deleted],color:"#a11"},{tag:[R.regexp,R.escape,R.special(R.string)],color:"#e40"},{tag:R.definition(R.variableName),color:"#00f"},{tag:R.local(R.variableName),color:"#30a"},{tag:[R.typeName,R.namespace],color:"#085"},{tag:R.className,color:"#167"},{tag:[R.special(R.variableName),R.macroName],color:"#256"},{tag:R.definition(R.propertyName),color:"#00c"},{tag:R.comment,color:"#940"},{tag:R.invalid,color:"#f00"}]),RW=K.baseTheme({"&.cm-focused .cm-matchingBracket":{backgroundColor:"#328c8252"},"&.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),IR=1e4,zR="()[]{}",ER=$.define({combine(t){return ri(t,{afterCursor:!0,brackets:zR,maxScanDistance:IR,renderMatch:EW})}}),IW=F.mark({class:"cm-matchingBracket"}),zW=F.mark({class:"cm-nonmatchingBracket"});function EW(t){let e=[],n=t.matched?IW:zW;return e.push(n.range(t.start.from,t.start.to)),t.end&&e.push(n.range(t.end.from,t.end.to)),e}const NW=kt.define({create(){return F.none},update(t,e){if(!e.docChanged&&!e.selection)return t;let n=[],r=e.state.facet(ER);for(let i of e.state.selection.ranges){if(!i.empty)continue;let o=Gr(e.state,i.head,-1,r)||i.head>0&&Gr(e.state,i.head-1,1,r)||r.afterCursor&&(Gr(e.state,i.head,1,r)||i.head<e.state.doc.length&&Gr(e.state,i.head+1,-1,r));o&&(n=n.concat(r.renderMatch(o,e.state)))}return F.set(n,!0)},provide:t=>K.decorations.from(t)}),VW=[NW,RW];function LW(t={}){return[ER.of(t),VW]}function qb(t,e,n){let r=t.prop(e<0?de.openedBy:de.closedBy);if(r)return r;if(t.name.length==1){let i=n.indexOf(t.name);if(i>-1&&i%2==(e<0?1:0))return[n[i+e]]}return null}function Gr(t,e,n,r={}){let i=r.maxScanDistance||IR,o=r.brackets||zR,s=xt(t),a=s.resolveInner(e,n);for(let l=a;l;l=l.parent){let c=qb(l.type,n,o);if(c&&l.from<l.to)return XW(t,e,n,l,c,o)}return BW(t,e,n,s,a.type,i,o)}function XW(t,e,n,r,i,o){let s=r.parent,a={from:r.from,to:r.to},l=0,c=s==null?void 0:s.cursor();if(c&&(n<0?c.childBefore(r.from):c.childAfter(r.to)))do if(n<0?c.to<=r.from:c.from>=r.to){if(l==0&&i.indexOf(c.type.name)>-1&&c.from<c.to)return{start:a,end:{from:c.from,to:c.to},matched:!0};if(qb(c.type,n,o))l++;else if(qb(c.type,-n,o)){if(l==0)return{start:a,end:c.from==c.to?void 0:{from:c.from,to:c.to},matched:!1};l--}}while(n<0?c.prevSibling():c.nextSibling());return{start:a,matched:!1}}function BW(t,e,n,r,i,o,s){let a=n<0?t.sliceDoc(e-1,e):t.sliceDoc(e,e+1),l=s.indexOf(a);if(l<0||l%2==0!=n>0)return null;let c={from:n<0?e-1:e,to:n>0?e+1:e},u=t.doc.iterRange(e,n>0?t.doc.length:0),d=0;for(let f=0;!u.next().done&&f<=o;){let h=u.value;n<0&&(f+=h.length);let p=e+f*n;for(let m=n>0?0:h.length-1,b=n>0?h.length:-1;m!=b;m+=n){let g=s.indexOf(h[m]);if(!(g<0||r.resolveInner(p+m,1).type!=i))if(g%2==0==n>0)d++;else{if(d==1)return{start:c,end:{from:p+m,to:p+m+1},matched:g>>1==l>>1};d--}}n>0&&(f+=h.length)}return u.done?{start:c,matched:!1}:null}const AW=Object.create(null),H2=[pn.none],j2=[],ZW=Object.create(null);for(let[t,e]of[["variable","variableName"],["variable-2","variableName.special"],["string-2","string.special"],["def","variableName.definition"],["tag","tagName"],["attribute","attributeName"],["type","typeName"],["builtin","variableName.standard"],["qualifier","modifier"],["error","invalid"],["header","heading"],["property","propertyName"]])ZW[t]=GW(AW,e);function w0(t,e){j2.indexOf(t)>-1||(j2.push(t),console.warn(e))}function GW(t,e){let n=null;for(let o of e.split(".")){let s=t[o]||R[o];s?typeof s=="function"?n?n=s(n):w0(o,`Modifier ${o} used at start of tag`):n?w0(o,`Tag ${o} used as modifier`):n=s:w0(o,`Unknown highlighting tag ${o}`)}if(!n)return 0;let r=e.replace(/ /g,"_"),i=pn.define({id:H2.length,name:r,props:[gR({[r]:n})]});return H2.push(i),i.id}const wc=t=>{let e=Cx(t.state);return e.line?WW(t):e.block?FW(t):!1};function Px(t,e){return({state:n,dispatch:r})=>{if(n.readOnly)return!1;let i=t(e,n);return i?(r(n.update(i)),!0):!1}}const WW=Px(DW,0),YW=Px(NR,0),FW=Px((t,e)=>NR(t,e,jW(e)),0);function Cx(t,e=t.selection.main.head){let n=t.languageDataAt("commentTokens",e);return n.length?n[0]:{}}const sc=50;function HW(t,{open:e,close:n},r,i){let o=t.sliceDoc(r-sc,r),s=t.sliceDoc(i,i+sc),a=/\s*$/.exec(o)[0].length,l=/^\s*/.exec(s)[0].length,c=o.length-a;if(o.slice(c-e.length,c)==e&&s.slice(l,l+n.length)==n)return{open:{pos:r-a,margin:a&&1},close:{pos:i+l,margin:l&&1}};let u,d;i-r<=2*sc?u=d=t.sliceDoc(r,i):(u=t.sliceDoc(r,r+sc),d=t.sliceDoc(i-sc,i));let f=/^\s*/.exec(u)[0].length,h=/\s*$/.exec(d)[0].length,p=d.length-h-n.length;return u.slice(f,f+e.length)==e&&d.slice(p,p+n.length)==n?{open:{pos:r+f+e.length,margin:/\s/.test(u.charAt(f+e.length))?1:0},close:{pos:i-h-n.length,margin:/\s/.test(d.charAt(p-1))?1:0}}:null}function jW(t){let e=[];for(let n of t.selection.ranges){let r=t.doc.lineAt(n.from),i=n.to<=r.to?r:t.doc.lineAt(n.to),o=e.length-1;o>=0&&e[o].to>r.from?e[o].to=i.to:e.push({from:r.from,to:i.to})}return e}function NR(t,e,n=e.selection.ranges){let r=n.map(o=>Cx(e,o.from).block);if(!r.every(o=>o))return null;let i=n.map((o,s)=>HW(e,r[s],o.from,o.to));if(t!=2&&!i.every(o=>o))return{changes:e.changes(n.map((o,s)=>i[s]?[]:[{from:o.from,insert:r[s].open+" "},{from:o.to,insert:" "+r[s].close}]))};if(t!=1&&i.some(o=>o)){let o=[];for(let s=0,a;s<i.length;s++)if(a=i[s]){let l=r[s],{open:c,close:u}=a;o.push({from:c.pos-l.open.length,to:c.pos+c.margin},{from:u.pos-u.margin,to:u.pos+l.close.length})}return{changes:o}}return null}function DW(t,e,n=e.selection.ranges){let r=[],i=-1;for(let{from:o,to:s}of n){let a=r.length,l=1e9;for(let c=o;c<=s;){let u=e.doc.lineAt(c);if(u.from>i&&(o==s||s>u.from)){i=u.from;let d=Cx(e,c).line;if(!d)continue;let f=/^\s*/.exec(u.text)[0].length,h=f==u.length,p=u.text.slice(f,f+d.length)==d?f:-1;f<u.text.length&&f<l&&(l=f),r.push({line:u,comment:p,token:d,indent:f,empty:h,single:!1})}c=u.to+1}if(l<1e9)for(let c=a;c<r.length;c++)r[c].indent<r[c].line.text.length&&(r[c].indent=l);r.length==a+1&&(r[a].single=!0)}if(t!=2&&r.some(o=>o.comment<0&&(!o.empty||o.single))){let o=[];for(let{line:a,token:l,indent:c,empty:u,single:d}of r)(d||!u)&&o.push({from:a.from+c,insert:l+" "});let s=e.changes(o);return{changes:s,selection:e.selection.map(s,1)}}else if(t!=1&&r.some(o=>o.comment>=0)){let o=[];for(let{line:s,comment:a,token:l}of r)if(a>=0){let c=s.from+a,u=c+l.length;s.text[u-s.from]==" "&&u++,o.push({from:c,to:u})}return{changes:o}}return null}const Qb=Vo.define(),UW=Vo.define(),KW=$.define(),VR=$.define({combine(t){return ri(t,{minDepth:100,newGroupDelay:500},{minDepth:Math.max,newGroupDelay:Math.min})}});function qW(t){let e=0;return t.iterChangedRanges((n,r)=>e=r),e}const LR=kt.define({create(){return Wr.empty},update(t,e){let n=e.state.facet(VR),r=e.annotation(Qb);if(r){let l=e.docChanged?V.single(qW(e.changes)):void 0,c=ln.fromTransaction(e,l),u=r.side,d=u==0?t.undone:t.done;return c?d=yp(d,d.length,n.minDepth,c):d=ZR(d,e.startState.selection),new Wr(u==0?r.rest:d,u==0?d:r.rest)}let i=e.annotation(UW);if((i=="full"||i=="before")&&(t=t.isolate()),e.annotation(mt.addToHistory)===!1)return e.changes.empty?t:t.addMapping(e.changes.desc);let o=ln.fromTransaction(e),s=e.annotation(mt.time),a=e.annotation(mt.userEvent);return o?t=t.addChanges(o,s,a,n.newGroupDelay,n.minDepth):e.selection&&(t=t.addSelection(e.startState.selection,s,a,n.newGroupDelay)),(i=="full"||i=="after")&&(t=t.isolate()),t},toJSON(t){return{done:t.done.map(e=>e.toJSON()),undone:t.undone.map(e=>e.toJSON())}},fromJSON(t){return new Wr(t.done.map(ln.fromJSON),t.undone.map(ln.fromJSON))}});function XR(t={}){return[LR,VR.of(t),K.domEventHandlers({beforeinput(e,n){let r=e.inputType=="historyUndo"?BR:e.inputType=="historyRedo"?Jb:null;return r?(e.preventDefault(),r(n)):!1}})]}function Cm(t,e){return function({state:n,dispatch:r}){if(!e&&n.readOnly)return!1;let i=n.field(LR,!1);if(!i)return!1;let o=i.pop(t,n,e);return o?(r(o),!0):!1}}const BR=Cm(0,!1),Jb=Cm(1,!1),QW=Cm(0,!0),JW=Cm(1,!0);class ln{constructor(e,n,r,i,o){this.changes=e,this.effects=n,this.mapped=r,this.startSelection=i,this.selectionsAfter=o}setSelAfter(e){return new ln(this.changes,this.effects,this.mapped,this.startSelection,e)}toJSON(){var e,n,r;return{changes:(e=this.changes)===null||e===void 0?void 0:e.toJSON(),mapped:(n=this.mapped)===null||n===void 0?void 0:n.toJSON(),startSelection:(r=this.startSelection)===null||r===void 0?void 0:r.toJSON(),selectionsAfter:this.selectionsAfter.map(i=>i.toJSON())}}static fromJSON(e){return new ln(e.changes&&ht.fromJSON(e.changes),[],e.mapped&&Ur.fromJSON(e.mapped),e.startSelection&&V.fromJSON(e.startSelection),e.selectionsAfter.map(V.fromJSON))}static fromTransaction(e,n){let r=Kn;for(let i of e.startState.facet(KW)){let o=i(e);o.length&&(r=r.concat(o))}return!r.length&&e.changes.empty?null:new ln(e.changes.invert(e.startState.doc),r,void 0,n||e.startState.selection,Kn)}static selection(e){return new ln(void 0,Kn,void 0,void 0,e)}}function yp(t,e,n,r){let i=e+1>n+20?e-n-1:0,o=t.slice(i,e);return o.push(r),o}function _W(t,e){let n=[],r=!1;return t.iterChangedRanges((i,o)=>n.push(i,o)),e.iterChangedRanges((i,o,s,a)=>{for(let l=0;l<n.length;){let c=n[l++],u=n[l++];a>=c&&s<=u&&(r=!0)}}),r}function $W(t,e){return t.ranges.length==e.ranges.length&&t.ranges.filter((n,r)=>n.empty!=e.ranges[r].empty).length===0}function AR(t,e){return t.length?e.length?t.concat(e):t:e}const Kn=[],eY=200;function ZR(t,e){if(t.length){let n=t[t.length-1],r=n.selectionsAfter.slice(Math.max(0,n.selectionsAfter.length-eY));return r.length&&r[r.length-1].eq(e)?t:(r.push(e),yp(t,t.length-1,1e9,n.setSelAfter(r)))}else return[ln.selection([e])]}function tY(t){let e=t[t.length-1],n=t.slice();return n[t.length-1]=e.setSelAfter(e.selectionsAfter.slice(0,e.selectionsAfter.length-1)),n}function O0(t,e){if(!t.length)return t;let n=t.length,r=Kn;for(;n;){let i=nY(t[n-1],e,r);if(i.changes&&!i.changes.empty||i.effects.length){let o=t.slice(0,n);return o[n-1]=i,o}else e=i.mapped,n--,r=i.selectionsAfter}return r.length?[ln.selection(r)]:Kn}function nY(t,e,n){let r=AR(t.selectionsAfter.length?t.selectionsAfter.map(a=>a.map(e)):Kn,n);if(!t.changes)return ln.selection(r);let i=t.changes.map(e),o=e.mapDesc(t.changes,!0),s=t.mapped?t.mapped.composeDesc(o):o;return new ln(i,se.mapEffects(t.effects,e),s,t.startSelection.map(o),r)}const rY=/^(input\.type|delete)($|\.)/;class Wr{constructor(e,n,r=0,i=void 0){this.done=e,this.undone=n,this.prevTime=r,this.prevUserEvent=i}isolate(){return this.prevTime?new Wr(this.done,this.undone):this}addChanges(e,n,r,i,o){let s=this.done,a=s[s.length-1];return a&&a.changes&&!a.changes.empty&&e.changes&&(!r||rY.test(r))&&(!a.selectionsAfter.length&&n-this.prevTime<i&&_W(a.changes,e.changes)||r=="input.type.compose")?s=yp(s,s.length-1,o,new ln(e.changes.compose(a.changes),AR(e.effects,a.effects),a.mapped,a.startSelection,Kn)):s=yp(s,s.length,o,e),new Wr(s,Kn,n,r)}addSelection(e,n,r,i){let o=this.done.length?this.done[this.done.length-1].selectionsAfter:Kn;return o.length>0&&n-this.prevTime<i&&r==this.prevUserEvent&&r&&/^select($|\.)/.test(r)&&$W(o[o.length-1],e)?this:new Wr(ZR(this.done,e),this.undone,n,r)}addMapping(e){return new Wr(O0(this.done,e),O0(this.undone,e),this.prevTime,this.prevUserEvent)}pop(e,n,r){let i=e==0?this.done:this.undone;if(i.length==0)return null;let o=i[i.length-1];if(r&&o.selectionsAfter.length)return n.update({selection:o.selectionsAfter[o.selectionsAfter.length-1],annotations:Qb.of({side:e,rest:tY(i)}),userEvent:e==0?"select.undo":"select.redo",scrollIntoView:!0});if(o.changes){let s=i.length==1?Kn:i.slice(0,i.length-1);return o.mapped&&(s=O0(s,o.mapped)),n.update({changes:o.changes,selection:o.startSelection,effects:o.effects,annotations:Qb.of({side:e,rest:s}),filter:!1,userEvent:e==0?"undo":"redo",scrollIntoView:!0})}else return null}}Wr.empty=new Wr(Kn,Kn);const GR=[{key:"Mod-z",run:BR,preventDefault:!0},{key:"Mod-y",mac:"Mod-Shift-z",run:Jb,preventDefault:!0},{linux:"Ctrl-Shift-z",run:Jb,preventDefault:!0},{key:"Mod-u",run:QW,preventDefault:!0},{key:"Alt-u",mac:"Mod-Shift-u",run:JW,preventDefault:!0}];function Nl(t,e){return V.create(t.ranges.map(e),t.mainIndex)}function ii(t,e){return t.update({selection:e,scrollIntoView:!0,userEvent:"select"})}function kr({state:t,dispatch:e},n){let r=Nl(t.selection,n);return r.eq(t.selection)?!1:(e(ii(t,r)),!0)}function Mm(t,e){return V.cursor(e?t.to:t.from)}function WR(t,e){return kr(t,n=>n.empty?t.moveByChar(n,e):Mm(n,e))}function jt(t){return t.textDirectionAt(t.state.selection.main.head)==Qe.LTR}const YR=t=>WR(t,!jt(t)),FR=t=>WR(t,jt(t));function HR(t,e){return kr(t,n=>n.empty?t.moveByGroup(n,e):Mm(n,e))}const iY=t=>HR(t,!jt(t)),oY=t=>HR(t,jt(t));function sY(t,e,n){if(e.type.prop(n))return!0;let r=e.to-e.from;return r&&(r>2||/[^\s,.;:]/.test(t.sliceDoc(e.from,e.to)))||e.firstChild}function Rm(t,e,n){let r=xt(t).resolveInner(e.head),i=n?de.closedBy:de.openedBy;for(let l=e.head;;){let c=n?r.childAfter(l):r.childBefore(l);if(!c)break;sY(t,c,i)?r=c:l=n?c.to:c.from}let o=r.type.prop(i),s,a;return o&&(s=n?Gr(t,r.from,1):Gr(t,r.to,-1))&&s.matched?a=n?s.end.to:s.end.from:a=n?r.to:r.from,V.cursor(a,n?-1:1)}const aY=t=>kr(t,e=>Rm(t.state,e,!jt(t))),lY=t=>kr(t,e=>Rm(t.state,e,jt(t)));function jR(t,e){return kr(t,n=>{if(!n.empty)return Mm(n,e);let r=t.moveVertically(n,e);return r.head!=n.head?r:t.moveToLineBoundary(n,e)})}const DR=t=>jR(t,!1),UR=t=>jR(t,!0);function KR(t){return Math.max(t.defaultLineHeight,Math.min(t.dom.clientHeight,innerHeight)-5)}function qR(t,e){let{state:n}=t,r=Nl(n.selection,a=>a.empty?t.moveVertically(a,e,KR(t)):Mm(a,e));if(r.eq(n.selection))return!1;let i=t.coordsAtPos(n.selection.main.head),o=t.scrollDOM.getBoundingClientRect(),s;return i&&i.top>o.top&&i.bottom<o.bottom&&i.top-o.top<=t.scrollDOM.scrollHeight-t.scrollDOM.scrollTop-t.scrollDOM.clientHeight&&(s=K.scrollIntoView(r.main.head,{y:"start",yMargin:i.top-o.top})),t.dispatch(ii(n,r),{effects:s}),!0}const D2=t=>qR(t,!1),_b=t=>qR(t,!0);function Lo(t,e,n){let r=t.lineBlockAt(e.head),i=t.moveToLineBoundary(e,n);if(i.head==e.head&&i.head!=(n?r.to:r.from)&&(i=t.moveToLineBoundary(e,n,!1)),!n&&i.head==r.from&&r.length){let o=/^\s*/.exec(t.state.sliceDoc(r.from,Math.min(r.from+100,r.to)))[0].length;o&&e.head!=r.from+o&&(i=V.cursor(r.from+o))}return i}const cY=t=>kr(t,e=>Lo(t,e,!0)),uY=t=>kr(t,e=>Lo(t,e,!1)),dY=t=>kr(t,e=>Lo(t,e,!jt(t))),fY=t=>kr(t,e=>Lo(t,e,jt(t))),hY=t=>kr(t,e=>V.cursor(t.lineBlockAt(e.head).from,1)),pY=t=>kr(t,e=>V.cursor(t.lineBlockAt(e.head).to,-1));function mY(t,e,n){let r=!1,i=Nl(t.selection,o=>{let s=Gr(t,o.head,-1)||Gr(t,o.head,1)||o.head>0&&Gr(t,o.head-1,1)||o.head<t.doc.length&&Gr(t,o.head+1,-1);if(!s||!s.end)return o;r=!0;let a=s.start.from==o.head?s.end.to:s.end.from;return n?V.range(o.anchor,a):V.cursor(a)});return r?(e(ii(t,i)),!0):!1}const gY=({state:t,dispatch:e})=>mY(t,e,!1);function rr(t,e){let n=Nl(t.state.selection,r=>{let i=e(r);return V.range(r.anchor,i.head,i.goalColumn)});return n.eq(t.state.selection)?!1:(t.dispatch(ii(t.state,n)),!0)}function QR(t,e){return rr(t,n=>t.moveByChar(n,e))}const JR=t=>QR(t,!jt(t)),_R=t=>QR(t,jt(t));function $R(t,e){return rr(t,n=>t.moveByGroup(n,e))}const vY=t=>$R(t,!jt(t)),bY=t=>$R(t,jt(t)),yY=t=>rr(t,e=>Rm(t.state,e,!jt(t))),xY=t=>rr(t,e=>Rm(t.state,e,jt(t)));function eI(t,e){return rr(t,n=>t.moveVertically(n,e))}const tI=t=>eI(t,!1),nI=t=>eI(t,!0);function rI(t,e){return rr(t,n=>t.moveVertically(n,e,KR(t)))}const U2=t=>rI(t,!1),K2=t=>rI(t,!0),SY=t=>rr(t,e=>Lo(t,e,!0)),kY=t=>rr(t,e=>Lo(t,e,!1)),wY=t=>rr(t,e=>Lo(t,e,!jt(t))),OY=t=>rr(t,e=>Lo(t,e,jt(t))),TY=t=>rr(t,e=>V.cursor(t.lineBlockAt(e.head).from)),PY=t=>rr(t,e=>V.cursor(t.lineBlockAt(e.head).to)),q2=({state:t,dispatch:e})=>(e(ii(t,{anchor:0})),!0),Q2=({state:t,dispatch:e})=>(e(ii(t,{anchor:t.doc.length})),!0),J2=({state:t,dispatch:e})=>(e(ii(t,{anchor:t.selection.main.anchor,head:0})),!0),_2=({state:t,dispatch:e})=>(e(ii(t,{anchor:t.selection.main.anchor,head:t.doc.length})),!0),CY=({state:t,dispatch:e})=>(e(t.update({selection:{anchor:0,head:t.doc.length},userEvent:"select"})),!0),MY=({state:t,dispatch:e})=>{let n=zm(t).map(({from:r,to:i})=>V.range(r,Math.min(i+1,t.doc.length)));return e(t.update({selection:V.create(n),userEvent:"select"})),!0},RY=({state:t,dispatch:e})=>{let n=Nl(t.selection,r=>{var i;let o=xt(t).resolveInner(r.head,1);for(;!(o.from<r.from&&o.to>=r.to||o.to>r.to&&o.from<=r.from||!(!((i=o.parent)===null||i===void 0)&&i.parent));)o=o.parent;return V.range(o.to,o.from)});return e(ii(t,n)),!0},IY=({state:t,dispatch:e})=>{let n=t.selection,r=null;return n.ranges.length>1?r=V.create([n.main]):n.main.empty||(r=V.create([V.cursor(n.main.head)])),r?(e(ii(t,r)),!0):!1};function Im(t,e){if(t.state.readOnly)return!1;let n="delete.selection",{state:r}=t,i=r.changeByRange(o=>{let{from:s,to:a}=o;if(s==a){let l=e(s);l<s?(n="delete.backward",l=hf(t,l,!1)):l>s&&(n="delete.forward",l=hf(t,l,!0)),s=Math.min(s,l),a=Math.max(a,l)}else s=hf(t,s,!1),a=hf(t,a,!0);return s==a?{range:o}:{changes:{from:s,to:a},range:V.cursor(s)}});return i.changes.empty?!1:(t.dispatch(r.update(i,{scrollIntoView:!0,userEvent:n,effects:n=="delete.selection"?K.announce.of(r.phrase("Selection deleted")):void 0})),!0)}function hf(t,e,n){if(t instanceof K)for(let r of t.state.facet(K.atomicRanges).map(i=>i(t)))r.between(e,e,(i,o)=>{i<e&&o>e&&(e=n?o:i)});return e}const iI=(t,e)=>Im(t,n=>{let{state:r}=t,i=r.doc.lineAt(n),o,s;if(!e&&n>i.from&&n<i.from+200&&!/[^ \t]/.test(o=i.text.slice(0,n-i.from))){if(o[o.length-1]=="	")return n-1;let a=ld(o,r.tabSize),l=a%gp(r)||gp(r);for(let c=0;c<l&&o[o.length-1-c]==" ";c++)n--;s=n}else s=qt(i.text,n-i.from,e,e)+i.from,s==n&&i.number!=(e?r.doc.lines:1)&&(s+=e?1:-1);return s}),$b=t=>iI(t,!1),oI=t=>iI(t,!0),sI=(t,e)=>Im(t,n=>{let r=n,{state:i}=t,o=i.doc.lineAt(r),s=i.charCategorizer(r);for(let a=null;;){if(r==(e?o.to:o.from)){r==n&&o.number!=(e?i.doc.lines:1)&&(r+=e?1:-1);break}let l=qt(o.text,r-o.from,e)+o.from,c=o.text.slice(Math.min(r,l)-o.from,Math.max(r,l)-o.from),u=s(c);if(a!=null&&u!=a)break;(c!=" "||r!=n)&&(a=u),r=l}return r}),aI=t=>sI(t,!1),zY=t=>sI(t,!0),lI=t=>Im(t,e=>{let n=t.lineBlockAt(e).to;return e<n?n:Math.min(t.state.doc.length,e+1)}),EY=t=>Im(t,e=>{let n=t.lineBlockAt(e).from;return e>n?n:Math.max(0,e-1)}),NY=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let n=t.changeByRange(r=>({changes:{from:r.from,to:r.to,insert:Se.of(["",""])},range:V.cursor(r.from)}));return e(t.update(n,{scrollIntoView:!0,userEvent:"input"})),!0},VY=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let n=t.changeByRange(r=>{if(!r.empty||r.from==0||r.from==t.doc.length)return{range:r};let i=r.from,o=t.doc.lineAt(i),s=i==o.from?i-1:qt(o.text,i-o.from,!1)+o.from,a=i==o.to?i+1:qt(o.text,i-o.from,!0)+o.from;return{changes:{from:s,to:a,insert:t.doc.slice(i,a).append(t.doc.slice(s,i))},range:V.cursor(a)}});return n.changes.empty?!1:(e(t.update(n,{scrollIntoView:!0,userEvent:"move.character"})),!0)};function zm(t){let e=[],n=-1;for(let r of t.selection.ranges){let i=t.doc.lineAt(r.from),o=t.doc.lineAt(r.to);if(!r.empty&&r.to==o.from&&(o=t.doc.lineAt(r.to-1)),n>=i.number){let s=e[e.length-1];s.to=o.to,s.ranges.push(r)}else e.push({from:i.from,to:o.to,ranges:[r]});n=o.number+1}return e}function cI(t,e,n){if(t.readOnly)return!1;let r=[],i=[];for(let o of zm(t)){if(n?o.to==t.doc.length:o.from==0)continue;let s=t.doc.lineAt(n?o.to+1:o.from-1),a=s.length+1;if(n){r.push({from:o.to,to:s.to},{from:o.from,insert:s.text+t.lineBreak});for(let l of o.ranges)i.push(V.range(Math.min(t.doc.length,l.anchor+a),Math.min(t.doc.length,l.head+a)))}else{r.push({from:s.from,to:o.from},{from:o.to,insert:t.lineBreak+s.text});for(let l of o.ranges)i.push(V.range(l.anchor-a,l.head-a))}}return r.length?(e(t.update({changes:r,scrollIntoView:!0,selection:V.create(i,t.selection.mainIndex),userEvent:"move.line"})),!0):!1}const LY=({state:t,dispatch:e})=>cI(t,e,!1),XY=({state:t,dispatch:e})=>cI(t,e,!0);function uI(t,e,n){if(t.readOnly)return!1;let r=[];for(let i of zm(t))n?r.push({from:i.from,insert:t.doc.slice(i.from,i.to)+t.lineBreak}):r.push({from:i.to,insert:t.lineBreak+t.doc.slice(i.from,i.to)});return e(t.update({changes:r,scrollIntoView:!0,userEvent:"input.copyline"})),!0}const BY=({state:t,dispatch:e})=>uI(t,e,!1),AY=({state:t,dispatch:e})=>uI(t,e,!0),ZY=t=>{if(t.state.readOnly)return!1;let{state:e}=t,n=e.changes(zm(e).map(({from:i,to:o})=>(i>0?i--:o<e.doc.length&&o++,{from:i,to:o}))),r=Nl(e.selection,i=>t.moveVertically(i,!0)).map(n);return t.dispatch({changes:n,selection:r,scrollIntoView:!0,userEvent:"delete.line"}),!0};function GY(t,e){if(/\(\)|\[\]|\{\}/.test(t.sliceDoc(e-1,e+1)))return{from:e,to:e};let n=xt(t).resolveInner(e),r=n.childBefore(e),i=n.childAfter(e),o;return r&&i&&r.to<=e&&i.from>=e&&(o=r.type.prop(de.closedBy))&&o.indexOf(i.name)>-1&&t.doc.lineAt(r.to).from==t.doc.lineAt(i.from).from?{from:r.to,to:i.from}:null}const WY=dI(!1),YY=dI(!0);function dI(t){return({state:e,dispatch:n})=>{if(e.readOnly)return!1;let r=e.changeByRange(i=>{let{from:o,to:s}=i,a=e.doc.lineAt(o),l=!t&&o==s&&GY(e,o);t&&(o=s=(s<=a.to?a:e.doc.lineAt(s)).to);let c=new Tm(e,{simulateBreak:o,simulateDoubleBreak:!!l}),u=wx(c,o);for(u==null&&(u=/^\s*/.exec(e.doc.lineAt(o).text)[0].length);s<a.to&&/\s/.test(a.text[s-a.from]);)s++;l?{from:o,to:s}=l:o>a.from&&o<a.from+100&&!/\S/.test(a.text.slice(0,o))&&(o=a.from);let d=["",Nu(e,u)];return l&&d.push(Nu(e,c.lineIndent(a.from,-1))),{changes:{from:o,to:s,insert:Se.of(d)},range:V.cursor(o+1+d[1].length)}});return n(e.update(r,{scrollIntoView:!0,userEvent:"input"})),!0}}function Mx(t,e){let n=-1;return t.changeByRange(r=>{let i=[];for(let s=r.from;s<=r.to;){let a=t.doc.lineAt(s);a.number>n&&(r.empty||r.to>a.from)&&(e(a,i,r),n=a.number),s=a.to+1}let o=t.changes(i);return{changes:i,range:V.range(o.mapPos(r.anchor,1),o.mapPos(r.head,1))}})}const FY=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let n=Object.create(null),r=new Tm(t,{overrideIndentation:o=>{let s=n[o];return s==null?-1:s}}),i=Mx(t,(o,s,a)=>{let l=wx(r,o.from);if(l==null)return;/\S/.test(o.text)||(l=0);let c=/^\s*/.exec(o.text)[0],u=Nu(t,l);(c!=u||a.from<o.from+c.length)&&(n[o.from]=l,s.push({from:o.from,to:o.from+c.length,insert:u}))});return i.changes.empty||e(t.update(i,{userEvent:"indent"})),!0},fI=({state:t,dispatch:e})=>t.readOnly?!1:(e(t.update(Mx(t,(n,r)=>{r.push({from:n.from,insert:t.facet(dd)})}),{userEvent:"input.indent"})),!0),hI=({state:t,dispatch:e})=>t.readOnly?!1:(e(t.update(Mx(t,(n,r)=>{let i=/^\s*/.exec(n.text)[0];if(!i)return;let o=ld(i,t.tabSize),s=0,a=Nu(t,Math.max(0,o-gp(t)));for(;s<i.length&&s<a.length&&i.charCodeAt(s)==a.charCodeAt(s);)s++;r.push({from:n.from+s,to:n.from+i.length,insert:a.slice(s)})}),{userEvent:"delete.dedent"})),!0),HY=[{key:"Ctrl-b",run:YR,shift:JR,preventDefault:!0},{key:"Ctrl-f",run:FR,shift:_R},{key:"Ctrl-p",run:DR,shift:tI},{key:"Ctrl-n",run:UR,shift:nI},{key:"Ctrl-a",run:hY,shift:TY},{key:"Ctrl-e",run:pY,shift:PY},{key:"Ctrl-d",run:oI},{key:"Ctrl-h",run:$b},{key:"Ctrl-k",run:lI},{key:"Ctrl-Alt-h",run:aI},{key:"Ctrl-o",run:NY},{key:"Ctrl-t",run:VY},{key:"Ctrl-v",run:_b}],jY=[{key:"ArrowLeft",run:YR,shift:JR,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:iY,shift:vY,preventDefault:!0},{mac:"Cmd-ArrowLeft",run:dY,shift:wY,preventDefault:!0},{key:"ArrowRight",run:FR,shift:_R,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:oY,shift:bY,preventDefault:!0},{mac:"Cmd-ArrowRight",run:fY,shift:OY,preventDefault:!0},{key:"ArrowUp",run:DR,shift:tI,preventDefault:!0},{mac:"Cmd-ArrowUp",run:q2,shift:J2},{mac:"Ctrl-ArrowUp",run:D2,shift:U2},{key:"ArrowDown",run:UR,shift:nI,preventDefault:!0},{mac:"Cmd-ArrowDown",run:Q2,shift:_2},{mac:"Ctrl-ArrowDown",run:_b,shift:K2},{key:"PageUp",run:D2,shift:U2},{key:"PageDown",run:_b,shift:K2},{key:"Home",run:uY,shift:kY,preventDefault:!0},{key:"Mod-Home",run:q2,shift:J2},{key:"End",run:cY,shift:SY,preventDefault:!0},{key:"Mod-End",run:Q2,shift:_2},{key:"Enter",run:WY},{key:"Mod-a",run:CY},{key:"Backspace",run:$b,shift:$b},{key:"Delete",run:oI},{key:"Mod-Backspace",mac:"Alt-Backspace",run:aI},{key:"Mod-Delete",mac:"Alt-Delete",run:zY},{mac:"Mod-Backspace",run:EY},{mac:"Mod-Delete",run:lI}].concat(HY.map(t=>({mac:t.key,run:t.run,shift:t.shift}))),pI=[{key:"Alt-ArrowLeft",mac:"Ctrl-ArrowLeft",run:aY,shift:yY},{key:"Alt-ArrowRight",mac:"Ctrl-ArrowRight",run:lY,shift:xY},{key:"Alt-ArrowUp",run:LY},{key:"Shift-Alt-ArrowUp",run:BY},{key:"Alt-ArrowDown",run:XY},{key:"Shift-Alt-ArrowDown",run:AY},{key:"Escape",run:IY},{key:"Mod-Enter",run:YY},{key:"Alt-l",mac:"Ctrl-l",run:MY},{key:"Mod-i",run:RY,preventDefault:!0},{key:"Mod-[",run:hI},{key:"Mod-]",run:fI},{key:"Mod-Alt-\\",run:FY},{key:"Shift-Mod-k",run:ZY},{key:"Shift-Mod-\\",run:gY},{key:"Mod-/",run:wc},{key:"Alt-A",run:YW}].concat(jY),DY={key:"Tab",run:fI,shift:hI};var ce=globalThis||self;function ie(t,e){X.prototype[t]=e}function UY(t){var e;if(typeof AudioWorkletGlobalScope<"u"){t=String(t).replace(/[=]+$/,""),t.length%4===1&&console.error("'atob' failed: The string to be decoded is not correctly encoded.");for(var n=0,r,i=0,o="";r=t.charAt(i++);~r&&(e=n%4?64*e+r:r,n++%4)&&(o+=String.fromCharCode(255&e>>(-2*n&6))))r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r);e=o}else e=window.atob(t);return e}function KY(t){t=UY(t);for(var e=new Uint8Array(t.length),n=0;n<t.length;++n)e[n]=t.charCodeAt(n);return e.buffer}var T0=()=>KY("");const mI=Symbol("Comlink.proxy"),qY=Symbol("Comlink.endpoint"),Ls=Symbol("Comlink.releaseProxy"),ey=Symbol("Comlink.thrown"),$2=t=>typeof t=="object"&&t!==null||typeof t=="function",gI=new Map([["proxy",{Ga:t=>$2(t)&&t[mI],Qa(t){const{port1:e,port2:n}=new MessageChannel;return vI(t,e),[n,[n]]},Ha:t=>(t.start(),Vl(t))}],["throw",{Ga:t=>$2(t)&&ey in t,Qa({value:t}){let e;return e=t instanceof Error?{Ma:!0,value:{message:t.message,name:t.name,stack:t.stack}}:{Ma:!1,value:t},[e,[]]},Ha(t){throw t.Ma?Object.assign(Error(t.value.message),t.value):t.value}}]]);function vI(t,e=self){e.addEventListener("message",function n(r){if(r&&r.data){var i=r.data.argumentList,{id:o,type:s,path:a}=Object.assign({path:[]},r.data);i=(i||[]).map(ts);try{const c=a.slice(0,-1).reduce((d,f)=>d[f],t),u=a.reduce((d,f)=>d[f],t);switch(s){case"GET":var l=u;break;case"SET":c[a.slice(-1)[0]]=ts(r.data.value),l=!0;break;case"APPLY":l=u.apply(c,i);break;case"CONSTRUCT":l=Object.assign(new u(...i),{[mI]:!0});break;case"ENDPOINT":const{port1:d,port2:f}=new MessageChannel;vI(t,f),l=Ll(d,[d]);break;case"RELEASE":l=void 0;break;default:return}}catch(c){l={value:c,[ey]:0}}Promise.resolve(l).catch(c=>({value:c,[ey]:0})).then(c=>{const[u,d]=Rx(c);c={...u},c.id=o,e.postMessage(c,d),s==="RELEASE"&&(e.removeEventListener("message",n),bI(e))})}}),e.start&&e.start()}function bI(t){t.constructor.name==="MessagePort"&&t.close()}function Vl(t){return function e(n,r=[],i=function(){}){let o=!1;const s=new Proxy(i,{get(a,l){return pf(o),l===Ls?()=>oa(n,{type:"RELEASE",path:r.map(c=>c.toString())}).then(()=>{bI(n),o=!0}):l==="then"?r.length===0?{then:()=>s}:(a=oa(n,{type:"GET",path:r.map(c=>c.toString())}).then(ts),a.then.bind(a)):e(n,[...r,l])},set(a,l,c){pf(o);const[u,d]=Rx(c);return oa(n,{type:"SET",path:[...r,l].map(f=>f.toString()),value:u},d).then(ts)},apply(a,l,c){if(pf(o),a=r[r.length-1],a===qY)return oa(n,{type:"ENDPOINT"}).then(ts);if(a==="bind")return e(n,r.slice(0,-1));const[u,d]=e5(c);return c={type:"APPLY"},c.path=r.map(f=>f.toString()),c.argumentList=u,oa(n,c,d).then(ts)},construct(a,l){pf(o);const[c,u]=e5(l);return a={type:"CONSTRUCT"},a.path=r.map(d=>d.toString()),a.argumentList=c,oa(n,a,u).then(ts)}});return s}(t,[],void 0)}function pf(t){if(t)throw Error("Proxy has been released and is not useable")}function e5(t){t=t.map(Rx);const e=(n=t.map(r=>r[1]),Array.prototype.concat.apply([],n));return[t.map(r=>r[0]),e];var n}const yI=new WeakMap;function Ll(t,e){return yI.set(t,e),t}function QY(){var t=ds,e=self;return{postMessage:(n,r)=>t.postMessage(n,"*",r),addEventListener:e.addEventListener.bind(e),removeEventListener:e.removeEventListener.bind(e)}}function Rx(t){for(const[e,n]of gI)if(n.Ga(t)){const[r,i]=n.Qa(t);return[{type:"HANDLER",name:e,value:r},i]}return[{type:"RAW",value:t},yI.get(t)||[]]}function ts(t){switch(t.type){case"HANDLER":return gI.get(t.name).Ha(t.value);case"RAW":return t.value}}function oa(t,e,n){return new Promise(r=>{const i=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");t.addEventListener("message",function o(s){s.data&&s.data.id&&s.data.id===i&&(t.removeEventListener("message",o),r(s.data))}),t.start&&t.start(),e.id=i,t.postMessage(e,n)})}let ui,Bt,ns,Ss,Wi,vl,xI,fa;ui=()=>()=>{};Bt=()=>()=>{};ns=()=>()=>{};Ss=()=>()=>{};Wi=()=>()=>{};vl=()=>()=>{};xI=()=>{};fa=()=>()=>{};const SI=t=>()=>t.exports.csoundCreateWasi();SI.toString=()=>"create = async () => undefined;";const kI=t=>e=>t.exports.csoundDestroy(e);kI.toString=()=>"destroy = async () => undefined;";const wI=t=>()=>t.exports.csoundGetAPIVersion();wI.toString=()=>"getAPIVersion = async () => Number;";const OI=t=>()=>t.exports.csoundGetVersion();OI.toString=()=>"getVersion = async () => Number;";const TI=t=>(e,n)=>t.exports.csoundInitialize(n);TI.toString=()=>"initialize = async () => Number;";const wr=new TextDecoder("utf8"),hd=new TextEncoder("utf8"),Xl=t=>{const e=t.indexOf("\0");return-1<e?t.substr(0,e):t},St=(t,e)=>{t.exports.freeStringMem(e)},Ht=(t,e)=>{if(typeof e!="string")console.error("Expected string but got",typeof e);else{e=hd.encode(e);var n=t.exports.allocStringMem(e.length);return new Uint8Array(t.I.memory.buffer,n,e.length+1).set(e),n}},PI=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundParseOrc(e,n),St(t,n),e);PI.toString=()=>"parseOrc = async (orchestra) => Object;";const CI=t=>(e,n)=>t.exports.csoundCompileTree(e,n);CI.toString=()=>"compileTree = async (tree) => Number;";const MI=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundCompileOrc(e,n),St(t,n),e);MI.toString=()=>"compileOrc = async (orchestra) => Number;";const RI=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundEvalCode(e,n),St(t,n),e);RI.toString=()=>"csoundEvalCode = async (orchestra) => Number;";const II=t=>e=>t.exports.csoundStartWasi(e);II.toString=()=>"start = async () => Number;";const zI=t=>(e,n)=>{n=Ht(t,n);let r;try{r=t.exports.csoundCompileCsd(e,n)}catch(i){console.error(i)}return St(t,n),r};zI.toString=()=>"compileCsd = async (path) => Number;";const EI=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundCompileCsdText(e,n),St(t,n),e);EI.toString=()=>"compileCsdText = async (csoundDocument) => Number;";const NI=t=>e=>t.exports.csoundPerform(e);NI.toString=()=>"perform = async () => Number;";const VI=t=>e=>t.exports.csoundPerformKsmpsWasi(e);VI.toString=()=>"performKsmps = async (csound) => Number;";const LI=t=>e=>t.exports.csoundPerformBuffer(e);LI.toString=()=>"performBuffer = async (csound) => Number;";const XI=t=>e=>t.exports.csoundStop(e);XI.toString=()=>"stop = async () => undefined;";const BI=t=>e=>t.exports.csoundCleanup(e);BI.toString=()=>"cleanup = async () => Number;";const AI=t=>e=>t.exports.csoundResetWasi(e);AI.toString=()=>"reset = async () => Number;";const ty=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths","int"],["number_of_threads","int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],ZI=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module","char",64],["isOutput","int"]],GI=[["type","int"],["lexme","ptr"],["value","int"],["fvalue","double"],["optype","ptr"],["next","ptr"]],WI=[["type","int"],["value","ptr"],["rate","int"],["len","int"],["line","int"],["locn","uint64"],["left","ptr"],["right","ptr"],["next","ptr"],["markup","ptr"]],xp={$b:4,fc:8,Rb:8,char:1,Xb:8,cc:4,hc:8},Bl=t=>t?t.reduce((e,[,n])=>xp[n]?xp[n]+e:Bl({Tb:WI,Sb:GI}[n])+e,0):0;Bl(WI);Bl(GI);Bl(ty);const P0=Bl(ZI),YI=(t,e)=>([t]=t.reduce(([n,r],[i,o,...s])=>(s=o==="char"?xp[o]*s[0]:xp[o],o=o==="char"?Xl(wr.decode(e.subarray(r,s)))||"":e[r],n[i]=o,[n,r+s]),[{},0]),t),FI=t=>e=>t.exports.csoundGetSr(e);FI.toString=()=>"getSr = async () => Number;";const HI=t=>e=>t.exports.csoundGetKr(e);HI.toString=()=>"getKr = async () => Number;";const jI=t=>e=>t.exports.csoundGetKsmps(e);jI.toString=()=>"getKsmps = async () => Number;";const DI=t=>e=>t.exports.csoundGetNchnls(e);DI.toString=()=>"getNchnls = async () => Number;";const UI=t=>e=>t.exports.csoundGetNchnlsInput(e);UI.toString=()=>"getNchnlsInput = async () => Number;";const KI=t=>e=>t.exports.csoundGet0dBFS(e);KI.toString=()=>"get0dBFS = async () => Number;";const qI=t=>e=>t.exports.csoundGetA4(e);qI.toString=()=>"getA4 = async () => Number;";const QI=t=>e=>t.exports.csoundGetCurrentTimeSamples(e);QI.toString=()=>"getCurrentTimeSamples = async () => Number;";const JI=t=>e=>t.exports.csoundGetSizeOfMYFLT(e);JI.toString=()=>"getSizeOfMYFLT = async () => Number;";const _I=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundSetOption(e,n),St(t,n),e);_I.toString=()=>"setOption = async (option) => Number;";const $I=t=>(e,n)=>{t.exports.csoundSetParams(e,n)};$I.toString=()=>"setParams = async (csoundParams) => undefined;";const ez=t=>e=>{var n=t.I.memory.buffer;const r=Bl(ty),i=t.exports.allocCsoundParamsStruct();return n=new Uint8Array(n,i,r),t.exports.csoundGetParams(e,i),e=YI(ty,n),t.exports.freeCsoundParams(i),e};ez.toString=()=>"getParams = async () => CSOUND_PARAMS;";const tz=t=>e=>t.exports.csoundGetDebug(e);tz.toString=()=>"getDebug = async () => Number;";const nz=t=>(e,n)=>{t.exports.csoundSetDebug(e,n)};nz.toString=()=>"setDebug = async (number) => undefined;";const rz=t=>e=>t.exports.csoundGetInputBufferSize(e);rz.toString=()=>"getInputBufferSize = async () => Number;";const iz=t=>e=>t.exports.csoundGetOutputBufferSize(e);iz.toString=()=>"getOutputBufferSize = async () => Number;";const oz=t=>e=>t.exports.csoundGetInputBuffer(e);oz.toString=()=>"getInputBuffer = async () => Number;";const sz=t=>e=>t.exports.csoundGetOutputBuffer(e);sz.toString=()=>"getOutputBuffer = async () => Number;";const az=t=>e=>t.exports.csoundGetSpin(e);az.toString=()=>"getSpin = async (csound) => Number;";const lz=t=>e=>t.exports.csoundGetSpout(e);lz.toString=()=>"getSpout = async () => Number;";const Yr=()=>{if(window.webkitAudioContext!==void 0)return window.webkitAudioContext;if(window.AudioContext!==void 0)return window.AudioContext},Vu=t=>{let e=t.replace(/^csound/i,"");return t==="csoundPushMidiMessage"&&(e="midiMessage"),e.charAt(0).toLowerCase()+e.slice(1)},Wc=new Set(["realtimePerformanceStarted","realtimePerformancePaused","realtimePerformanceResumed","renderStarted"]),so=(t,e,n,r)=>async(...i)=>{if(!r||!Wc.has(r)){const o={};0<Object.values(o).length&&await t.callUncloned("syncWorkerFs",[e,o])}return await t.callUncloned(n,[e,...i])},t5=(t,e)=>async(...n)=>await e.apply({},[t,...n]),Em=async t=>await Promise.all(t.map(async e=>(await fetch(e)).arrayBuffer())),JY=t=>{const e=[];for(let n=0;n<t;n++)e.push(n);return e},cz=t=>(e,n)=>{const r=t.I.memory.buffer,i=t.exports.csoundGetMIDIDevList(e,void 0,n?1:0);if(i===0)return[];const o=t.exports.allocCsMidiDeviceStruct(i);t.exports.csoundGetMIDIDevList(e,o,n?1:0);const s=new Uint8Array(r,o,P0*i);return e=JY(i).map(a=>YI(ZI,s.subarray(a*P0,P0))),t.exports.freeCsMidiDeviceStruct(o),e};cz.toString=()=>"getMIDIDevList = async (isOutput) => Object;";const uz=t=>e=>{var n=t.I.memory.buffer;return e=t.exports.getRtMidiName(e),n=new Uint8Array(n,e,128),Xl(wr.decode(n))||""};uz.toString=()=>"getRtMidiName = async () => String;";const dz=t=>(e,n,r,i)=>{t.exports.pushMidiMessage(e,n,r,i)};dz.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";const fz=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundInputMessage(e,n),St(t,n),e);fz.toString=()=>"inputMessage = async (scoreEvent) => Number;";const hz=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundInputMessageAsync(e,n),St(t,n),e);hz.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";const pz=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundGetControlChannelWasi(e,n),St(t,n),e);pz.toString=()=>"getControlChannel = async (channelName) => Number;";const mz=t=>(e,n,r)=>{n=Ht(t,n),t.exports.csoundSetControlChannel(e,n,r),St(t,n)};mz.toString=()=>"setControlChannel = async (channelName, value) => void;";const gz=t=>(e,n)=>{n=Ht(t,n),e=t.exports.csoundGetStringChannelWasi(e,n);var r=new Uint8Array(t.I.memory.buffer,e);return r=wr.decode(r),r=Xl(r),St(t,n),St(t,e),r};gz.toString=()=>"getStringChannel = async (channelName) => String;";const vz=t=>(e,n,r)=>{n=Ht(t,n),r=Ht(t,r),t.exports.csoundSetStringChannel(e,n,r),St(t,n),St(t,r)};vz.toString=()=>"setStringChannel = async (channelName, value) => void;";const bz=t=>e=>{var n=t.I.memory.buffer;return e=t.exports.csoundGetOutputName(e),n=new Uint8Array(n,e,64),Xl(wr.decode(n))||""};bz.toString=()=>"getOutputName = async () => String;";const yz=t=>e=>{var n=t.I.memory.buffer;return e=t.exports.csoundGetInputName(e),n=new Uint8Array(n,e,64),Xl(wr.decode(n))||""};yz.toString=()=>"getInputName = async (csound) => String;";const xz=t=>(e,n,r)=>(n=Ht(t,n),r=Ht(t,r),e=t.exports.csoundAppendEnv(e,n,r),St(t,n),St(t,r),e);xz.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const Sz=t=>e=>t.exports.csoundIsScorePending(e);Sz.toString=()=>"isScorePending = async () => Number;";const kz=t=>(e,n)=>t.exports.csoundSetScorePending(e,n);kz.toString=()=>"setScorePending = async (pending) => Number;";const wz=t=>(e,n)=>(n=Ht(t,n),e=t.exports.csoundReadScore(e,n),St(t,n),e);wz.toString=()=>"readScore = async (score) => Number;";const Oz=t=>e=>t.exports.csoundGetScoreTime(e);Oz.toString=()=>"getScoreTime = async () => Number;";const Tz=t=>e=>t.exports.csoundGetScoreOffsetSeconds(e);Tz.toString=()=>"getScoreOffsetSeconds = async () => Number;";const Pz=t=>(e,n)=>t.exports.csoundSetScoreOffsetSeconds(e,n);Pz.toString=()=>"setScoreOffsetSeconds = async () => Number;";const Cz=t=>e=>t.exports.csoundRewindScore(e);Cz.toString=()=>"rewindScore = async () => undefined;";const Mz=t=>(e,n)=>t.exports.csoundTableLength(e,n);Mz.toString=()=>"tableLength = async (tableNum) => Number;";const Rz=t=>(e,n,r)=>t.exports.csoundTableGet(e,n,r);Rz.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const Iz=t=>(e,n,r,i)=>t.exports.csoundTableSet(e,n,r,i);Iz.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";const zz=t=>(e,n,r)=>{const i=t.exports.allocFloatArray(r.length);new Float64Array(t.I.memory.buffer,i,r.length).set(r),t.exports.csoundTableCopyIn(e,n,i),t.exports.freeFloatArrayMem(i)};zz.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";const Lu=t=>(e,n)=>{var r=t.exports.csoundTableLength(e,n);if(0<r){const i=t.exports.allocFloatArray(r);for(t.exports.csoundTableCopyOut(e,n,i),e=new Float64Array(t.I.memory.buffer,i,r),n=new Float64Array(e.length),r=0;r<e.length;r++)n[r]=e[r];return t.exports.freeFloatArrayMem(i),n}};Lu.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";Lu.toString=Lu.toString;const Ez=t=>(e,n)=>{const r=t.exports.allocFloatArray(1024);return t.exports.csoundGetTableArgs(e,r,n),e=new Float64Array(t.I.memory.buffer,r,1024),t.exports.freeFloatArrayMem(r),e};Ez.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";const Nz=t=>(e,n)=>t.exports.csoundIsNamedGEN(e,n);Nz.toString=()=>"isNamedGEN = async (tableNum) => number;";const Vz=t=>(e,n)=>{const r=t.exports.csoundIsNamedGEN(e,n);if(0<r){const i=t.exports.allocStringMem(r);return t.exports.csoundGetNamedGEN(e,i,n,r),e=new Uint8Array(t.I.memory.buffer,i,r),wr.decode(e)}};Vz.toString=()=>"getNamedGEN = async (tableNum) => ?string;";function Lz(t){return(e,n,r)=>{e=typeof r=="string"?hd.encode(r):r,t.I.writeFile(n,e)}}Lz.toString=()=>"async (path, data) => void";function Xz(t){return(e,n,r)=>{e=typeof r=="string"?hd.encode(r):r,t.I.appendFile(n,e)}}Xz.toString=()=>"async (path, data) => void";function Bz(t){return(e,n)=>t.I.readFile(n)}Bz.toString=()=>"async (path) => ?Uint8Array";function Az(t){return(e,n)=>t.I.unlink(n)}Az.toString=()=>"async (path) => void";function Zz(t){return(e,n)=>t.I.readdir(n)}Zz.toString=()=>"async (path) => string[]";function Gz(t){return(e,n)=>t.I.mkdir(n)}Gz.toString=()=>"async (path) => void";var Xo={};Xo.appendFile=Xz;Xo.mkdir=Gz;Xo.readFile=Bz;Xo.readdir=Zz;Xo.unlink=Az;Xo.writeFile=Lz;const Fr={csoundCreate:SI,csoundDestroy:kI,csoundGetAPIVersion:wI,csoundGetVersion:OI,csoundInitialize:TI,csoundParseOrc:PI,csoundCompileTree:CI,csoundCompileOrc:MI,csoundEvalCode:RI,csoundStart:II,csoundCompileCsd:zI,csoundCompileCsdText:EI,csoundPerform:NI,csoundPerformKsmps:VI,csoundPerformBuffer:LI,csoundStop:XI,csoundCleanup:BI,csoundReset:AI,csoundGetSr:FI,csoundGetKr:HI,csoundGetKsmps:jI,csoundGetNchnls:DI,csoundGetNchnlsInput:UI,csoundGet0dBFS:KI,csoundGetA4:qI,csoundGetCurrentTimeSamples:QI,csoundGetSizeOfMYFLT:JI,csoundSetOption:_I,csoundSetParams:$I,csoundGetParams:ez,csoundGetDebug:tz,csoundSetDebug:nz,csoundGetInputBufferSize:rz,csoundGetOutputBufferSize:iz,csoundGetInputBuffer:oz,csoundGetOutputBuffer:sz,csoundGetSpin:az,csoundGetSpout:lz,csoundGetMIDIDevList:cz,csoundSetMidiCallbacks:t=>e=>{t.exports.csoundSetMidiCallbacks(e)},csoundGetRtMidiName:uz,csoundGetMidiOutFileName:t=>e=>{var n=t.I.memory.buffer;return e=t.exports.getMidiOutFileName(e),n=new Uint8Array(n,e,128),e&&0<e.length&&St(t,e),Xl(wr.decode(n))||""},csoundPushMidiMessage:dz,_isRequestingRtMidiInput:t=>e=>t.exports.isRequestingRtMidiInput(e),csoundInputMessage:fz,csoundInputMessageAsync:hz,csoundGetControlChannel:pz,csoundSetControlChannel:mz,csoundGetStringChannel:gz,csoundSetStringChannel:vz,csoundGetInputName:yz,csoundGetOutputName:bz,csoundAppendEnv:xz,csoundShouldDaemonize:t=>e=>t.exports.csoundShouldDaemonize(e),csoundIsScorePending:Sz,csoundSetScorePending:kz,csoundReadScore:wz,csoundGetScoreTime:Oz,csoundGetScoreOffsetSeconds:Tz,csoundSetScoreOffsetSeconds:Pz,csoundRewindScore:Cz,csoundTableLength:Mz,csoundTableGet:Rz,csoundTableSet:Iz,csoundTableCopyIn:zz,csoundTableCopyOut:Lu,csoundGetTable:Lu,csoundGetTableArgs:Ez,csoundIsNamedGEN:Nz,csoundGetNamedGEN:Vz,fs:Xo};function _Y(t){const e={...Fr.fs};return delete Fr.fs,{...Object.keys(Fr).reduce((n,r)=>(n[r]=Fr[r](t),n),{}),...Object.keys(Xo).reduce((n,r)=>(n[r]=e[r](t),n),{})}}const Xs=t=>e=>{e.data.log?t&&t.m&&t.m.Ta?t.m.Ta(e.data.log):console.log(typeof e.data.log=="object"&&typeof e.data.log.log=="string"?e.data.log.log:e.data.log):e.data.playStateChange&&t&&t.onPlayStateChange&&t.onPlayStateChange(e.data.playStateChange)},mf=()=>{const{port1:t,port2:e}=new MessageChannel;return[t,e]},gf=([t,e])=>{if(t.close!==void 0)try{t.close()}catch{}if(e.close!==void 0)try{e.close()}catch{}};class Ix{constructor(){const{port1:e,port2:n}=new MessageChannel;this.Y=e,this.g=n;const{port1:r,port2:i}=new MessageChannel;this.ca=r,this.xa=i;const{port1:o,port2:s}=new MessageChannel;this.u=o,this.ka=s;const{port1:a,port2:l}=new MessageChannel;this.o=a,this.ja=l;const{port1:c,port2:u}=new MessageChannel;this.B=c,this.h=u;const{port1:d,port2:f}=new MessageChannel;this.L=d,this.va=f;const{port1:h,port2:p}=new MessageChannel;this.J=h,this.wa=p,this.C=this.C.bind(this)}C(){gf([this.o,this.ja]),[this.o,this.ja]=mf(),gf([this.ca,this.xa]),[this.ca,this.xa]=mf(),gf([this.u,this.ka]),[this.u,this.ka]=mf(),gf([this.J,this.wa]),[this.J,this.wa]=mf()}}function us(t){for(;0<t.length;)t.pop()}function mi(t,e){return t.h!==void 0?(console.error(`cannot ${e} while starting, did you forget to 'await'?`),!0):t.o!==void 0?(console.error(`cannot ${e} while stopping, did you forget to 'await'?`),!0):t.u!==void 0?(console.error(`cannot ${e} while pausing, did you forget to 'await'?`),!0):t.C!==void 0?(console.error(`cannot ${e} while resuming, did you forget to 'await'?`),!0):!1}async function Wz(t){let e;return(e=t.u)!=null?e:-1}async function $Y(t){let e;return(e=t.C)!=null?e:-1}class Nm{constructor(){this.g=[],this.L=this.C=this.J=this.u=this.R=this.o=this.O=this.h=void 0,this.la=this.la.bind(this),this.U=this.U.bind(this),this.X=this.X.bind(this),this.B=this.B.bind(this),this.ia=this.ia.bind(this),this.ra=this.ra.bind(this),this.ya=this.ya.bind(this),this.sa=this.sa.bind(this),this.ha=this.ha.bind(this),this.na=this.na.bind(this),this.T=this.T.bind(this),this.V=this.V.bind(this)}T(){return this.h!==void 0}V(){return this.o!==void 0}async ha(){return this.h?await this.h:-1}async na(){let e;return(e=this.o)!=null?e:-1}la(){this.h||(this.h=new Promise(e=>{this.O=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.h&&(console.warn("start promise timed out"),this.O(),delete this.O,this.h&&delete this.h)},2e3);this.g.push(n)}))}U(){try{this.g.forEach(clearTimeout),us(this.g)}catch(e){console.error(e)}this.O&&(this.O(),delete this.O),this.h&&delete this.h}X(){this.o||(this.o=new Promise(e=>{this.R=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.o&&(console.warn("stop promise timed out"),this.R(),delete this.R,this.o&&delete this.o)},1e4);this.g.push(n)}))}B(){try{this.g.forEach(clearTimeout),us(this.g)}catch(e){console.error(e)}this.R&&(this.R(),delete this.R),this.o&&delete this.o}ia(){this.u||(this.u=new Promise(e=>{this.J=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.u&&(console.warn("pause promise timed out"),this.J(),delete this.J,this.u&&delete this.u)},2e3);this.g.push(n)}))}ra(){try{this.g.forEach(clearTimeout),us(this.g)}catch(e){console.error(e)}this.J&&(this.J(),delete this.J),this.u&&delete this.u}ya(){this.C||(this.C=new Promise(e=>{this.L=e;const n=setTimeout(()=>{this.g=this.g.filter(r=>r!==n),this.C&&(console.warn("resume promise timed out"),this.L(),delete this.L,this.C&&delete this.C)},2e3);this.g.push(n)}))}sa(){try{this.g.forEach(clearTimeout),us(this.g)}catch(e){console.error(e)}this.L&&(this.L(),delete this.L),this.C&&delete this.C}}var e6=function t(e,n,r){function i(a,l){if(!n[a]){if(!e[a]){var c=typeof require=="function"&&require;if(!l&&c)return c(a,!0);if(o)return o(a,!0);throw l=Error("Cannot find module '"+a+"'"),l.code="MODULE_NOT_FOUND",l}l=n[a]={exports:{}},e[a][0].call(l.exports,function(u){return i(e[a][1][u]||u)},l,l.exports,t,e,n,r)}return n[a].exports}for(var o=typeof require=="function"&&require,s=0;s<r.length;s++)i(r[s]);return i}({1:[function(t,e){function n(){}function r(c,u,d){this.K=c,this.context=u,this.once=d||!1}function i(c,u,d,f,h){if(typeof d!="function")throw new TypeError("The listener must be a function");return d=new r(d,f||c,h),u=l?l+u:u,c.N[u]?c.N[u].K?c.N[u]=[c.N[u],d]:c.N[u].push(d):(c.N[u]=d,c.ta++),c}function o(c,u){--c.ta==0?c.N=new n:delete c.N[u]}function s(){this.N=new n,this.ta=0}var a=Object.prototype.hasOwnProperty,l="~";Object.create&&(n.prototype=Object.create(null),new n().__proto__||(l=!1)),s.prototype.eventNames=function(){var c,u,d=[];if(this.ta===0)return d;for(u in c=this.N)a.call(c,u)&&d.push(l?u.slice(1):u);return Object.getOwnPropertySymbols?d.concat(Object.getOwnPropertySymbols(c)):d},s.prototype.listeners=function(c){if(c=this.N[l?l+c:c],!c)return[];if(c.K)return[c.K];for(var u=0,d=c.length,f=Array(d);u<d;u++)f[u]=c[u].K;return f},s.prototype.listenerCount=function(c){return(c=this.N[l?l+c:c])?c.K?1:c.length:0},s.prototype.S=function(c,u,d,f,h,p){var m=l?l+c:c;if(this.N[m]){var b;m=this.N[m];var g=arguments.length;if(m.K){switch(m.once&&this.removeListener(c,m.K,void 0,!0),g){case 1:m.K.call(m.context);return;case 2:m.K.call(m.context,u);return;case 3:m.K.call(m.context,u,d);return;case 4:m.K.call(m.context,u,d,f);return;case 5:m.K.call(m.context,u,d,f,h);return;case 6:m.K.call(m.context,u,d,f,h,p);return}for(x=1,b=Array(g-1);x<g;x++)b[x-1]=arguments[x];m.K.apply(m.context,b)}else for(var v,y=m.length,x=0;x<y;x++)switch(m[x].once&&this.removeListener(c,m[x].K,void 0,!0),g){case 1:m[x].K.call(m[x].context);break;case 2:m[x].K.call(m[x].context,u);break;case 3:m[x].K.call(m[x].context,u,d);break;case 4:m[x].K.call(m[x].context,u,d,f);break;default:if(!b)for(v=1,b=Array(g-1);v<g;v++)b[v-1]=arguments[v];m[x].K.apply(m[x].context,b)}}},s.prototype.on=function(c,u,d){return i(this,c,u,d,!1)},s.prototype.once=function(c,u,d){return i(this,c,u,d,!0)},s.prototype.removeListener=function(c,u,d,f){if(c=l?l+c:c,!this.N[c])return this;if(!u)return o(this,c),this;var h=this.N[c];if(h.K)h.K!==u||f&&!h.once||d&&h.context!==d||o(this,c);else{for(var p=0,m=[],b=h.length;p<b;p++)(h[p].K!==u||f&&!h[p].once||d&&h[p].context!==d)&&m.push(h[p]);m.length?this.N[c]=m.length===1?m[0]:m:o(this,c)}return this},s.prototype.removeAllListeners=function(c){var u;return c?(u=l?l+c:c,this.N[u]&&o(this,u)):(this.N=new n,this.ta=0),this},s.prototype.off=s.prototype.removeListener,s.prototype.addListener=s.prototype.on,e!==void 0&&(e.exports=s)},{}]},{},[1])(1);class Vm{constructor(){this.g=new e6,this.h=void 0,this.o=this.o.bind(this),this.ma=this.ma.bind(this),this.fa=this.fa.bind(this),this.ga=this.ga.bind(this),this.u=this.u.bind(this),this.C=this.C.bind(this),this.B=this.B.bind(this),this.ea=this.ea.bind(this),this.H=this.H.bind(this)}H(){this.g.removeAllListeners("play pause stop realtimePerformanceStarted realtimePerformancePaused realtimePerformanceResumed realtimePerformanceEnded renderStarted renderEnded onAudioNodeCreated message".split(" "))}ma(){this.g.S("realtimePerformanceStarted"),this.h!=="play"&&(this.g.S("play"),this.h="play")}fa(){this.g.S("realtimePerformancePaused"),this.h!=="pause"&&(this.g.S("pause"),this.h="pause")}ga(){this.g.S("realtimePerformanceResumed"),this.h!=="play"&&(this.g.S("play"),this.h="play")}u(){this.g.S("realtimePerformanceEnded"),this.h!=="stop"&&(this.g.S("stop"),this.h="stop")}C(){this.g.S("renderStarted"),this.h!=="stop"&&(this.g.S("stop"),this.h="stop")}B(){this.g.S("renderEnded"),this.h!=="stop"&&(this.g.S("stop"),this.h="stop")}ea(e){this.g.S("onAudioNodeCreated",e)}Ta({log:e}){this.g.S("message",e)}o(e){return e.eventNames=this.g.eventNames.bind(this.g),e.listenerCount=this.g.listenerCount.bind(this.g),e.listeners=this.g.listeners.bind(this.g),e.off=this.g.off.bind(this.g),e.on=this.g.on.bind(this.g),e.addListener=this.g.on.bind(this.g),e.once=this.g.once.bind(this.g),e.removeAllListeners=this.g.removeAllListeners.bind(this.g),e.removeListener=this.g.removeListener.bind(this.g),e}}async function t6(t){if(t.D){t.s.sampleRate=await t.i.getSr(t.D);var e=await t.i.getInputName(t.D);t.s.ba=e.includes("adc"),t.s.pa=await t.i._isRequestingRtMidiInput(t.D),t.s.da=await t.i.getNchnls(t.D),t.s.aa=t.s.ba?1:0,ns()()}else console.error("fatal error: csound instance not found?")}class n6{constructor({audioContext:e,s:n,M:r,inputChannelCount:i,outputChannelCount:o}){this.l=new Ix,this.j=new Nm,this.m=new Vm,n.l=this.l,n.A=this,n.m=this.m,this.s=n,(this.M=r)&&(this.sampleRate=e.sampleRate),i&&(this.inputChannelCount=i),o&&(this.outputChannelCount=o),this.i={},this.g=this.h=this.v=this.D=void 0,this.onPlayStateChange=this.onPlayStateChange.bind(this)}async H(){this.g&&(this.g.terminate(),delete this.g),this.s&&this.s.H&&(await this.s.H(),delete this.s.H),this.h&&(this.h[Ls](),delete this.h),this.m&&this.m.H(),Object.keys(this.i).forEach(e=>delete this.i[e])}get L(){return this.i}$({data:e}){this.l.h.postMessage&&this.l.h.postMessage(e)}async onPlayStateChange(e){if(this.m){switch(this.v=e,e){case"realtimePerformanceStarted":ns()(),await t6(this);break;case"realtimePerformanceEnded":ns()(),this.j.X(),this.m.u(),await this.j.B();break;case"renderStarted":await this.j.U(),this.m.C();break;case"renderEnded":ns()(),this.m.B(),await this.j.B()}this.s.l||(this.s.l=this.l),await this.s.onPlayStateChange(e)}}async o(){return mi(this.j,"pause")?-1:(this.j.ia(),this.s&&this.s.F!==void 0?await this.s.F.pause():await this.s.onPlayStateChange("realtimePerformancePaused"),await Wz(this.j),0)}async u(){return mi(this.j,"resume")?-1:(this.j.ya(),this.s&&this.s.F!==void 0?await this.s.F.resume():await this.s.onPlayStateChange("realtimePerformanceResumed"),await $Y(this.j),0)}async J({Z:e,withPlugins:n}){e=e(),typeof this.s.Ca=="function"&&await this.s.Ca(),n&&0<n.length&&(n=await Em(n)),ns()(),this.g=this.g||new Worker((window.URL||window.webkitURL).createObjectURL(new Blob([`(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var m,q=this||self;function u(a,b){z.prototype[a]=b};const aa=Symbol("Comlink.proxy"),ca=Symbol("Comlink.endpoint"),da=Symbol("Comlink.releaseProxy"),ea=Symbol("Comlink.thrown"),fa=a=>"object"==typeof a&&null!==a||"function"==typeof a,ja=new Map([["proxy",{N:a=>fa(a)&&a[aa],W(a){const {port1:b,port2:c}=new MessageChannel;return ha(a,b),[c,[c]]},O:a=>(a.start(),ia(a))}],["throw",{N:a=>fa(a)&&ea in a,W({value:a}){let b;return b=a instanceof Error?{S:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{S:!1,value:a},[b,[]]},O(a){if(a.S)throw Object.assign(Error(a.value.message),
a.value);throw a.value;}}]]);
function ha(a,b=self){b.addEventListener("message",function e(d){if(d&&d.data){var g=d.data.argumentList,{id:f,type:h,path:l}=Object.assign({path:[]},d.data);g=(g||[]).map(B);try{const n=l.slice(0,-1).reduce((r,p)=>r[p],a),t=l.reduce((r,p)=>r[p],a);switch(h){case "GET":var k=t;break;case "SET":n[l.slice(-1)[0]]=B(d.data.value);k=!0;break;case "APPLY":k=t.apply(n,g);break;case "CONSTRUCT":k=Object.assign(new t(...g),{[aa]:!0});break;case "ENDPOINT":const {port1:r,port2:p}=new MessageChannel;ha(a,p);
k=ka(r,[r]);break;case "RELEASE":k=void 0;break;default:return}}catch(n){k={value:n,[ea]:0}}Promise.resolve(k).catch(n=>({value:n,[ea]:0})).then(n=>{const [t,r]=la(n);n={...t};n.id=f;b.postMessage(n,r);"RELEASE"===h&&(b.removeEventListener("message",e),ma(b))})}});b.start&&b.start()}function ma(a){"MessagePort"===a.constructor.name&&a.close()}
function ia(a){return function g(c,d=[],e=function(){}){let f=!1;const h=new Proxy(e,{get(l,k){if(na(f),k===da)return()=>D(c,{type:"RELEASE",path:d.map(n=>n.toString())}).then(()=>{ma(c);f=!0});if("then"===k){if(0===d.length)return{then:()=>h};l=D(c,{type:"GET",path:d.map(n=>n.toString())}).then(B);return l.then.bind(l)}return g(c,[...d,k])},set(l,k,n){na(f);const [t,r]=la(n);return D(c,{type:"SET",path:[...d,k].map(p=>p.toString()),value:t},r).then(B)},apply(l,k,n){na(f);l=d[d.length-1];if(l===ca)return D(c,
{type:"ENDPOINT"}).then(B);if("bind"===l)return g(c,d.slice(0,-1));const [t,r]=oa(n);n={type:"APPLY"};n.path=d.map(p=>p.toString());n.argumentList=t;return D(c,n,r).then(B)},construct(l,k){na(f);const [n,t]=oa(k);l={type:"CONSTRUCT"};l.path=d.map(r=>r.toString());l.argumentList=n;return D(c,l,t).then(B)}});return h}(a,[],void 0)}function na(a){if(a)throw Error("Proxy has been released and is not useable");}
function oa(a){a=a.map(la);const b=(c=a.map(d=>d[1]),Array.prototype.concat.apply([],c));return[a.map(d=>d[0]),b];var c}const pa=new WeakMap;function ka(a,b){return pa.set(a,b),a}function la(a){for(const [b,c]of ja)if(c.N(a)){const [d,e]=c.W(a);return[{type:"HANDLER",name:b,value:d},e]}return[{type:"RAW",value:a},pa.get(a)||[]]}function B(a){switch(a.type){case "HANDLER":return ja.get(a.name).O(a.value);case "RAW":return a.value}}
function D(a,b,c){return new Promise(d=>{const e=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");a.addEventListener("message",function h(f){f.data&&f.data.id&&f.data.id===e&&(a.removeEventListener("message",h),d(f.data))});a.start&&a.start();b.id=e;a.postMessage(b,c)})};function qa(){}m=qa.prototype;m.aa=!1;m.port=void 0;m.J=()=>{};m.o=()=>{};m.$a=void 0;m.C=void 0;let G,ra,sa;G=()=>()=>{};ra=()=>()=>{};sa=()=>{};const ta=(a,b,c,d)=>e=>{const g=e.csound,f=1===b.csoundShouldDaemonize(g),h=b.csoundStart(g),l=b.csoundGetOutputName(g)||"test.wav";ra()();0!==h&&a.J(\`error: csoundStart failed while trying to render \${l},\`+" look out for errors in options and syntax");setTimeout(()=>{const k=b._isRequestingRtMidiInput(g);if(f||k||l.includes("dac"))c(e);else if(a.o("renderStarted"),d)d(e);else for(;0===b.csoundPerformKsmps(g););},0);return h},ua=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},
va=({G:a,M:b})=>async c=>{c=c.csound;const d=a.csoundGetKr(c);let e=0,g=0;for(;("renderStarted"===b.C||"renderStarted"===b.$a)&&0===e;)e=a.csoundPerformKsmps(c),g+=1,"function"===typeof setTimeout&&0===e&&0===g%(2*d)&&await new Promise(f=>setTimeout(f,0));b.o("renderEnded")};const wa=a=>()=>a.exports.csoundCreateWasi();wa.toString=()=>"create = async () => undefined;";const xa=a=>b=>a.exports.csoundDestroy(b);xa.toString=()=>"destroy = async () => undefined;";const za=a=>()=>a.exports.csoundGetAPIVersion();za.toString=()=>"getAPIVersion = async () => Number;";const Aa=a=>()=>a.exports.csoundGetVersion();Aa.toString=()=>"getVersion = async () => Number;";const Ba=a=>(b,c)=>a.exports.csoundInitialize(c);Ba.toString=()=>"initialize = async () => Number;";const H=new TextDecoder("utf8"),K=new TextEncoder("utf8");const L=a=>{const b=a.indexOf("\\x00");return-1<b?a.substr(0,b):a};const M=(a,b)=>{a.exports.freeStringMem(b)},N=(a,b)=>{if("string"!==typeof b)console.error("Expected string but got",typeof b);else{b=K.encode(b);var c=a.exports.allocStringMem(b.length);(new Uint8Array(a.h.memory.buffer,c,b.length+1)).set(b);return c}};const Ca=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundParseOrc(b,c);M(a,c);return b};Ca.toString=()=>"parseOrc = async (orchestra) => Object;";const Da=a=>(b,c)=>a.exports.csoundCompileTree(b,c);Da.toString=()=>"compileTree = async (tree) => Number;";const Ea=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundCompileOrc(b,c);M(a,c);return b};Ea.toString=()=>"compileOrc = async (orchestra) => Number;";const Fa=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundEvalCode(b,c);M(a,c);return b};Fa.toString=()=>"csoundEvalCode = async (orchestra) => Number;";
const Ga=a=>b=>a.exports.csoundStartWasi(b);Ga.toString=()=>"start = async () => Number;";const Ha=a=>(b,c)=>{c=N(a,c);let d;try{d=a.exports.csoundCompileCsd(b,c)}catch(e){console.error(e)}M(a,c);return d};Ha.toString=()=>"compileCsd = async (path) => Number;";const Ia=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundCompileCsdText(b,c);M(a,c);return b};Ia.toString=()=>"compileCsdText = async (csoundDocument) => Number;";const Ja=a=>b=>a.exports.csoundPerform(b);Ja.toString=()=>"perform = async () => Number;";
const Ka=a=>b=>a.exports.csoundPerformKsmpsWasi(b);Ka.toString=()=>"performKsmps = async (csound) => Number;";const La=a=>b=>a.exports.csoundPerformBuffer(b);La.toString=()=>"performBuffer = async (csound) => Number;";const Ma=a=>b=>a.exports.csoundStop(b);Ma.toString=()=>"stop = async () => undefined;";const Na=a=>b=>a.exports.csoundCleanup(b);Na.toString=()=>"cleanup = async () => Number;";const Oa=a=>b=>a.exports.csoundResetWasi(b);Oa.toString=()=>"reset = async () => Number;";const Pa=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths","int"],["number_of_threads",
"int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],Qa=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module","char",64],["isOutput","int"]],Ra=[["type","int"],["lexme",
"ptr"],["value","int"],["fvalue","double"],["optype","ptr"],["next","ptr"]],Sa=[["type","int"],["value","ptr"],["rate","int"],["len","int"],["line","int"],["locn","uint64"],["left","ptr"],["right","ptr"],["next","ptr"],["markup","ptr"]];const Ta={hb:4,mb:8,ab:8,char:1,gb:8,jb:4,nb:8},O=a=>a?a.reduce((b,[,c])=>Ta[c]?Ta[c]+b:O({cb:Sa,bb:Ra}[c])+b,0):0;O(Sa);O(Ra);O(Pa);const Ua=O(Qa);const Va=(a,b)=>{[a]=a.reduce(([c,d],[e,g,...f])=>{f="char"===g?Ta[g]*f[0]:Ta[g];g="char"===g?L(H.decode(b.subarray(d,f)))||"":b[d];c[e]=g;return[c,d+f]},[{},0]);return a};const Wa=a=>b=>a.exports.csoundGetSr(b);Wa.toString=()=>"getSr = async () => Number;";const Xa=a=>b=>a.exports.csoundGetKr(b);Xa.toString=()=>"getKr = async () => Number;";const Ya=a=>b=>a.exports.csoundGetKsmps(b);Ya.toString=()=>"getKsmps = async () => Number;";const Za=a=>b=>a.exports.csoundGetNchnls(b);Za.toString=()=>"getNchnls = async () => Number;";const $a=a=>b=>a.exports.csoundGetNchnlsInput(b);$a.toString=()=>"getNchnlsInput = async () => Number;";const ab=a=>b=>a.exports.csoundGet0dBFS(b);
ab.toString=()=>"get0dBFS = async () => Number;";const bb=a=>b=>a.exports.csoundGetA4(b);bb.toString=()=>"getA4 = async () => Number;";const cb=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);cb.toString=()=>"getCurrentTimeSamples = async () => Number;";const db=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);db.toString=()=>"getSizeOfMYFLT = async () => Number;";const eb=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundSetOption(b,c);M(a,c);return b};eb.toString=()=>"setOption = async (option) => Number;";
const fb=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};fb.toString=()=>"setParams = async (csoundParams) => undefined;";const gb=a=>b=>{var c=a.h.memory.buffer;const d=O(Pa),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=Va(Pa,c);a.exports.freeCsoundParams(e);return b};gb.toString=()=>"getParams = async () => CSOUND_PARAMS;";const hb=a=>b=>a.exports.csoundGetDebug(b);hb.toString=()=>"getDebug = async () => Number;";
const ib=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};ib.toString=()=>"setDebug = async (number) => undefined;";const jb=a=>b=>a.exports.csoundGetInputBufferSize(b);jb.toString=()=>"getInputBufferSize = async () => Number;";const kb=a=>b=>a.exports.csoundGetOutputBufferSize(b);kb.toString=()=>"getOutputBufferSize = async () => Number;";const lb=a=>b=>a.exports.csoundGetInputBuffer(b);lb.toString=()=>"getInputBuffer = async () => Number;";const mb=a=>b=>a.exports.csoundGetOutputBuffer(b);mb.toString=()=>"getOutputBuffer = async () => Number;";const nb=a=>b=>a.exports.csoundGetSpin(b);nb.toString=()=>"getSpin = async (csound) => Number;";
const ob=a=>b=>a.exports.csoundGetSpout(b);ob.toString=()=>"getSpout = async () => Number;";const pb=a=>{const b=[];for(let c=0;c<a;c++)b.push(c);return b};const qb=a=>(b,c)=>{const d=a.h.memory.buffer,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const g=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,g,c?1:0);const f=new Uint8Array(d,g,Ua*e);b=pb(e).map(h=>Va(Qa,f.subarray(h*Ua,Ua)));a.exports.freeCsMidiDeviceStruct(g);return b};qb.toString=()=>"getMIDIDevList = async (isOutput) => Object;";
const rb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return L(H.decode(c))||""};rb.toString=()=>"getRtMidiName = async () => String;";const sb=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,c,d,e)};sb.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";const tb=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundInputMessage(b,c);M(a,c);return b};tb.toString=()=>"inputMessage = async (scoreEvent) => Number;";const ub=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundInputMessageAsync(b,c);M(a,c);return b};ub.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";const vb=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);M(a,c);return b};vb.toString=()=>"getControlChannel = async (channelName) => Number;";
const wb=a=>(b,c,d)=>{c=N(a,c);a.exports.csoundSetControlChannel(b,c,d);M(a,c)};wb.toString=()=>"setControlChannel = async (channelName, value) => void;";const xb=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);var d=new Uint8Array(a.h.memory.buffer,b);d=H.decode(d);d=L(d);M(a,c);M(a,b);return d};xb.toString=()=>"getStringChannel = async (channelName) => String;";const yb=a=>(b,c,d)=>{c=N(a,c);d=N(a,d);a.exports.csoundSetStringChannel(b,c,d);M(a,c);M(a,d)};yb.toString=()=>"setStringChannel = async (channelName, value) => void;";const zb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return L(H.decode(c))||""};zb.toString=()=>"getOutputName = async () => String;";const Ab=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return L(H.decode(c))||""};Ab.toString=()=>"getInputName = async (csound) => String;";const Bb=a=>(b,c,d)=>{c=N(a,c);d=N(a,d);b=a.exports.csoundAppendEnv(b,c,d);M(a,c);M(a,d);return b};Bb.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const Cb=a=>b=>a.exports.csoundIsScorePending(b);Cb.toString=()=>"isScorePending = async () => Number;";const Db=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);Db.toString=()=>"setScorePending = async (pending) => Number;";const Eb=a=>(b,c)=>{c=N(a,c);b=a.exports.csoundReadScore(b,c);M(a,c);return b};Eb.toString=()=>"readScore = async (score) => Number;";const Fb=a=>b=>a.exports.csoundGetScoreTime(b);Fb.toString=()=>"getScoreTime = async () => Number;";const Gb=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);
Gb.toString=()=>"getScoreOffsetSeconds = async () => Number;";const Hb=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);Hb.toString=()=>"setScoreOffsetSeconds = async () => Number;";const Ib=a=>b=>a.exports.csoundRewindScore(b);Ib.toString=()=>"rewindScore = async () => undefined;";const Jb=a=>(b,c)=>a.exports.csoundTableLength(b,c);Jb.toString=()=>"tableLength = async (tableNum) => Number;";const Kb=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);Kb.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const Lb=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);Lb.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";
const Mb=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.h.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};Mb.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";
const P=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);b=new Float64Array(a.h.memory.buffer,e,d);c=new Float64Array(b.length);for(d=0;d<b.length;d++)c[d]=b[d];a.exports.freeFloatArrayMem(e);return c}};P.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";P.toString=P.toString;
const Nb=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);b=new Float64Array(a.h.memory.buffer,d,1024);a.exports.freeFloatArrayMem(d);return b};Nb.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";const Ob=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);Ob.toString=()=>"isNamedGEN = async (tableNum) => number;";
const Pb=a=>(b,c)=>{const d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);b=new Uint8Array(a.h.memory.buffer,e,d);return H.decode(b)}};Pb.toString=()=>"getNamedGEN = async (tableNum) => ?string;";function Qb(a){return(b,c,d)=>{b="string"===typeof d?K.encode(d):d;a.h.writeFile(c,b)}}Qb.toString=()=>"async (path, data) => void";function Rb(a){return(b,c,d)=>{b="string"===typeof d?K.encode(d):d;a.h.appendFile(c,b)}}Rb.toString=()=>"async (path, data) => void";function Sb(a){return(b,c)=>a.h.readFile(c)}Sb.toString=()=>"async (path) => ?Uint8Array";function Tb(a){return(b,c)=>a.h.unlink(c)}Tb.toString=()=>"async (path) => void";function Ub(a){return(b,c)=>a.h.readdir(c)}Ub.toString=()=>"async (path) => string[]";
function Vb(a){return(b,c)=>a.h.mkdir(c)}Vb.toString=()=>"async (path) => void";var Q={};Q.appendFile=Rb;Q.mkdir=Vb;Q.readFile=Sb;Q.readdir=Ub;Q.unlink=Tb;Q.writeFile=Qb;const Wb={csoundCreate:wa,csoundDestroy:xa,csoundGetAPIVersion:za,csoundGetVersion:Aa,csoundInitialize:Ba,csoundParseOrc:Ca,csoundCompileTree:Da,csoundCompileOrc:Ea,csoundEvalCode:Fa,csoundStart:Ga,csoundCompileCsd:Ha,csoundCompileCsdText:Ia,csoundPerform:Ja,csoundPerformKsmps:Ka,csoundPerformBuffer:La,csoundStop:Ma,csoundCleanup:Na,csoundReset:Oa,csoundGetSr:Wa,csoundGetKr:Xa,csoundGetKsmps:Ya,csoundGetNchnls:Za,csoundGetNchnlsInput:$a,csoundGet0dBFS:ab,csoundGetA4:bb,csoundGetCurrentTimeSamples:cb,
csoundGetSizeOfMYFLT:db,csoundSetOption:eb,csoundSetParams:fb,csoundGetParams:gb,csoundGetDebug:hb,csoundSetDebug:ib,csoundGetInputBufferSize:jb,csoundGetOutputBufferSize:kb,csoundGetInputBuffer:lb,csoundGetOutputBuffer:mb,csoundGetSpin:nb,csoundGetSpout:ob,csoundGetMIDIDevList:qb,csoundSetMidiCallbacks:a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetRtMidiName:rb,csoundGetMidiOutFileName:a=>b=>{var c=a.h.memory.buffer;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&
M(a,b);return L(H.decode(c))||""},csoundPushMidiMessage:sb,_isRequestingRtMidiInput:a=>b=>a.exports.isRequestingRtMidiInput(b),csoundInputMessage:tb,csoundInputMessageAsync:ub,csoundGetControlChannel:vb,csoundSetControlChannel:wb,csoundGetStringChannel:xb,csoundSetStringChannel:yb,csoundGetInputName:Ab,csoundGetOutputName:zb,csoundAppendEnv:Bb,csoundShouldDaemonize:a=>b=>a.exports.csoundShouldDaemonize(b),csoundIsScorePending:Cb,csoundSetScorePending:Db,csoundReadScore:Eb,csoundGetScoreTime:Fb,csoundGetScoreOffsetSeconds:Gb,
csoundSetScoreOffsetSeconds:Hb,csoundRewindScore:Ib,csoundTableLength:Jb,csoundTableGet:Kb,csoundTableSet:Lb,csoundTableCopyIn:Mb,csoundTableCopyOut:P,csoundGetTable:P,csoundGetTableArgs:Nb,csoundIsNamedGEN:Ob,csoundGetNamedGEN:Pb,fs:Q};function Xb(a){const b={...Wb.fs};delete Wb.fs;return{...Object.keys(Wb).reduce((c,d)=>{c[d]=Wb[d](a);return c},{}),...Object.keys(Q).reduce((c,d)=>{c[d]=b[d](a);return c},{})}};void 0!==q&&(q={});q.BigInt||(q.BigInt=void 0===BigInt?Number:BigInt);const Yb=q.BigInt(1)|q.BigInt(2)|q.BigInt(4)|q.BigInt(8)|q.BigInt(16)|q.BigInt(32)|q.BigInt(64)|q.BigInt(128)|q.BigInt(256)|q.BigInt(2097152)|q.BigInt(4194304)|q.BigInt(8388608)|q.BigInt(134217728),Zb=q.BigInt(0);function $b(a){let b=arguments[0];for(let d=1;d<arguments.length;d++){const e=arguments[d];if(0==e.lastIndexOf("/",0))b=e;else{var c;(c=""==b)||(c=b.length-1,c=0<=c&&b.indexOf("/",c)==c);c?b+=e:b+="/"+e}}return b}
function R(a){if(""==a)return".";let b="";0==a.lastIndexOf("/",0)&&(b="/",0==a.lastIndexOf("//",0)&&0!=a.lastIndexOf("///",0)&&(b="//"));a=a.split("/");const c=[];for(let d=0;d<a.length;d++){const e=a[d];""!=e&&"."!=e&&(".."!=e||!b&&!c.length||".."==c[c.length-1]?c.push(e):c.pop())}return b+c.join("/")||"."};function S(a){return/^\\//g.test(a)?a:\`/\${a}\`}function ac(){return"undefined"===typeof performance||"undefined"===typeof performance.now?Date.now()-Date.now():performance.now()}function bc(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}
function z(){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:"/dev/stdin",seekPos:q.BigInt(0),buffers:[]};this.fd[1]={fd:1,path:"/dev/stdout",seekPos:q.BigInt(0),buffers:[]};this.fd[2]={fd:2,path:"/dev/stderr",seekPos:q.BigInt(0),buffers:[]};this.fd[3]={fd:3,path:"/",seekPos:q.BigInt(0),buffers:[]};this.g=this.g.bind(this);this.i=0}z.prototype.start=function(a){this.i=ac();a.exports._start()};
function cc(a,b){const c={};b=WebAssembly.Module.imports(b);for(const d of b)"function"===d.kind&&d.module.startsWith("wasi_")&&("object"!==typeof c[d.module]&&(c[d.module]={}),c[d.module][d.name]=a[d.name].bind(a));return c}z.prototype.g=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};function dc(a){const b=Math.trunc(a);return q.BigInt(b)*q.BigInt(1E6)+q.BigInt(Math.round(1E6*(a-b)))}
function ec(a,b){switch(b){case 1:return Math.floor(ac());case 0:return dc(Date.now());case 2:case 3:return Math.floor(ac()-a.i);default:return 0}}z.prototype.ca=function(){return 0};u("args_get",z.prototype.ca);z.prototype.da=function(){return 0};u("args_sizes_get",z.prototype.da);z.prototype.ga=function(){return 0};u("clock_res_get",z.prototype.ga);z.prototype.ha=function(a,b,c){this.g().setBigUint64(c,q.BigInt(ec(this,a)),!0);return 0};u("clock_time_get",z.prototype.ha);z.prototype.ia=function(){return 0};
u("environ_get",z.prototype.ia);z.prototype.ja=function(){return 0};u("environ_sizes_get",z.prototype.ja);z.prototype.ka=function(){return 52};u("fd_advise",z.prototype.ka);z.prototype.la=function(){return 52};u("fd_allocate",z.prototype.la);z.prototype.ma=function(){return 0};u("fd_close",z.prototype.ma);z.prototype.na=function(){return 0};u("fd_datasync",z.prototype.na);
z.prototype.oa=function(a,b){a=this.g();a.setUint8(b+4,4);a.setUint16(b+2,0,!0);a.setUint16(b+4,0,!0);a.setBigUint64(b+8,q.BigInt(Yb),!0);a.setBigUint64(b+8+8,q.BigInt(Zb),!0);return 0};u("fd_fdstat_get",z.prototype.oa);z.prototype.pa=function(){return 52};u("fd_fdstat_set_flags",z.prototype.pa);z.prototype.qa=function(){return 0};u("fd_fdstat_set_rights",z.prototype.qa);
z.prototype.ra=function(a,b){let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,g){return e+(null==g?void 0:g.byteLength)?null==g?void 0:g.byteLength:0},0));const d=this.g();d.setBigUint64(b,q.BigInt(a),!0);b+=8;d.setBigUint64(b,q.BigInt(a),!0);b+=8;d.setUint8(b,4);b+=8;d.setBigUint64(b,q.BigInt(1),!0);b+=8;d.setBigUint64(b,q.BigInt(c),!0);b+=8;d.setBigUint64(b,dc(this.i),!0);b+=8;d.setBigUint64(b,dc(this.i),!0);d.setBigUint64(b+8,dc(this.i),!0);return 0};u("fd_filestat_get",z.prototype.ra);
z.prototype.sa=function(){return 0};u("fd_filestat_set_size",z.prototype.sa);z.prototype.ta=function(){return 0};u("fd_filestat_set_times",z.prototype.ta);z.prototype.ua=function(){return 0};u("fd_pread",z.prototype.ua);z.prototype.va=function(a,b){if(!this.fd[a]&&!this.fd[a-1])return 8;var {path:c}=this.fd[a];a=this.g();c=K.encode(c);(new Uint8Array(a.buffer)).set(c,b);return 0};u("fd_prestat_dir_name",z.prototype.va);
z.prototype.wa=function(a,b){if(!this.fd[a])return 8;var {path:c}=this.fd[a];a=this.g();c=K.encode(c);a.setUint8(b,0);a.setUint32(b+4,c.byteLength,!0);return 0};u("fd_prestat_get",z.prototype.wa);z.prototype.xa=function(a,b,c,d,e){console.log("fd_pwrite",a,b,c,d,e,arguments);return 0};u("fd_pwrite",z.prototype.xa);
z.prototype.ya=function(a,b,c,d){const e=this.fd[a]&&this.fd[a].buffers;var g=e.reduce((t,r)=>t+r.length,0);const f=this.g();if(e&&0!==e.length){var h=Number(this.fd[a].seekPos),l=0,k=!1;if(h>=g)return-1;for(g=0;g<c;g++){var n=b+8*g;const t=f.getUint32(n,!0);n=f.getUint32(n+4,!0);k||(l+=n,Array.from({length:n},(r,p)=>p).reduce((r,p)=>{if(k)return r;const [A,F]=r;let E=r=0,w=!1,v=0,y;if(0===p)for(;!w;)y=e[r]?e[r].byteLength:0,v<=h&&y+v>h?(w=!0,E=h-v):(v+=y,r+=1);else r=A,E=F;e[r]?(f.setUint8(t+p,e[r][E]),
E+1>=e[r].byteLength?(r=A+1,E=0):E+=1):(f.setUint8(t+p,0),h+=p,k=!0);return[r,E]},[0,0]),k||(h+=n))}this.fd[a].seekPos=q.BigInt(h);f.setUint32(d,l,!0);return 0}console.error("Reading non existent file",a,this.fd[a])};u("fd_read",z.prototype.ya);z.prototype.za=function(){return 0};u("fd_readdir",z.prototype.za);z.prototype.Aa=function(){return 0};u("fd_renumber",z.prototype.Aa);
z.prototype.Ba=function(a,b,c,d){const e=this.g();switch(c){case 1:let g;this.fd[a].seekPos=(null!=(g=this.fd[a].seekPos)?g:q.BigInt(0))+q.BigInt(b);break;case 2:c=(this.fd[a].buffers||[]).reduce((f,h)=>f+h.length,0);this.fd[a].seekPos=BigInt(c)+BigInt(b);break;case 0:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return 0};u("fd_seek",z.prototype.Ba);z.prototype.Ca=function(){return 0};u("fd_sync",z.prototype.Ca);
z.prototype.Da=function(a,b){const c=this.g();this.fd[a].seekPos||(this.fd[a].seekPos=q.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return 0};u("fd_tell",z.prototype.Da);
z.prototype.Ea=function(a,b,c,d){let e=!1;const g=this.g();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].seekPos===q.BigInt(0)&&0<this.fd[a].buffers.length&&(e=!0);let f=0;for(let k=0;k<c;k++){var h=b+8*k,l=g.getUint32(h,!0);h=g.getUint32(h+4,!0);f+=h;l=new Uint8Array(g.buffer,l,h);e?this.fd[a].buffers.unshift(l.slice(0,h)):this.fd[a].buffers.push(l.slice(0,h))}this.fd[a].seekPos+=q.BigInt(f);g.setUint32(d,f,!0);[1,2].includes(a)&&console.log(H.decode(bc(this.fd[a].buffers)));return 0};
u("fd_write",z.prototype.Ea);z.prototype.Fa=function(){return 0};u("path_create_directory",z.prototype.Fa);z.prototype.Ga=function(){return 0};u("path_filestat_get",z.prototype.Ga);z.prototype.Ha=function(){return 0};u("path_filestat_set_times",z.prototype.Ha);z.prototype.Ia=function(){return 0};u("path_link",z.prototype.Ia);
z.prototype.Ja=function(a,b,c,d,e,g,f,h,l){b=this.g();e=(this.fd[a]||{path:"/"}).path;c=new Uint8Array(b.buffer,c,d);c=H.decode(c);const k=S(R($b(3===a?"":e,c)));if(k.startsWith("/..")||"/._"===k||"/.AppleDouble"===k)return 8;(a=Object.values(this.fd).find(n=>n.path===k&&Array.isArray(n.buffers)))?c=a.fd:(c=this.fd.length,this.fd[c]={fd:c});this.fd[c]={...this.fd[c],path:k,type:"file",seekPos:q.BigInt(0),buffers:a?this.fd[c].buffers:[]};b.setUint32(l,c,!0);return 0};u("path_open",z.prototype.Ja);
z.prototype.Ka=function(){return 0};u("path_readlink",z.prototype.Ka);z.prototype.La=function(){return 0};u("path_remove_directory",z.prototype.La);z.prototype.Ma=function(){return 0};u("path_rename",z.prototype.Ma);z.prototype.Na=function(){return 0};u("path_symlink",z.prototype.Na);z.prototype.Oa=function(){return 0};u("path_unlink_file",z.prototype.Oa);z.prototype.Pa=function(){return 0};u("poll_oneoff",z.prototype.Pa);z.prototype.Qa=function(){return 0};u("proc_exit",z.prototype.Qa);
z.prototype.Ra=function(){return 0};u("proc_raise",z.prototype.Ra);z.prototype.Sa=function(){return 0};u("random_get",z.prototype.Sa);z.prototype.Ta=function(){return 0};u("sched_yield",z.prototype.Ta);z.prototype.Ua=function(){return 52};u("sock_recv",z.prototype.Ua);z.prototype.Va=function(){return 52};u("sock_send",z.prototype.Va);z.prototype.Wa=function(){return 52};u("sock_shutdown",z.prototype.Wa);function fc(a,b){return(a=Object.values(a.fd).find(({path:c})=>c===b))&&a.buffers}m=z.prototype;
m.readdir=function(a){const b=(S(R(a))+"/").replace("//","/"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\//g.test(d.replace(b,""))&&c.push(d));return c.map(d=>d.replace(b,"").replace(/^\\//g,"")).filter(d=>!!d)};m.writeFile=function(a,b){const c=S(R(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:q.BigInt(0),buffers:[b]};d&&delete this.fd[d]};m.appendFile=function(a,b){var c=S(R(a));(c=fc(this,c))?c.push(b):console.error(\`Can't append to non-existing file \${a}\`)};
m.readFile=function(a){a=S(R(a));if(a=fc(this,a))return bc(a)};m.unlink=function(a){const b=S(R(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(\`While trying to unlink \${b}, path not found\`)};m.mkdir=function(a){const b=S(R(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(\`mkdir: path \${a} already exists\`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};function T(a){for(;0<a.length;)a.pop()};/*
 zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
function U(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,g,f,h;let l,k;for(l=0;l<b;++l)a[l]>c&&(c=a[l]),a[l]<d&&(d=a[l]);const n=1<<c,t=new Uint32Array(n);e=1;g=0;for(f=2;e<=c;){for(l=0;l<b;++l)if(a[l]===e){h=0;var r=g;for(k=0;k<e;++k)h=h<<1|r&1,r>>=1;r=e<<16|l;for(k=h;k<n;k+=f)t[k]=r;++g}++e;g<<=1;f<<=1}return[t,c,d]};function gc(a,b){this.I=[];this.bufferSize=32768;this.l=this.B=this.j=this.K=0;this.A=new Uint8Array(a);this.Z=!1;this.m=V;this.resize=!1;if(b||!(b={}))b.index&&(this.j=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.m&&(this.m=b.m),b.resize&&(this.resize=b.resize);switch(this.m){case W:this.g=32768;this.i=new Uint8Array(this.bufferSize+33026);break;case V:this.g=0;this.i=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode");}}
var W=0,V=1,hc=new Uint16Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ic=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),jc=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]),kc=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),lc=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),
mc;const nc=new Uint8Array(288);let X,oc;X=0;for(oc=nc.length;X<oc;++X)nc[X]=143>=X?8:255>=X?9:279>=X?7:8;mc=U(nc);var pc;const qc=new Uint8Array(30);let rc,sc;rc=0;for(sc=qc.length;rc<sc;++rc)qc[rc]=5;pc=U(qc);function Y(a,b){let c=a.B,d=a.l;const e=a.A;let g=a.j;if(g+(b-d+7>>3)>=e.length)throw Error("input buffer is broken");for(;d<b;)c|=e[g++]<<d,d+=8;a.B=c>>>b;a.l=d-b;a.j=g;return c&(1<<b)-1}
function tc(a,b){let c=a.B,d=a.l;var e=a.A;let g=a.j;var f=e.length;const h=b[0];for(b=b[1];d<b&&!(g>=f);)c|=e[g++]<<d,d+=8;e=h[c&(1<<b)-1];f=e>>>16;if(f>d)throw Error("invalid code length: "+f);a.B=c>>f;a.l=d-f;a.j=g;return e&65535}
function uc(a,b,c){let d=a.i,e=a.g;a.$=b;const g=d.length-258;var f;let h,l;for(;256!==(f=tc(a,b));)if(256>f)e>=g&&(a.g=e,d=vc(a),e=a.g),d[e++]=f;else for(f-=257,l=ic[f],0<jc[f]&&(l+=Y(a,jc[f])),f=tc(a,c),h=kc[f],0<lc[f]&&(h+=Y(a,lc[f])),e>=g&&(a.g=e,d=vc(a),e=a.g);l--;)d[e]=d[e++-h];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}
function wc(a,b,c){let d=a.i,e=a.g;a.$=b;let g=d.length;var f;let h,l;for(;256!==(f=tc(a,b));)if(256>f)e>=g&&(d=xc(a),g=d.length),d[e++]=f;else for(f-=257,l=ic[f],0<jc[f]&&(l+=Y(a,jc[f])),f=tc(a,c),h=kc[f],0<lc[f]&&(h+=Y(a,lc[f])),e+l>g&&(d=xc(a),g=d.length);l--;)d[e]=d[e++-h];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}function vc(a){const b=new Uint8Array(a.g-32768),c=a.g-32768,d=a.i;b.set(d.subarray(32768,b.length));a.I.push(b);a.K+=b.length;d.set(d.subarray(c,c+32768));a.g=32768;return d}
function xc(a,b){let c=Math.trunc(a.A.length/a.j+1);const d=a.A,e=a.i;b&&("number"===typeof b.P&&(c=b.P),"number"===typeof b.ba&&(c+=b.ba));2>c?(b=(d.length-a.j)/a.$[2],b=Math.trunc(b/2*258),b=b<e.length?e.length+b:e.length<<1):b=e.length*c;b=new Uint8Array(b);b.set(e);a.i=b;return a.i};function yc(a){var b;this.j=a;this.g=0;if(b||!(b={}))b.index&&(this.g=b.index),b.verify&&(this.verify=b.verify);const c=a[this.g++],d=a[this.g++];switch(c&15){case 8:this.method=8;break;default:throw Error("unsupported compression method");}if(0!==((c<<8)+d)%31)throw Error("invalid fcheck flag:"+((c<<8)+d)%31);if(d&32)throw Error("fdict flag is not supported");this.i=new gc(a,{index:this.g,bufferSize:b.bufferSize,m:b.m,resize:b.resize})}
function zc(a){var b=a.j,c;a:{for(c=a.i;!c.Z;){var d=void 0,e=void 0,g=void 0,f=void 0,h=c,l=Y(h,3);l&1&&(h.Z=!0);l>>>=1;switch(l){case 0:l=h.A;e=h.j;var k=h.i,n=h.g;g=l.length;d=k.length;h.B=0;h.l=0;if(e+1>=g)throw Error("invalid uncompressed block header: LEN");f=l[e++]|l[e++]<<8;if(e+1>=g)throw Error("invalid uncompressed block header: NLEN");g=l[e++]|l[e++]<<8;if(f===~g)throw Error("invalid uncompressed block header: length verify");if(e+f>l.length)throw Error("input buffer is broken");switch(h.m){case W:for(;n+
f>k.length;)g=d-n,f-=g,k.set(l.subarray(e,e+g),n),n+=g,e+=g,h.g=n,k=vc(h),n=h.g;break;case V:for(;n+f>k.length;)k=xc(h,{P:2});break;default:throw Error("invalid inflate mode");}k.set(l.subarray(e,e+f),n);h.j=e+f;h.g=n+f;h.i=k;break;case 1:switch(h.m){case V:wc(h,mc,pc);break;case W:uc(h,mc,pc);break;default:throw Error("invalid inflate mode");}break;case 2:l=Y(h,5)+257;d=Y(h,5)+1;k=Y(h,4)+4;n=new Uint8Array(hc.length);for(e=0;e<k;++e)n[hc[e]]=Y(h,3);n=U(n);k=new Uint8Array(l+d);e=0;for(d=l+d;e<d;)switch(g=
tc(h,n),g){case 16:for(g=3+Y(h,2);g--;)k[e++]=f;break;case 17:for(g=3+Y(h,3);g--;)k[e++]=0;f=0;break;case 18:for(g=11+Y(h,7);g--;)k[e++]=0;f=0;break;default:f=k[e++]=g}f=U(k.subarray(0,l));l=U(k.subarray(l));switch(h.m){case V:wc(h,f,l);break;case W:uc(h,f,l);break;default:throw Error("invalid inflate mode");}break;default:throw Error("unknown BTYPE: "+l);}}switch(c.m){case W:{h=0;f=c.i;l=c.I;k=new Uint8Array(c.K+(c.g-32768));let t;if(0===l.length)c=c.i.subarray(32768,c.g);else{n=0;for(d=l.length;n<
d;++n)for(e=l[n],g=0,t=e.length;g<t;++g)k[h++]=e[g];n=32768;for(d=c.g;n<d;++n)k[h++]=f[n];c.I=[];c.buffer=k;c=c.buffer}}break a;case V:f=c.g;c.resize?(h=new Uint8Array(f),h.set(c.i.subarray(0,f))):h=c.i.subarray(0,f);c.buffer=h;c=c.buffer;break a;default:throw Error("invalid inflate mode");}}a.g=a.i.j;if(a.verify){a=(b[a.g++]<<24|b[a.g++]<<16|b[a.g++]<<8|b[a.g++])>>>0;b=c;if("string"===typeof b){b=[...b];h=0;for(f=b.length;h<f;h++)b[h]=(b[h].charPointAt(0)&255)>>>0;b=new Uint8Array([b])}h=1;f=0;l=
b.length;for(k=0;0<l;){e=1024<l?1024:l;l-=e;do h+=b[k++],f+=h;while(--e);h%=65521;f%=65521}if(a!==(f<<16|h)>>>0)throw Error("invalid adler-32 checksum");}return c};const Ac=({memory:a,messagePort:b,X:c})=>function(d,e,g,f){if(a){d=new Uint8Array(a.buffer,f,g);d=H.decode(d);var h=/\\n$/g.test(d);e=/^\\n/g.test(d);var l=d.split("\\n").filter(n=>0<n.length),k=[];if(0===l.length&&h||e)k.push(c.join("")),T(c);l.forEach((n,t)=>{t+1===l.length?h?0===t?(k.push(c.join("")+n),T(c)):k.push(n):c.push(n):0===t?(k.push(c.join("")+n),T(c)):k.push(n)});k.forEach(n=>{n.replace(/(\\r\\n|\\n|\\r)/gm,"")&&b.J({log:n})})}},Bc=a=>{if(a&&"object"===typeof a&&"object"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||
a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,"A csound plugin turns out to be neither a plugin, opcode or module.\\nPerhaps csdl.h or module.h wasn't imported correctly?");return!1}console.error("A csound plugin didn't export __wasm_call_ctors.\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors");return!1}console.error("Error instantiating a csound plugin, instance and/or export is missing!");return!1},Cc=a=>{function b(){let k=
0,n=1;for(;;){const t=a[c++];k+=(t&127)*n;n*=128;if(!(t&128))break}return k}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error("Wasm magic number is missing!");if(0!==a[8])return sa(),"static";let c=9;const d=b();c++;c++;c++;c++;c++;c++;c++;c++;c+=3;const e=b(),g=b(),f=b(),h=b(),l=b();return{kb:d,H:e,T:g,ib:l,Y:f,lb:h}},Dc=async({Xa:a,h:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=cc(b,d);e.u=e.u||
{};e.u.eb=()=>0;e.u.memory=a;e.u.fb=Ac({memory:e.u.memory,X:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.memory=a;b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};
async function Ec({Ya:a,withPlugins:b=[],messagePort:c}){var d={};const e=new z;a=new Uint8Array(a);a=zc(new yc(a));var g=Cc(a);if("static"===g)return await Dc({messagePort:c,Xa:a,ob:d,h:e});d=g.H;const f=g.T;g=g.Y;b=await b.reduce(async(w,v)=>{w=await w;let y,C;try{y=new Uint8Array(v),C=Cc(y)}catch(J){console.error("Error in plugin",J)}C&&w.push({R:C,Za:y});return w},[]);d=Math.ceil((d+f)/65536);var h=Math.ceil(b.reduce((w,{R:v})=>"static"===v?0:w+(v.H+f),0)/65536);h=d+h+2048;const l=new WebAssembly.Memory({initial:h,
maximum:16384}),k=new WebAssembly.Table({initial:g+1,element:"anyfunc"});e.memory=l;const n=new WebAssembly.Global({value:"i32",mutable:!0},65536*h);g=new WebAssembly.Global({value:"i32",mutable:!0},65536*h);h=new WebAssembly.Global({value:"i32",mutable:!1},2048);const t=new WebAssembly.Global({value:"i32",mutable:!1},1),r=new WebAssembly.Global({value:"i32",mutable:!0},0);a=await WebAssembly.compile(a);const p=cc(e,a);let A=[],F=d;p.env=p.env||{};p.env.memory=l;p.env.__indirect_function_table=k;
p.env.__stack_pointer=n;p.env.__memory_base=h;p.env.__table_base=t;p.env.csoundLoadModules=w=>{A.forEach(v=>{if(void 0===E)console.error("csound-wasm internal: timing problem detected!");else{var y=E;if(v.exports.csoundModuleInit){var C=new WebAssembly.Global({value:"i32",mutable:!0},0),J=new WebAssembly.Global({value:"i32",mutable:!0},0),I=new WebAssembly.Global({value:"i32",mutable:!0},0);const ba=new WebAssembly.Global({value:"i32",mutable:!0},0);let x=k.length;"function"===typeof v.exports.csoundModuleCreate&&
(k.grow(1),C.value=x,k.set(x,v.exports.csoundModuleCreate),x+=1);"function"===typeof v.exports.csoundModuleInit&&(k.grow(1),J.value=x,k.set(x,v.exports.csoundModuleInit),x+=1);"function"===typeof v.exports.csoundModuleDestroy&&(k.grow(1),I.value=x,k.set(x,v.exports.csoundModuleDestroy),x+=1);"function"===typeof v.exports.csoundModuleErrorCodeToString&&(k.grow(1),ba.value=x,k.set(x,v.exports.csoundModuleErrorCodeToString));y.exports.csoundWasiLoadPlugin(w,C,J,I,ba)}else v.exports.csound_opcode_init||
v.exports.csound_fgen_init?(C=new WebAssembly.Global({value:"i32",mutable:!0},0),J=new WebAssembly.Global({value:"i32",mutable:!0},0),I=k.length,"function"===typeof v.exports.csound_opcode_init&&(C.value=I,k.grow(1),k.set(I,v.exports.csound_opcode_init),I+=1),"function"===typeof v.exports.csound_fgen_init&&(J.value=I,k.grow(1),k.set(I,v.exports.csound_fgen_init)),y.exports.csoundWasiLoadOpcodeLibrary(w,J,C)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")}});
return 0};p.env.csoundLoadExternals=()=>{};p.env._ZTH5errno=function(){};p.env.csoundWasiJsMessageCallback=Ac({memory:l,messagePort:c,X:[]});p.env.printDebugCallback=(w,v)=>{w=new Uint8Array(l.buffer,w,v);w=H.decode(w);console.log(w)};p["GOT.mem"]=p["GOT.mem"]||{};p["GOT.mem"].__heap_base=g;p["GOT.func"]=p["GOT.func"]||{};const E=await WebAssembly.instantiate(a,p);c=Object.assign({},E.exports);a={};c.memory=l;a.exports=c;A=await b.reduce(async(w,{R:v,Za:y})=>{w=await w;try{const C=v.H,J=v.T,I=v.Y,
ba=await WebAssembly.compile(y),x=cc(e,ba),Hc=new WebAssembly.Global({value:"i32",mutable:!1},65536*F);k.grow(I);x.env=Object.assign({},x.env);x.env.memory=l;x.env.__indirect_function_table=k;x.env.__memory_base=Hc;x.env.__stack_pointer=n;x.env.__table_base=t;x.env.csoundLoadModules=r;delete x.env.csoundWasiJsMessageCallback;F+=Math.ceil((C+J)/65536);const ya=await WebAssembly.instantiate(ba,x);Bc(ya)&&(ya.exports.__wasm_call_ctors(),w.push(ya))}catch(C){console.error("Error while compiling csound-plugin",
C)}return w},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]};let Fc,Gc=()=>{};
const Z=[],Ic=(a,b)=>{for(let c=0;c<b;++c)a.buffers.push(new Float64Array(16384))},Jc=({G:a,L:b,M:c,ea:d,inputChannelCount:e})=>g=>{const f=g.csound;g=a.csoundGetInputName(f).includes("adc");const h=a.csoundGetNchnls(f),l=0<e?e:g?a.csoundGetNchnlsInput(f):0,k=a.csoundGet0dBFS(f);g=a.csoundGetSpout(f);const n=a.csoundGetKsmps(f);let t=new Float64Array(b.h.memory.buffer,a.csoundGetSpin(f),n*l),r=new Float64Array(b.h.memory.buffer,g,n*h),p=0,A=0;c.o("realtimePerformanceStarted");Gc=({V:F})=>{const E=
ua(h,F),w=0<d.buffers.length&&d.s>=F;0<Z.length&&(Z.forEach(()=>{}),T(Z));for(let v=0;v<F;v++){A=(A+1)%n;if("realtimePerformanceEnded"===c.C)return 0===p&&(p=a.csoundPerformKsmps(f)),c.o("realtimePerformanceEnded"),Gc=()=>{},T(Z),d.port=void 0,{D:v};if(0===A&&0===p&&(p=a.csoundPerformKsmps(f),0!==p))return c.o("realtimePerformanceEnded"),Gc=()=>{},T(Z),d.port=void 0,{D:v};0===t.length&&(t=new Float64Array(b.h.memory.buffer,a.csoundGetSpin(f),n*l));0===r.length&&(r=new Float64Array(b.h.memory.buffer,
a.csoundGetSpout(f),n*h));E.forEach((y,C)=>{0<r.length&&(y[v]=(r[A*h+C]||0)/k)});if(w)for(let y=0;y<l;y++)t[A*l+y]=(d.buffers[y][v+d.F%16384]||0)*k}w&&(d.s-=F,d.F+=F%16384);return{fa:E,D:0}}},Kc=({port:a})=>{G()();const b=new qa;b.port=a;b.J=c=>{a.postMessage({log:c})};b.o=c=>{b.C=c;const d={};d.playStateChange=c;a.postMessage(d)};b.aa=!0;return b},Lc=(a,b)=>{G()();a.addEventListener("message",c=>{var d="realtimePerformanceEnded"!==b.C?Gc({V:c.data.numFrames}):void 0;const {D:e=0,fa:g}=d||{};d={};
d.numFrames=c.data.V-e;d.audioPacket=g;a.postMessage({...d,...c.data})});a.start()},Mc=({port:a})=>{G()();const b={s:0,buffers:[],F:0,v:0,port:a};b.port.addEventListener("message",({data:c})=>{0===b.buffers.length&&Ic(b,c.length);b.buffers.forEach((d,e)=>{d.set(c[e],b.v)});b.v+=c[0].length;b.s+=c[0].length;16384<=b.v&&(b.v=0)});b.port.start();return b},Nc=a=>{G()();a.addEventListener("message",({data:b})=>{Z.push(b)});a.start()};
ha({initialize:async a=>{var b=a.audioInputPort;const c=a.inputChannelCount,d=a.messagePort,e=a.outputChannelCount,g=a.requestPort,f=a.rtmidiPort,h=a.wasmDataURI,l=a.wasmTransformerDataURI;a=a.withPlugins||[];G()();const k=Kc({port:d}),n=Mc({port:b});Lc(g,k);Nc(f);const [t,r]=await Ec({Ya:h,pb:l,withPlugins:a,messagePort:k});t.h=r;const p=Xb(t);Fc=new Map(Object.entries({...p,csoundStart:(A,F)=>ta(k,p,Jc({ea:n,inputChannelCount:c,G:p,outputChannelCount:e,L:t,h:r,M:k}),va({inputChannelCount:c,G:p,
outputChannelCount:e,L:t,M:k}))(F),L:t}));b=p.csoundCreate();k.port.addEventListener("message",A=>{A.data&&A.data.U&&("realtimePerformanceEnded"===A.data.U&&k.o("realtimePerformanceEnded"),k.C=A.data.U)});k.port.start();return b},callUncloned:async(a,b)=>(a=Fc.get(a))&&a.apply({},b||[])});}).call(this);
//# sourceMappingURL=__compiled.vanilla.worker.js.map
`]))),this.l.Y.addEventListener("message",Xs(this)),this.l.J.addEventListener("message",Xs(this)),this.l.Y.start();const r=Vl(this.g);this.h=r;const i={};i.wasmDataURI=e,i.messagePort=this.l.g,i.requestPort=this.l.u,i.audioInputPort=this.l.o,i.rtmidiPort=this.l.B,i.sampleRate=this.sampleRate,i.inputChannelCount=this.inputChannelCount,i.outputChannelCount=this.outputChannelCount,i.withPlugins=n,this.D=await r.initialize(Ll(i,[e,this.l.g,this.l.u,this.l.o,this.l.B])),this.i.pause=this.o.bind(this),this.i.resume=this.u.bind(this),this.i.terminateInstance=this.H.bind(this),this.i.getAudioContext=async()=>this.s.audioContext,this.i.getNode=async()=>{const o=this.s.P;return o||await new Promise(s=>{this.i.once("onAudioNodeCreated",s)})},this.i=this.m.o(this.i),this.i.enableAudioInput=()=>console.warn("enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true"),this.i.addListener("message",console.log);for(const o of Object.keys(Fr)){const s=Fr[o],a=so(r,this.D,o,this.v);switch(o){case"csoundCreate":break;case"csoundStart":n=async function(){if(mi(this.j,"start"))return-1;this.j.la();var l={};return l.csound=this.D,l=await a(l),await this.j.ha(),l},n.toString=()=>s.toString(),this.i.start=n.bind(this);break;case"csoundStop":n=async function(){if(mi(this.j,"stop"))return-1;this.j.X();const l={};return l.newPlayState=this.v==="renderStarted"?"renderEnded":"realtimePerformanceEnded",this.l.Y.postMessage(l),await this.j.na(),0},this.i.stop=n.bind(this),n.toString=s.toString;break;case"csoundReset":n=async()=>{if(this.v){if(mi(this.j,"reset"))return-1;Wc.has(this.v)&&await this.i.stop();const l=await a([]);return this.M||(await this.s.H(),delete this.s.audioContext),this.l.C(),l}},this.i.reset=n.bind(this),n.toString=s.toString;break;case"fs":this.i.fs={},Object.keys(s).forEach(l=>{const c=so(r,this.D,l,this.v);c.toString=s[l].toString,this.i.fs[l]=c});break;default:a.toString=s.toString,this.i[Vu(o)]=a}}ns()()}}const n5="auxclick click contextmenu dblclick keydown keyup mousedown mouseup touchend".split(" "),r5=[0,4096,0,0,0,0,-1,-1,-1,-1,0,128,0,0,0,0,0,0,0,0];class r6{constructor({audioContext:e,s:n,M:r,inputChannelCount:i,outputChannelCount:o}){this.o=this.h=this.ia=this.v=this.D=void 0,this.Ba=!0,this.l=new Ix,this.j=new Nm,this.m=new Vm,n.l=this.l,this.M=r,this.s=n,this.s.onPlayStateChange=this.s.onPlayStateChange.bind(n),this.i={},this.C=0,this.g={},this.O=new SharedArrayBuffer(r5.length*Int32Array.BYTES_PER_ELEMENT),this.G=new Int32Array(this.O),r&&Atomics.store(this.G,6,e.sampleRate),i&&Atomics.store(this.G,9,i),o&&Atomics.store(this.G,8,o),this.Ea=new SharedArrayBuffer(524288*Float64Array.BYTES_PER_ELEMENT),this.Fa=new SharedArrayBuffer(524288*Float64Array.BYTES_PER_ELEMENT),this.V=new SharedArrayBuffer(3072*Int32Array.BYTES_PER_ELEMENT),this.u=new Int32Array(this.V),this.onPlayStateChange=this.onPlayStateChange.bind(this),this.B=this.B.bind(this),Bt()()}async H(){this.o&&(this.o.terminate(),delete this.o),this.s&&this.s.H&&(await this.s.H(),delete this.s.H),this.h&&(this.h[Ls](),delete this.h),this.m&&this.m.H(),Object.keys(this.i).forEach(e=>delete this.i[e])}get L(){return this.i}$({data:[e,n,r]}){var i=Atomics.load(this.G,18);const o=Atomics.load(this.G,17);i=(3*i+o)%1024,Atomics.store(this.u,i,e),Atomics.store(this.u,i+1,n),Atomics.store(this.u,i+2,r),Atomics.add(this.G,18,1)}async R(){return mi(this.j,"pause")?-1:(this.j.ia(),Atomics.store(this.G,4,1),await Wz(this.j),this.onPlayStateChange("realtimePerformancePaused"),0)}async T(){Atomics.load(this.G,4)===1&&Atomics.load(this.G,5)!==1&&Atomics.load(this.G,2)===1&&(Atomics.store(this.G,4,0),Atomics.notify(this.G,4),this.onPlayStateChange("realtimePerformanceResumed"))}async onPlayStateChange(e){if(this===void 0)console.log("Failed to announce playstatechange",e);else if(this.v=e,this.m&&e){switch(e){case"realtimePerformanceStarted":Bt()();try{await this.B()}catch(n){console.error(n)}break;case"realtimePerformanceEnded":this.j.X(),Object.values(this.g).forEach(({Aa:n,za:r,Pa:i})=>this.h.callUncloned(r,n).then(i)),this.g={},Bt()(),r5.forEach((n,r)=>{Atomics.store(this.G,r,n)});break;case"renderStarted":this.m.C(),this.j.U();break;case"renderEnded":Bt()(),this.m.B(),this.j&&this.j.B()}try{await this.s.onPlayStateChange(e)}catch(n){console.error(n)}}}async B(){Bt()();const e=Atomics.load(this.G,8),n=Atomics.load(this.G,9);this.s.ba=Atomics.load(this.G,10),this.s.pa=Atomics.load(this.G,16);const r=Atomics.load(this.G,7),i=Atomics.load(this.G,6);this.s.qa=r,this.s.sampleRate=i,this.s.Zb=n,this.s.da=e}async J({Z:e,withPlugins:n}){n&&0<n.length&&(n=await Em(n)),Bt()();var r=new Worker((window.URL||window.webkitURL).createObjectURL(new Blob([`(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var m=this||self;function r(a,b){u.prototype[a]=b};const ba=Symbol("Comlink.proxy"),ca=Symbol("Comlink.endpoint"),da=Symbol("Comlink.releaseProxy"),ea=Symbol("Comlink.thrown"),fa=a=>"object"==typeof a&&null!==a||"function"==typeof a,ja=new Map([["proxy",{M:a=>fa(a)&&a[ba],T(a){const {port1:b,port2:c}=new MessageChannel;return ha(a,b),[c,[c]]},N:a=>(a.start(),ia(a))}],["throw",{M:a=>fa(a)&&ea in a,T({value:a}){let b;return b=a instanceof Error?{R:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{R:!1,value:a},[b,[]]},N(a){if(a.R)throw Object.assign(Error(a.value.message),
a.value);throw a.value;}}]]);
function ha(a,b=self){b.addEventListener("message",function e(d){if(d&&d.data){var h=d.data.argumentList,{id:f,type:g,path:k}=Object.assign({path:[]},d.data);h=(h||[]).map(B);try{const n=k.slice(0,-1).reduce((p,t)=>p[t],a),q=k.reduce((p,t)=>p[t],a);switch(g){case "GET":var l=q;break;case "SET":n[k.slice(-1)[0]]=B(d.data.value);l=!0;break;case "APPLY":l=q.apply(n,h);break;case "CONSTRUCT":l=Object.assign(new q(...h),{[ba]:!0});break;case "ENDPOINT":const {port1:p,port2:t}=new MessageChannel;ha(a,t);
l=ka(p,[p]);break;case "RELEASE":l=void 0;break;default:return}}catch(n){l={value:n,[ea]:0}}Promise.resolve(l).catch(n=>({value:n,[ea]:0})).then(n=>{const [q,p]=la(n);n={...q};n.id=f;b.postMessage(n,p);"RELEASE"===g&&(b.removeEventListener("message",e),ma(b))})}});b.start&&b.start()}function ma(a){"MessagePort"===a.constructor.name&&a.close()}
function ia(a){return function h(c,d=[],e=function(){}){let f=!1;const g=new Proxy(e,{get(k,l){if(na(f),l===da)return()=>C(c,{type:"RELEASE",path:d.map(n=>n.toString())}).then(()=>{ma(c);f=!0});if("then"===l){if(0===d.length)return{then:()=>g};k=C(c,{type:"GET",path:d.map(n=>n.toString())}).then(B);return k.then.bind(k)}return h(c,[...d,l])},set(k,l,n){na(f);const [q,p]=la(n);return C(c,{type:"SET",path:[...d,l].map(t=>t.toString()),value:q},p).then(B)},apply(k,l,n){na(f);k=d[d.length-1];if(k===ca)return C(c,
{type:"ENDPOINT"}).then(B);if("bind"===k)return h(c,d.slice(0,-1));const [q,p]=oa(n);n={type:"APPLY"};n.path=d.map(t=>t.toString());n.argumentList=q;return C(c,n,p).then(B)},construct(k,l){na(f);const [n,q]=oa(l);k={type:"CONSTRUCT"};k.path=d.map(p=>p.toString());k.argumentList=n;return C(c,k,q).then(B)}});return g}(a,[],void 0)}function na(a){if(a)throw Error("Proxy has been released and is not useable");}
function oa(a){a=a.map(la);const b=(c=a.map(d=>d[1]),Array.prototype.concat.apply([],c));return[a.map(d=>d[0]),b];var c}const pa=new WeakMap;function ka(a,b){return pa.set(a,b),a}function la(a){for(const [b,c]of ja)if(c.M(a)){const [d,e]=c.T(a);return[{type:"HANDLER",name:b,value:d},e]}return[{type:"RAW",value:a},pa.get(a)||[]]}function B(a){switch(a.type){case "HANDLER":return ja.get(a.name).N(a.value);case "RAW":return a.value}}
function C(a,b,c){return new Promise(d=>{const e=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");a.addEventListener("message",function g(f){f.data&&f.data.id&&f.data.id===e&&(a.removeEventListener("message",g),d(f.data))});a.start&&a.start();b.id=e;a.postMessage(b,c)})};function ra(){}ra.prototype.g=!1;ra.prototype.port=void 0;ra.prototype.F=()=>{};ra.prototype.o=()=>{};const sa=a=>()=>a.exports.csoundCreateWasi();sa.toString=()=>"create = async () => undefined;";const ta=a=>b=>a.exports.csoundDestroy(b);ta.toString=()=>"destroy = async () => undefined;";const ua=a=>()=>a.exports.csoundGetAPIVersion();ua.toString=()=>"getAPIVersion = async () => Number;";const va=a=>()=>a.exports.csoundGetVersion();va.toString=()=>"getVersion = async () => Number;";const wa=a=>(b,c)=>a.exports.csoundInitialize(c);wa.toString=()=>"initialize = async () => Number;";const I=new TextDecoder("utf8"),xa=new TextEncoder("utf8");const J=a=>{const b=a.indexOf("\\x00");return-1<b?a.substr(0,b):a};const L=(a,b)=>{a.exports.freeStringMem(b)},O=(a,b)=>{if("string"!==typeof b)console.error("Expected string but got",typeof b);else{b=xa.encode(b);var c=a.exports.allocStringMem(b.length);(new Uint8Array(a.h.memory.buffer,c,b.length+1)).set(b);return c}};const ya=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundParseOrc(b,c);L(a,c);return b};ya.toString=()=>"parseOrc = async (orchestra) => Object;";const za=a=>(b,c)=>a.exports.csoundCompileTree(b,c);za.toString=()=>"compileTree = async (tree) => Number;";const Aa=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundCompileOrc(b,c);L(a,c);return b};Aa.toString=()=>"compileOrc = async (orchestra) => Number;";const Ba=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundEvalCode(b,c);L(a,c);return b};Ba.toString=()=>"csoundEvalCode = async (orchestra) => Number;";
const Ca=a=>b=>a.exports.csoundStartWasi(b);Ca.toString=()=>"start = async () => Number;";const Da=a=>(b,c)=>{c=O(a,c);let d;try{d=a.exports.csoundCompileCsd(b,c)}catch(e){console.error(e)}L(a,c);return d};Da.toString=()=>"compileCsd = async (path) => Number;";const Ea=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundCompileCsdText(b,c);L(a,c);return b};Ea.toString=()=>"compileCsdText = async (csoundDocument) => Number;";const Fa=a=>b=>a.exports.csoundPerform(b);Fa.toString=()=>"perform = async () => Number;";
const Ga=a=>b=>a.exports.csoundPerformKsmpsWasi(b);Ga.toString=()=>"performKsmps = async (csound) => Number;";const Ha=a=>b=>a.exports.csoundPerformBuffer(b);Ha.toString=()=>"performBuffer = async (csound) => Number;";const Ka=a=>b=>a.exports.csoundStop(b);Ka.toString=()=>"stop = async () => undefined;";const La=a=>b=>a.exports.csoundCleanup(b);La.toString=()=>"cleanup = async () => Number;";const Ma=a=>b=>a.exports.csoundResetWasi(b);Ma.toString=()=>"reset = async () => Number;";const Na=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths","int"],["number_of_threads",
"int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],Oa=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module","char",64],["isOutput","int"]],Pa=[["type","int"],["lexme",
"ptr"],["value","int"],["fvalue","double"],["optype","ptr"],["next","ptr"]],Qa=[["type","int"],["value","ptr"],["rate","int"],["len","int"],["line","int"],["locn","uint64"],["left","ptr"],["right","ptr"],["next","ptr"],["markup","ptr"]];const Ra={eb:4,kb:8,Va:8,char:1,cb:8,gb:4,lb:8},P=a=>a?a.reduce((b,[,c])=>Ra[c]?Ra[c]+b:P({Xa:Qa,Wa:Pa}[c])+b,0):0;P(Qa);P(Pa);P(Na);const Sa=P(Oa);const Ta=(a,b)=>{[a]=a.reduce(([c,d],[e,h,...f])=>{f="char"===h?Ra[h]*f[0]:Ra[h];h="char"===h?J(I.decode(b.subarray(d,f)))||"":b[d];c[e]=h;return[c,d+f]},[{},0]);return a};const Ua=a=>b=>a.exports.csoundGetSr(b);Ua.toString=()=>"getSr = async () => Number;";const Va=a=>b=>a.exports.csoundGetKr(b);Va.toString=()=>"getKr = async () => Number;";const Wa=a=>b=>a.exports.csoundGetKsmps(b);Wa.toString=()=>"getKsmps = async () => Number;";const Xa=a=>b=>a.exports.csoundGetNchnls(b);Xa.toString=()=>"getNchnls = async () => Number;";const Ya=a=>b=>a.exports.csoundGetNchnlsInput(b);Ya.toString=()=>"getNchnlsInput = async () => Number;";const Za=a=>b=>a.exports.csoundGet0dBFS(b);
Za.toString=()=>"get0dBFS = async () => Number;";const $a=a=>b=>a.exports.csoundGetA4(b);$a.toString=()=>"getA4 = async () => Number;";const ab=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);ab.toString=()=>"getCurrentTimeSamples = async () => Number;";const bb=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);bb.toString=()=>"getSizeOfMYFLT = async () => Number;";const cb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundSetOption(b,c);L(a,c);return b};cb.toString=()=>"setOption = async (option) => Number;";
const db=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};db.toString=()=>"setParams = async (csoundParams) => undefined;";const eb=a=>b=>{var c=a.h.memory.buffer;const d=P(Na),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=Ta(Na,c);a.exports.freeCsoundParams(e);return b};eb.toString=()=>"getParams = async () => CSOUND_PARAMS;";const fb=a=>b=>a.exports.csoundGetDebug(b);fb.toString=()=>"getDebug = async () => Number;";
const gb=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};gb.toString=()=>"setDebug = async (number) => undefined;";const hb=a=>b=>a.exports.csoundGetInputBufferSize(b);hb.toString=()=>"getInputBufferSize = async () => Number;";const ib=a=>b=>a.exports.csoundGetOutputBufferSize(b);ib.toString=()=>"getOutputBufferSize = async () => Number;";const jb=a=>b=>a.exports.csoundGetInputBuffer(b);jb.toString=()=>"getInputBuffer = async () => Number;";const kb=a=>b=>a.exports.csoundGetOutputBuffer(b);kb.toString=()=>"getOutputBuffer = async () => Number;";const lb=a=>b=>a.exports.csoundGetSpin(b);lb.toString=()=>"getSpin = async (csound) => Number;";
const mb=a=>b=>a.exports.csoundGetSpout(b);mb.toString=()=>"getSpout = async () => Number;";const nb=a=>{const b=[];for(let c=0;c<a;c++)b.push(c);return b};const ob=a=>(b,c)=>{const d=a.h.memory.buffer,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const h=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,h,c?1:0);const f=new Uint8Array(d,h,Sa*e);b=nb(e).map(g=>Ta(Oa,f.subarray(g*Sa,Sa)));a.exports.freeCsMidiDeviceStruct(h);return b};ob.toString=()=>"getMIDIDevList = async (isOutput) => Object;";
const pb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return J(I.decode(c))||""};pb.toString=()=>"getRtMidiName = async () => String;";const qb=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,c,d,e)};qb.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";const rb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundInputMessage(b,c);L(a,c);return b};rb.toString=()=>"inputMessage = async (scoreEvent) => Number;";const sb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundInputMessageAsync(b,c);L(a,c);return b};sb.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";const tb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);L(a,c);return b};tb.toString=()=>"getControlChannel = async (channelName) => Number;";
const ub=a=>(b,c,d)=>{c=O(a,c);a.exports.csoundSetControlChannel(b,c,d);L(a,c)};ub.toString=()=>"setControlChannel = async (channelName, value) => void;";const vb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);var d=new Uint8Array(a.h.memory.buffer,b);d=I.decode(d);d=J(d);L(a,c);L(a,b);return d};vb.toString=()=>"getStringChannel = async (channelName) => String;";const wb=a=>(b,c,d)=>{c=O(a,c);d=O(a,d);a.exports.csoundSetStringChannel(b,c,d);L(a,c);L(a,d)};wb.toString=()=>"setStringChannel = async (channelName, value) => void;";const xb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return J(I.decode(c))||""};xb.toString=()=>"getOutputName = async () => String;";const yb=a=>b=>{var c=a.h.memory.buffer;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return J(I.decode(c))||""};yb.toString=()=>"getInputName = async (csound) => String;";const zb=a=>(b,c,d)=>{c=O(a,c);d=O(a,d);b=a.exports.csoundAppendEnv(b,c,d);L(a,c);L(a,d);return b};zb.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const Ab=a=>b=>a.exports.csoundIsScorePending(b);Ab.toString=()=>"isScorePending = async () => Number;";const Bb=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);Bb.toString=()=>"setScorePending = async (pending) => Number;";const Cb=a=>(b,c)=>{c=O(a,c);b=a.exports.csoundReadScore(b,c);L(a,c);return b};Cb.toString=()=>"readScore = async (score) => Number;";const Db=a=>b=>a.exports.csoundGetScoreTime(b);Db.toString=()=>"getScoreTime = async () => Number;";const Eb=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);
Eb.toString=()=>"getScoreOffsetSeconds = async () => Number;";const Fb=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);Fb.toString=()=>"setScoreOffsetSeconds = async () => Number;";const Gb=a=>b=>a.exports.csoundRewindScore(b);Gb.toString=()=>"rewindScore = async () => undefined;";const Hb=a=>(b,c)=>a.exports.csoundTableLength(b,c);Hb.toString=()=>"tableLength = async (tableNum) => Number;";const Ib=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);Ib.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const Jb=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);Jb.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";
const Kb=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.h.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};Kb.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";
const Lb=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);b=new Float64Array(a.h.memory.buffer,e,d);c=new Float64Array(b.length);for(d=0;d<b.length;d++)c[d]=b[d];a.exports.freeFloatArrayMem(e);return c}};Lb.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";Lb.toString=Lb.toString;
const Mb=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);b=new Float64Array(a.h.memory.buffer,d,1024);a.exports.freeFloatArrayMem(d);return b};Mb.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";const Nb=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);Nb.toString=()=>"isNamedGEN = async (tableNum) => number;";
const Ob=a=>(b,c)=>{const d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);b=new Uint8Array(a.h.memory.buffer,e,d);return I.decode(b)}};Ob.toString=()=>"getNamedGEN = async (tableNum) => ?string;";function Pb(a){return(b,c,d)=>{b="string"===typeof d?xa.encode(d):d;a.h.writeFile(c,b)}}Pb.toString=()=>"async (path, data) => void";function Qb(a){return(b,c,d)=>{b="string"===typeof d?xa.encode(d):d;a.h.appendFile(c,b)}}Qb.toString=()=>"async (path, data) => void";function Rb(a){return(b,c)=>a.h.readFile(c)}Rb.toString=()=>"async (path) => ?Uint8Array";function Sb(a){return(b,c)=>a.h.unlink(c)}Sb.toString=()=>"async (path) => void";function Tb(a){return(b,c)=>a.h.readdir(c)}Tb.toString=()=>"async (path) => string[]";
function Ub(a){return(b,c)=>a.h.mkdir(c)}Ub.toString=()=>"async (path) => void";var Q={};Q.appendFile=Qb;Q.mkdir=Ub;Q.readFile=Rb;Q.readdir=Tb;Q.unlink=Sb;Q.writeFile=Pb;const Vb={csoundCreate:sa,csoundDestroy:ta,csoundGetAPIVersion:ua,csoundGetVersion:va,csoundInitialize:wa,csoundParseOrc:ya,csoundCompileTree:za,csoundCompileOrc:Aa,csoundEvalCode:Ba,csoundStart:Ca,csoundCompileCsd:Da,csoundCompileCsdText:Ea,csoundPerform:Fa,csoundPerformKsmps:Ga,csoundPerformBuffer:Ha,csoundStop:Ka,csoundCleanup:La,csoundReset:Ma,csoundGetSr:Ua,csoundGetKr:Va,csoundGetKsmps:Wa,csoundGetNchnls:Xa,csoundGetNchnlsInput:Ya,csoundGet0dBFS:Za,csoundGetA4:$a,csoundGetCurrentTimeSamples:ab,
csoundGetSizeOfMYFLT:bb,csoundSetOption:cb,csoundSetParams:db,csoundGetParams:eb,csoundGetDebug:fb,csoundSetDebug:gb,csoundGetInputBufferSize:hb,csoundGetOutputBufferSize:ib,csoundGetInputBuffer:jb,csoundGetOutputBuffer:kb,csoundGetSpin:lb,csoundGetSpout:mb,csoundGetMIDIDevList:ob,csoundSetMidiCallbacks:a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetRtMidiName:pb,csoundGetMidiOutFileName:a=>b=>{var c=a.h.memory.buffer;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&
L(a,b);return J(I.decode(c))||""},csoundPushMidiMessage:qb,_isRequestingRtMidiInput:a=>b=>a.exports.isRequestingRtMidiInput(b),csoundInputMessage:rb,csoundInputMessageAsync:sb,csoundGetControlChannel:tb,csoundSetControlChannel:ub,csoundGetStringChannel:vb,csoundSetStringChannel:wb,csoundGetInputName:yb,csoundGetOutputName:xb,csoundAppendEnv:zb,csoundShouldDaemonize:a=>b=>a.exports.csoundShouldDaemonize(b),csoundIsScorePending:Ab,csoundSetScorePending:Bb,csoundReadScore:Cb,csoundGetScoreTime:Db,csoundGetScoreOffsetSeconds:Eb,
csoundSetScoreOffsetSeconds:Fb,csoundRewindScore:Gb,csoundTableLength:Hb,csoundTableGet:Ib,csoundTableSet:Jb,csoundTableCopyIn:Kb,csoundTableCopyOut:Lb,csoundGetTable:Lb,csoundGetTableArgs:Mb,csoundIsNamedGEN:Nb,csoundGetNamedGEN:Ob,fs:Q};function Wb(a){const b={...Vb.fs};delete Vb.fs;return{...Object.keys(Vb).reduce((c,d)=>{c[d]=Vb[d](a);return c},{}),...Object.keys(Q).reduce((c,d)=>{c[d]=b[d](a);return c},{})}};void 0!==m&&(m={});m.BigInt||(m.BigInt=void 0===BigInt?Number:BigInt);const Xb=m.BigInt(1)|m.BigInt(2)|m.BigInt(4)|m.BigInt(8)|m.BigInt(16)|m.BigInt(32)|m.BigInt(64)|m.BigInt(128)|m.BigInt(256)|m.BigInt(2097152)|m.BigInt(4194304)|m.BigInt(8388608)|m.BigInt(134217728),Yb=m.BigInt(0);function Zb(a){let b=arguments[0];for(let d=1;d<arguments.length;d++){const e=arguments[d];if(0==e.lastIndexOf("/",0))b=e;else{var c;(c=""==b)||(c=b.length-1,c=0<=c&&b.indexOf("/",c)==c);c?b+=e:b+="/"+e}}return b}
function R(a){if(""==a)return".";let b="";0==a.lastIndexOf("/",0)&&(b="/",0==a.lastIndexOf("//",0)&&0!=a.lastIndexOf("///",0)&&(b="//"));a=a.split("/");const c=[];for(let d=0;d<a.length;d++){const e=a[d];""!=e&&"."!=e&&(".."!=e||!b&&!c.length||".."==c[c.length-1]?c.push(e):c.pop())}return b+c.join("/")||"."};function S(a){return/^\\//g.test(a)?a:\`/\${a}\`}function $b(){return"undefined"===typeof performance||"undefined"===typeof performance.now?Date.now()-Date.now():performance.now()}function ac(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}
function u(){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:"/dev/stdin",seekPos:m.BigInt(0),buffers:[]};this.fd[1]={fd:1,path:"/dev/stdout",seekPos:m.BigInt(0),buffers:[]};this.fd[2]={fd:2,path:"/dev/stderr",seekPos:m.BigInt(0),buffers:[]};this.fd[3]={fd:3,path:"/",seekPos:m.BigInt(0),buffers:[]};this.g=this.g.bind(this);this.i=0}u.prototype.start=function(a){this.i=$b();a.exports._start()};
function bc(a,b){const c={};b=WebAssembly.Module.imports(b);for(const d of b)"function"===d.kind&&d.module.startsWith("wasi_")&&("object"!==typeof c[d.module]&&(c[d.module]={}),c[d.module][d.name]=a[d.name].bind(a));return c}u.prototype.g=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};function cc(a){const b=Math.trunc(a);return m.BigInt(b)*m.BigInt(1E6)+m.BigInt(Math.round(1E6*(a-b)))}
function dc(a,b){switch(b){case 1:return Math.floor($b());case 0:return cc(Date.now());case 2:case 3:return Math.floor($b()-a.i);default:return 0}}u.prototype.$=function(){return 0};r("args_get",u.prototype.$);u.prototype.aa=function(){return 0};r("args_sizes_get",u.prototype.aa);u.prototype.ba=function(){return 0};r("clock_res_get",u.prototype.ba);u.prototype.ca=function(a,b,c){this.g().setBigUint64(c,m.BigInt(dc(this,a)),!0);return 0};r("clock_time_get",u.prototype.ca);u.prototype.da=function(){return 0};
r("environ_get",u.prototype.da);u.prototype.ea=function(){return 0};r("environ_sizes_get",u.prototype.ea);u.prototype.fa=function(){return 52};r("fd_advise",u.prototype.fa);u.prototype.ga=function(){return 52};r("fd_allocate",u.prototype.ga);u.prototype.ha=function(){return 0};r("fd_close",u.prototype.ha);u.prototype.ia=function(){return 0};r("fd_datasync",u.prototype.ia);
u.prototype.ja=function(a,b){a=this.g();a.setUint8(b+4,4);a.setUint16(b+2,0,!0);a.setUint16(b+4,0,!0);a.setBigUint64(b+8,m.BigInt(Xb),!0);a.setBigUint64(b+8+8,m.BigInt(Yb),!0);return 0};r("fd_fdstat_get",u.prototype.ja);u.prototype.ka=function(){return 52};r("fd_fdstat_set_flags",u.prototype.ka);u.prototype.la=function(){return 0};r("fd_fdstat_set_rights",u.prototype.la);
u.prototype.ma=function(a,b){let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,h){return e+(null==h?void 0:h.byteLength)?null==h?void 0:h.byteLength:0},0));const d=this.g();d.setBigUint64(b,m.BigInt(a),!0);b+=8;d.setBigUint64(b,m.BigInt(a),!0);b+=8;d.setUint8(b,4);b+=8;d.setBigUint64(b,m.BigInt(1),!0);b+=8;d.setBigUint64(b,m.BigInt(c),!0);b+=8;d.setBigUint64(b,cc(this.i),!0);b+=8;d.setBigUint64(b,cc(this.i),!0);d.setBigUint64(b+8,cc(this.i),!0);return 0};r("fd_filestat_get",u.prototype.ma);
u.prototype.na=function(){return 0};r("fd_filestat_set_size",u.prototype.na);u.prototype.oa=function(){return 0};r("fd_filestat_set_times",u.prototype.oa);u.prototype.pa=function(){return 0};r("fd_pread",u.prototype.pa);u.prototype.qa=function(a,b){if(!this.fd[a]&&!this.fd[a-1])return 8;var {path:c}=this.fd[a];a=this.g();c=xa.encode(c);(new Uint8Array(a.buffer)).set(c,b);return 0};r("fd_prestat_dir_name",u.prototype.qa);
u.prototype.ra=function(a,b){if(!this.fd[a])return 8;var {path:c}=this.fd[a];a=this.g();c=xa.encode(c);a.setUint8(b,0);a.setUint32(b+4,c.byteLength,!0);return 0};r("fd_prestat_get",u.prototype.ra);u.prototype.sa=function(a,b,c,d,e){console.log("fd_pwrite",a,b,c,d,e,arguments);return 0};r("fd_pwrite",u.prototype.sa);
u.prototype.ta=function(a,b,c,d){const e=this.fd[a]&&this.fd[a].buffers;var h=e.reduce((q,p)=>q+p.length,0);const f=this.g();if(e&&0!==e.length){var g=Number(this.fd[a].seekPos),k=0,l=!1;if(g>=h)return-1;for(h=0;h<c;h++){var n=b+8*h;const q=f.getUint32(n,!0);n=f.getUint32(n+4,!0);l||(k+=n,Array.from({length:n},(p,t)=>t).reduce((p,t)=>{if(l)return p;const [H,M]=p;let D=p=0,x=!1,v=0,F;if(0===t)for(;!x;)F=e[p]?e[p].byteLength:0,v<=g&&F+v>g?(x=!0,D=g-v):(v+=F,p+=1);else p=H,D=M;e[p]?(f.setUint8(q+t,e[p][D]),
D+1>=e[p].byteLength?(p=H+1,D=0):D+=1):(f.setUint8(q+t,0),g+=t,l=!0);return[p,D]},[0,0]),l||(g+=n))}this.fd[a].seekPos=m.BigInt(g);f.setUint32(d,k,!0);return 0}console.error("Reading non existent file",a,this.fd[a])};r("fd_read",u.prototype.ta);u.prototype.ua=function(){return 0};r("fd_readdir",u.prototype.ua);u.prototype.va=function(){return 0};r("fd_renumber",u.prototype.va);
u.prototype.wa=function(a,b,c,d){const e=this.g();switch(c){case 1:let h;this.fd[a].seekPos=(null!=(h=this.fd[a].seekPos)?h:m.BigInt(0))+m.BigInt(b);break;case 2:c=(this.fd[a].buffers||[]).reduce((f,g)=>f+g.length,0);this.fd[a].seekPos=BigInt(c)+BigInt(b);break;case 0:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return 0};r("fd_seek",u.prototype.wa);u.prototype.xa=function(){return 0};r("fd_sync",u.prototype.xa);
u.prototype.ya=function(a,b){const c=this.g();this.fd[a].seekPos||(this.fd[a].seekPos=m.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return 0};r("fd_tell",u.prototype.ya);
u.prototype.za=function(a,b,c,d){let e=!1;const h=this.g();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].seekPos===m.BigInt(0)&&0<this.fd[a].buffers.length&&(e=!0);let f=0;for(let l=0;l<c;l++){var g=b+8*l,k=h.getUint32(g,!0);g=h.getUint32(g+4,!0);f+=g;k=new Uint8Array(h.buffer,k,g);e?this.fd[a].buffers.unshift(k.slice(0,g)):this.fd[a].buffers.push(k.slice(0,g))}this.fd[a].seekPos+=m.BigInt(f);h.setUint32(d,f,!0);[1,2].includes(a)&&console.log(I.decode(ac(this.fd[a].buffers)));return 0};
r("fd_write",u.prototype.za);u.prototype.Aa=function(){return 0};r("path_create_directory",u.prototype.Aa);u.prototype.Ba=function(){return 0};r("path_filestat_get",u.prototype.Ba);u.prototype.Ca=function(){return 0};r("path_filestat_set_times",u.prototype.Ca);u.prototype.Da=function(){return 0};r("path_link",u.prototype.Da);
u.prototype.Ea=function(a,b,c,d,e,h,f,g,k){b=this.g();e=(this.fd[a]||{path:"/"}).path;c=new Uint8Array(b.buffer,c,d);c=I.decode(c);const l=S(R(Zb(3===a?"":e,c)));if(l.startsWith("/..")||"/._"===l||"/.AppleDouble"===l)return 8;(a=Object.values(this.fd).find(n=>n.path===l&&Array.isArray(n.buffers)))?c=a.fd:(c=this.fd.length,this.fd[c]={fd:c});this.fd[c]={...this.fd[c],path:l,type:"file",seekPos:m.BigInt(0),buffers:a?this.fd[c].buffers:[]};b.setUint32(k,c,!0);return 0};r("path_open",u.prototype.Ea);
u.prototype.Fa=function(){return 0};r("path_readlink",u.prototype.Fa);u.prototype.Ga=function(){return 0};r("path_remove_directory",u.prototype.Ga);u.prototype.Ha=function(){return 0};r("path_rename",u.prototype.Ha);u.prototype.Ia=function(){return 0};r("path_symlink",u.prototype.Ia);u.prototype.Ja=function(){return 0};r("path_unlink_file",u.prototype.Ja);u.prototype.Ka=function(){return 0};r("poll_oneoff",u.prototype.Ka);u.prototype.La=function(){return 0};r("proc_exit",u.prototype.La);
u.prototype.Ma=function(){return 0};r("proc_raise",u.prototype.Ma);u.prototype.Na=function(){return 0};r("random_get",u.prototype.Na);u.prototype.Oa=function(){return 0};r("sched_yield",u.prototype.Oa);u.prototype.Pa=function(){return 52};r("sock_recv",u.prototype.Pa);u.prototype.Qa=function(){return 52};r("sock_send",u.prototype.Qa);u.prototype.Ra=function(){return 52};r("sock_shutdown",u.prototype.Ra);function ec(a,b){return(a=Object.values(a.fd).find(({path:c})=>c===b))&&a.buffers}
u.prototype.readdir=function(a){const b=(S(R(a))+"/").replace("//","/"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\//g.test(d.replace(b,""))&&c.push(d));return c.map(d=>d.replace(b,"").replace(/^\\//g,"")).filter(d=>!!d)};u.prototype.writeFile=function(a,b){const c=S(R(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:m.BigInt(0),buffers:[b]};d&&delete this.fd[d]};
u.prototype.appendFile=function(a,b){var c=S(R(a));(c=ec(this,c))?c.push(b):console.error(\`Can't append to non-existing file \${a}\`)};u.prototype.readFile=function(a){a=S(R(a));if(a=ec(this,a))return ac(a)};u.prototype.unlink=function(a){const b=S(R(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(\`While trying to unlink \${b}, path not found\`)};
u.prototype.mkdir=function(a){const b=S(R(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(\`mkdir: path \${a} already exists\`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};function fc(a){for(;0<a.length;)a.pop()};let T,gc,hc;T=()=>()=>{};gc=()=>()=>{};hc=()=>{};/*
 zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
function ic(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,h,f,g;let k,l;for(k=0;k<b;++k)a[k]>c&&(c=a[k]),a[k]<d&&(d=a[k]);const n=1<<c,q=new Uint32Array(n);e=1;h=0;for(f=2;e<=c;){for(k=0;k<b;++k)if(a[k]===e){g=0;var p=h;for(l=0;l<e;++l)g=g<<1|p&1,p>>=1;p=e<<16|k;for(l=g;l<n;l+=f)q[l]=p;++h}++e;h<<=1;f<<=1}return[q,c,d]};function jc(a,b){this.D=[];this.bufferSize=32768;this.l=this.v=this.j=this.J=0;this.u=new Uint8Array(a);this.W=!1;this.m=V;this.resize=!1;if(b||!(b={}))b.index&&(this.j=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.m&&(this.m=b.m),b.resize&&(this.resize=b.resize);switch(this.m){case kc:this.g=32768;this.i=new Uint8Array(this.bufferSize+33026);break;case V:this.g=0;this.i=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode");}}
var kc=0,V=1,lc=new Uint16Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),mc=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),nc=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]),oc=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),pc=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),
qc;const rc=new Uint8Array(288);let W,sc;W=0;for(sc=rc.length;W<sc;++W)rc[W]=143>=W?8:255>=W?9:279>=W?7:8;qc=ic(rc);var tc;const uc=new Uint8Array(30);let vc,wc;vc=0;for(wc=uc.length;vc<wc;++vc)uc[vc]=5;tc=ic(uc);function X(a,b){let c=a.v,d=a.l;const e=a.u;let h=a.j;if(h+(b-d+7>>3)>=e.length)throw Error("input buffer is broken");for(;d<b;)c|=e[h++]<<d,d+=8;a.v=c>>>b;a.l=d-b;a.j=h;return c&(1<<b)-1}
function xc(a,b){let c=a.v,d=a.l;var e=a.u;let h=a.j;var f=e.length;const g=b[0];for(b=b[1];d<b&&!(h>=f);)c|=e[h++]<<d,d+=8;e=g[c&(1<<b)-1];f=e>>>16;if(f>d)throw Error("invalid code length: "+f);a.v=c>>f;a.l=d-f;a.j=h;return e&65535}
function yc(a,b,c){let d=a.i,e=a.g;a.X=b;const h=d.length-258;var f;let g,k;for(;256!==(f=xc(a,b));)if(256>f)e>=h&&(a.g=e,d=zc(a),e=a.g),d[e++]=f;else for(f-=257,k=mc[f],0<nc[f]&&(k+=X(a,nc[f])),f=xc(a,c),g=oc[f],0<pc[f]&&(g+=X(a,pc[f])),e>=h&&(a.g=e,d=zc(a),e=a.g);k--;)d[e]=d[e++-g];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}
function Ac(a,b,c){let d=a.i,e=a.g;a.X=b;let h=d.length;var f;let g,k;for(;256!==(f=xc(a,b));)if(256>f)e>=h&&(d=Bc(a),h=d.length),d[e++]=f;else for(f-=257,k=mc[f],0<nc[f]&&(k+=X(a,nc[f])),f=xc(a,c),g=oc[f],0<pc[f]&&(g+=X(a,pc[f])),e+k>h&&(d=Bc(a),h=d.length);k--;)d[e]=d[e++-g];for(;8<=a.l;)a.l-=8,a.j--;a.g=e}function zc(a){const b=new Uint8Array(a.g-32768),c=a.g-32768,d=a.i;b.set(d.subarray(32768,b.length));a.D.push(b);a.J+=b.length;d.set(d.subarray(c,c+32768));a.g=32768;return d}
function Bc(a,b){let c=Math.trunc(a.u.length/a.j+1);const d=a.u,e=a.i;b&&("number"===typeof b.O&&(c=b.O),"number"===typeof b.Z&&(c+=b.Z));2>c?(b=(d.length-a.j)/a.X[2],b=Math.trunc(b/2*258),b=b<e.length?e.length+b:e.length<<1):b=e.length*c;b=new Uint8Array(b);b.set(e);a.i=b;return a.i};function Cc(a){var b;this.j=a;this.g=0;if(b||!(b={}))b.index&&(this.g=b.index),b.verify&&(this.verify=b.verify);const c=a[this.g++],d=a[this.g++];switch(c&15){case 8:this.method=8;break;default:throw Error("unsupported compression method");}if(0!==((c<<8)+d)%31)throw Error("invalid fcheck flag:"+((c<<8)+d)%31);if(d&32)throw Error("fdict flag is not supported");this.i=new jc(a,{index:this.g,bufferSize:b.bufferSize,m:b.m,resize:b.resize})}
function Dc(a){var b=a.j,c;a:{for(c=a.i;!c.W;){var d=void 0,e=void 0,h=void 0,f=void 0,g=c,k=X(g,3);k&1&&(g.W=!0);k>>>=1;switch(k){case 0:k=g.u;e=g.j;var l=g.i,n=g.g;h=k.length;d=l.length;g.v=0;g.l=0;if(e+1>=h)throw Error("invalid uncompressed block header: LEN");f=k[e++]|k[e++]<<8;if(e+1>=h)throw Error("invalid uncompressed block header: NLEN");h=k[e++]|k[e++]<<8;if(f===~h)throw Error("invalid uncompressed block header: length verify");if(e+f>k.length)throw Error("input buffer is broken");switch(g.m){case kc:for(;n+
f>l.length;)h=d-n,f-=h,l.set(k.subarray(e,e+h),n),n+=h,e+=h,g.g=n,l=zc(g),n=g.g;break;case V:for(;n+f>l.length;)l=Bc(g,{O:2});break;default:throw Error("invalid inflate mode");}l.set(k.subarray(e,e+f),n);g.j=e+f;g.g=n+f;g.i=l;break;case 1:switch(g.m){case V:Ac(g,qc,tc);break;case kc:yc(g,qc,tc);break;default:throw Error("invalid inflate mode");}break;case 2:k=X(g,5)+257;d=X(g,5)+1;l=X(g,4)+4;n=new Uint8Array(lc.length);for(e=0;e<l;++e)n[lc[e]]=X(g,3);n=ic(n);l=new Uint8Array(k+d);e=0;for(d=k+d;e<
d;)switch(h=xc(g,n),h){case 16:for(h=3+X(g,2);h--;)l[e++]=f;break;case 17:for(h=3+X(g,3);h--;)l[e++]=0;f=0;break;case 18:for(h=11+X(g,7);h--;)l[e++]=0;f=0;break;default:f=l[e++]=h}f=ic(l.subarray(0,k));k=ic(l.subarray(k));switch(g.m){case V:Ac(g,f,k);break;case kc:yc(g,f,k);break;default:throw Error("invalid inflate mode");}break;default:throw Error("unknown BTYPE: "+k);}}switch(c.m){case kc:{g=0;f=c.i;k=c.D;l=new Uint8Array(c.J+(c.g-32768));let q;if(0===k.length)c=c.i.subarray(32768,c.g);else{n=
0;for(d=k.length;n<d;++n)for(e=k[n],h=0,q=e.length;h<q;++h)l[g++]=e[h];n=32768;for(d=c.g;n<d;++n)l[g++]=f[n];c.D=[];c.buffer=l;c=c.buffer}}break a;case V:f=c.g;c.resize?(g=new Uint8Array(f),g.set(c.i.subarray(0,f))):g=c.i.subarray(0,f);c.buffer=g;c=c.buffer;break a;default:throw Error("invalid inflate mode");}}a.g=a.i.j;if(a.verify){a=(b[a.g++]<<24|b[a.g++]<<16|b[a.g++]<<8|b[a.g++])>>>0;b=c;if("string"===typeof b){b=[...b];g=0;for(f=b.length;g<f;g++)b[g]=(b[g].charPointAt(0)&255)>>>0;b=new Uint8Array([b])}g=
1;f=0;k=b.length;for(l=0;0<k;){e=1024<k?1024:k;k-=e;do g+=b[l++],f+=g;while(--e);g%=65521;f%=65521}if(a!==(f<<16|g)>>>0)throw Error("invalid adler-32 checksum");}return c};const Ec=({memory:a,messagePort:b,U:c})=>function(d,e,h,f){if(a){d=new Uint8Array(a.buffer,f,h);d=I.decode(d);var g=/\\n$/g.test(d);e=/^\\n/g.test(d);var k=d.split("\\n").filter(n=>0<n.length),l=[];if(0===k.length&&g||e)l.push(c.join("")),fc(c);k.forEach((n,q)=>{q+1===k.length?g?0===q?(l.push(c.join("")+n),fc(c)):l.push(n):c.push(n):0===q?(l.push(c.join("")+n),fc(c)):l.push(n)});l.forEach(n=>{n.replace(/(\\r\\n|\\n|\\r)/gm,"")&&b.F({log:n})})}},Fc=a=>{if(a&&"object"===typeof a&&"object"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||
a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,"A csound plugin turns out to be neither a plugin, opcode or module.\\nPerhaps csdl.h or module.h wasn't imported correctly?");return!1}console.error("A csound plugin didn't export __wasm_call_ctors.\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors");return!1}console.error("Error instantiating a csound plugin, instance and/or export is missing!");return!1},Gc=a=>{function b(){let l=
0,n=1;for(;;){const q=a[c++];l+=(q&127)*n;n*=128;if(!(q&128))break}return l}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error("Wasm magic number is missing!");if(0!==a[8])return hc(),"static";let c=9;const d=b();c++;c++;c++;c++;c++;c++;c++;c++;c+=3;const e=b(),h=b(),f=b(),g=b(),k=b();return{ib:d,C:e,S:h,fb:k,V:f,jb:g}},Hc=async({Sa:a,h:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=bc(b,d);e.s=e.s||
{};e.s.ab=()=>0;e.s.memory=a;e.s.bb=Ec({memory:e.s.memory,U:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.memory=a;b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};
async function Ic({Ta:a,withPlugins:b=[],messagePort:c}){var d={};const e=new u;a=new Uint8Array(a);a=Dc(new Cc(a));var h=Gc(a);if("static"===h)return await Hc({messagePort:c,Sa:a,mb:d,h:e});d=h.C;const f=h.S;h=h.V;b=await b.reduce(async(x,v)=>{x=await x;let F,y;try{F=new Uint8Array(v),y=Gc(F)}catch(G){console.error("Error in plugin",G)}y&&x.push({P:y,Ua:F});return x},[]);d=Math.ceil((d+f)/65536);var g=Math.ceil(b.reduce((x,{P:v})=>"static"===v?0:x+(v.C+f),0)/65536);g=d+g+2048;const k=new WebAssembly.Memory({initial:g,
maximum:16384}),l=new WebAssembly.Table({initial:h+1,element:"anyfunc"});e.memory=k;const n=new WebAssembly.Global({value:"i32",mutable:!0},65536*g);h=new WebAssembly.Global({value:"i32",mutable:!0},65536*g);g=new WebAssembly.Global({value:"i32",mutable:!1},2048);const q=new WebAssembly.Global({value:"i32",mutable:!1},1),p=new WebAssembly.Global({value:"i32",mutable:!0},0);a=await WebAssembly.compile(a);const t=bc(e,a);let H=[],M=d;t.env=t.env||{};t.env.memory=k;t.env.__indirect_function_table=l;
t.env.__stack_pointer=n;t.env.__memory_base=g;t.env.__table_base=q;t.env.csoundLoadModules=x=>{H.forEach(v=>{if(void 0===D)console.error("csound-wasm internal: timing problem detected!");else{var F=D;if(v.exports.csoundModuleInit){var y=new WebAssembly.Global({value:"i32",mutable:!0},0),G=new WebAssembly.Global({value:"i32",mutable:!0},0),E=new WebAssembly.Global({value:"i32",mutable:!0},0);const N=new WebAssembly.Global({value:"i32",mutable:!0},0);let w=l.length;"function"===typeof v.exports.csoundModuleCreate&&
(l.grow(1),y.value=w,l.set(w,v.exports.csoundModuleCreate),w+=1);"function"===typeof v.exports.csoundModuleInit&&(l.grow(1),G.value=w,l.set(w,v.exports.csoundModuleInit),w+=1);"function"===typeof v.exports.csoundModuleDestroy&&(l.grow(1),E.value=w,l.set(w,v.exports.csoundModuleDestroy),w+=1);"function"===typeof v.exports.csoundModuleErrorCodeToString&&(l.grow(1),N.value=w,l.set(w,v.exports.csoundModuleErrorCodeToString));F.exports.csoundWasiLoadPlugin(x,y,G,E,N)}else v.exports.csound_opcode_init||
v.exports.csound_fgen_init?(y=new WebAssembly.Global({value:"i32",mutable:!0},0),G=new WebAssembly.Global({value:"i32",mutable:!0},0),E=l.length,"function"===typeof v.exports.csound_opcode_init&&(y.value=E,l.grow(1),l.set(E,v.exports.csound_opcode_init),E+=1),"function"===typeof v.exports.csound_fgen_init&&(G.value=E,l.grow(1),l.set(E,v.exports.csound_fgen_init)),F.exports.csoundWasiLoadOpcodeLibrary(x,G,y)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")}});
return 0};t.env.csoundLoadExternals=()=>{};t.env._ZTH5errno=function(){};t.env.csoundWasiJsMessageCallback=Ec({memory:k,messagePort:c,U:[]});t.env.printDebugCallback=(x,v)=>{x=new Uint8Array(k.buffer,x,v);x=I.decode(x);console.log(x)};t["GOT.mem"]=t["GOT.mem"]||{};t["GOT.mem"].__heap_base=h;t["GOT.func"]=t["GOT.func"]||{};const D=await WebAssembly.instantiate(a,t);c=Object.assign({},D.exports);a={};c.memory=k;a.exports=c;H=await b.reduce(async(x,{P:v,Ua:F})=>{x=await x;try{const y=v.C,G=v.S,E=v.V,
N=await WebAssembly.compile(F),w=bc(e,N),qa=new WebAssembly.Global({value:"i32",mutable:!1},65536*M);l.grow(E);w.env=Object.assign({},w.env);w.env.memory=k;w.env.__indirect_function_table=l;w.env.__memory_base=qa;w.env.__stack_pointer=n;w.env.__table_base=q;w.env.csoundLoadModules=p;delete w.env.csoundWasiJsMessageCallback;M+=Math.ceil((y+G)/65536);const A=await WebAssembly.instantiate(N,w);Fc(A)&&(A.exports.__wasm_call_ctors(),x.push(A))}catch(y){console.error("Error while compiling csound-plugin",
y)}return x},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]};const Jc=(a,b,c,d)=>e=>{const h=e.csound,f=1===b.csoundShouldDaemonize(h),g=b.csoundStart(h),k=b.csoundGetOutputName(h)||"test.wav";gc()();0!==g&&a.F(\`error: csoundStart failed while trying to render \${k},\`+" look out for errors in options and syntax");setTimeout(()=>{const l=b._isRequestingRtMidiInput(h);if(f||l||k.includes("dac"))c(e);else if(a.o("renderStarted"),d)d(e);else for(;0===b.csoundPerformKsmps(h););},0);return g};const Kc=[0,4096,0,0,0,0,-1,-1,-1,-1,0,128,0,0,0,0,0,0,0,0];let Lc,Mc,Nc;
const Oc=({B:a,A:b,I:c,G:d,H:e,Y:h,K:f})=>async g=>{var k=g.audioStreamIn,l=g.audioStreamOut;const n=g.midiBuffer,q=g.csound,p=new Int32Array(g.audioStateBuffer);Kc.forEach((aa,Ia)=>{Atomics.store(p,Ia,aa)});g=a._isRequestingRtMidiInput(q);var t=0===Atomics.load(p,9)&&a.csoundGetInputName(q).includes("adc");Atomics.load(p,8);var H=Atomics.load(p,9);Atomics.load(p,6);const M=a.csoundGetNchnls(q),D=H||t?a.csoundGetNchnlsInput(q):0,x=Atomics.load(p,6)||a.csoundGetSr(q);Atomics.store(p,8,M);Atomics.store(p,
9,D);Atomics.store(p,10,t?1:0);Atomics.store(p,6,a.csoundGetSr(q));Atomics.store(p,16,g);t=a.csoundGetKsmps(q);Atomics.store(p,7,t);const v=a.csoundGet0dBFS(q);H=[];const F=[];for(var y=0;y<M;++y)H.push(new Float64Array(l,16384*y,16384));for(l=0;l<D;++l)F.push(new Float64Array(k,16384*l,16384));f.o("realtimePerformanceStarted");Atomics.store(p,2,1);T()();k=!0;let G=0,E=0,N=0,w=0,qa;l=(aa=!1)=>1===Atomics.load(p,5)||1!==Atomics.load(p,2)||0!==G||aa?(0===G&&T()(),T()(),f.o("realtimePerformanceEnded"),
T()(),c(),!0):!1;for(y=!0;!y||(qa=Atomics.wait(p,0,1,1E4));){if("timed-out"===qa){l(!0);break}k&&(k=!1,await new Promise(z=>{Nc=z;f.L()}),T()());1===Atomics.load(p,4)&&(await new Promise(z=>setTimeout(z,0)),d(),await new Promise(z=>setTimeout(z,0)),Atomics.wait(p,4,0),await new Promise(z=>setTimeout(z,0)),e(),await new Promise(z=>setTimeout(z,0)));if(l())break;if(g){var A=Atomics.load(p,18);if(0<A){var U=Atomics.load(p,17),K=U;for(let z=0;z<A;z++)K=(U+3*z)%1024,Atomics.load(n,K),Atomics.load(n,K+
1),Atomics.load(n,K+2);Atomics.store(p,17,(K+1)%1024);Atomics.sub(p,18,A)}}const aa=Atomics.load(p,11);A=Atomics.load(p,14)>=aa;U=a.csoundGetSpin(q);K=a.csoundGetSpout(q);const Ia=A&&new Float64Array(h.h.memory.buffer,U,t*D),Qc=new Float64Array(h.h.memory.buffer,K,t*M);U=Atomics.load(p,1);for(K=0;K<U;K++){if(0===E)if(0===G)G=a.csoundPerformKsmps(q),!y&&Atomics.add(p,15,t),y=!1;else if(0!==G){Atomics.store(p,2,0);l(!0);return}H.forEach((z,Ja)=>{z[w]=(Qc[E*M+Ja]||0)/v});A&&(F.forEach((z,Ja)=>{Ia[E*
D+Ja]=(z[N]||0)*v}),N=A&&(N+1)%16384);w=(w+1)%16384;E=(E+1)%t}A&&Atomics.sub(p,14,U);1===Atomics.compareExchange(p,19,1,0)&&await new Promise(z=>{Mc=z;b()});if(l())break;A=Atomics.load(p,12);A=Math.max(2048-(w<A?w+16384-A:w-A),0);Atomics.store(p,1,A);0===A&&await new Promise(z=>setTimeout(z,aa/x*1E3))}},Pc=({port:a})=>{const b=new ra;b.F=c=>{a.postMessage({log:c})};b.o=c=>{const d={};d.playStateChange=c;a.postMessage(d)};b.L=()=>{a.postMessage({hb:"unlocked"})};b.g=!0;return b},Rc=a=>{const b=a.port;
b.addEventListener("message",c=>{if(c.data&&c.data.unlock)c=Nc,Nc=void 0,c&&c();else{c=c.data;var d=c.reduce((e,{id:h,$a:f,Za:g})=>{try{const k=Lc.get(g),l=k&&k.apply({},f||[]);e.push({id:h,Ya:l})}catch(k){throw Error(k);}return e},[]);b.postMessage(d);d=Mc;Mc=void 0;d&&d(c)}});b.start()},Sc=({B:a,A:b,I:c,G:d,H:e,K:h})=>async f=>{const g=f.csound;f=new Int32Array(f.audioStateBuffer);Atomics.store(f,3,1);for(h.L();1!==Atomics.load(f,5)&&0===a.csoundPerformKsmps(g);)1===Atomics.load(f,4)&&(d(),Atomics.wait(f,
4,0),e()),1===Atomics.compareExchange(f,19,1,0)&&await new Promise(k=>{Mc=k;b()});Atomics.store(f,3,0);h.o("renderEnded");c()},Tc=async a=>{const b=a.wasmDataURI,c=a.withPlugins||[],d=a.messagePort,e=a.callbackPort;T()();const h=Pc({port:d}),f=()=>e.postMessage("poll"),g=()=>e.postMessage("releaseStop"),k=()=>e.postMessage("releasePause"),l=()=>e.postMessage("releaseResumed");Rc({port:e});const [n,q]=await Ic({Ta:b,withPlugins:c,messagePort:h});n.h=q;const p=Wb(n);Lc=new Map(Object.entries({...p,
csoundStart:(t,H)=>Jc(h,p,Oc({B:p,A:f,Y:n,K:h,I:g,G:k,H:l}),Sc({B:p,A:f,K:h,h:q,I:g,G:k,H:l}))(H),Y:n}));p.csoundInitialize(0);return p.csoundCreate()};var Uc=["initialize$$module$src$workers$sab_worker"],Y=m;Uc[0]in Y||"undefined"==typeof Y.execScript||Y.execScript("var "+Uc[0]);for(var Z;Uc.length&&(Z=Uc.shift());)Uc.length||void 0===Tc?Y[Z]&&Y[Z]!==Object.prototype[Z]?Y=Y[Z]:Y=Y[Z]={}:Y[Z]=Tc;ha({initialize:Tc,callUncloned:async(a,b)=>(a=Lc.get(a))&&a.apply({},b||[])});}).call(this);
//# sourceMappingURL=__compiled.sab.worker.js.map
`])));this.o=r;const i=this.O,o=this.G,s=this.Ea,a=this.Fa,l=this.u;Bt()(),this.s.A=this,Bt()(),this.l.Y.addEventListener("message",Xs(this)),this.l.Y.start(),this.l.ca.addEventListener("message",Xs(this)),this.l.ca.start(),Bt()(),this.l.va.addEventListener("message",d=>{switch(d.data){case"poll":this.l&&this.l.va.postMessage(Object.keys(this.g).map(f=>({id:f,za:this.g[f].za,Aa:this.g[f].Aa})));break;case"releaseStop":this.onPlayStateChange(this.v==="renderStarted"?"renderEnded":"realtimePerformanceEnded"),this.m&&this.m.u(),this.j&&this.j.B();break;case"releasePause":this.m.fa(),this.j.ra();break;case"releaseResumed":this.m.ga(),this.j.sa();break;default:d.data.forEach(({id:f,Ub:h})=>{this.g[f].Pa(h),delete this.g[f]})}}),this.l.va.start();const c=Vl(r);e=e(),this.h=c,r={},r.wasmDataURI=e,r.wasmTransformerDataURI=this.ia,r.messagePort=this.l.g,r.callbackPort=this.l.L,r.withPlugins=n;const u=await c.initialize(Ll(r,[e,this.l.g,this.l.L]));this.D=u,this.l.Y.start(),this.l.ca.start(),Bt()(),this.i.pause=this.R.bind(this),this.i.resume=this.T.bind(this),this.i.terminateInstance=this.H.bind(this),this.i.Yb=()=>console.warn("enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true"),this.i.Ka=async()=>{const d=this.s.P;return d||await new Promise(f=>{this.i.once("onAudioNodeCreated",f)})},this.i.Ja=async()=>this.s.audioContext,this.i=this.m.o(this.i),this.i.addListener("message",console.log);for(const d of Object.keys(Fr)){const f=so(c,u,d,this.v),h=Fr[d];switch(d){case"csoundCreate":break;case"csoundStart":n=async function(){if(!u||typeof u!="number")return console.error("starting csound failed because csound instance wasn't created"),-1;if(mi(this.j,"start"))return-1;this.j.la();var p={};return p.audioStateBuffer=i,p.audioStreamIn=s,p.audioStreamOut=a,p.midiBuffer=l,p.csound=u,p=await f(p),await this.j.ha(),this.l&&this.l.va.postMessage({unlock:!0}),p},n.toString=()=>h.toString(),this.i.start=n.bind(this);break;case"csoundStop":n=async()=>(Bt(["Checking if it's safe to call stop:",Wc.has(this.v),"currentPlayState is",this.v].join(`
`))(),mi(this.j,"stop")?(Bt()(),-1):Wc.has(this.v)?(Bt()(),this.j.X(),Atomics.store(this.G,5,1),Bt()(),Atomics.store(this.G,2,0),this.v==="realtimePerformancePaused"&&(Atomics.store(this.G,4,0),Atomics.notify(this.G,4)),this.v!=="renderStarted"&&!Atomics.compareExchange(this.G,0,0,1)&&Atomics.notify(this.G,0),await this.j.na(),0):-1),this.i.stop=n.bind(this),n.toString=()=>h.toString();break;case"csoundReset":n=async()=>{if(this.v)return mi(this.j,"reset")?-1:(Wc.has(this.v)&&await this.i.stop(),this.l.C(),this.M||(await this.s.H(),delete this.s.audioContext),await f([]))},this.i.reset=n.bind(this),n.toString=()=>h.toString();break;case"csoundPushMidiMessage":n=async(p=0,m=0,b=0)=>{this.$({data:[p,m,b]})},this.i.ac=n.bind(this),n.toString=()=>h.toString();break;case"fs":this.i.fs={},Object.keys(h).forEach(p=>{const m=so(c,u,p,this.v);m.toString=()=>h[p].toString(),this.i.fs[p]=m});break;default:n=async(...p)=>{if(this.v==="realtimePerformanceStarted"||this.v==="renderStarted"||this.j.T()){const m=this.C;this.C+=1;const b=new Promise((g,v)=>{const y=setTimeout(()=>v(Error(`Worker timed out so ${Vu(d)}() wasn't called!`)),1e4);this.g[m]={Pa:x=>{clearTimeout(y),g(x)},za:d,Aa:[u,...p]}});return Atomics.compareExchange(o,19,0,1),await b}return await f.apply(void 0,p)},n.toString=()=>h.toString(),this.i[Vu(d)]=n}}Bt()()}}async function Lm({ua:t}){if(fa()(),navigator&&navigator.requestMIDIAccess)try{const e=await navigator.requestMIDIAccess();if(e.inputs){const n=e.inputs.values();for(let r=n.next();r&&!r.done;r=n.next())fa()(),r.value.onmidimessage=t}else fa()()}catch{fa()()}else fa()()}let i5=0;class i6{constructor({audioContext:e,M:n,autoConnect:r}){this.autoConnect=r,this.M=n,this.l=void 0,this.audioContext=e,this.F=this.h=this.A=this.v=this.P=void 0,this.ba=this.pa=!1,this.da=this.aa=this.sampleRate=this.qa=void 0,this.o=this.o.bind(this),this.onPlayStateChange=this.onPlayStateChange.bind(this),this.H=this.H.bind(this),this.g=this.g.bind(this),ui()()}async H(){if(this.P&&(this.P.disconnect(),delete this.P),this.audioContext){if(this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}delete this.audioContext}this.F&&(this.F[Ls](),delete this.F)}g(e,n,r){const i={};return i.contextUid=r,i.isRequestingInput=this.ba,i.inputsCount=n,i.outputsCount=this.da,i.ksmps=this.qa,i.maybeSharedArrayBuffer=this.A.Ba&&this.A.G,i.maybeSharedArrayBufferAudioIn=this.A.Ba&&this.A.Ea,i.maybeSharedArrayBufferAudioOut=this.A.Ba&&this.A.Fa,e=new AudioWorkletNode(e,"csound-worklet-processor",{inputChannelCount:n?[n]:0,outputChannelCount:[this.da||2],processorOptions:i}),this.A.m.ea(e),e}async onPlayStateChange(e){switch(this.v=e,e){case"realtimePerformanceStarted":ui()(),await this.o(),this.A&&this.A.j&&(this.A.m&&this.A.m.ma(this),this.A.j&&await this.A.j.U());break;case"realtimePerformanceEnded":if(ui()(),!this.M&&this.autoConnect&&this.audioContext&&this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}this.autoConnect&&this.P&&(this.P.disconnect(),delete this.P),this.F&&(this.F[Ls](),delete this.F),this.h&&(window.URL||window.webkitURL).revokeObjectURL(this.h),this.P&&delete this.P,this.da=this.aa=this.sampleRate=this.v=void 0;break;case"realtimePerformancePaused":this.A&&this.A.j&&(this.A.m&&this.A.m.fa(this),await this.A.j.ra());break;case"realtimePerformanceResumed":this.A&&this.A.j&&(this.A.m&&this.A.m.ga(this),await this.A.j.sa())}}async o(){this.audioContext||(this.M&&console.error("fatal: the provided AudioContext was undefined"),this.audioContext=new(Yr())({sampleRate:this.sampleRate})),this.audioContext.state==="closed"&&(this.M&&console.error("fatal: the provided AudioContext was closed, falling back new AudioContext"),this.audioContext=new(Yr())({sampleRate:this.sampleRate})),this.sampleRate!==this.audioContext.sampleRate&&(this.audioContext=new(Yr())({sampleRate:this.sampleRate}),this.M&&console.error("Internal error: sample rate was ignored from provided audioContext")),this.h="data:application/javascript;base64,";try{await this.audioContext.audioWorklet.addModule(this.h)}catch(r){console.error("Error calling audioWorklet.addModule",r)}if(ui()(),this.A){var e=`audioWorklet${i5}`;if(i5+=1,this.pa&&(ui(),Lm({ua:this.A.$.bind(this.A)})),this.ba){let r;var n=new Promise(s=>{r=s});const i=navigator.mediaDevices===void 0?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.g:navigator.mediaDevices.getUserMedia,o=s=>{if(s){s=this.audioContext.createMediaStreamSource(s),this.aa=s.channelCount;const a=this.g(this.audioContext,s.channelCount,e);this.P=a,this.autoConnect&&s.connect(a).connect(this.audioContext.destination)}else this.aa=0,this.P=this.g(this.audioContext,0,e),this.autoConnect&&this.P.connect(this.audioContext.destination);r&&r()};ui()(),navigator.mediaDevices===void 0?i.call(navigator,{audio:{optional:[{echoCancellation:!1,sampleSize:32}]}},o,console.error):i.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(o).catch(console.error)}else this.P=this.g(this.audioContext,0,e),ui()(),this.autoConnect&&this.P.connect(this.audioContext.destination);n&&await n,this.F=Vl(this.P.port),this.l.ca.addEventListener("message",Xs(this)),this.l.ca.start(),n={},n.contextUid=e,n.messagePort=this.l.xa,n.requestPort=this.l.ka,n.inputPort=this.l.ja,await this.F.initialize(Ll(n,[this.l.xa,this.l.ka,this.l.ja])),ui()()}else console.error("fatal: worker not reachable from worklet-main thread")}}const Yz=t=>{const e=navigator.mediaDevices===void 0?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.g:navigator.mediaDevices.getUserMedia;console.log("requesting microphone access"),navigator.mediaDevices===void 0?e.call(navigator,{audio:{optional:[{echoCancellation:!1,sampleSize:32}]}},t,console.error):e.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(t).catch(console.error)};async function o6(){console.log("enabling audio input"),Yz(async t=>{if(t){t=(await this.Ja()).createMediaStreamSource(t),this.aa=t.channelCount;const e=await this.Ka();t.connect(e)}})}let ds,Ji,ny=0;async function s6(t){if(!ds&&(await t.Ca(),!ds)){console.error("SPN FATAL: Couldn't create iFrame");return}var e=`audioWorklet${ny}`;t.h=e,ny+=1,Ji||(Ji=Vl(QY())),t.audioContext||(t.M&&console.error("fatal: the provided AudioContext was undefined"),t.audioContext=new(Yr())({sampleRate:t.sampleRate})),t.audioContext.state==="closed"&&(t.M&&console.error("fatal: the provided AudioContext was closed, falling back new AudioContext"),t.audioContext=new(Yr())({sampleRate:t.sampleRate})),t.M||t.sampleRate===t.audioContext.sampleRate||(t.audioContext=new(Yr())({sampleRate:t.sampleRate})),ds[e]=t.audioContext,window[`__csound_wasm_iframe_parent_${e}`]=t.audioContext;let n;t.ba&&await new Promise(i=>{Yz(o=>{o&&(n=t.audioContext.createMediaStreamSource(o)),i()})}),Ss()();const r={};r.contextUid=e,r.hardwareBufferSize=32768,r.softwareBufferSize=2048,r.inputsCount=t.aa,r.outputsCount=t.da,r.sampleRate=t.sampleRate,r.audioInputPort=t.l.ja,r.messagePort=t.l.wa,r.requestPort=t.l.ka,r.audioContextIsProvided=t.M,r.autoConnect=t.autoConnect,r.initialPlayState=t.v,await Ji.initialize(Ll(r,[t.l.ja,t.l.wa,t.l.ka])),Ss()(),(e=ds[`${e}Node`]||window[`__csound_wasm_iframe_parent_${e}Node`])&&n&&n.connect(e),t.m.ea(e),t.pa&&t.A&&t.A.$&&(Ss()(),Lm({ua:t.A.$.bind(t.A)}))}class a6{constructor({audioContext:e,M:n,autoConnect:r}){this.ba=this.pa=!1,this.l=this.m=this.g=this.h=void 0,this.autoConnect=r,this.M=n,this.audioContext=e,this.da=this.aa=this.sampleRate=this.A=this.v=void 0,Ss()()}async H(){if(window[`__csound_wasm_iframe_parent_${this.h}Node`]&&(window[`__csound_wasm_iframe_parent_${this.h}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.h}Node`]),this.audioContext){if(this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}delete this.audioContext}Ji&&(Ji[Ls](),Ji=void 0),this.g&&this.g.remove(),ds=void 0,ny=0}async onPlayStateChange(e){if(this.v!==e){switch(e){case"realtimePerformanceStarted":Ss()(),this.v=e,await s6(this),await this.A.j.U(),this.m.ma(this.A);break;case"realtimePerformanceEnded":Ss()(),window[`__csound_wasm_iframe_parent_${this.h}Node`]&&(window[`__csound_wasm_iframe_parent_${this.h}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.h}Node`]);break;case"realtimePerformancePaused":this.A&&this.A.j&&(this.A.m&&this.A.m.fa(this),await this.A.j.ra());break;case"realtimePerformanceResumed":this.A&&this.A.j&&(this.A.m&&this.A.m.ga(this),await this.A.j.sa())}if(this.v=e,Ji&&(e!=="realtimePerformanceStarted"||e!=="renderStarted")){const n={};n.contextUid=this.h,n.newPlayState=e,await Ji.setPlayState(n)}}}async Ca(){if(window===void 0||window.document===void 0)throw new TypeError("Can only run SPN in Browser scope");const e=window.document;var n=[`<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
</head>
<body>`,`<script type="text/javascript" src="${(window.URL||window.webkitURL).createObjectURL(new Blob(['(function(){/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar r=this||self;function t(a,c){a=a.split(".");var b=r;a[0]in b||"undefined"==typeof b.execScript||b.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===c?b[d]&&b[d]!==Object.prototype[d]?b=b[d]:b=b[d]={}:b[d]=c};const u=Symbol("Comlink.proxy"),v=Symbol("Comlink.endpoint"),w=Symbol("Comlink.releaseProxy"),x=Symbol("Comlink.thrown"),y=a=>"object"==typeof a&&null!==a||"function"==typeof a,B=new Map([["proxy",{R:a=>y(a)&&a[u],U(a){const {port1:c,port2:b}=new MessageChannel;return z(a,c),[b,[b]]},S:a=>(a.start(),A(a))}],["throw",{R:a=>y(a)&&x in a,U({value:a}){let c;return c=a instanceof Error?{T:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{T:!1,value:a},[c,[]]},S(a){if(a.T)throw Object.assign(Error(a.value.message),\na.value);throw a.value;}}]]);\nfunction z(a,c=self){c.addEventListener("message",function h(d){if(d&&d.data){var l=d.data.argumentList,{id:k,type:g,path:e}=Object.assign({path:[]},d.data);l=(l||[]).map(C);try{const f=e.slice(0,-1).reduce((n,q)=>n[q],a),p=e.reduce((n,q)=>n[q],a);switch(g){case "GET":var m=p;break;case "SET":f[e.slice(-1)[0]]=C(d.data.value);m=!0;break;case "APPLY":m=p.apply(f,l);break;case "CONSTRUCT":m=Object.assign(new p(...l),{[u]:!0});break;case "ENDPOINT":const {port1:n,port2:q}=new MessageChannel;z(a,q);m=\nD(n,[n]);break;case "RELEASE":m=void 0;break;default:return}}catch(f){m={value:f,[x]:0}}Promise.resolve(m).catch(f=>({value:f,[x]:0})).then(f=>{const [p,n]=E(f);f={...p};f.id=k;c.postMessage(f,n);"RELEASE"===g&&(c.removeEventListener("message",h),F(c))})}});c.start&&c.start()}function F(a){"MessagePort"===a.constructor.name&&a.close()}\nfunction A(a){return function l(b,d=[],h=function(){}){let k=!1;const g=new Proxy(h,{get(e,m){if(G(k),m===w)return()=>H(b,{type:"RELEASE",path:d.map(f=>f.toString())}).then(()=>{F(b);k=!0});if("then"===m){if(0===d.length)return{then:()=>g};e=H(b,{type:"GET",path:d.map(f=>f.toString())}).then(C);return e.then.bind(e)}return l(b,[...d,m])},set(e,m,f){G(k);const [p,n]=E(f);return H(b,{type:"SET",path:[...d,m].map(q=>q.toString()),value:p},n).then(C)},apply(e,m,f){G(k);e=d[d.length-1];if(e===v)return H(b,\n{type:"ENDPOINT"}).then(C);if("bind"===e)return l(b,d.slice(0,-1));const [p,n]=I(f);f={type:"APPLY"};f.path=d.map(q=>q.toString());f.argumentList=p;return H(b,f,n).then(C)},construct(e,m){G(k);const [f,p]=I(m);e={type:"CONSTRUCT"};e.path=d.map(n=>n.toString());e.argumentList=f;return H(b,e,p).then(C)}});return g}(a,[],void 0)}function G(a){if(a)throw Error("Proxy has been released and is not useable");}\nfunction I(a){a=a.map(E);const c=(b=a.map(d=>d[1]),Array.prototype.concat.apply([],b));return[a.map(d=>d[0]),c];var b}const J=new WeakMap;function D(a,c){return J.set(a,c),a}function E(a){for(const [c,b]of B)if(b.R(a)){const [d,h]=b.U(a);return[{type:"HANDLER",name:c,value:d},h]}return[{type:"RAW",value:a},J.get(a)||[]]}function C(a){switch(a.type){case "HANDLER":return B.get(a.name).S(a.value);case "RAW":return a.value}}\nfunction H(a,c,b){return new Promise(d=>{const h=Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");a.addEventListener("message",function g(k){k.data&&k.data.id&&k.data.id===h&&(a.removeEventListener("message",g),d(k.data))});a.start&&a.start();c.id=h;a.postMessage(c,b)})};let K;K=()=>()=>{};const L=(a,c)=>{const b=[];for(let d=0;d<a;d++)b.push(new Float64Array(c));return b};function M(){}M.prototype.h=!1;M.prototype.port=void 0;M.prototype.K=()=>{};M.prototype.u=()=>{};M.prototype.s=void 0;const N=()=>{var a=void 0!==window.webkitAudioContext?window.webkitAudioContext:void 0!==window.AudioContext?window.AudioContext:void 0;if(a)return new a};const O=a=>{const c=[];for(let b=0;b<a;b++)c.push(b);return c};let P;const Q=async a=>{const c=window[a],b=window.parent[`__csound_wasm_iframe_parent_${a}`];if(c){if("closed"!==c.state)try{await c.close()}catch(d){}delete window[a]}if(b){if(c!==b&&"closed"!==b.state)try{await b.close()}catch(d){}delete window.parent[`__csound_wasm_iframe_parent_${a}`]}},R=(a,c)=>{window[a]?window[`${a}Node`]=c:window.parent[`__csound_wasm_iframe_parent_${a}Node`]=c},S=new Map;\nclass T{constructor({audioContext:a,v:c,i:b,j:d,A:h,D:l,sampleRate:k,H:g,autoConnect:e}){this.F=this.g=this.m=void 0;this.autoConnect=e;this.H=g;this.i=b;this.j=d;this.A=h;this.D=l;this.sampleRate=k;this.B=[];this.O=[];this.o=this.h=this.l=this.G=this.C=0;this.M=this.P=!1;this.O=L(h,b);this.B=L(l,b);this.audioContext=a;this.v=c;this.L=this.audioContext.createScriptProcessor(this.j,h,l);this.I=this.I.bind(this);this.L.onaudioprocess=this.I.bind(this);this.autoConnect?R(c,this.L.connect(this.audioContext.destination)):\nR(c,this.L.context.destination);this.N=this.N.bind(this);this.J=this.J.bind(this)}async J({g:a,F:c,m:b}){this.g=a;this.F=c;this.m=b;if("suspended"===this.audioContext.state){for(a=0;100>a;)if(await new Promise(d=>setTimeout(d,100)),"suspended"===this.audioContext.state)a+=1;else return;this.g.u("realtimePerformancePaused")}}N({X:a,Y:c,Z:b}){this.h-=c;if(a){for(let d=0;d<this.D;++d){let h=!1,l=c;(b+c)%this.i<b&&(h=!0,l=this.i-b);this.B[d].set(a[d].subarray(0,l),b);h&&this.B[d].set(a[d].subarray(l))}this.l+=\nc}this.M||(this.M=!0,P&&P())}I(a){const c=a.inputBuffer,b=a.outputBuffer;if("realtimePerformanceEnded"===this.g.s)return U({v:this.v,$:"realtimePerformanceEnded"}),!0;if(!this.P){a=4*this.j;var d={readIndex:0};d.numFrames=a;this.m.postMessage(d);this.h+=a;return this.P=!0}if(!this.M)return!0;a=c?O(this.A).map(g=>c.getChannelData(g)):[];d=b?O(this.D).map(g=>b.getChannelData(g)):[];var h=0<a.length;const l=(this.C+d[0].length)%this.i,k=h?(this.G+a[0].length)%this.i:0;if("realtimePerformanceStarted"!==\nthis.g.s&&"realtimePerformanceResumed"!==this.g.s)return d.forEach(g=>{g.fill(0)}),!0;if(this.l>=d[0].length){d.forEach((g,e)=>{g.set(this.B[e].subarray(this.C,l<this.C?this.i:l))});if(0<this.A&&h&&0<a[0].length&&(h=4*this.j,a.forEach((g,e)=>{this.O[e].set(g,this.G)}),0===k%h)){const g=[],e=(0===k?this.i:k)-h,m=0===k?this.i:k;this.O.forEach(f=>{g.push(f.subarray(e,m))});this.F(g)}this.C=l;this.G=k;this.l-=d[0].length;this.o=0}else 1<this.o&&12>this.o&&(this.g.K("Buffer underrun"),this.o+=1),100===\nthis.o&&(this.g.K("FATAL: 100 buffers failed in a row"),this.g.u("realtimePerformanceEnded"));this.l<4*this.j&&this.h<4*this.j&&(a={},a.readIndex=(this.l+l+this.h)%this.i,a.numFrames=4*this.j,this.m.postMessage(a),this.h+=4*this.j);return!0}}\nconst V=({W:a})=>c=>{a.postMessage(c)},W=({port:a})=>{const c=new M;c.K=b=>{a.postMessage({log:b})};c.u=b=>{if("realtimePerformanceStarted"!==c.s||"realtimePerformanceStarted"!==b){var d={};d.playStateChange=b;a.postMessage(d)}};c.h=!0;return c},X=({m:a,V:c})=>{a.addEventListener("message",b=>{c.N({X:b.data.audioPacket,Y:b.data.numFrames,Z:b.data.readIndex})});a.start()},U=async a=>{const c=a.contextUid;a=a.newPlayState;const b=S.get(c);if(b)if("resume"===a)"suspended"===b.audioContext.state&&b.audioContext.resume(),\n"running"===b.audioContext.state&&b.g.u("realtimePerformanceResumed");else if(b.g){if("realtimePerformanceEnded"===a&&"realtimePerformanceEnded"!==b.g.s){b.g.u("realtimePerformanceEnded");if(b.autoConnect){const d=window[c+"Node"]||window.parent[`__csound_wasm_iframe_parent_${c}Node`];d&&d.disconnect()}window[c+"Node"]&&delete window[c+"Node"];window.parent[`__csound_wasm_iframe_parent_${c}Node`]&&delete window.parent[`__csound_wasm_iframe_parent_${c}Node`];S.delete(c);b.autoConnect&&!b.H&&Q(c)}else"realtimePerformanceResumed"===\na&&"suspended"===b.audioContext.state&&b.audioContext.resume();b.g.s=a}};t("setPlayState$$module$src$workers$old_spn_worker",U);\nconst Y=async a=>{const c=a.contextUid;var b=a.hardwareBufferSize;const d=a.softwareBufferSize,h=a.inputsCount,l=a.outputsCount,k=a.sampleRate;var g=a.audioInputPort,e=a.messagePort;const m=a.requestPort,f=a.audioContextIsProvided,p=a.autoConnect;a=a.initialPlayState;K()();P=void 0;const n=window[c]||window.parent[`__csound_wasm_iframe_parent_${c}`]||N();b=new T({audioContext:n,v:c,i:b,j:d,A:h,D:l,sampleRate:k,H:f,autoConnect:p});e=W({port:e});g=V({W:g,V:b});X({m,V:b});b.J({g:e,F:g,m});S.set(c,b);\nif("realtimePerformanceStarted"===a)return await new Promise((q,aa)=>{P=q;setTimeout(()=>{if("function"===typeof P)return aa(Error("a call to start() timed out")),P=void 0,-1},6E5)})};t("initialize$$module$src$workers$old_spn_worker",Y);const Z={};Z.initialize=Y;Z.setPlayState=U;z(Z,function(a,c=self,b="*"){return{postMessage:(d,h)=>a.postMessage(d,b,h),addEventListener:c.addEventListener.bind(c),removeEventListener:c.removeEventListener.bind(c)}}(window.parent));}).call(this);\n//# sourceMappingURL=__compiled.old-spn.worker.js.map\n']))}"><\/script>`,"</body>"].join(`
`);n=new Blob([n],{type:"text/html"}),this.g=document.createElement("iframe"),this.g.src=URL.createObjectURL(n),this.g.sandbox.add("allow-scripts","allow-same-origin"),this.g.style.cssText="position:absolute;left:0;top:-999px;width:1px;height:1px;",n=new Promise(r=>{this.g.onload=()=>{r()}}),e.body.append(this.g);try{await n}catch(r){console.error(r)}ds=this.g.contentWindow}}ce!==void 0&&(ce={});ce.BigInt||(ce.BigInt=BigInt===void 0?Number:BigInt);const l6=ce.BigInt(1)|ce.BigInt(2)|ce.BigInt(4)|ce.BigInt(8)|ce.BigInt(16)|ce.BigInt(32)|ce.BigInt(64)|ce.BigInt(128)|ce.BigInt(256)|ce.BigInt(2097152)|ce.BigInt(4194304)|ce.BigInt(8388608)|ce.BigInt(134217728),c6=ce.BigInt(0);function u6(t){let e=arguments[0];for(let r=1;r<arguments.length;r++){const i=arguments[r];if(i.lastIndexOf("/",0)==0)e=i;else{var n;(n=e=="")||(n=e.length-1,n=0<=n&&e.indexOf("/",n)==n),n?e+=i:e+="/"+i}}return e}function Fs(t){if(t=="")return".";let e="";t.lastIndexOf("/",0)==0&&(e="/",t.lastIndexOf("//",0)==0&&t.lastIndexOf("///",0)!=0&&(e="//")),t=t.split("/");const n=[];for(let r=0;r<t.length;r++){const i=t[r];i!=""&&i!="."&&(i!=".."||!e&&!n.length||n[n.length-1]==".."?n.push(i):n.pop())}return e+n.join("/")||"."}function Hs(t){return/^\//g.test(t)?t:`/${t}`}function ry(){return typeof performance>"u"||typeof performance.now>"u"?Date.now()-Date.now():performance.now()}function Fz(t){var e=t.reduce((r,i)=>r+i.length,0);if(t.length!==0){e=new Uint8Array(e);var n=0;for(const r of t)e.set(r,n),n+=r.length;return e}}function X(){this.fd=Array.from({length:4}),this.fd[0]={fd:0,path:"/dev/stdin",seekPos:ce.BigInt(0),buffers:[]},this.fd[1]={fd:1,path:"/dev/stdout",seekPos:ce.BigInt(0),buffers:[]},this.fd[2]={fd:2,path:"/dev/stderr",seekPos:ce.BigInt(0),buffers:[]},this.fd[3]={fd:3,path:"/",seekPos:ce.BigInt(0),buffers:[]},this.g=this.g.bind(this),this.h=0}X.prototype.start=function(t){this.h=ry(),t.exports._start()};function iy(t,e){const n={};e=WebAssembly.Module.imports(e);for(const r of e)r.kind==="function"&&r.module.startsWith("wasi_")&&(typeof n[r.module]!="object"&&(n[r.module]={}),n[r.module][r.name]=t[r.name].bind(t));return n}X.prototype.g=function(){return this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer)),this.view};function dh(t){const e=Math.trunc(t);return ce.BigInt(e)*ce.BigInt(1e6)+ce.BigInt(Math.round(1e6*(t-e)))}function d6(t,e){switch(e){case 1:return Math.floor(ry());case 0:return dh(Date.now());case 2:case 3:return Math.floor(ry()-t.h);default:return 0}}X.prototype.Va=function(){return 0};ie("args_get",X.prototype.Va);X.prototype.Wa=function(){return 0};ie("args_sizes_get",X.prototype.Wa);X.prototype.Xa=function(){return 0};ie("clock_res_get",X.prototype.Xa);X.prototype.Ya=function(t,e,n){return this.g().setBigUint64(n,ce.BigInt(d6(this,t)),!0),0};ie("clock_time_get",X.prototype.Ya);X.prototype.$a=function(){return 0};ie("environ_get",X.prototype.$a);X.prototype.ab=function(){return 0};ie("environ_sizes_get",X.prototype.ab);X.prototype.bb=function(){return 52};ie("fd_advise",X.prototype.bb);X.prototype.cb=function(){return 52};ie("fd_allocate",X.prototype.cb);X.prototype.eb=function(){return 0};ie("fd_close",X.prototype.eb);X.prototype.fb=function(){return 0};ie("fd_datasync",X.prototype.fb);X.prototype.gb=function(t,e){return t=this.g(),t.setUint8(e+4,4),t.setUint16(e+2,0,!0),t.setUint16(e+4,0,!0),t.setBigUint64(e+8,ce.BigInt(l6),!0),t.setBigUint64(e+8+8,ce.BigInt(c6),!0),0};ie("fd_fdstat_get",X.prototype.gb);X.prototype.hb=function(){return 52};ie("fd_fdstat_set_flags",X.prototype.hb);X.prototype.ib=function(){return 0};ie("fd_fdstat_set_rights",X.prototype.ib);X.prototype.jb=function(t,e){let n=0;this.fd[t]&&(n=this.fd[t].buffers.reduce(function(i,o){return i+(o==null?void 0:o.byteLength)?o==null?void 0:o.byteLength:0},0));const r=this.g();return r.setBigUint64(e,ce.BigInt(t),!0),e+=8,r.setBigUint64(e,ce.BigInt(t),!0),e+=8,r.setUint8(e,4),e+=8,r.setBigUint64(e,ce.BigInt(1),!0),e+=8,r.setBigUint64(e,ce.BigInt(n),!0),e+=8,r.setBigUint64(e,dh(this.h),!0),e+=8,r.setBigUint64(e,dh(this.h),!0),r.setBigUint64(e+8,dh(this.h),!0),0};ie("fd_filestat_get",X.prototype.jb);X.prototype.kb=function(){return 0};ie("fd_filestat_set_size",X.prototype.kb);X.prototype.lb=function(){return 0};ie("fd_filestat_set_times",X.prototype.lb);X.prototype.mb=function(){return 0};ie("fd_pread",X.prototype.mb);X.prototype.nb=function(t,e){if(!this.fd[t]&&!this.fd[t-1])return 8;var{path:n}=this.fd[t];return t=this.g(),n=hd.encode(n),new Uint8Array(t.buffer).set(n,e),0};ie("fd_prestat_dir_name",X.prototype.nb);X.prototype.ob=function(t,e){if(!this.fd[t])return 8;var{path:n}=this.fd[t];return t=this.g(),n=hd.encode(n),t.setUint8(e,0),t.setUint32(e+4,n.byteLength,!0),0};ie("fd_prestat_get",X.prototype.ob);X.prototype.pb=function(t,e,n,r,i){return console.log("fd_pwrite",t,e,n,r,i,arguments),0};ie("fd_pwrite",X.prototype.pb);X.prototype.qb=function(t,e,n,r){const i=this.fd[t]&&this.fd[t].buffers;var o=i.reduce((d,f)=>d+f.length,0);const s=this.g();if(i&&i.length!==0){var a=Number(this.fd[t].seekPos),l=0,c=!1;if(a>=o)return-1;for(o=0;o<n;o++){var u=e+8*o;const d=s.getUint32(u,!0);u=s.getUint32(u+4,!0),c||(l+=u,Array.from({length:u},(f,h)=>h).reduce((f,h)=>{if(c)return f;const[p,m]=f;let b=f=0,g=!1,v=0,y;if(h===0)for(;!g;)y=i[f]?i[f].byteLength:0,v<=a&&y+v>a?(g=!0,b=a-v):(v+=y,f+=1);else f=p,b=m;return i[f]?(s.setUint8(d+h,i[f][b]),b+1>=i[f].byteLength?(f=p+1,b=0):b+=1):(s.setUint8(d+h,0),a+=h,c=!0),[f,b]},[0,0]),c||(a+=u))}return this.fd[t].seekPos=ce.BigInt(a),s.setUint32(r,l,!0),0}console.error("Reading non existent file",t,this.fd[t])};ie("fd_read",X.prototype.qb);X.prototype.rb=function(){return 0};ie("fd_readdir",X.prototype.rb);X.prototype.sb=function(){return 0};ie("fd_renumber",X.prototype.sb);X.prototype.tb=function(t,e,n,r){const i=this.g();switch(n){case 1:let o;this.fd[t].seekPos=((o=this.fd[t].seekPos)!=null?o:ce.BigInt(0))+ce.BigInt(e);break;case 2:n=(this.fd[t].buffers||[]).reduce((s,a)=>s+a.length,0),this.fd[t].seekPos=BigInt(n)+BigInt(e);break;case 0:this.fd[t].seekPos=BigInt(e)}return i.setBigUint64(r,this.fd[t].seekPos,!0),0};ie("fd_seek",X.prototype.tb);X.prototype.ub=function(){return 0};ie("fd_sync",X.prototype.ub);X.prototype.vb=function(t,e){const n=this.g();return this.fd[t].seekPos||(this.fd[t].seekPos=ce.BigInt(0)),n.setBigUint64(e,this.fd[t].seekPos,!0),0};ie("fd_tell",X.prototype.vb);X.prototype.wb=function(t,e,n,r){let i=!1;const o=this.g();this.fd[t].buffers=this.fd[t].buffers||[],this.fd[t].seekPos===ce.BigInt(0)&&0<this.fd[t].buffers.length&&(i=!0);let s=0;for(let c=0;c<n;c++){var a=e+8*c,l=o.getUint32(a,!0);a=o.getUint32(a+4,!0),s+=a,l=new Uint8Array(o.buffer,l,a),i?this.fd[t].buffers.unshift(l.slice(0,a)):this.fd[t].buffers.push(l.slice(0,a))}return this.fd[t].seekPos+=ce.BigInt(s),o.setUint32(r,s,!0),[1,2].includes(t)&&console.log(wr.decode(Fz(this.fd[t].buffers))),0};ie("fd_write",X.prototype.wb);X.prototype.xb=function(){return 0};ie("path_create_directory",X.prototype.xb);X.prototype.yb=function(){return 0};ie("path_filestat_get",X.prototype.yb);X.prototype.zb=function(){return 0};ie("path_filestat_set_times",X.prototype.zb);X.prototype.Ab=function(){return 0};ie("path_link",X.prototype.Ab);X.prototype.Bb=function(t,e,n,r,i,o,s,a,l){e=this.g(),i=(this.fd[t]||{path:"/"}).path,n=new Uint8Array(e.buffer,n,r),n=wr.decode(n);const c=Hs(Fs(u6(t===3?"":i,n)));return c.startsWith("/..")||c==="/._"||c==="/.AppleDouble"?8:((t=Object.values(this.fd).find(u=>u.path===c&&Array.isArray(u.buffers)))?n=t.fd:(n=this.fd.length,this.fd[n]={fd:n}),this.fd[n]={...this.fd[n],path:c,type:"file",seekPos:ce.BigInt(0),buffers:t?this.fd[n].buffers:[]},e.setUint32(l,n,!0),0)};ie("path_open",X.prototype.Bb);X.prototype.Cb=function(){return 0};ie("path_readlink",X.prototype.Cb);X.prototype.Db=function(){return 0};ie("path_remove_directory",X.prototype.Db);X.prototype.Eb=function(){return 0};ie("path_rename",X.prototype.Eb);X.prototype.Fb=function(){return 0};ie("path_symlink",X.prototype.Fb);X.prototype.Gb=function(){return 0};ie("path_unlink_file",X.prototype.Gb);X.prototype.Hb=function(){return 0};ie("poll_oneoff",X.prototype.Hb);X.prototype.Ib=function(){return 0};ie("proc_exit",X.prototype.Ib);X.prototype.Jb=function(){return 0};ie("proc_raise",X.prototype.Jb);X.prototype.Kb=function(){return 0};ie("random_get",X.prototype.Kb);X.prototype.Lb=function(){return 0};ie("sched_yield",X.prototype.Lb);X.prototype.Mb=function(){return 52};ie("sock_recv",X.prototype.Mb);X.prototype.Nb=function(){return 52};ie("sock_send",X.prototype.Nb);X.prototype.Ob=function(){return 52};ie("sock_shutdown",X.prototype.Ob);function Hz(t,e){return(t=Object.values(t.fd).find(({path:n})=>n===e))&&t.buffers}X.prototype.readdir=function(t){const e=(Hs(Fs(t))+"/").replace("//","/"),n=[];return Object.values(this.fd).forEach(({path:r})=>!/\//g.test(r.replace(e,""))&&n.push(r)),n.map(r=>r.replace(e,"").replace(/^\//g,"")).filter(r=>!!r)};X.prototype.writeFile=function(t,e){const n=Hs(Fs(t));t=Object.keys(this.fd).length;const r=Object.values(this.fd).find(({path:i})=>i===n);this.fd[t]={fd:t,path:n,seekPos:ce.BigInt(0),buffers:[e]},r&&delete this.fd[r]};X.prototype.appendFile=function(t,e){var n=Hs(Fs(t));(n=Hz(this,n))?n.push(e):console.error(`Can't append to non-existing file ${t}`)};X.prototype.readFile=function(t){if(t=Hs(Fs(t)),t=Hz(this,t))return Fz(t)};X.prototype.unlink=function(t){const e=Hs(Fs(t));(t=Object.values(this.fd).find(({path:n})=>n===e))?delete this.fd[t]:console.error(`While trying to unlink ${e}, path not found`)};X.prototype.mkdir=function(t){const e=Hs(Fs(t)),n=[];Object.values(this.fd).forEach(({path:r})=>r.startsWith(e)&&n.push(r)),0<n.length?console.warn(`mkdir: path ${t} already exists`):(t=Object.keys(this.fd).length,this.fd[t]={fd:t,path:e})};function Yc(t){const e=t.length;let n=0,r=Number.POSITIVE_INFINITY,i,o,s,a,l,c;for(l=0;l<e;++l)t[l]>n&&(n=t[l]),t[l]<r&&(r=t[l]);const u=1<<n,d=new Uint32Array(u);for(i=1,o=0,s=2;i<=n;){for(l=0;l<e;++l)if(t[l]===i){a=0;var f=o;for(c=0;c<i;++c)a=a<<1|f&1,f>>=1;for(f=i<<16|l,c=a;c<u;c+=s)d[c]=f;++o}++i,o<<=1,s<<=1}return[d,n,r]}function f6(t,e){switch(this.J=[],this.bufferSize=32768,this.u=this.C=this.o=this.L=0,this.B=new Uint8Array(t),this.O=!1,this.W=Ra,this.resize=!1,(e||!(e={}))&&(e.index&&(this.o=e.index),e.bufferSize&&(this.bufferSize=e.bufferSize),e.W&&(this.W=e.W),e.resize&&(this.resize=e.resize)),this.W){case Oc:this.g=32768,this.h=new Uint8Array(this.bufferSize+33026);break;case Ra:this.g=0,this.h=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode")}}var Oc=0,Ra=1,o5=new Uint16Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),jz=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),Sp=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]),Dz=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),kp=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),oy;const sy=new Uint8Array(288);let Qo,s5;Qo=0;for(s5=sy.length;Qo<s5;++Qo)sy[Qo]=143>=Qo?8:255>=Qo?9:279>=Qo?7:8;oy=Yc(sy);var ay;const ly=new Uint8Array(30);let fh,a5;fh=0;for(a5=ly.length;fh<a5;++fh)ly[fh]=5;ay=Yc(ly);function Yn(t,e){let n=t.C,r=t.u;const i=t.B;let o=t.o;if(o+(e-r+7>>3)>=i.length)throw Error("input buffer is broken");for(;r<e;)n|=i[o++]<<r,r+=8;return t.C=n>>>e,t.u=r-e,t.o=o,n&(1<<e)-1}function Xu(t,e){let n=t.C,r=t.u;var i=t.B;let o=t.o;var s=i.length;const a=e[0];for(e=e[1];r<e&&!(o>=s);)n|=i[o++]<<r,r+=8;if(i=a[n&(1<<e)-1],s=i>>>16,s>r)throw Error("invalid code length: "+s);return t.C=n>>s,t.u=r-s,t.o=o,i&65535}function l5(t,e,n){let r=t.h,i=t.g;t.R=e;const o=r.length-258;var s;let a,l;for(;(s=Xu(t,e))!==256;)if(256>s)i>=o&&(t.g=i,r=cy(t),i=t.g),r[i++]=s;else for(s-=257,l=jz[s],0<Sp[s]&&(l+=Yn(t,Sp[s])),s=Xu(t,n),a=Dz[s],0<kp[s]&&(a+=Yn(t,kp[s])),i>=o&&(t.g=i,r=cy(t),i=t.g);l--;)r[i]=r[i++-a];for(;8<=t.u;)t.u-=8,t.o--;t.g=i}function c5(t,e,n){let r=t.h,i=t.g;t.R=e;let o=r.length;var s;let a,l;for(;(s=Xu(t,e))!==256;)if(256>s)i>=o&&(r=uy(t),o=r.length),r[i++]=s;else for(s-=257,l=jz[s],0<Sp[s]&&(l+=Yn(t,Sp[s])),s=Xu(t,n),a=Dz[s],0<kp[s]&&(a+=Yn(t,kp[s])),i+l>o&&(r=uy(t),o=r.length);l--;)r[i]=r[i++-a];for(;8<=t.u;)t.u-=8,t.o--;t.g=i}function cy(t){const e=new Uint8Array(t.g-32768),n=t.g-32768,r=t.h;return e.set(r.subarray(32768,e.length)),t.J.push(e),t.L+=e.length,r.set(r.subarray(n,n+32768)),t.g=32768,r}function uy(t,e){let n=Math.trunc(t.B.length/t.o+1);const r=t.B,i=t.h;return e&&(typeof e.Ia=="number"&&(n=e.Ia),typeof e.Ua=="number"&&(n+=e.Ua)),2>n?(e=(r.length-t.o)/t.R[2],e=Math.trunc(e/2*258),e=e<i.length?i.length+e:i.length<<1):e=i.length*n,e=new Uint8Array(e),e.set(i),t.h=e,t.h}function h6(t){var e;this.o=t,this.g=0,(e||!(e={}))&&(e.index&&(this.g=e.index),e.verify&&(this.verify=e.verify));const n=t[this.g++],r=t[this.g++];switch(n&15){case 8:this.method=8;break;default:throw Error("unsupported compression method")}if(((n<<8)+r)%31!==0)throw Error("invalid fcheck flag:"+((n<<8)+r)%31);if(r&32)throw Error("fdict flag is not supported");this.h=new f6(t,{index:this.g,bufferSize:e.bufferSize,W:e.W,resize:e.resize})}function p6(t){var e=t.o,n;e:{for(n=t.h;!n.O;){var r=void 0,i=void 0,o=void 0,s=void 0,a=n,l=Yn(a,3);switch(l&1&&(a.O=!0),l>>>=1,l){case 0:l=a.B,i=a.o;var c=a.h,u=a.g;if(o=l.length,r=c.length,a.C=0,a.u=0,i+1>=o)throw Error("invalid uncompressed block header: LEN");if(s=l[i++]|l[i++]<<8,i+1>=o)throw Error("invalid uncompressed block header: NLEN");if(o=l[i++]|l[i++]<<8,s===~o)throw Error("invalid uncompressed block header: length verify");if(i+s>l.length)throw Error("input buffer is broken");switch(a.W){case Oc:for(;u+s>c.length;)o=r-u,s-=o,c.set(l.subarray(i,i+o),u),u+=o,i+=o,a.g=u,c=cy(a),u=a.g;break;case Ra:for(;u+s>c.length;)c=uy(a,{Ia:2});break;default:throw Error("invalid inflate mode")}c.set(l.subarray(i,i+s),u),a.o=i+s,a.g=u+s,a.h=c;break;case 1:switch(a.W){case Ra:c5(a,oy,ay);break;case Oc:l5(a,oy,ay);break;default:throw Error("invalid inflate mode")}break;case 2:for(l=Yn(a,5)+257,r=Yn(a,5)+1,c=Yn(a,4)+4,u=new Uint8Array(o5.length),i=0;i<c;++i)u[o5[i]]=Yn(a,3);for(u=Yc(u),c=new Uint8Array(l+r),i=0,r=l+r;i<r;)switch(o=Xu(a,u),o){case 16:for(o=3+Yn(a,2);o--;)c[i++]=s;break;case 17:for(o=3+Yn(a,3);o--;)c[i++]=0;s=0;break;case 18:for(o=11+Yn(a,7);o--;)c[i++]=0;s=0;break;default:s=c[i++]=o}switch(s=Yc(c.subarray(0,l)),l=Yc(c.subarray(l)),a.W){case Ra:c5(a,s,l);break;case Oc:l5(a,s,l);break;default:throw Error("invalid inflate mode")}break;default:throw Error("unknown BTYPE: "+l)}}switch(n.W){case Oc:{a=0,s=n.h,l=n.J,c=new Uint8Array(n.L+(n.g-32768));let d;if(l.length===0)n=n.h.subarray(32768,n.g);else{for(u=0,r=l.length;u<r;++u)for(i=l[u],o=0,d=i.length;o<d;++o)c[a++]=i[o];for(u=32768,r=n.g;u<r;++u)c[a++]=s[u];n.J=[],n.buffer=c,n=n.buffer}}break e;case Ra:s=n.g,n.resize?(a=new Uint8Array(s),a.set(n.h.subarray(0,s))):a=n.h.subarray(0,s),n.buffer=a,n=n.buffer;break e;default:throw Error("invalid inflate mode")}}if(t.g=t.h.o,t.verify){if(t=(e[t.g++]<<24|e[t.g++]<<16|e[t.g++]<<8|e[t.g++])>>>0,e=n,typeof e=="string"){for(e=[...e],a=0,s=e.length;a<s;a++)e[a]=(e[a].charPointAt(0)&255)>>>0;e=new Uint8Array([e])}for(a=1,s=0,l=e.length,c=0;0<l;){i=1024<l?1024:l,l-=i;do a+=e[c++],s+=a;while(--i);a%=65521,s%=65521}if(t!==(s<<16|a)>>>0)throw Error("invalid adler-32 checksum")}return n}const Uz=({memory:t,messagePort:e,Ra:n})=>function(r,i,o,s){if(t){r=new Uint8Array(t.buffer,s,o),r=wr.decode(r);var a=/\n$/g.test(r);i=/^\n/g.test(r);var l=r.split(`
`).filter(u=>0<u.length),c=[];(l.length===0&&a||i)&&(c.push(n.join("")),us(n)),l.forEach((u,d)=>{d+1===l.length?a?d===0?(c.push(n.join("")+u),us(n)):c.push(u):n.push(u):d===0?(c.push(n.join("")+u),us(n)):c.push(u)}),c.forEach(u=>{u.replace(/(\r\n|\n|\r)/gm,"")&&e.Oa({log:u})})}},m6=t=>t&&typeof t=="object"&&typeof t.exports=="object"?t.exports.__wasm_call_ctors?t.exports.csoundModuleCreate||t.exports.csound_opcode_init||t.exports.csound_fgen_init?!0:(console.error(t.exports,`A csound plugin turns out to be neither a plugin, opcode or module.
Perhaps csdl.h or module.h wasn't imported correctly?`),!1):(console.error(`A csound plugin didn't export __wasm_call_ctors.
Please re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors`),!1):(console.error("Error instantiating a csound plugin, instance and/or export is missing!"),!1),u5=t=>{function e(){let c=0,u=1;for(;;){const d=t[n++];if(c+=(d&127)*u,u*=128,!(d&128))break}return c}if(new Uint32Array(new Uint8Array(t.subarray(0,24)).buffer)[0]!==1836278016&&console.error("Wasm magic number is missing!"),t[8]!==0)return xI(),"static";let n=9;const r=e();n++,n++,n++,n++,n++,n++,n++,n++,n+=3;const i=e(),o=e(),s=e(),a=e(),l=e();return{dc:r,Da:i,Na:o,bc:l,Sa:s,ec:a}},g6=async({Pb:t,I:e,messagePort:n})=>{const r=await WebAssembly.compile(t);t=new WebAssembly.Memory({initial:16384});const i=iy(e,r);return i.oa=i.oa||{},i.oa.Vb=()=>0,i.oa.memory=t,i.oa.Wb=Uz({memory:i.oa.memory,Ra:[],messagePort:n}),n=await WebAssembly.instantiate(r,i),e.memory=t,e.start(n),n.exports.__wasi_js_csoundSetMessageStringCallback(),[n,e]};async function v6({Z:t,withPlugins:e=[],messagePort:n}){var r={};const i=new X;t=new Uint8Array(t),t=p6(new h6(t));var o=u5(t);if(o==="static")return await g6({messagePort:n,Pb:t,ic:r,I:i});r=o.Da;const s=o.Na;o=o.Sa,e=await e.reduce(async(g,v)=>{g=await g;let y,x;try{y=new Uint8Array(v),x=u5(y)}catch(k){console.error("Error in plugin",k)}return x&&g.push({La:x,Qb:y}),g},[]),r=Math.ceil((r+s)/65536);var a=Math.ceil(e.reduce((g,{La:v})=>v==="static"?0:g+(v.Da+s),0)/65536);a=r+a+2048;const l=new WebAssembly.Memory({initial:a,maximum:16384}),c=new WebAssembly.Table({initial:o+1,element:"anyfunc"});i.memory=l;const u=new WebAssembly.Global({value:"i32",mutable:!0},65536*a);o=new WebAssembly.Global({value:"i32",mutable:!0},65536*a),a=new WebAssembly.Global({value:"i32",mutable:!1},2048);const d=new WebAssembly.Global({value:"i32",mutable:!1},1),f=new WebAssembly.Global({value:"i32",mutable:!0},0);t=await WebAssembly.compile(t);const h=iy(i,t);let p=[],m=r;h.env=h.env||{},h.env.memory=l,h.env.__indirect_function_table=c,h.env.__stack_pointer=u,h.env.__memory_base=a,h.env.__table_base=d,h.env.csoundLoadModules=g=>(p.forEach(v=>{if(b===void 0)console.error("csound-wasm internal: timing problem detected!");else{var y=b;if(v.exports.csoundModuleInit){var x=new WebAssembly.Global({value:"i32",mutable:!0},0),k=new WebAssembly.Global({value:"i32",mutable:!0},0),O=new WebAssembly.Global({value:"i32",mutable:!0},0);const T=new WebAssembly.Global({value:"i32",mutable:!0},0);let M=c.length;typeof v.exports.csoundModuleCreate=="function"&&(c.grow(1),x.value=M,c.set(M,v.exports.csoundModuleCreate),M+=1),typeof v.exports.csoundModuleInit=="function"&&(c.grow(1),k.value=M,c.set(M,v.exports.csoundModuleInit),M+=1),typeof v.exports.csoundModuleDestroy=="function"&&(c.grow(1),O.value=M,c.set(M,v.exports.csoundModuleDestroy),M+=1),typeof v.exports.csoundModuleErrorCodeToString=="function"&&(c.grow(1),T.value=M,c.set(M,v.exports.csoundModuleErrorCodeToString)),y.exports.csoundWasiLoadPlugin(g,x,k,O,T)}else v.exports.csound_opcode_init||v.exports.csound_fgen_init?(x=new WebAssembly.Global({value:"i32",mutable:!0},0),k=new WebAssembly.Global({value:"i32",mutable:!0},0),O=c.length,typeof v.exports.csound_opcode_init=="function"&&(x.value=O,c.grow(1),c.set(O,v.exports.csound_opcode_init),O+=1),typeof v.exports.csound_fgen_init=="function"&&(k.value=O,c.grow(1),c.set(O,v.exports.csound_fgen_init)),y.exports.csoundWasiLoadOpcodeLibrary(g,k,x)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")}}),0),h.env.csoundLoadExternals=()=>{},h.env._ZTH5errno=function(){},h.env.csoundWasiJsMessageCallback=Uz({memory:l,messagePort:n,Ra:[]}),h.env.printDebugCallback=(g,v)=>{g=new Uint8Array(l.buffer,g,v),g=wr.decode(g),console.log(g)},h["GOT.mem"]=h["GOT.mem"]||{},h["GOT.mem"].__heap_base=o,h["GOT.func"]=h["GOT.func"]||{};const b=await WebAssembly.instantiate(t,h);return n=Object.assign({},b.exports),t={},n.memory=l,t.exports=n,p=await e.reduce(async(g,{La:v,Qb:y})=>{g=await g;try{const x=v.Da,k=v.Na,O=v.Sa,T=await WebAssembly.compile(y),M=iy(i,T),E=new WebAssembly.Global({value:"i32",mutable:!1},65536*m);c.grow(O),M.env=Object.assign({},M.env),M.env.memory=l,M.env.__indirect_function_table=c,M.env.__memory_base=E,M.env.__stack_pointer=u,M.env.__table_base=d,M.env.csoundLoadModules=f,delete M.env.csoundWasiJsMessageCallback,m+=Math.ceil((x+k)/65536);const I=await WebAssembly.instantiate(T,M);m6(I)&&(I.exports.__wasm_call_ctors(),g.push(I))}catch(x){console.error("Error while compiling csound-plugin",x)}return g},[]),i.start(t),t.exports.__wasi_js_csoundSetMessageStringCallback(),[t,i]}function Xm(){}Xm.prototype.g=!1;Xm.prototype.port=void 0;Xm.prototype.Oa=()=>{};async function d5(t,e){if(e&&t.v!=="realtimePerformanceEnded"&&t.v!=="realtimePerformanceStarted")return-1;t.v==="realtimePerformanceStarted"&&t.onPlayStateChange("realtimePerformanceEnded"),t.o=!1,t.C=!1,t.R=0,t.B=-1,t.L=-1,delete t.J,delete t.O}async function b6(t,{Z:e,withPlugins:n,autoConnect:r}){if(n&&0<n.length&&(n=await Em(n)),!t.u||!t.u.I){const[s,a]=await v6({Z:e(),withPlugins:n,messagePort:t.messagePort});t.u=s,t.I=a,t.u.I=a}const i=_Y(t.u);t.g=i;const o=await i.csoundCreate(0);return t.D=o,r&&t.h.connect(t.audioContext.destination),d5(t,!1),Object.keys(i).reduce((s,a)=>{if(["mkdir","readdir","writeFile"].includes(a)){s.fs=s.fs||{};var l=async(...c)=>t5(t.u,i[a]).apply({},c);l.toString=i[a].toString,s.fs[a]=l}else l=Vu(a),s[l]=(...c)=>t5(o,i[a]).apply({},c),s[l].toString=i[a].toString;return s},t.i),t.i.pause=t.pause.bind(t),t.i.resume=t.resume.bind(t),t.i.start=t.start.bind(t),t.i.stop=t.stop.bind(t),t.i.H=t.H.bind(t),t.i.Ja=async()=>t.audioContext,t.i.name="Csound: ScriptProcessor Node, Single-threaded",t.i=t.m.o(t.i),t.i.reset=()=>d5(t,!0),t.i.addListener("message",console.log),t.i}class y6{constructor({audioContext:e,inputChannelCount:n=1,outputChannelCount:r=2}){this.qa=this.L=this.B=this.T=this.V=this.R=0,this.u=this.I=this.J=this.O=void 0,this.m=new Vm,this.j=new Nm,this.audioContext=e,this.onaudioprocess=this.onaudioprocess.bind(this),this.v=void 0,this.onPlayStateChange=this.onPlayStateChange.bind(this),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.pause=this.pause.bind(this),this.resume=this.resume.bind(this),this.g=this.D=void 0,this.i={},this.h=e.createScriptProcessor(0,n,r),this.h.audioContext=e,this.h.inputChannelCount=n,this.h.outputChannelCount=r,this.h.onaudioprocess=this.onaudioprocess,this.node=this.h,this.i.Ka=async()=>this.h,this.sampleRate=e.sampleRate,this.messagePort=new Xm,this.messagePort.Oa=i=>{Xs(this)({data:{log:i}})},this.messagePort.g=!0,this.C=this.o=!1}async H(){this.h&&(this.h.disconnect(),delete this.h),this.audioContext&&(this.audioContext.state!=="closed"&&await this.audioContext.close(),delete this.audioContext),this.m&&(this.m.H(),delete this.m),Object.keys(this.i).forEach(e=>delete this.i[e])}async onPlayStateChange(e){if(this.m&&this.v!==e)switch(this.v=e,e){case"realtimePerformanceStarted":this.m.ma();break;case"realtimePerformanceEnded":this.m.u();break;case"realtimePerformancePaused":this.m.fa();break;case"realtimePerformanceResumed":this.m.ga();break;case"renderStarted":this.m.C();break;case"renderEnded":this.m.B()}}async pause(){this.C&&this.o&&(this.o=!1,this.onPlayStateChange("realtimePerformancePaused"))}async resume(){this.C&&!this.o&&(this.o=!0,this.onPlayStateChange("realtimePerformanceResumed"))}async stop(){if(this.C){this.j.X();const e=this.g.csoundStop(this.D);return await this.j.na(),delete this.O,delete this.J,delete this.v,e}}async start(){if(this.g){var e=(this.g.csoundGetOutputName(this.D)||"test.wav").includes("dac");if(e&&this.v!=="realtimePerformanceStarted")return this.R=0,this.L=this.B=-1,this.T=this.qa=e=this.g.csoundGetKsmps(this.D),this.B=this.g.csoundGetNchnls(this.D),this.L=this.g.csoundGetNchnlsInput(this.D),this.J=new Float64Array(this.I.memory.buffer,this.g.csoundGetSpout(this.D),e*this.B),this.O=new Float64Array(this.u.I.memory.buffer,this.g.csoundGetSpin(this.D),e*this.L),this.V=this.g.csoundGet0dBFS(this.D),this.m.ea(this.h),this.j.la(),e=this.g.csoundStart(this.D),this.g._isRequestingRtMidiInput(this.D)&&Lm({ua:({data:n})=>this.g.csoundPushMidiMessage(this.D,n[0],n[1],n[2])}),this.o=!0,await this.j.ha(),e;if(!e&&this.v!=="renderStarted")return e=this.g.csoundStart(this.D),this.onPlayStateChange("renderStarted"),setTimeout(()=>{let n=0;for(;n===0&&this.g&&this.D;)n=this.g.csoundPerformKsmps(this.D);this.onPlayStateChange&&this.onPlayStateChange("renderEnded")},0),e}else console.error("starting csound failed because csound instance wasn't created")}onaudioprocess(e){if(this.g&&!["renderStarted","renderEnded"].includes(this.v)){if(this.J===null||this.o===!1){var n=e.outputBuffer,r=n.getChannelData(0);if(r){r=r.length;for(var i=0;i<r;i++)for(var o=0;o<n.numberOfChannels;o++)n.getChannelData(o)[i]=0}}this.o&&!this.C&&(this.C=!0,this.onPlayStateChange("realtimePerformanceStarted"),this.j&&this.j.U()),n=e.inputBuffer,e=e.outputBuffer,r=e.getChannelData(0).length,i=this.J,o=this.O;var s=this.qa,a=this.V,l=this.B,c=this.L,u=this.T||0,d=this.R||0;for(let m=0;m<r;m++,u++){u===s&&d===0&&(d=this.g.csoundPerformKsmps(this.D),u=0,d!==0&&(this.C=this.o=!1,this.onPlayStateChange("realtimePerformanceEnded"),this.j&&this.j.B())),i&&i.length!==0||(i=this.J=new Float64Array(this.u.I.memory.buffer,this.g.csoundGetSpout(this.D),s*l)),o&&o.length!==0||(o=this.O=new Float64Array(this.u.I.memory.buffer,this.g.csoundGetSpin(this.D),s*c));for(var f=Math.min(this.L,n.numberOfChannels),h=0;h<f;h++){var p=n.getChannelData(h);o[u*c+h]=p[m]*a}if(this.B===e.numberOfChannels)for(f=0;f<e.numberOfChannels;f++)e.getChannelData(f)[m]=d===0?i[u*l+f]/a:0;else this.B===2&&e.numberOfChannels===1?e.getChannelData(0)[m]=d===0?.5*(i[u*l]/a+i[u*l+1]/a):0:this.B===1&&e.numberOfChannels===2&&(f=e.getChannelData(0),h=e.getChannelData(1),d===0?(p=i[u*l]/a,f[m]=p,h[m]=p):(f[m]=0,h[m]=0))}this.T=u,this.R=d}}}const x6=async t=>{vl()();try{await t.audioWorklet.addModule("data:application/javascript;base64,")}catch(e){return console.error("Error calling audioWorklet.addModule",e),!1}return!0};async function S6(t,{Z:e,withPlugins:n,autoConnect:r}){n&&0<n.length&&(n=await Em(n)),await x6(t.audioContext),t.node=new AudioWorkletNode(t.audioContext,"csound-singlethread-worklet-processor",{inputChannelCount:t.inputChannelCount?[t.inputChannelCount]:0,outputChannelCount:[t.outputChannelCount||2]}),r&&t.node.connect(t.audioContext.destination);try{vl()(),t.F=Vl(t.node.port)}catch(o){console.error("COMLINK ERROR",o)}r={},r.messagePort=t.l.g,r.rtmidiPort=t.l.B,await t.F.initializeMessagePort(Ll(r,[t.l.g,t.l.B])),t.l.Y.addEventListener("message",Xs(t)),t.l.Y.start(),await t.F.initialize(e(),n);const i=await so(t.F,void 0,"csoundCreate",t.v)();t.D=i,await so(t.F,i,"csoundInitialize",t.v)(0),t.i.pause=t.g.bind(t),t.i.resume=t.h.bind(t),t.i.terminateInstance=t.H.bind(t),t.i.getAudioContext=async()=>t.audioContext,t.i.getNode=async()=>t.node,t.i.enableAudioInput=o6,t.i.name="Csound: Audio Worklet, Single-threaded",t.i=t.m.o(t.i),t.i.addListener("message",console.log);for(const o of Object.keys(Fr)){const s=Fr[o],a=so(t.F,i,o,t.v);switch(o){case"csoundCreate":break;case"csoundStart":e=async function(){this.j.la();var l=await this.F.isRequestingInput();return await this.F.isRequestingRealtimeOutput()?(l&&this.i.enableAudioInput(),await this.i._isRequestingRtMidiInput(i)&&Lm({ua:this.$.bind(this)}),l=await a({Za:i}),this.m.ea(this.node),await this.j.ha(),l):(a({Za:i}),this.m.ea(this.node),await this.j.ha(),0)},e.toString=()=>s.toString(),t.i.start=e.bind(t);break;case"csoundStop":e=async()=>{if(t.j.V())return vl()(),-1;t.j.X();const l=await a();return await t.j.na(),l},e.toString=()=>s.toString(),t.i.stop=e.bind(t);break;case"fs":t.i.fs={},Object.keys(s).forEach(l=>{const c=so(t.F,i,l,t.v);c.toString=()=>s[l].toString(),t.i.fs[l]=c});break;default:a.toString=()=>s.toString(),t.i[Vu(o)]=a}}return t.i}class k6{constructor({audioContext:e,inputChannelCount:n=1,outputChannelCount:r=2}){this.D=this.node=this.F=void 0,this.i={},this.l=new Ix,this.m=new Vm,this.j=new Nm,this.audioContext=e,this.inputChannelCount=n,this.outputChannelCount=r,this.onPlayStateChange=this.onPlayStateChange.bind(this),this.v=void 0}async H(){this.node&&(this.node.disconnect(),delete this.node),this.audioContext&&(this.audioContext.state!=="closed"&&await this.audioContext.close(),delete this.audioContext),this.F&&(this.F[Ls](),delete this.F),this.m&&(this.m.H(),delete this.m),Object.keys(this.i).forEach(e=>delete this.i[e])}async onPlayStateChange(e){if(this.v!==e&&this.m)switch(this.v=e,e){case"realtimePerformanceStarted":this.j.T()&&(vl()(),this.j.U()),this.m.ma();break;case"realtimePerformanceEnded":this.v=void 0,this.m&&this.m.u(),this.j&&this.j.V()&&this.j.B(),this.j&&this.j.U();break;case"realtimePerformancePaused":this.m.fa();break;case"realtimePerformanceResumed":this.m.ga();break;case"renderStarted":this.j.T()&&(vl()(),this.m.C(),this.j.U());break;case"renderEnded":this.m.B(),this.j&&this.j.V()&&this.j.B(),this.j&&this.j.U()}}async g(){this.F!==void 0&&await this.F.pause()}async h(){this.F!==void 0&&await this.F.resume()}$({data:e}){this.l.h.postMessage&&this.l.h.postMessage(e)}}(function(){function t(){i==="blocked"&&(i="pending",e()),o==="blocked"&&(o="pending",a=new r,l=a.createBufferSource(),l.buffer=a.createBuffer(1,1,22050),l.connect(a.destination),l.start(),a.state==="running"?(o="allowed",n()):(o="blocked",l.disconnect(a.destination),l=null,a.close(),a=null))}function e(){s=document.createElement("audio"),s.setAttribute("x-webkit-airplay","deny"),s.preload="auto",s.loop=!0,s.src=c,s.load(),s.play().then(()=>{i="allowed",n()},()=>{i="blocked",s.pause(),s.removeAttribute("src"),s.load(),s=null})}function n(){i==="allowed"&&o==="allowed"&&n5.forEach(u=>{window.removeEventListener(u,t,{capture:!0,passive:!0})})}const r=window.webkitAudioContext;if(0<navigator.maxTouchPoints&&r!=null){var i="blocked",o="blocked",s,a,l,c=function(u){const d=new ArrayBuffer(10),f=new DataView(d);return f.setUint32(0,u,!0),f.setUint32(4,u,!0),f.setUint16(8,1,!0),`data:audio/wav;base64,UklGRisAAABXQVZFZm10IBAAAAABAAEA${window.btoa(String.fromCharCode(...new Uint8Array(d))).slice(0,13)}AgAZGF0YQcAAACAgICAgICAAAA=`}(new r().sampleRate);n5.forEach(u=>{window.addEventListener(u,t,{capture:!0,passive:!0})})}})();async function f5({audioContext:t,inputChannelCount:e,outputChannelCount:n,autoConnect:r=!0,withPlugins:i=[],useWorker:o=!1,useSAB:s=!0,useSPN:a=!1}={}){const l=t&&Yr()&&t instanceof Yr();l||(t=t||new(Yr())({latencyHint:"interactive"})),typeof navigator.vendor=="string"&&navigator.vendor.includes("Apple")&&t.resume();const c=AudioNode!==void 0&&AudioWorkletNode!==void 0;var u=Yr();if(u=u!==void 0&&u.prototype.createScriptProcessor!==void 0,o){c||u?Wi()():console.error("No WebAudio Support detected");var d;if(!a&&c?d=new i6({audioContext:t,M:l,autoConnect:r}):u&&(d=new a6({audioContext:t,M:l,autoConnect:r})),d)return(r=!navigator.userAgent.toLowerCase().includes("firefox")&&window&&window.Atomics!==void 0&&window.SharedArrayBuffer!==void 0)?s&&Wi()():Wi()(),t=r&&c&&s?new r6({s:d,audioContext:t,M:l,inputChannelCount:e,outputChannelCount:n}):new n6({s:d,M:l}),Wi()(),await t.J({Z:T0,withPlugins:i}),t.L}else{if(c&&!a)return Wi()(),S6(new k6({audioContext:t,inputChannelCount:e||2,outputChannelCount:n||2}),{Z:T0,withPlugins:i,autoConnect:r});if(u)return Wi()(),await b6(new y6({audioContext:t,inputChannelCount:e||2,outputChannelCount:n||2}),{Z:T0,withPlugins:i,autoConnect:r})}console.error("No detectable WebAudioAPI in current environment")}var Fc=["Csound$$module$src$index"],hr=ce;Fc[0]in hr||typeof hr.execScript>"u"||hr.execScript("var "+Fc[0]);for(var jo;Fc.length&&(jo=Fc.shift());)Fc.length||f5===void 0?hr[jo]&&hr[jo]!==Object.prototype[jo]?hr=hr[jo]:hr=hr[jo]={}:hr[jo]=f5;const w6=hr.Csound$$module$src$index;var O6=t=>{var{theme:e,settings:n,styles:r}=t,i={"&":{backgroundColor:n.background,color:n.foreground},".cm-gutters":{}};n.fontFamily&&(i["&.cm-editor .cm-scroller"]={fontFamily:n.fontFamily}),n.gutterBackground&&(i[".cm-gutters"].backgroundColor=n.gutterBackground),n.gutterForeground&&(i[".cm-gutters"].color=n.gutterForeground),n.gutterBorder&&(i[".cm-gutters"].borderRightColor=n.gutterBorder),n.caret&&(i[".cm-content"]={caretColor:n.caret},i[".cm-cursor, .cm-dropCursor"]={borderLeftColor:n.caret});var o={};n.gutterActiveForeground&&(o.color=n.gutterActiveForeground),n.lineHighlight&&(i[".cm-activeLine"]={backgroundColor:n.lineHighlight},o.backgroundColor=n.lineHighlight),i[".cm-activeLineGutter"]=o,n.selection&&(i["&.cm-focused .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"]={backgroundColor:n.selection}),n.selectionMatch&&(i["& .cm-selectionMatch"]={backgroundColor:n.selectionMatch});var s=K.theme(i,{dark:e==="dark"}),a=El.define(r),l=[s,Tx(a)];return l},T6=O6({theme:"dark",settings:{background:"#272822",foreground:"#FFFFFF",caret:"#FFFFFF",selection:"#49483E",selectionMatch:"#49483E",gutterBackground:"#272822",gutterForeground:"#FFFFFF70",lineHighlight:"#00000059"},styles:[{tag:[R.comment,R.documentMeta],color:"#8292a2"},{tag:[R.number,R.bool,R.null,R.atom],color:"#ae81ff"},{tag:[R.attributeValue,R.className,R.name],color:"#e6db74"},{tag:[R.propertyName,R.attributeName],color:"#a6e22e"},{tag:[R.variableName],color:"#9effff"},{tag:[R.squareBracket],color:"#bababa"},{tag:[R.string,R.special(R.brace)],color:"#e6db74"},{tag:[R.regexp,R.className,R.typeName,R.definition(R.typeName)],color:"#66d9ef"},{tag:[R.definition(R.variableName),R.definition(R.propertyName),R.function(R.variableName)],color:"#fd971f"},{tag:[R.keyword,R.definitionKeyword,R.modifier,R.tagName,R.angleBracket],color:"#f92672"}]});function bl(){return bl=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},bl.apply(this,arguments)}function Kz(t,e){if(t==null)return{};var n={},r=Object.keys(t),i,o;for(o=0;o<r.length;o++)i=r[o],!(e.indexOf(i)>=0)&&(n[i]=t[i]);return n}function ze(){var t=arguments[0];typeof t=="string"&&(t=document.createElement(t));var e=1,n=arguments[1];if(n&&typeof n=="object"&&n.nodeType==null&&!Array.isArray(n)){for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)){var i=n[r];typeof i=="string"?t.setAttribute(r,i):i!=null&&(t[r]=i)}e++}for(;e<arguments.length;e++)qz(t,arguments[e]);return t}function qz(t,e){if(typeof e=="string")t.appendChild(document.createTextNode(e));else if(e!=null)if(e.nodeType!=null)t.appendChild(e);else if(Array.isArray(e))for(var n=0;n<e.length;n++)qz(t,e[n]);else throw new RangeError("Unsupported child node: "+e)}const h5=typeof String.prototype.normalize=="function"?t=>t.normalize("NFKD"):t=>t;class yl{constructor(e,n,r=0,i=e.length,o,s){this.test=s,this.value={from:0,to:0},this.done=!1,this.matches=[],this.buffer="",this.bufferPos=0,this.iter=e.iterRange(r,i),this.bufferStart=r,this.normalize=o?a=>o(h5(a)):h5,this.query=this.normalize(n)}peek(){if(this.bufferPos==this.buffer.length){if(this.bufferStart+=this.buffer.length,this.iter.next(),this.iter.done)return-1;this.bufferPos=0,this.buffer=this.iter.value}return Mt(this.buffer,this.bufferPos)}next(){for(;this.matches.length;)this.matches.pop();return this.nextOverlapping()}nextOverlapping(){for(;;){let e=this.peek();if(e<0)return this.done=!0,this;let n=ax(e),r=this.bufferStart+this.bufferPos;this.bufferPos+=wn(e);let i=this.normalize(n);for(let o=0,s=r;;o++){let a=i.charCodeAt(o),l=this.match(a,s);if(l)return this.value=l,this;if(o==i.length-1)break;s==r&&o<n.length&&n.charCodeAt(o)==a&&s++}}}match(e,n){let r=null;for(let i=0;i<this.matches.length;i+=2){let o=this.matches[i],s=!1;this.query.charCodeAt(o)==e&&(o==this.query.length-1?r={from:this.matches[i+1],to:n+1}:(this.matches[i]++,s=!0)),s||(this.matches.splice(i,2),i-=2)}return this.query.charCodeAt(0)==e&&(this.query.length==1?r={from:n,to:n+1}:this.matches.push(1,n)),r&&this.test&&!this.test(r.from,r.to,this.buffer,this.bufferPos)&&(r=null),r}}typeof Symbol<"u"&&(yl.prototype[Symbol.iterator]=function(){return this});const Qz={from:-1,to:-1,match:/.*/.exec("")},zx="gm"+(/x/.unicode==null?"":"u");class Jz{constructor(e,n,r,i=0,o=e.length){if(this.text=e,this.to=o,this.curLine="",this.done=!1,this.value=Qz,/\\[sWDnr]|\n|\r|\[\^/.test(n))return new _z(e,n,r,i,o);this.re=new RegExp(n,zx+(r!=null&&r.ignoreCase?"i":"")),this.test=r==null?void 0:r.test,this.iter=e.iter();let s=e.lineAt(i);this.curLineStart=s.from,this.matchPos=wp(e,i),this.getLine(this.curLineStart)}getLine(e){this.iter.next(e),this.iter.lineBreak?this.curLine="":(this.curLine=this.iter.value,this.curLineStart+this.curLine.length>this.to&&(this.curLine=this.curLine.slice(0,this.to-this.curLineStart)),this.iter.next())}nextLine(){this.curLineStart=this.curLineStart+this.curLine.length+1,this.curLineStart>this.to?this.curLine="":this.getLine(0)}next(){for(let e=this.matchPos-this.curLineStart;;){this.re.lastIndex=e;let n=this.matchPos<=this.to&&this.re.exec(this.curLine);if(n){let r=this.curLineStart+n.index,i=r+n[0].length;if(this.matchPos=wp(this.text,i+(r==i?1:0)),r==this.curLineStart+this.curLine.length&&this.nextLine(),(r<i||r>this.value.to)&&(!this.test||this.test(r,i,n)))return this.value={from:r,to:i,match:n},this;e=this.matchPos-this.curLineStart}else if(this.curLineStart+this.curLine.length<this.to)this.nextLine(),e=0;else return this.done=!0,this}}}const C0=new WeakMap;class ja{constructor(e,n){this.from=e,this.text=n}get to(){return this.from+this.text.length}static get(e,n,r){let i=C0.get(e);if(!i||i.from>=r||i.to<=n){let a=new ja(n,e.sliceString(n,r));return C0.set(e,a),a}if(i.from==n&&i.to==r)return i;let{text:o,from:s}=i;return s>n&&(o=e.sliceString(n,s)+o,s=n),i.to<r&&(o+=e.sliceString(i.to,r)),C0.set(e,new ja(s,o)),new ja(n,o.slice(n-s,r-s))}}class _z{constructor(e,n,r,i,o){this.text=e,this.to=o,this.done=!1,this.value=Qz,this.matchPos=wp(e,i),this.re=new RegExp(n,zx+(r!=null&&r.ignoreCase?"i":"")),this.test=r==null?void 0:r.test,this.flat=ja.get(e,i,this.chunkEnd(i+5e3))}chunkEnd(e){return e>=this.to?this.to:this.text.lineAt(e).to}next(){for(;;){let e=this.re.lastIndex=this.matchPos-this.flat.from,n=this.re.exec(this.flat.text);if(n&&!n[0]&&n.index==e&&(this.re.lastIndex=e+1,n=this.re.exec(this.flat.text)),n){let r=this.flat.from+n.index,i=r+n[0].length;if((this.flat.to>=this.to||n.index+n[0].length<=this.flat.text.length-10)&&(!this.test||this.test(r,i,n)))return this.value={from:r,to:i,match:n},this.matchPos=wp(this.text,i+(r==i?1:0)),this}if(this.flat.to==this.to)return this.done=!0,this;this.flat=ja.get(this.text,this.flat.from,this.chunkEnd(this.flat.from+this.flat.text.length*2))}}}typeof Symbol<"u"&&(Jz.prototype[Symbol.iterator]=_z.prototype[Symbol.iterator]=function(){return this});function P6(t){try{return new RegExp(t,zx),!0}catch{return!1}}function wp(t,e){if(e>=t.length)return e;let n=t.lineAt(e),r;for(;e<n.to&&(r=n.text.charCodeAt(e-n.from))>=56320&&r<57344;)e++;return e}function dy(t){let e=ze("input",{class:"cm-textfield",name:"line"}),n=ze("form",{class:"cm-gotoLine",onkeydown:i=>{i.keyCode==27?(i.preventDefault(),t.dispatch({effects:Op.of(!1)}),t.focus()):i.keyCode==13&&(i.preventDefault(),r())},onsubmit:i=>{i.preventDefault(),r()}},ze("label",t.state.phrase("Go to line"),": ",e)," ",ze("button",{class:"cm-button",type:"submit"},t.state.phrase("go")));function r(){let i=/^([+-])?(\d+)?(:\d+)?(%)?$/.exec(e.value);if(!i)return;let{state:o}=t,s=o.doc.lineAt(o.selection.main.head),[,a,l,c,u]=i,d=c?+c.slice(1):0,f=l?+l:s.number;if(l&&u){let p=f/100;a&&(p=p*(a=="-"?-1:1)+s.number/o.doc.lines),f=Math.round(o.doc.lines*p)}else l&&a&&(f=f*(a=="-"?-1:1)+s.number);let h=o.doc.line(Math.max(1,Math.min(o.doc.lines,f)));t.dispatch({effects:Op.of(!1),selection:V.cursor(h.from+Math.max(0,Math.min(d,h.length))),scrollIntoView:!0}),t.focus()}return{dom:n}}const Op=se.define(),p5=kt.define({create(){return!0},update(t,e){for(let n of e.effects)n.is(Op)&&(t=n.value);return t},provide:t=>pl.from(t,e=>e?dy:null)}),C6=t=>{let e=zu(t,dy);if(!e){let n=[Op.of(!0)];t.state.field(p5,!1)==null&&n.push(se.appendConfig.of([p5,M6])),t.dispatch({effects:n}),e=zu(t,dy)}return e&&e.dom.querySelector("input").focus(),!0},M6=K.baseTheme({".cm-panel.cm-gotoLine":{padding:"2px 6px 4px","& label":{fontSize:"80%"}}}),R6={highlightWordAroundCursor:!1,minSelectionLength:1,maxMatches:100,wholeWords:!1},$z=$.define({combine(t){return ri(t,R6,{highlightWordAroundCursor:(e,n)=>e||n,minSelectionLength:Math.min,maxMatches:Math.min})}});function I6(t){let e=[L6,V6];return t&&e.push($z.of(t)),e}const z6=F.mark({class:"cm-selectionMatch"}),E6=F.mark({class:"cm-selectionMatch cm-selectionMatch-main"});function m5(t,e,n,r){return(n==0||t(e.sliceDoc(n-1,n))!=je.Word)&&(r==e.doc.length||t(e.sliceDoc(r,r+1))!=je.Word)}function N6(t,e,n,r){return t(e.sliceDoc(n,n+1))==je.Word&&t(e.sliceDoc(r-1,r))==je.Word}const V6=nt.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.selectionSet||t.docChanged||t.viewportChanged)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=t.state.facet($z),{state:n}=t,r=n.selection;if(r.ranges.length>1)return F.none;let i=r.main,o,s=null;if(i.empty){if(!e.highlightWordAroundCursor)return F.none;let l=n.wordAt(i.head);if(!l)return F.none;s=n.charCategorizer(i.head),o=n.sliceDoc(l.from,l.to)}else{let l=i.to-i.from;if(l<e.minSelectionLength||l>200)return F.none;if(e.wholeWords){if(o=n.sliceDoc(i.from,i.to),s=n.charCategorizer(i.head),!(m5(s,n,i.from,i.to)&&N6(s,n,i.from,i.to)))return F.none}else if(o=n.sliceDoc(i.from,i.to).trim(),!o)return F.none}let a=[];for(let l of t.visibleRanges){let c=new yl(n.doc,o,l.from,l.to);for(;!c.next().done;){let{from:u,to:d}=c.value;if((!s||m5(s,n,u,d))&&(i.empty&&u<=i.from&&d>=i.to?a.push(E6.range(u,d)):(u>=i.to||d<=i.from)&&a.push(z6.range(u,d)),a.length>e.maxMatches))return F.none}}return F.set(a)}},{decorations:t=>t.decorations}),L6=K.baseTheme({".cm-selectionMatch":{backgroundColor:"#99ff7780"},".cm-searchMatch .cm-selectionMatch":{backgroundColor:"transparent"}}),X6=({state:t,dispatch:e})=>{let{selection:n}=t,r=V.create(n.ranges.map(i=>t.wordAt(i.head)||V.cursor(i.head)),n.mainIndex);return r.eq(n)?!1:(e(t.update({selection:r})),!0)};function B6(t,e){let{main:n,ranges:r}=t.selection,i=t.wordAt(n.head),o=i&&i.from==n.from&&i.to==n.to;for(let s=!1,a=new yl(t.doc,e,r[r.length-1].to);;)if(a.next(),a.done){if(s)return null;a=new yl(t.doc,e,0,Math.max(0,r[r.length-1].from-1)),s=!0}else{if(s&&r.some(l=>l.from==a.value.from))continue;if(o){let l=t.wordAt(a.value.from);if(!l||l.from!=a.value.from||l.to!=a.value.to)continue}return a.value}}const A6=({state:t,dispatch:e})=>{let{ranges:n}=t.selection;if(n.some(o=>o.from===o.to))return X6({state:t,dispatch:e});let r=t.sliceDoc(n[0].from,n[0].to);if(t.selection.ranges.some(o=>t.sliceDoc(o.from,o.to)!=r))return!1;let i=B6(t,r);return i?(e(t.update({selection:t.selection.addRange(V.range(i.from,i.to),!1),effects:K.scrollIntoView(i.to)})),!0):!1},Ex=$.define({combine(t){return ri(t,{top:!1,caseSensitive:!1,literal:!1,wholeWord:!1,createPanel:e=>new Q6(e)})}});class eE{constructor(e){this.search=e.search,this.caseSensitive=!!e.caseSensitive,this.literal=!!e.literal,this.regexp=!!e.regexp,this.replace=e.replace||"",this.valid=!!this.search&&(!this.regexp||P6(this.search)),this.unquoted=this.unquote(this.search),this.wholeWord=!!e.wholeWord}unquote(e){return this.literal?e:e.replace(/\\([nrt\\])/g,(n,r)=>r=="n"?`
`:r=="r"?"\r":r=="t"?"	":"\\")}eq(e){return this.search==e.search&&this.replace==e.replace&&this.caseSensitive==e.caseSensitive&&this.regexp==e.regexp&&this.wholeWord==e.wholeWord}create(){return this.regexp?new Y6(this):new G6(this)}getCursor(e,n=0,r){let i=e.doc?e:pe.create({doc:e});return r==null&&(r=i.doc.length),this.regexp?pa(this,i,n,r):ha(this,i,n,r)}}class tE{constructor(e){this.spec=e}}function ha(t,e,n,r){return new yl(e.doc,t.unquoted,n,r,t.caseSensitive?void 0:i=>i.toLowerCase(),t.wholeWord?Z6(e.doc,e.charCategorizer(e.selection.main.head)):void 0)}function Z6(t,e){return(n,r,i,o)=>((o>n||o+i.length<r)&&(o=Math.max(0,n-2),i=t.sliceString(o,Math.min(t.length,r+2))),(e(Tp(i,n-o))!=je.Word||e(Pp(i,n-o))!=je.Word)&&(e(Pp(i,r-o))!=je.Word||e(Tp(i,r-o))!=je.Word))}class G6 extends tE{constructor(e){super(e)}nextMatch(e,n,r){let i=ha(this.spec,e,r,e.doc.length).nextOverlapping();return i.done&&(i=ha(this.spec,e,0,n).nextOverlapping()),i.done?null:i.value}prevMatchInRange(e,n,r){for(let i=r;;){let o=Math.max(n,i-1e4-this.spec.unquoted.length),s=ha(this.spec,e,o,i),a=null;for(;!s.nextOverlapping().done;)a=s.value;if(a)return a;if(o==n)return null;i-=1e4}}prevMatch(e,n,r){return this.prevMatchInRange(e,0,n)||this.prevMatchInRange(e,r,e.doc.length)}getReplacement(e){return this.spec.unquote(this.spec.replace)}matchAll(e,n){let r=ha(this.spec,e,0,e.doc.length),i=[];for(;!r.next().done;){if(i.length>=n)return null;i.push(r.value)}return i}highlight(e,n,r,i){let o=ha(this.spec,e,Math.max(0,n-this.spec.unquoted.length),Math.min(r+this.spec.unquoted.length,e.doc.length));for(;!o.next().done;)i(o.value.from,o.value.to)}}function pa(t,e,n,r){return new Jz(e.doc,t.search,{ignoreCase:!t.caseSensitive,test:t.wholeWord?W6(e.charCategorizer(e.selection.main.head)):void 0},n,r)}function Tp(t,e){return t.slice(qt(t,e,!1),e)}function Pp(t,e){return t.slice(e,qt(t,e))}function W6(t){return(e,n,r)=>!r[0].length||(t(Tp(r.input,r.index))!=je.Word||t(Pp(r.input,r.index))!=je.Word)&&(t(Pp(r.input,r.index+r[0].length))!=je.Word||t(Tp(r.input,r.index+r[0].length))!=je.Word)}class Y6 extends tE{nextMatch(e,n,r){let i=pa(this.spec,e,r,e.doc.length).next();return i.done&&(i=pa(this.spec,e,0,n).next()),i.done?null:i.value}prevMatchInRange(e,n,r){for(let i=1;;i++){let o=Math.max(n,r-i*1e4),s=pa(this.spec,e,o,r),a=null;for(;!s.next().done;)a=s.value;if(a&&(o==n||a.from>o+10))return a;if(o==n)return null}}prevMatch(e,n,r){return this.prevMatchInRange(e,0,n)||this.prevMatchInRange(e,r,e.doc.length)}getReplacement(e){return this.spec.unquote(this.spec.replace.replace(/\$([$&\d+])/g,(n,r)=>r=="$"?"$":r=="&"?e.match[0]:r!="0"&&+r<e.match.length?e.match[r]:n))}matchAll(e,n){let r=pa(this.spec,e,0,e.doc.length),i=[];for(;!r.next().done;){if(i.length>=n)return null;i.push(r.value)}return i}highlight(e,n,r,i){let o=pa(this.spec,e,Math.max(0,n-250),Math.min(r+250,e.doc.length));for(;!o.next().done;)i(o.value.from,o.value.to)}}const Bu=se.define(),Nx=se.define(),yo=kt.define({create(t){return new M0(fy(t).create(),null)},update(t,e){for(let n of e.effects)n.is(Bu)?t=new M0(n.value.create(),t.panel):n.is(Nx)&&(t=new M0(t.query,n.value?Vx:null));return t},provide:t=>pl.from(t,e=>e.panel)});class M0{constructor(e,n){this.query=e,this.panel=n}}const F6=F.mark({class:"cm-searchMatch"}),H6=F.mark({class:"cm-searchMatch cm-searchMatch-selected"}),j6=nt.fromClass(class{constructor(t){this.view=t,this.decorations=this.highlight(t.state.field(yo))}update(t){let e=t.state.field(yo);(e!=t.startState.field(yo)||t.docChanged||t.selectionSet||t.viewportChanged)&&(this.decorations=this.highlight(e))}highlight({query:t,panel:e}){if(!e||!t.spec.valid)return F.none;let{view:n}=this,r=new Ci;for(let i=0,o=n.visibleRanges,s=o.length;i<s;i++){let{from:a,to:l}=o[i];for(;i<s-1&&l>o[i+1].from-2*250;)l=o[++i].to;t.highlight(n.state,a,l,(c,u)=>{let d=n.state.selection.ranges.some(f=>f.from==c&&f.to==u);r.add(c,u,d?H6:F6)})}return r.finish()}},{decorations:t=>t.decorations});function pd(t){return e=>{let n=e.state.field(yo,!1);return n&&n.query.spec.valid?t(e,n):nE(e)}}const Cp=pd((t,{query:e})=>{let{to:n}=t.state.selection.main,r=e.nextMatch(t.state,n,n);return r?(t.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0,effects:Lx(t,r),userEvent:"select.search"}),!0):!1}),Mp=pd((t,{query:e})=>{let{state:n}=t,{from:r}=n.selection.main,i=e.prevMatch(n,r,r);return i?(t.dispatch({selection:{anchor:i.from,head:i.to},scrollIntoView:!0,effects:Lx(t,i),userEvent:"select.search"}),!0):!1}),D6=pd((t,{query:e})=>{let n=e.matchAll(t.state,1e3);return!n||!n.length?!1:(t.dispatch({selection:V.create(n.map(r=>V.range(r.from,r.to))),userEvent:"select.search.matches"}),!0)}),U6=({state:t,dispatch:e})=>{let n=t.selection;if(n.ranges.length>1||n.main.empty)return!1;let{from:r,to:i}=n.main,o=[],s=0;for(let a=new yl(t.doc,t.sliceDoc(r,i));!a.next().done;){if(o.length>1e3)return!1;a.value.from==r&&(s=o.length),o.push(V.range(a.value.from,a.value.to))}return e(t.update({selection:V.create(o,s),userEvent:"select.search.matches"})),!0},g5=pd((t,{query:e})=>{let{state:n}=t,{from:r,to:i}=n.selection.main;if(n.readOnly)return!1;let o=e.nextMatch(n,r,r);if(!o)return!1;let s=[],a,l,c=[];if(o.from==r&&o.to==i&&(l=n.toText(e.getReplacement(o)),s.push({from:o.from,to:o.to,insert:l}),o=e.nextMatch(n,o.from,o.to),c.push(K.announce.of(n.phrase("replaced match on line $",n.doc.lineAt(r).number)+"."))),o){let u=s.length==0||s[0].from>=o.to?0:o.to-o.from-l.length;a={anchor:o.from-u,head:o.to-u},c.push(Lx(t,o))}return t.dispatch({changes:s,selection:a,scrollIntoView:!!a,effects:c,userEvent:"input.replace"}),!0}),K6=pd((t,{query:e})=>{if(t.state.readOnly)return!1;let n=e.matchAll(t.state,1e9).map(i=>{let{from:o,to:s}=i;return{from:o,to:s,insert:e.getReplacement(i)}});if(!n.length)return!1;let r=t.state.phrase("replaced $ matches",n.length)+".";return t.dispatch({changes:n,effects:K.announce.of(r),userEvent:"input.replace.all"}),!0});function Vx(t){return t.state.facet(Ex).createPanel(t)}function fy(t,e){var n,r,i,o;let s=t.selection.main,a=s.empty||s.to>s.from+100?"":t.sliceDoc(s.from,s.to);if(e&&!a)return e;let l=t.facet(Ex);return new eE({search:((n=e==null?void 0:e.literal)!==null&&n!==void 0?n:l.literal)?a:a.replace(/\n/g,"\\n"),caseSensitive:(r=e==null?void 0:e.caseSensitive)!==null&&r!==void 0?r:l.caseSensitive,literal:(i=e==null?void 0:e.literal)!==null&&i!==void 0?i:l.literal,wholeWord:(o=e==null?void 0:e.wholeWord)!==null&&o!==void 0?o:l.wholeWord})}const nE=t=>{let e=t.state.field(yo,!1);if(e&&e.panel){let n=zu(t,Vx);if(!n)return!1;let r=n.dom.querySelector("[main-field]");if(r&&r!=t.root.activeElement){let i=fy(t.state,e.query.spec);i.valid&&t.dispatch({effects:Bu.of(i)}),r.focus(),r.select()}}else t.dispatch({effects:[Nx.of(!0),e?Bu.of(fy(t.state,e.query.spec)):se.appendConfig.of(_6)]});return!0},rE=t=>{let e=t.state.field(yo,!1);if(!e||!e.panel)return!1;let n=zu(t,Vx);return n&&n.dom.contains(t.root.activeElement)&&t.focus(),t.dispatch({effects:Nx.of(!1)}),!0},q6=[{key:"Mod-f",run:nE,scope:"editor search-panel"},{key:"F3",run:Cp,shift:Mp,scope:"editor search-panel",preventDefault:!0},{key:"Mod-g",run:Cp,shift:Mp,scope:"editor search-panel",preventDefault:!0},{key:"Escape",run:rE,scope:"editor search-panel"},{key:"Mod-Shift-l",run:U6},{key:"Alt-g",run:C6},{key:"Mod-d",run:A6,preventDefault:!0}];class Q6{constructor(e){this.view=e;let n=this.query=e.state.field(yo).query.spec;this.commit=this.commit.bind(this),this.searchField=ze("input",{value:n.search,placeholder:bn(e,"Find"),"aria-label":bn(e,"Find"),class:"cm-textfield",name:"search",form:"","main-field":"true",onchange:this.commit,onkeyup:this.commit}),this.replaceField=ze("input",{value:n.replace,placeholder:bn(e,"Replace"),"aria-label":bn(e,"Replace"),class:"cm-textfield",name:"replace",form:"",onchange:this.commit,onkeyup:this.commit}),this.caseField=ze("input",{type:"checkbox",name:"case",form:"",checked:n.caseSensitive,onchange:this.commit}),this.reField=ze("input",{type:"checkbox",name:"re",form:"",checked:n.regexp,onchange:this.commit}),this.wordField=ze("input",{type:"checkbox",name:"word",form:"",checked:n.wholeWord,onchange:this.commit});function r(i,o,s){return ze("button",{class:"cm-button",name:i,onclick:o,type:"button"},s)}this.dom=ze("div",{onkeydown:i=>this.keydown(i),class:"cm-search"},[this.searchField,r("next",()=>Cp(e),[bn(e,"next")]),r("prev",()=>Mp(e),[bn(e,"previous")]),r("select",()=>D6(e),[bn(e,"all")]),ze("label",null,[this.caseField,bn(e,"match case")]),ze("label",null,[this.reField,bn(e,"regexp")]),ze("label",null,[this.wordField,bn(e,"by word")]),...e.state.readOnly?[]:[ze("br"),this.replaceField,r("replace",()=>g5(e),[bn(e,"replace")]),r("replaceAll",()=>K6(e),[bn(e,"replace all")])],ze("button",{name:"close",onclick:()=>rE(e),"aria-label":bn(e,"close"),type:"button"},["\xD7"])])}commit(){let e=new eE({search:this.searchField.value,caseSensitive:this.caseField.checked,regexp:this.reField.checked,wholeWord:this.wordField.checked,replace:this.replaceField.value});e.eq(this.query)||(this.query=e,this.view.dispatch({effects:Bu.of(e)}))}keydown(e){B7(this.view,e,"search-panel")?e.preventDefault():e.keyCode==13&&e.target==this.searchField?(e.preventDefault(),(e.shiftKey?Mp:Cp)(this.view)):e.keyCode==13&&e.target==this.replaceField&&(e.preventDefault(),g5(this.view))}update(e){for(let n of e.transactions)for(let r of n.effects)r.is(Bu)&&!r.value.eq(this.query)&&this.setQuery(r.value)}setQuery(e){this.query=e,this.searchField.value=e.search,this.replaceField.value=e.replace,this.caseField.checked=e.caseSensitive,this.reField.checked=e.regexp,this.wordField.checked=e.wholeWord}mount(){this.searchField.select()}get pos(){return 80}get top(){return this.view.state.facet(Ex).top}}function bn(t,e){return t.state.phrase(e)}const vf=30,bf=/[\s\.,:;?!]/;function Lx(t,{from:e,to:n}){let r=t.state.doc.lineAt(e),i=t.state.doc.lineAt(n).to,o=Math.max(r.from,e-vf),s=Math.min(i,n+vf),a=t.state.sliceDoc(o,s);if(o!=r.from){for(let l=0;l<vf;l++)if(!bf.test(a[l+1])&&bf.test(a[l])){a=a.slice(l);break}}if(s!=i){for(let l=a.length-1;l>a.length-vf;l--)if(!bf.test(a[l-1])&&bf.test(a[l])){a=a.slice(0,l);break}}return K.announce.of(`${t.state.phrase("current match")}. ${a} ${t.state.phrase("on line")} ${r.number}.`)}const J6=K.baseTheme({".cm-panel.cm-search":{padding:"2px 6px 4px",position:"relative","& [name=close]":{position:"absolute",top:"0",right:"4px",backgroundColor:"inherit",border:"none",font:"inherit",padding:0,margin:0},"& input, & button, & label":{margin:".2em .6em .2em 0"},"& input[type=checkbox]":{marginRight:".2em"},"& label":{fontSize:"80%",whiteSpace:"pre"}},"&light .cm-searchMatch":{backgroundColor:"#ffff0054"},"&dark .cm-searchMatch":{backgroundColor:"#00ffff8a"},"&light .cm-searchMatch-selected":{backgroundColor:"#ff6a0054"},"&dark .cm-searchMatch-selected":{backgroundColor:"#ff00ff8a"}}),_6=[yo,Ws.lowest(j6),J6];class iE{constructor(e,n,r){this.state=e,this.pos=n,this.explicit=r,this.abortListeners=[]}tokenBefore(e){let n=xt(this.state).resolveInner(this.pos,-1);for(;n&&e.indexOf(n.name)<0;)n=n.parent;return n?{from:n.from,to:this.pos,text:this.state.sliceDoc(n.from,this.pos),type:n.type}:null}matchBefore(e){let n=this.state.doc.lineAt(this.pos),r=Math.max(n.from,this.pos-250),i=n.text.slice(r-n.from,this.pos-n.from),o=i.search(sE(e,!1));return o<0?null:{from:r+o,to:this.pos,text:i.slice(o)}}get aborted(){return this.abortListeners==null}addEventListener(e,n){e=="abort"&&this.abortListeners&&this.abortListeners.push(n)}}function v5(t){let e=Object.keys(t).join(""),n=/\w/.test(e);return n&&(e=e.replace(/\w/g,"")),`[${n?"\\w":""}${e.replace(/[^\w\s]/g,"\\$&")}]`}function $6(t){let e=Object.create(null),n=Object.create(null);for(let{label:i}of t){e[i[0]]=!0;for(let o=1;o<i.length;o++)n[i[o]]=!0}let r=v5(e)+v5(n)+"*$";return[new RegExp("^"+r),new RegExp(r)]}function oE(t){let e=t.map(i=>typeof i=="string"?{label:i}:i),[n,r]=e.every(i=>/^\w+$/.test(i.label))?[/\w*$/,/\w+$/]:$6(e);return i=>{let o=i.matchBefore(r);return o||i.explicit?{from:o?o.from:i.pos,options:e,validFor:n}:null}}class b5{constructor(e,n,r){this.completion=e,this.source=n,this.match=r}}function xo(t){return t.selection.main.head}function sE(t,e){var n;let{source:r}=t,i=e&&r[0]!="^",o=r[r.length-1]!="$";return!i&&!o?t:new RegExp(`${i?"^":""}(?:${r})${o?"$":""}`,(n=t.flags)!==null&&n!==void 0?n:t.ignoreCase?"i":"")}const eF=Vo.define();function tF(t,e,n,r){return Object.assign(Object.assign({},t.changeByRange(i=>{if(i==t.selection.main)return{changes:{from:n,to:r,insert:e},range:V.cursor(n+e.length)};let o=r-n;return!i.empty||o&&t.sliceDoc(i.from-o,i.from)!=t.sliceDoc(n,r)?{range:i}:{changes:{from:i.from-o,to:i.from,insert:e},range:V.cursor(i.from-o+e.length)}})),{userEvent:"input.complete"})}function aE(t,e){const n=e.completion.apply||e.completion.label;let r=e.source;typeof n=="string"?t.dispatch(Object.assign(Object.assign({},tF(t.state,n,r.from,r.to)),{annotations:eF.of(e.completion)})):n(t,e.completion,r.from,r.to)}const y5=new WeakMap;function nF(t){if(!Array.isArray(t))return t;let e=y5.get(t);return e||y5.set(t,e=oE(t)),e}class rF{constructor(e){this.pattern=e,this.chars=[],this.folded=[],this.any=[],this.precise=[],this.byWord=[];for(let n=0;n<e.length;){let r=Mt(e,n),i=wn(r);this.chars.push(r);let o=e.slice(n,n+i),s=o.toUpperCase();this.folded.push(Mt(s==o?o.toLowerCase():s,0)),n+=i}this.astral=e.length!=this.chars.length}match(e){if(this.pattern.length==0)return[0];if(e.length<this.pattern.length)return null;let{chars:n,folded:r,any:i,precise:o,byWord:s}=this;if(n.length==1){let v=Mt(e,0);return v==n[0]?[0,0,wn(v)]:v==r[0]?[-200,0,wn(v)]:null}let a=e.indexOf(this.pattern);if(a==0)return[0,0,this.pattern.length];let l=n.length,c=0;if(a<0){for(let v=0,y=Math.min(e.length,200);v<y&&c<l;){let x=Mt(e,v);(x==n[c]||x==r[c])&&(i[c++]=v),v+=wn(x)}if(c<l)return null}let u=0,d=0,f=!1,h=0,p=-1,m=-1,b=/[a-z]/.test(e),g=!0;for(let v=0,y=Math.min(e.length,200),x=0;v<y&&d<l;){let k=Mt(e,v);a<0&&(u<l&&k==n[u]&&(o[u++]=v),h<l&&(k==n[h]||k==r[h]?(h==0&&(p=v),m=v+1,h++):h=0));let O,T=k<255?k>=48&&k<=57||k>=97&&k<=122?2:k>=65&&k<=90?1:0:(O=ax(k))!=O.toLowerCase()?1:O!=O.toUpperCase()?2:0;(!v||T==1&&b||x==0&&T!=0)&&(n[d]==k||r[d]==k&&(f=!0)?s[d++]=v:s.length&&(g=!1)),x=T,v+=wn(k)}return d==l&&s[0]==0&&g?this.result(-100+(f?-200:0),s,e):h==l&&p==0?[-200-e.length,0,m]:a>-1?[-700-e.length,a,a+this.pattern.length]:h==l?[-200+-700-e.length,p,m]:d==l?this.result(-100+(f?-200:0)+-700+(g?0:-1100),s,e):n.length==2?null:this.result((i[0]?-700:0)+-200+-1100,i,e)}result(e,n,r){let i=[e-r.length],o=1;for(let s of n){let a=s+(this.astral?wn(Mt(r,s)):1);o>1&&i[o-1]==s?i[o-1]=a:(i[o++]=s,i[o++]=a)}return i}}const er=$.define({combine(t){return ri(t,{activateOnTyping:!0,selectOnOpen:!0,override:null,closeOnBlur:!0,maxRenderedOptions:100,defaultKeymap:!0,optionClass:()=>"",aboveCursor:!1,icons:!0,addToOptions:[],compareCompletions:(e,n)=>e.label.localeCompare(n.label),interactionDelay:75},{defaultKeymap:(e,n)=>e&&n,closeOnBlur:(e,n)=>e&&n,icons:(e,n)=>e&&n,optionClass:(e,n)=>r=>iF(e(r),n(r)),addToOptions:(e,n)=>e.concat(n)})}});function iF(t,e){return t?e?t+" "+e:t:e}function oF(t){let e=t.addToOptions.slice();return t.icons&&e.push({render(n){let r=document.createElement("div");return r.classList.add("cm-completionIcon"),n.type&&r.classList.add(...n.type.split(/\s+/g).map(i=>"cm-completionIcon-"+i)),r.setAttribute("aria-hidden","true"),r},position:20}),e.push({render(n,r,i){let o=document.createElement("span");o.className="cm-completionLabel";let{label:s}=n,a=0;for(let l=1;l<i.length;){let c=i[l++],u=i[l++];c>a&&o.appendChild(document.createTextNode(s.slice(a,c)));let d=o.appendChild(document.createElement("span"));d.appendChild(document.createTextNode(s.slice(c,u))),d.className="cm-completionMatchedText",a=u}return a<s.length&&o.appendChild(document.createTextNode(s.slice(a))),o},position:50},{render(n){if(!n.detail)return null;let r=document.createElement("span");return r.className="cm-completionDetail",r.textContent=n.detail,r},position:80}),e.sort((n,r)=>n.position-r.position).map(n=>n.render)}function x5(t,e,n){if(t<=n)return{from:0,to:t};if(e<0&&(e=0),e<=t>>1){let i=Math.floor(e/n);return{from:i*n,to:(i+1)*n}}let r=Math.floor((t-e)/n);return{from:t-(r+1)*n,to:t-r*n}}class sF{constructor(e,n){this.view=e,this.stateField=n,this.info=null,this.placeInfo={read:()=>this.measureInfo(),write:a=>this.positionInfo(a),key:this},this.space=null;let r=e.state.field(n),{options:i,selected:o}=r.open,s=e.state.facet(er);this.optionContent=oF(s),this.optionClass=s.optionClass,this.range=x5(i.length,o,s.maxRenderedOptions),this.dom=document.createElement("div"),this.dom.className="cm-tooltip-autocomplete",this.dom.addEventListener("mousedown",a=>{for(let l=a.target,c;l&&l!=this.dom;l=l.parentNode)if(l.nodeName=="LI"&&(c=/-(\d+)$/.exec(l.id))&&+c[1]<i.length){aE(e,i[+c[1]]),a.preventDefault();return}}),this.list=this.dom.appendChild(this.createListBox(i,r.id,this.range)),this.list.addEventListener("scroll",()=>{this.info&&this.view.requestMeasure(this.placeInfo)})}mount(){this.updateSel()}update(e){var n,r,i;let o=e.state.field(this.stateField),s=e.startState.field(this.stateField);o!=s&&(this.updateSel(),((n=o.open)===null||n===void 0?void 0:n.disabled)!=((r=s.open)===null||r===void 0?void 0:r.disabled)&&this.dom.classList.toggle("cm-tooltip-autocomplete-disabled",!!(!((i=o.open)===null||i===void 0)&&i.disabled)))}positioned(e){this.space=e,this.info&&this.view.requestMeasure(this.placeInfo)}updateSel(){let e=this.view.state.field(this.stateField),n=e.open;if((n.selected>-1&&n.selected<this.range.from||n.selected>=this.range.to)&&(this.range=x5(n.options.length,n.selected,this.view.state.facet(er).maxRenderedOptions),this.list.remove(),this.list=this.dom.appendChild(this.createListBox(n.options,e.id,this.range)),this.list.addEventListener("scroll",()=>{this.info&&this.view.requestMeasure(this.placeInfo)})),this.updateSelectedOption(n.selected)){this.info&&(this.info.remove(),this.info=null);let{completion:r}=n.options[n.selected],{info:i}=r;if(!i)return;let o=typeof i=="string"?document.createTextNode(i):i(r);if(!o)return;"then"in o?o.then(s=>{s&&this.view.state.field(this.stateField,!1)==e&&this.addInfoPane(s)}).catch(s=>Mn(this.view.state,s,"completion info")):this.addInfoPane(o)}}addInfoPane(e){let n=this.info=document.createElement("div");n.className="cm-tooltip cm-completionInfo",n.appendChild(e),this.dom.appendChild(n),this.view.requestMeasure(this.placeInfo)}updateSelectedOption(e){let n=null;for(let r=this.list.firstChild,i=this.range.from;r;r=r.nextSibling,i++)i==e?r.hasAttribute("aria-selected")||(r.setAttribute("aria-selected","true"),n=r):r.hasAttribute("aria-selected")&&r.removeAttribute("aria-selected");return n&&lF(this.list,n),n}measureInfo(){let e=this.dom.querySelector("[aria-selected]");if(!e||!this.info)return null;let n=this.dom.getBoundingClientRect(),r=this.info.getBoundingClientRect(),i=e.getBoundingClientRect(),o=this.space;if(!o){let p=this.dom.ownerDocument.defaultView||window;o={left:0,top:0,right:p.innerWidth,bottom:p.innerHeight}}if(i.top>Math.min(o.bottom,n.bottom)-10||i.bottom<Math.max(o.top,n.top)+10)return null;let s=this.view.textDirection==Qe.RTL,a=s,l=!1,c,u="",d="",f=n.left-o.left,h=o.right-n.right;if(a&&f<Math.min(r.width,h)?a=!1:!a&&h<Math.min(r.width,f)&&(a=!0),r.width<=(a?f:h))u=Math.max(o.top,Math.min(i.top,o.bottom-r.height))-n.top+"px",c=Math.min(400,a?f:h)+"px";else{l=!0,c=Math.min(400,(s?n.right:o.right-n.left)-30)+"px";let p=o.bottom-n.bottom;p>=r.height||p>n.top?u=i.bottom-n.top+"px":d=n.bottom-i.top+"px"}return{top:u,bottom:d,maxWidth:c,class:l?s?"left-narrow":"right-narrow":a?"left":"right"}}positionInfo(e){this.info&&(e?(this.info.style.top=e.top,this.info.style.bottom=e.bottom,this.info.style.maxWidth=e.maxWidth,this.info.className="cm-tooltip cm-completionInfo cm-completionInfo-"+e.class):this.info.style.top="-1e6px")}createListBox(e,n,r){const i=document.createElement("ul");i.id=n,i.setAttribute("role","listbox"),i.setAttribute("aria-expanded","true"),i.setAttribute("aria-label",this.view.state.phrase("Completions"));for(let o=r.from;o<r.to;o++){let{completion:s,match:a}=e[o];const l=i.appendChild(document.createElement("li"));l.id=n+"-"+o,l.setAttribute("role","option");let c=this.optionClass(s);c&&(l.className=c);for(let u of this.optionContent){let d=u(s,this.view.state,a);d&&l.appendChild(d)}}return r.from&&i.classList.add("cm-completionListIncompleteTop"),r.to<e.length&&i.classList.add("cm-completionListIncompleteBottom"),i}}function aF(t){return e=>new sF(e,t)}function lF(t,e){let n=t.getBoundingClientRect(),r=e.getBoundingClientRect();r.top<n.top?t.scrollTop-=n.top-r.top:r.bottom>n.bottom&&(t.scrollTop+=r.bottom-n.bottom)}function S5(t){return(t.boost||0)*100+(t.apply?10:0)+(t.info?5:0)+(t.type?1:0)}function cF(t,e){let n=[],r=0;for(let a of t)if(a.hasResult())if(a.result.filter===!1){let l=a.result.getMatch;for(let c of a.result.options){let u=[1e9-r++];if(l)for(let d of l(c))u.push(d);n.push(new b5(c,a,u))}}else{let l=new rF(e.sliceDoc(a.from,a.to)),c;for(let u of a.result.options)(c=l.match(u.label))&&(u.boost!=null&&(c[0]+=u.boost),n.push(new b5(u,a,c)))}let i=[],o=null,s=e.facet(er).compareCompletions;for(let a of n.sort((l,c)=>c.match[0]-l.match[0]||s(l.completion,c.completion)))!o||o.label!=a.completion.label||o.detail!=a.completion.detail||o.type!=null&&a.completion.type!=null&&o.type!=a.completion.type||o.apply!=a.completion.apply?i.push(a):S5(a.completion)>S5(o)&&(i[i.length-1]=a),o=a.completion;return i}class Ia{constructor(e,n,r,i,o,s){this.options=e,this.attrs=n,this.tooltip=r,this.timestamp=i,this.selected=o,this.disabled=s}setSelected(e,n){return e==this.selected||e>=this.options.length?this:new Ia(this.options,k5(n,e),this.tooltip,this.timestamp,e,this.disabled)}static build(e,n,r,i,o){let s=cF(e,n);if(!s.length)return i&&e.some(l=>l.state==1)?new Ia(i.options,i.attrs,i.tooltip,i.timestamp,i.selected,!0):null;let a=n.facet(er).selectOnOpen?0:-1;if(i&&i.selected!=a&&i.selected!=-1){let l=i.options[i.selected].completion;for(let c=0;c<s.length;c++)if(s[c].completion==l){a=c;break}}return new Ia(s,k5(r,a),{pos:e.reduce((l,c)=>c.hasResult()?Math.min(l,c.from):l,1e8),create:aF(jn),above:o.aboveCursor},i?i.timestamp:Date.now(),a,!1)}map(e){return new Ia(this.options,this.attrs,Object.assign(Object.assign({},this.tooltip),{pos:e.mapPos(this.tooltip.pos)}),this.timestamp,this.selected,this.disabled)}}class Rp{constructor(e,n,r){this.active=e,this.id=n,this.open=r}static start(){return new Rp(fF,"cm-ac-"+Math.floor(Math.random()*2e6).toString(36),null)}update(e){let{state:n}=e,r=n.facet(er),o=(r.override||n.languageDataAt("autocomplete",xo(n)).map(nF)).map(a=>(this.active.find(c=>c.source==a)||new on(a,this.active.some(c=>c.state!=0)?1:0)).update(e,r));o.length==this.active.length&&o.every((a,l)=>a==this.active[l])&&(o=this.active);let s=this.open;e.selection||o.some(a=>a.hasResult()&&e.changes.touchesRange(a.from,a.to))||!uF(o,this.active)?s=Ia.build(o,n,this.id,this.open,r):s&&s.disabled&&!o.some(a=>a.state==1)?s=null:s&&e.docChanged&&(s=s.map(e.changes)),!s&&o.every(a=>a.state!=1)&&o.some(a=>a.hasResult())&&(o=o.map(a=>a.hasResult()?new on(a.source,0):a));for(let a of e.effects)a.is(cE)&&(s=s&&s.setSelected(a.value,this.id));return o==this.active&&s==this.open?this:new Rp(o,this.id,s)}get tooltip(){return this.open?this.open.tooltip:null}get attrs(){return this.open?this.open.attrs:dF}}function uF(t,e){if(t==e)return!0;for(let n=0,r=0;;){for(;n<t.length&&!t[n].hasResult;)n++;for(;r<e.length&&!e[r].hasResult;)r++;let i=n==t.length,o=r==e.length;if(i||o)return i==o;if(t[n++].result!=e[r++].result)return!1}}const dF={"aria-autocomplete":"list"};function k5(t,e){let n={"aria-autocomplete":"list","aria-haspopup":"listbox","aria-controls":t};return e>-1&&(n["aria-activedescendant"]=t+"-"+e),n}const fF=[];function hy(t){return t.isUserEvent("input.type")?"input":t.isUserEvent("delete.backward")?"delete":null}class on{constructor(e,n,r=-1){this.source=e,this.state=n,this.explicitPos=r}hasResult(){return!1}update(e,n){let r=hy(e),i=this;r?i=i.handleUserEvent(e,r,n):e.docChanged?i=i.handleChange(e):e.selection&&i.state!=0&&(i=new on(i.source,0));for(let o of e.effects)if(o.is(Xx))i=new on(i.source,1,o.value?xo(e.state):-1);else if(o.is(Ip))i=new on(i.source,0);else if(o.is(lE))for(let s of o.value)s.source==i.source&&(i=s);return i}handleUserEvent(e,n,r){return n=="delete"||!r.activateOnTyping?this.map(e.changes):new on(this.source,1)}handleChange(e){return e.changes.touchesRange(xo(e.startState))?new on(this.source,0):this.map(e.changes)}map(e){return e.empty||this.explicitPos<0?this:new on(this.source,this.state,e.mapPos(this.explicitPos))}}class Hc extends on{constructor(e,n,r,i,o){super(e,2,n),this.result=r,this.from=i,this.to=o}hasResult(){return!0}handleUserEvent(e,n,r){var i;let o=e.changes.mapPos(this.from),s=e.changes.mapPos(this.to,1),a=xo(e.state);if((this.explicitPos<0?a<=o:a<this.from)||a>s||n=="delete"&&xo(e.startState)==this.from)return new on(this.source,n=="input"&&r.activateOnTyping?1:0);let l=this.explicitPos<0?-1:e.changes.mapPos(this.explicitPos),c;return hF(this.result.validFor,e.state,o,s)?new Hc(this.source,l,this.result,o,s):this.result.update&&(c=this.result.update(this.result,o,s,new iE(e.state,a,l>=0)))?new Hc(this.source,l,c,c.from,(i=c.to)!==null&&i!==void 0?i:xo(e.state)):new on(this.source,1,l)}handleChange(e){return e.changes.touchesRange(this.from,this.to)?new on(this.source,0):this.map(e.changes)}map(e){return e.empty?this:new Hc(this.source,this.explicitPos<0?-1:e.mapPos(this.explicitPos),this.result,e.mapPos(this.from),e.mapPos(this.to,1))}}function hF(t,e,n,r){if(!t)return!1;let i=e.sliceDoc(n,r);return typeof t=="function"?t(i,n,r,e):sE(t,!0).test(i)}const Xx=se.define(),Ip=se.define(),lE=se.define({map(t,e){return t.map(n=>n.map(e))}}),cE=se.define(),jn=kt.define({create(){return Rp.start()},update(t,e){return t.update(e)},provide:t=>[vx.from(t,e=>e.tooltip),K.contentAttributes.from(t,e=>e.attrs)]});function yf(t,e="option"){return n=>{let r=n.state.field(jn,!1);if(!r||!r.open||r.open.disabled||Date.now()-r.open.timestamp<n.state.facet(er).interactionDelay)return!1;let i=1,o;e=="page"&&(o=PG(n,r.open.tooltip))&&(i=Math.max(2,Math.floor(o.dom.offsetHeight/o.dom.querySelector("li").offsetHeight)-1));let{length:s}=r.open.options,a=r.open.selected>-1?r.open.selected+i*(t?1:-1):t?0:s-1;return a<0?a=e=="page"?0:s-1:a>=s&&(a=e=="page"?s-1:0),n.dispatch({effects:cE.of(a)}),!0}}const pF=t=>{let e=t.state.field(jn,!1);return t.state.readOnly||!e||!e.open||e.open.selected<0||Date.now()-e.open.timestamp<t.state.facet(er).interactionDelay?!1:(e.open.disabled||aE(t,e.open.options[e.open.selected]),!0)},mF=t=>t.state.field(jn,!1)?(t.dispatch({effects:Xx.of(!0)}),!0):!1,gF=t=>{let e=t.state.field(jn,!1);return!e||!e.active.some(n=>n.state!=0)?!1:(t.dispatch({effects:Ip.of(null)}),!0)};class vF{constructor(e,n){this.active=e,this.context=n,this.time=Date.now(),this.updates=[],this.done=void 0}}const w5=50,bF=50,yF=1e3,xF=nt.fromClass(class{constructor(t){this.view=t,this.debounceUpdate=-1,this.running=[],this.debounceAccept=-1,this.composing=0;for(let e of t.state.field(jn).active)e.state==1&&this.startQuery(e)}update(t){let e=t.state.field(jn);if(!t.selectionSet&&!t.docChanged&&t.startState.field(jn)==e)return;let n=t.transactions.some(r=>(r.selection||r.docChanged)&&!hy(r));for(let r=0;r<this.running.length;r++){let i=this.running[r];if(n||i.updates.length+t.transactions.length>bF&&Date.now()-i.time>yF){for(let o of i.context.abortListeners)try{o()}catch(s){Mn(this.view.state,s)}i.context.abortListeners=null,this.running.splice(r--,1)}else i.updates.push(...t.transactions)}if(this.debounceUpdate>-1&&clearTimeout(this.debounceUpdate),this.debounceUpdate=e.active.some(r=>r.state==1&&!this.running.some(i=>i.active.source==r.source))?setTimeout(()=>this.startUpdate(),w5):-1,this.composing!=0)for(let r of t.transactions)hy(r)=="input"?this.composing=2:this.composing==2&&r.selection&&(this.composing=3)}startUpdate(){this.debounceUpdate=-1;let{state:t}=this.view,e=t.field(jn);for(let n of e.active)n.state==1&&!this.running.some(r=>r.active.source==n.source)&&this.startQuery(n)}startQuery(t){let{state:e}=this.view,n=xo(e),r=new iE(e,n,t.explicitPos==n),i=new vF(t,r);this.running.push(i),Promise.resolve(t.source(r)).then(o=>{i.context.aborted||(i.done=o||null,this.scheduleAccept())},o=>{this.view.dispatch({effects:Ip.of(null)}),Mn(this.view.state,o)})}scheduleAccept(){this.running.every(t=>t.done!==void 0)?this.accept():this.debounceAccept<0&&(this.debounceAccept=setTimeout(()=>this.accept(),w5))}accept(){var t;this.debounceAccept>-1&&clearTimeout(this.debounceAccept),this.debounceAccept=-1;let e=[],n=this.view.state.facet(er);for(let r=0;r<this.running.length;r++){let i=this.running[r];if(i.done===void 0)continue;if(this.running.splice(r--,1),i.done){let s=new Hc(i.active.source,i.active.explicitPos,i.done,i.done.from,(t=i.done.to)!==null&&t!==void 0?t:xo(i.updates.length?i.updates[0].startState:this.view.state));for(let a of i.updates)s=s.update(a,n);if(s.hasResult()){e.push(s);continue}}let o=this.view.state.field(jn).active.find(s=>s.source==i.active.source);if(o&&o.state==1)if(i.done==null){let s=new on(i.active.source,0);for(let a of i.updates)s=s.update(a,n);s.state!=1&&e.push(s)}else this.startQuery(o)}e.length&&this.view.dispatch({effects:lE.of(e)})}},{eventHandlers:{blur(){let t=this.view.state.field(jn,!1);t&&t.tooltip&&this.view.state.facet(er).closeOnBlur&&this.view.dispatch({effects:Ip.of(null)})},compositionstart(){this.composing=1},compositionend(){this.composing==3&&setTimeout(()=>this.view.dispatch({effects:Xx.of(!1)}),20),this.composing=0}}}),SF=K.baseTheme({".cm-tooltip.cm-tooltip-autocomplete":{"& > ul":{fontFamily:"monospace",whiteSpace:"nowrap",overflow:"hidden auto",maxWidth_fallback:"700px",maxWidth:"min(700px, 95vw)",minWidth:"250px",maxHeight:"10em",height:"100%",listStyle:"none",margin:0,padding:0,"& > li":{overflowX:"hidden",textOverflow:"ellipsis",cursor:"pointer",padding:"1px 3px",lineHeight:1.2}}},"&light .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#17c",color:"white"},"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#777"},"&dark .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#347",color:"white"},"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#444"},".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after":{content:'"\xB7\xB7\xB7"',opacity:.5,display:"block",textAlign:"center"},".cm-tooltip.cm-completionInfo":{position:"absolute",padding:"3px 9px",width:"max-content",maxWidth:`${400}px`,boxSizing:"border-box"},".cm-completionInfo.cm-completionInfo-left":{right:"100%"},".cm-completionInfo.cm-completionInfo-right":{left:"100%"},".cm-completionInfo.cm-completionInfo-left-narrow":{right:`${30}px`},".cm-completionInfo.cm-completionInfo-right-narrow":{left:`${30}px`},"&light .cm-snippetField":{backgroundColor:"#00000022"},"&dark .cm-snippetField":{backgroundColor:"#ffffff22"},".cm-snippetFieldPosition":{verticalAlign:"text-top",width:0,height:"1.15em",display:"inline-block",margin:"0 -0.7px -.7em",borderLeft:"1.4px dotted #888"},".cm-completionMatchedText":{textDecoration:"underline"},".cm-completionDetail":{marginLeft:"0.5em",fontStyle:"italic"},".cm-completionIcon":{fontSize:"90%",width:".8em",display:"inline-block",textAlign:"center",paddingRight:".6em",opacity:"0.6",boxSizing:"content-box"},".cm-completionIcon-function, .cm-completionIcon-method":{"&:after":{content:"'\u0192'"}},".cm-completionIcon-class":{"&:after":{content:"'\u25CB'"}},".cm-completionIcon-interface":{"&:after":{content:"'\u25CC'"}},".cm-completionIcon-variable":{"&:after":{content:"'\u{1D465}'"}},".cm-completionIcon-constant":{"&:after":{content:"'\u{1D436}'"}},".cm-completionIcon-type":{"&:after":{content:"'\u{1D461}'"}},".cm-completionIcon-enum":{"&:after":{content:"'\u222A'"}},".cm-completionIcon-property":{"&:after":{content:"'\u25A1'"}},".cm-completionIcon-keyword":{"&:after":{content:"'\u{1F511}\uFE0E'"}},".cm-completionIcon-namespace":{"&:after":{content:"'\u25A2'"}},".cm-completionIcon-text":{"&:after":{content:"'abc'",fontSize:"50%",verticalAlign:"middle"}}}),Au={brackets:["(","[","{","'",'"'],before:")]}:;>",stringPrefixes:[]},fs=se.define({map(t,e){let n=e.mapPos(t,-1,Kt.TrackAfter);return n==null?void 0:n}}),Bx=se.define({map(t,e){return e.mapPos(t)}}),Ax=new class extends Es{};Ax.startSide=1;Ax.endSide=-1;const uE=kt.define({create(){return Oe.empty},update(t,e){if(e.selection){let n=e.state.doc.lineAt(e.selection.main.head).from,r=e.startState.doc.lineAt(e.startState.selection.main.head).from;n!=e.changes.mapPos(r,-1)&&(t=Oe.empty)}t=t.map(e.changes);for(let n of e.effects)n.is(fs)?t=t.update({add:[Ax.range(n.value,n.value+1)]}):n.is(Bx)&&(t=t.update({filter:r=>r!=n.value}));return t}});function kF(){return[OF,uE]}const R0="()[]{}<>";function dE(t){for(let e=0;e<R0.length;e+=2)if(R0.charCodeAt(e)==t)return R0.charAt(e+1);return ax(t<128?t:t+1)}function fE(t,e){return t.languageDataAt("closeBrackets",e)[0]||Au}const wF=typeof navigator=="object"&&/Android\b/.test(navigator.userAgent),OF=K.inputHandler.of((t,e,n,r)=>{if((wF?t.composing:t.compositionStarted)||t.state.readOnly)return!1;let i=t.state.selection.main;if(r.length>2||r.length==2&&wn(Mt(r,0))==1||e!=i.from||n!=i.to)return!1;let o=CF(t.state,r);return o?(t.dispatch(o),!0):!1}),TF=({state:t,dispatch:e})=>{if(t.readOnly)return!1;let r=fE(t,t.selection.main.head).brackets||Au.brackets,i=null,o=t.changeByRange(s=>{if(s.empty){let a=MF(t.doc,s.head);for(let l of r)if(l==a&&Bm(t.doc,s.head)==dE(Mt(l,0)))return{changes:{from:s.head-l.length,to:s.head+l.length},range:V.cursor(s.head-l.length)}}return{range:i=s}});return i||e(t.update(o,{scrollIntoView:!0,userEvent:"delete.backward"})),!i},PF=[{key:"Backspace",run:TF}];function CF(t,e){let n=fE(t,t.selection.main.head),r=n.brackets||Au.brackets;for(let i of r){let o=dE(Mt(i,0));if(e==i)return o==i?zF(t,i,r.indexOf(i+i+i)>-1,n):RF(t,i,o,n.before||Au.before);if(e==o&&hE(t,t.selection.main.from))return IF(t,i,o)}return null}function hE(t,e){let n=!1;return t.field(uE).between(0,t.doc.length,r=>{r==e&&(n=!0)}),n}function Bm(t,e){let n=t.sliceString(e,e+2);return n.slice(0,wn(Mt(n,0)))}function MF(t,e){let n=t.sliceString(e-2,e);return wn(Mt(n,0))==n.length?n:n.slice(1)}function RF(t,e,n,r){let i=null,o=t.changeByRange(s=>{if(!s.empty)return{changes:[{insert:e,from:s.from},{insert:n,from:s.to}],effects:fs.of(s.to+e.length),range:V.range(s.anchor+e.length,s.head+e.length)};let a=Bm(t.doc,s.head);return!a||/\s/.test(a)||r.indexOf(a)>-1?{changes:{insert:e+n,from:s.head},effects:fs.of(s.head+e.length),range:V.cursor(s.head+e.length)}:{range:i=s}});return i?null:t.update(o,{scrollIntoView:!0,userEvent:"input.type"})}function IF(t,e,n){let r=null,i=t.selection.ranges.map(o=>o.empty&&Bm(t.doc,o.head)==n?V.cursor(o.head+n.length):r=o);return r?null:t.update({selection:V.create(i,t.selection.mainIndex),scrollIntoView:!0,effects:t.selection.ranges.map(({from:o})=>Bx.of(o))})}function zF(t,e,n,r){let i=r.stringPrefixes||Au.stringPrefixes,o=null,s=t.changeByRange(a=>{if(!a.empty)return{changes:[{insert:e,from:a.from},{insert:e,from:a.to}],effects:fs.of(a.to+e.length),range:V.range(a.anchor+e.length,a.head+e.length)};let l=a.head,c=Bm(t.doc,l),u;if(c==e){if(O5(t,l))return{changes:{insert:e+e,from:l},effects:fs.of(l+e.length),range:V.cursor(l+e.length)};if(hE(t,l)){let d=n&&t.sliceDoc(l,l+e.length*3)==e+e+e;return{range:V.cursor(l+e.length*(d?3:1)),effects:Bx.of(l)}}}else{if(n&&t.sliceDoc(l-2*e.length,l)==e+e&&(u=T5(t,l-2*e.length,i))>-1&&O5(t,u))return{changes:{insert:e+e+e+e,from:l},effects:fs.of(l+e.length),range:V.cursor(l+e.length)};if(t.charCategorizer(l)(c)!=je.Word&&T5(t,l,i)>-1&&!EF(t,l,e,i))return{changes:{insert:e+e,from:l},effects:fs.of(l+e.length),range:V.cursor(l+e.length)}}return{range:o=a}});return o?null:t.update(s,{scrollIntoView:!0,userEvent:"input.type"})}function O5(t,e){let n=xt(t).resolveInner(e+1);return n.parent&&n.from==e}function EF(t,e,n,r){let i=xt(t).resolveInner(e,-1),o=r.reduce((s,a)=>Math.max(s,a.length),0);for(let s=0;s<5;s++){let a=t.sliceDoc(i.from,Math.min(i.to,i.from+n.length+o)),l=a.indexOf(n);if(!l||l>-1&&r.indexOf(a.slice(0,l))>-1){let u=i.firstChild;for(;u&&u.from==i.from&&u.to-u.from>n.length+l;){if(t.sliceDoc(u.to-n.length,u.to)==n)return!1;u=u.firstChild}return!0}let c=i.to==e&&i.parent;if(!c)break;i=c}return!1}function T5(t,e,n){let r=t.charCategorizer(e);if(r(t.sliceDoc(e-1,e))!=je.Word)return e;for(let i of n){let o=e-i.length;if(t.sliceDoc(o,e)==i&&r(t.sliceDoc(o-1,o))!=je.Word)return o}return-1}function NF(t={}){return[jn,er.of(t),xF,VF,SF]}const pE=[{key:"Ctrl-Space",run:mF},{key:"Escape",run:gF},{key:"ArrowDown",run:yf(!0)},{key:"ArrowUp",run:yf(!1)},{key:"PageDown",run:yf(!0,"page")},{key:"PageUp",run:yf(!1,"page")},{key:"Enter",run:pF}],VF=Ws.highest(ud.computeN([er],t=>t.facet(er).defaultKeymap?[pE]:[]));class LF{constructor(e,n,r){this.from=e,this.to=n,this.diagnostic=r}}class rs{constructor(e,n,r){this.diagnostics=e,this.panel=n,this.selected=r}static init(e,n,r){let i=e,o=r.facet(za).markerFilter;o&&(i=o(i));let s=F.set(i.map(a=>a.from==a.to||a.from==a.to-1&&r.doc.lineAt(a.from).to==a.from?F.widget({widget:new jF(a),diagnostic:a}).range(a.from):F.mark({attributes:{class:"cm-lintRange cm-lintRange-"+a.severity},diagnostic:a}).range(a.from,a.to)),!0);return new rs(s,n,xl(s))}}function xl(t,e=null,n=0){let r=null;return t.between(n,1e9,(i,o,{spec:s})=>{if(!(e&&s.diagnostic!=e))return r=new LF(i,o,s.diagnostic),!1}),r}function XF(t,e){return!!(t.effects.some(n=>n.is(Zx))||t.changes.touchesRange(e.pos))}function mE(t,e){return t.field(Pn,!1)?e:e.concat(se.appendConfig.of([Pn,K.decorations.compute([Pn],n=>{let{selected:r,panel:i}=n.field(Pn);return!r||!i||r.from==r.to?F.none:F.set([AF.range(r.from,r.to)])}),TG(ZF,{hideOn:XF}),UF]))}function BF(t,e){return{effects:mE(t,[Zx.of(e)])}}const Zx=se.define(),Gx=se.define(),gE=se.define(),Pn=kt.define({create(){return new rs(F.none,null,null)},update(t,e){if(e.docChanged){let n=t.diagnostics.map(e.changes),r=null;if(t.selected){let i=e.changes.mapPos(t.selected.from,1);r=xl(n,t.selected.diagnostic,i)||xl(n,null,i)}t=new rs(n,t.panel,r)}for(let n of e.effects)n.is(Zx)?t=rs.init(n.value,t.panel,e.state):n.is(Gx)?t=new rs(t.diagnostics,n.value?Am.open:null,t.selected):n.is(gE)&&(t=new rs(t.diagnostics,t.panel,n.value));return t},provide:t=>[pl.from(t,e=>e.panel),K.decorations.from(t,e=>e.diagnostics)]}),AF=F.mark({class:"cm-lintRange cm-lintRange-active"});function ZF(t,e,n){let{diagnostics:r}=t.state.field(Pn),i=[],o=2e8,s=0;r.between(e-(n<0?1:0),e+(n>0?1:0),(l,c,{spec:u})=>{e>=l&&e<=c&&(l==c||(e>l||n>0)&&(e<c||n<0))&&(i.push(u.diagnostic),o=Math.min(l,o),s=Math.max(c,s))});let a=t.state.facet(za).tooltipFilter;return a&&(i=a(i)),i.length?{pos:o,end:s,above:t.state.doc.lineAt(o).to<s,create(){return{dom:GF(t,i)}}}:null}function GF(t,e){return ze("ul",{class:"cm-tooltip-lint"},e.map(n=>bE(t,n,!1)))}const WF=t=>{let e=t.state.field(Pn,!1);(!e||!e.panel)&&t.dispatch({effects:mE(t.state,[Gx.of(!0)])});let n=zu(t,Am.open);return n&&n.dom.querySelector(".cm-panel-lint ul").focus(),!0},P5=t=>{let e=t.state.field(Pn,!1);return!e||!e.panel?!1:(t.dispatch({effects:Gx.of(!1)}),!0)},YF=t=>{let e=t.state.field(Pn,!1);if(!e)return!1;let n=t.state.selection.main,r=e.diagnostics.iter(n.to+1);return!r.value&&(r=e.diagnostics.iter(0),!r.value||r.from==n.from&&r.to==n.to)?!1:(t.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0}),!0)},FF=[{key:"Mod-Shift-m",run:WF,preventDefault:!0},{key:"F8",run:YF}],HF=nt.fromClass(class{constructor(t){this.view=t,this.timeout=-1,this.set=!0;let{delay:e}=t.state.facet(za);this.lintTime=Date.now()+e,this.run=this.run.bind(this),this.timeout=setTimeout(this.run,e)}run(){let t=Date.now();if(t<this.lintTime-10)setTimeout(this.run,this.lintTime-t);else{this.set=!1;let{state:e}=this.view,{sources:n}=e.facet(za);Promise.all(n.map(r=>Promise.resolve(r(this.view)))).then(r=>{let i=r.reduce((o,s)=>o.concat(s));this.view.state.doc==e.doc&&this.view.dispatch(BF(this.view.state,i))},r=>{Mn(this.view.state,r)})}}update(t){let e=t.state.facet(za);(t.docChanged||e!=t.startState.facet(za))&&(this.lintTime=Date.now()+e.delay,this.set||(this.set=!0,this.timeout=setTimeout(this.run,e.delay)))}force(){this.set&&(this.lintTime=Date.now(),this.run())}destroy(){clearTimeout(this.timeout)}}),za=$.define({combine(t){return Object.assign({sources:t.map(e=>e.source)},ri(t.map(e=>e.config),{delay:750,markerFilter:null,tooltipFilter:null}))},enables:HF});function vE(t){let e=[];if(t)e:for(let{name:n}of t){for(let r=0;r<n.length;r++){let i=n[r];if(/[a-zA-Z]/.test(i)&&!e.some(o=>o.toLowerCase()==i.toLowerCase())){e.push(i);continue e}}e.push("")}return e}function bE(t,e,n){var r;let i=n?vE(e.actions):[];return ze("li",{class:"cm-diagnostic cm-diagnostic-"+e.severity},ze("span",{class:"cm-diagnosticText"},e.renderMessage?e.renderMessage():e.message),(r=e.actions)===null||r===void 0?void 0:r.map((o,s)=>{let a=d=>{d.preventDefault();let f=xl(t.state.field(Pn).diagnostics,e);f&&o.apply(t,f.from,f.to)},{name:l}=o,c=i[s]?l.indexOf(i[s]):-1,u=c<0?l:[l.slice(0,c),ze("u",l.slice(c,c+1)),l.slice(c+1)];return ze("button",{type:"button",class:"cm-diagnosticAction",onclick:a,onmousedown:a,"aria-label":` Action: ${l}${c<0?"":` (access key "${i[s]})"`}.`},u)}),e.source&&ze("div",{class:"cm-diagnosticSource"},e.source))}class jF extends Ni{constructor(e){super(),this.diagnostic=e}eq(e){return e.diagnostic==this.diagnostic}toDOM(){return ze("span",{class:"cm-lintPoint cm-lintPoint-"+this.diagnostic.severity})}}class C5{constructor(e,n){this.diagnostic=n,this.id="item_"+Math.floor(Math.random()*4294967295).toString(16),this.dom=bE(e,n,!0),this.dom.id=this.id,this.dom.setAttribute("role","option")}}class Am{constructor(e){this.view=e,this.items=[];let n=i=>{if(i.keyCode==27)P5(this.view),this.view.focus();else if(i.keyCode==38||i.keyCode==33)this.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);else if(i.keyCode==40||i.keyCode==34)this.moveSelection((this.selectedIndex+1)%this.items.length);else if(i.keyCode==36)this.moveSelection(0);else if(i.keyCode==35)this.moveSelection(this.items.length-1);else if(i.keyCode==13)this.view.focus();else if(i.keyCode>=65&&i.keyCode<=90&&this.selectedIndex>=0){let{diagnostic:o}=this.items[this.selectedIndex],s=vE(o.actions);for(let a=0;a<s.length;a++)if(s[a].toUpperCase().charCodeAt(0)==i.keyCode){let l=xl(this.view.state.field(Pn).diagnostics,o);l&&o.actions[a].apply(e,l.from,l.to)}}else return;i.preventDefault()},r=i=>{for(let o=0;o<this.items.length;o++)this.items[o].dom.contains(i.target)&&this.moveSelection(o)};this.list=ze("ul",{tabIndex:0,role:"listbox","aria-label":this.view.state.phrase("Diagnostics"),onkeydown:n,onclick:r}),this.dom=ze("div",{class:"cm-panel-lint"},this.list,ze("button",{type:"button",name:"close","aria-label":this.view.state.phrase("close"),onclick:()=>P5(this.view)},"\xD7")),this.update()}get selectedIndex(){let e=this.view.state.field(Pn).selected;if(!e)return-1;for(let n=0;n<this.items.length;n++)if(this.items[n].diagnostic==e.diagnostic)return n;return-1}update(){let{diagnostics:e,selected:n}=this.view.state.field(Pn),r=0,i=!1,o=null;for(e.between(0,this.view.state.doc.length,(s,a,{spec:l})=>{let c=-1,u;for(let d=r;d<this.items.length;d++)if(this.items[d].diagnostic==l.diagnostic){c=d;break}c<0?(u=new C5(this.view,l.diagnostic),this.items.splice(r,0,u),i=!0):(u=this.items[c],c>r&&(this.items.splice(r,c-r),i=!0)),n&&u.diagnostic==n.diagnostic?u.dom.hasAttribute("aria-selected")||(u.dom.setAttribute("aria-selected","true"),o=u):u.dom.hasAttribute("aria-selected")&&u.dom.removeAttribute("aria-selected"),r++});r<this.items.length&&!(this.items.length==1&&this.items[0].diagnostic.from<0);)i=!0,this.items.pop();this.items.length==0&&(this.items.push(new C5(this.view,{from:-1,to:-1,severity:"info",message:this.view.state.phrase("No diagnostics")})),i=!0),o?(this.list.setAttribute("aria-activedescendant",o.id),this.view.requestMeasure({key:this,read:()=>({sel:o.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel:s,panel:a})=>{s.top<a.top?this.list.scrollTop-=a.top-s.top:s.bottom>a.bottom&&(this.list.scrollTop+=s.bottom-a.bottom)}})):this.selectedIndex<0&&this.list.removeAttribute("aria-activedescendant"),i&&this.sync()}sync(){let e=this.list.firstChild;function n(){let r=e;e=r.nextSibling,r.remove()}for(let r of this.items)if(r.dom.parentNode==this.list){for(;e!=r.dom;)n();e=r.dom.nextSibling}else this.list.insertBefore(r.dom,e);for(;e;)n()}moveSelection(e){if(this.selectedIndex<0)return;let n=this.view.state.field(Pn),r=xl(n.diagnostics,this.items[e].diagnostic);!r||this.view.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0,effects:gE.of(r)})}static open(e){return new Am(e)}}function DF(t,e='viewBox="0 0 40 40"'){return`url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>')`}function I0(t){return DF(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`,'width="6" height="3"')}const UF=K.baseTheme({".cm-diagnostic":{padding:"3px 6px 3px 8px",marginLeft:"-1px",display:"block",whiteSpace:"pre-wrap"},".cm-diagnostic-error":{borderLeft:"5px solid #d11"},".cm-diagnostic-warning":{borderLeft:"5px solid orange"},".cm-diagnostic-info":{borderLeft:"5px solid #999"},".cm-diagnosticAction":{font:"inherit",border:"none",padding:"2px 4px",backgroundColor:"#444",color:"white",borderRadius:"3px",marginLeft:"8px"},".cm-diagnosticSource":{fontSize:"70%",opacity:.7},".cm-lintRange":{backgroundPosition:"left bottom",backgroundRepeat:"repeat-x",paddingBottom:"0.7px"},".cm-lintRange-error":{backgroundImage:I0("#d11")},".cm-lintRange-warning":{backgroundImage:I0("orange")},".cm-lintRange-info":{backgroundImage:I0("#999")},".cm-lintRange-active":{backgroundColor:"#ffdd9980"},".cm-tooltip-lint":{padding:0,margin:0},".cm-lintPoint":{position:"relative","&:after":{content:'""',position:"absolute",bottom:0,left:"-2px",borderLeft:"3px solid transparent",borderRight:"3px solid transparent",borderBottom:"4px solid #d11"}},".cm-lintPoint-warning":{"&:after":{borderBottomColor:"orange"}},".cm-lintPoint-info":{"&:after":{borderBottomColor:"#999"}},".cm-panel.cm-panel-lint":{position:"relative","& ul":{maxHeight:"100px",overflowY:"auto","& [aria-selected]":{backgroundColor:"#ddd","& u":{textDecoration:"underline"}},"&:focus [aria-selected]":{background_fallback:"#bdf",backgroundColor:"Highlight",color_fallback:"white",color:"HighlightText"},"& u":{textDecoration:"none"},padding:0,margin:0},"& [name=close]":{position:"absolute",top:"0",right:"2px",background:"inherit",border:"none",font:"inherit",padding:0,margin:0}}});var M5=function(e){e===void 0&&(e={});var n=[];e.closeBracketsKeymap!==!1&&(n=n.concat(PF)),e.defaultKeymap!==!1&&(n=n.concat(pI)),e.searchKeymap!==!1&&(n=n.concat(q6)),e.historyKeymap!==!1&&(n=n.concat(GR)),e.foldKeymap!==!1&&(n=n.concat(SW)),e.completionKeymap!==!1&&(n=n.concat(pE)),e.lintKeymap!==!1&&(n=n.concat(FF));var r=[];return e.lineNumbers!==!1&&r.push(LG()),e.highlightActiveLineGutter!==!1&&r.push(AG()),e.highlightSpecialChars!==!1&&r.push(tG()),e.history!==!1&&r.push(XR()),e.foldGutter!==!1&&r.push(OW()),e.drawSelection!==!1&&r.push(Y7()),e.dropCursor!==!1&&r.push(q7()),e.allowMultipleSelections!==!1&&r.push(pe.allowMultipleSelections.of(!0)),e.indentOnInput!==!1&&r.push(fW()),e.syntaxHighlighting!==!1&&r.push(Tx(MW,{fallback:!0})),e.bracketMatching!==!1&&r.push(LW()),e.closeBrackets!==!1&&r.push(kF()),e.autocompletion!==!1&&r.push(NF()),e.rectangularSelection!==!1&&r.push(mG()),e.crosshairCursor!==!1&&r.push(bG()),e.highlightActiveLine!==!1&&r.push(aG()),e.highlightSelectionMatches!==!1&&r.push(I6()),e.tabSize&&typeof e.tabSize=="number"&&r.push(dd.of(" ".repeat(e.tabSize))),r.concat([ud.of(n.flat())]).filter(Boolean)};const KF="#e5c07b",R5="#e06c75",qF="#56b6c2",QF="#ffffff",hh="#abb2bf",py="#7d8799",JF="#61afef",_F="#98c379",I5="#d19a66",$F="#c678dd",e4="#21252b",z5="#2c313a",E5="#282c34",z0="#353a42",t4="#3E4451",N5="#528bff",n4=K.theme({"&":{color:hh,backgroundColor:E5},".cm-content":{caretColor:N5},".cm-cursor, .cm-dropCursor":{borderLeftColor:N5},"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection":{backgroundColor:t4},".cm-panels":{backgroundColor:e4,color:hh},".cm-panels.cm-panels-top":{borderBottom:"2px solid black"},".cm-panels.cm-panels-bottom":{borderTop:"2px solid black"},".cm-searchMatch":{backgroundColor:"#72a1ff59",outline:"1px solid #457dff"},".cm-searchMatch.cm-searchMatch-selected":{backgroundColor:"#6199ff2f"},".cm-activeLine":{backgroundColor:"#6699ff0b"},".cm-selectionMatch":{backgroundColor:"#aafe661a"},"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bad0f847",outline:"1px solid #515a6b"},".cm-gutters":{backgroundColor:E5,color:py,border:"none"},".cm-activeLineGutter":{backgroundColor:z5},".cm-foldPlaceholder":{backgroundColor:"transparent",border:"none",color:"#ddd"},".cm-tooltip":{border:"none",backgroundColor:z0},".cm-tooltip .cm-tooltip-arrow:before":{borderTopColor:"transparent",borderBottomColor:"transparent"},".cm-tooltip .cm-tooltip-arrow:after":{borderTopColor:z0,borderBottomColor:z0},".cm-tooltip-autocomplete":{"& > ul > li[aria-selected]":{backgroundColor:z5,color:hh}}},{dark:!0}),r4=El.define([{tag:R.keyword,color:$F},{tag:[R.name,R.deleted,R.character,R.propertyName,R.macroName],color:R5},{tag:[R.function(R.variableName),R.labelName],color:JF},{tag:[R.color,R.constant(R.name),R.standard(R.name)],color:I5},{tag:[R.definition(R.name),R.separator],color:hh},{tag:[R.typeName,R.className,R.number,R.changed,R.annotation,R.modifier,R.self,R.namespace],color:KF},{tag:[R.operator,R.operatorKeyword,R.url,R.escape,R.regexp,R.link,R.special(R.string)],color:qF},{tag:[R.meta,R.comment],color:py},{tag:R.strong,fontWeight:"bold"},{tag:R.emphasis,fontStyle:"italic"},{tag:R.strikethrough,textDecoration:"line-through"},{tag:R.link,color:py,textDecoration:"underline"},{tag:R.heading,fontWeight:"bold",color:R5},{tag:[R.atom,R.bool,R.special(R.variableName)],color:I5},{tag:[R.processingInstruction,R.string,R.inserted],color:_F},{tag:R.invalid,color:QF}]),i4=[n4,Tx(r4)];var o4=t=>({line:t.state.doc.lineAt(t.state.selection.main.from),lineCount:t.state.doc.lines,lineBreak:t.state.lineBreak,length:t.state.doc.length,readOnly:t.state.readOnly,tabSize:t.state.tabSize,selection:t.state.selection,selectionAsSingle:t.state.selection.asSingle().main,ranges:t.state.selection.ranges,selectionCode:t.state.sliceDoc(t.state.selection.main.from,t.state.selection.main.to),selections:t.state.selection.ranges.map(e=>t.state.sliceDoc(e.from,e.to)),selectedText:t.state.selection.ranges.some(e=>!e.empty)});function s4(t){var{value:e,selection:n,onChange:r,onStatistics:i,onCreateEditor:o,onUpdate:s,extensions:a=[],autoFocus:l,theme:c="light",height:u="",minHeight:d="",maxHeight:f="",placeholder:h="",width:p="",minWidth:m="",maxWidth:b="",editable:g=!0,readOnly:v=!1,indentWithTab:y=!0,basicSetup:x=!0,root:k,initialState:O}=t,[T,M]=S.exports.useState(),[E,I]=S.exports.useState(),[B,D]=S.exports.useState(),J=K.theme({"&":{backgroundColor:"#fff"}},{dark:!1}),ae=K.theme({"&":{height:u,minHeight:d,maxHeight:f,width:p,minWidth:m,maxWidth:b}}),oe=K.updateListener.of(ee=>{if(ee.docChanged&&typeof r=="function"){var L=ee.state.doc,W=L.toString();r(W,ee)}i&&i(o4(ee))}),Y=[oe,ae];switch(y&&Y.unshift(ud.of([DY])),x&&(typeof x=="boolean"?Y.unshift(M5()):Y.unshift(M5(x))),h&&Y.unshift(dG(h)),c){case"light":Y.push(J);break;case"dark":Y.push(i4);break;default:Y.push(c);break}return g===!1&&Y.push(K.editable.of(!1)),v&&Y.push(pe.readOnly.of(!0)),s&&typeof s=="function"&&Y.push(K.updateListener.of(s)),Y=Y.concat(a),S.exports.useEffect(()=>{if(T&&!B){var ee={doc:e,selection:n,extensions:Y},L=O?pe.fromJSON(O.json,ee,O.fields):pe.create(ee);if(D(L),!E){var W=new K({state:L,parent:T,root:k});I(W),o&&o(W,L)}}return()=>{E&&(D(void 0),I(void 0))}},[T,B]),S.exports.useEffect(()=>M(t.container),[t.container]),S.exports.useEffect(()=>()=>{E&&(E.destroy(),I(void 0))},[E]),S.exports.useEffect(()=>{l&&E&&E.focus()},[l,E]),S.exports.useEffect(()=>{E&&E.dispatch({effects:se.reconfigure.of(Y)})},[c,a,u,d,f,p,m,b,h,g,v,y,x,r,s]),S.exports.useEffect(()=>{var ee=E?E.state.doc.toString():"";E&&e!==ee&&E.dispatch({changes:{from:0,to:ee.length,insert:e||""}})},[e,E]),{state:B,setState:D,view:E,setView:I,container:T,setContainer:M}}var Zm={exports:{}},Gm={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var a4=S.exports,l4=Symbol.for("react.element"),c4=Symbol.for("react.fragment"),u4=Object.prototype.hasOwnProperty,d4=a4.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,f4={key:!0,ref:!0,__self:!0,__source:!0};function yE(t,e,n){var r,i={},o=null,s=null;n!==void 0&&(o=""+n),e.key!==void 0&&(o=""+e.key),e.ref!==void 0&&(s=e.ref);for(r in e)u4.call(e,r)&&!f4.hasOwnProperty(r)&&(i[r]=e[r]);if(t&&t.defaultProps)for(r in e=t.defaultProps,e)i[r]===void 0&&(i[r]=e[r]);return{$$typeof:l4,type:t,key:o,ref:s,props:i,_owner:d4.current}}Gm.Fragment=c4;Gm.jsx=yE;Gm.jsxs=yE;(function(t){t.exports=Gm})(Zm);const ei=Zm.exports.Fragment,z=Zm.exports.jsx,tt=Zm.exports.jsxs;var h4=["className","value","selection","extensions","onChange","onStatistics","onCreateEditor","onUpdate","autoFocus","theme","height","minHeight","maxHeight","width","minWidth","maxWidth","basicSetup","placeholder","indentWithTab","editable","readOnly","root","initialState"],xE=S.exports.forwardRef((t,e)=>{var{className:n,value:r="",selection:i,extensions:o=[],onChange:s,onStatistics:a,onCreateEditor:l,onUpdate:c,autoFocus:u,theme:d="light",height:f,minHeight:h,maxHeight:p,width:m,minWidth:b,maxWidth:g,basicSetup:v,placeholder:y,indentWithTab:x,editable:k,readOnly:O,root:T,initialState:M}=t,E=Kz(t,h4),I=S.exports.useRef(null),{state:B,view:D,container:J,setContainer:ae}=s4({container:I.current,root:T,value:r,autoFocus:u,theme:d,height:f,minHeight:h,maxHeight:p,width:m,minWidth:b,maxWidth:g,basicSetup:v,placeholder:y,indentWithTab:x,editable:k,readOnly:O,selection:i,onChange:s,onStatistics:a,onCreateEditor:l,onUpdate:c,extensions:o,initialState:M});if(S.exports.useImperativeHandle(e,()=>({editor:I.current,state:B,view:D}),[I,J,B,D]),typeof r!="string")throw new Error("value must be typeof string but got "+typeof r);var oe=typeof d=="string"?"cm-theme-"+d:"cm-theme";return z("div",bl({ref:I,className:""+oe+(n?" "+n:"")},E))});xE.displayName="CodeMirror";const p4=`;; reset_clock()
start("ReverbMixer")
set_tempo(120)
set_scale("min")

;; callback instrument for csound-live-code
instr P1 

  hexplay("90", 
      "Claves", p3,
      in_scale(-1, 0),
      fade_in(6, 128) * ampdbfs(-12))

  hexplay("8",
      "BD", p3,
      in_scale(-1, 0),
      fade_in(5, 128) * ampdbfs(-3))

  hexplay("0808080c", 
      "Clap", p3,
      in_scale(-1, 0),
      fade_in(5, 128) * ampdbfs(-12))
  
  hexplay("2",
      "CHH", p3,
      in_scale(-1, 0),
      fade_in(6, 128) * ampdbfs(-12))

  hexplay("0200", 
      "Sub5", p3,
      in_scale(2, 2),
      fade_in(7, 128) * ampdbfs(-12))

endin


;; custom instruments
instr Up
  indx = 0
  istart = int(random:i(-4, 4))
  irange = 12
  while (indx < irange) do
    schedule("Sub5", ticks(indx), ticks(1), in_scale(-1, istart + indx), ampdbfs(-12 - indx))
    indx += 1
  od
endin

;; temporal recursion process
instr Run
  irange = 8
  ibase = int(random(-irange, irange))
  schedule("Sub1", 0, ticks(1), in_scale(0, ibase), ampdbfs(-12))
  
  schedule("Sub5", 0, ticks(1), in_scale(0, xcos(phsm(4), ibase, 8)), ampdbfs(-12))

  if(choose(0.3) == 1) then
    schedule("Sub4", 0, ticks(1), in_scale(1, xcos(phsm(2.5), ibase, 4)), ampdbfs(-12))
  endif

  if(choose(0.5) == 1) then
    schedule("SynBrass", 0, ticks(2), in_scale(1, ibase + rand(array(0,2,4))), ampdbfs(-12))
  endif
  
  if(choose(0.25) == 1) then
  	schedule("Sub1", 0, ticks(1), in_scale(0, ibase + 2), ampdbfs(-12))
  endif
  
  if(choose(0.15) == 1) then
  	schedule("Up", 0, 1)
  endif
    
  schedule(p1, next_beat(rand(array(1,2,4,8)) * 0.25), 1)
endin

;; starts the process, be careful not to evaluate multiple times for this example
schedule("Run", 0, 1)


;; temporal recursion process
instr Run2
  if(choose(0.7) == 1) then
    isd = random(-8, 8)
    schedule("Sub3", 0, beats(random(6,8)), in_scale(2, isd), ampdbfs(-22))
    schedule("Sub3", 0, beats(random(6,8)), in_scale(2, isd + 4), ampdbfs(-22))
  endif

  schedule("FM1", 0, ticks(1), in_scale(-2, rand(array(0,2,4))), ampdbfs(-18))

  schedule(p1, next_beat(rand(array(1,2,4,8))), 1)
endin


;; starts the process, be careful not to evaluate multiple times for this example
schedule("Run2", 0, 1)
`;var SE={exports:{}};(function(t,e){(function(n,r){r()})(pi,function(){function n(c,u){return typeof u>"u"?u={autoBom:!1}:typeof u!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),u={autoBom:!u}),u.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type)?new Blob(["\uFEFF",c],{type:c.type}):c}function r(c,u,d){var f=new XMLHttpRequest;f.open("GET",c),f.responseType="blob",f.onload=function(){l(f.response,u,d)},f.onerror=function(){console.error("could not download file")},f.send()}function i(c){var u=new XMLHttpRequest;u.open("HEAD",c,!1);try{u.send()}catch{}return 200<=u.status&&299>=u.status}function o(c){try{c.dispatchEvent(new MouseEvent("click"))}catch{var u=document.createEvent("MouseEvents");u.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),c.dispatchEvent(u)}}var s=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof pi=="object"&&pi.global===pi?pi:void 0,a=s.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),l=s.saveAs||(typeof window!="object"||window!==s?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(c,u,d){var f=s.URL||s.webkitURL,h=document.createElement("a");u=u||c.name||"download",h.download=u,h.rel="noopener",typeof c=="string"?(h.href=c,h.origin===location.origin?o(h):i(h.href)?r(c,u,d):o(h,h.target="_blank")):(h.href=f.createObjectURL(c),setTimeout(function(){f.revokeObjectURL(h.href)},4e4),setTimeout(function(){o(h)},0))}:"msSaveOrOpenBlob"in navigator?function(c,u,d){if(u=u||c.name||"download",typeof c!="string")navigator.msSaveOrOpenBlob(n(c,d),u);else if(i(c))r(c,u,d);else{var f=document.createElement("a");f.href=c,f.target="_blank",setTimeout(function(){o(f)})}}:function(c,u,d,f){if(f=f||open("","_blank"),f&&(f.document.title=f.document.body.innerText="downloading..."),typeof c=="string")return r(c,u,d);var h=c.type==="application/octet-stream",p=/constructor/i.test(s.HTMLElement)||s.safari,m=/CriOS\/[\d]+/.test(navigator.userAgent);if((m||h&&p||a)&&typeof FileReader<"u"){var b=new FileReader;b.onloadend=function(){var y=b.result;y=m?y:y.replace(/^data:[^;]*;/,"data:attachment/file;"),f?f.location.href=y:location=y,f=null},b.readAsDataURL(c)}else{var g=s.URL||s.webkitURL,v=g.createObjectURL(c);f?f.location=v:location.href=v,f=null,setTimeout(function(){g.revokeObjectURL(v)},4e4)}});s.saveAs=l.saveAs=l,t.exports=l})})(SE);const m4=`/*
  Live Coding Functions
  Author: Steven Yi
*/ 

instr S1
  ifreq = p4
  iamp = p5
endin

instr P1
  ibeat = p4
endin

;; TIME

gk_tempo init 120 


/** Set tempo of global clock to itempo value in beats per minute. */
opcode set_tempo,0,i
  itempo xin
  gk_tempo init itempo
endop

/** Returns tempo of global clock in beats per minute. */
opcode get_tempo,i,0
  xout i(gk_tempo)
endop

/** Adjust tempo of global clock towards by inewtempo by incr amount. */
opcode go_tempo, 0, ii
  inewtempo, incr xin

  icurtempo = i(gk_tempo)
  itemp init icurtempo 

  if(inewtempo > icurtempo) ithen
    itemp = min:i(inewtempo, icurtempo + abs(incr))
    gk_tempo init itemp 
  elseif (inewtempo < icurtempo) ithen
    itemp = max:i(inewtempo, icurtempo - abs(incr))
    gk_tempo init itemp 
  endif
endop

instr Perform
  ibeat = p4

  schedule("P1", 0, p3, ibeat) 
endin


gk_clock_internal init 0
gk_clock_tick init 0
gk_now init 0

/** Returns value of now beat time
   (Code used from Thorin Kerr's LivecodeLib.csd) */
opcode now, i, 0
  xout i(gk_now)
endop

/** Returns current clock tick at init time */
opcode now_tick, i, 0
  xout i(gk_clock_tick)
endop

/** Returns duration of time in given number of beats (quarter notes) */
opcode beats, i, i
  inumbeats xin
  ibeatdur = divz(60, i(gk_tempo), -1)
  xout ibeatdur * inumbeats
endop

/** Returns duration of time in given number of measures (4 quarter notes) */
opcode measures, i, i
  inummeasures xin
  xout beats(inummeasures * 4)
endop

/** Returns duration of time in given number of ticks (16th notes) */
opcode ticks, i, i
  inumbeats xin
  ibeatdur = divz(60, i(gk_tempo), -1)
  ibeatdur = ibeatdur / 4
  xout ibeatdur * inumbeats
endop

/** Returns time from now for next beat, rounding to align
    on beat boundary. 
   (Code used from Thorin Kerr's LivecodeLib.csd) */
opcode next_beat, i, p
  ibeatcount xin
  inow = now()
  ibc = frac(ibeatcount)
  inudge = int(ibeatcount)
  iresult = inudge + ibc + (round(divz(inow, ibc, inow)) * (ibc == 0 ? 1 : ibc)) - inow
  xout beats(iresult)
endop

/** Returns time from now for next measure, rounding to align to measure  
    boundary. */
opcode next_measure, i,0
  inow = now() % 4
  ival = 4 - inow 
  if(ival < 0.25) then
    ival += 4
  endif
  inext = beats(ival)
  xout inext
endop

/** Reset clock so that next tick starts at 0 */
opcode reset_clock, 0, 0
  gk_clock_internal init 0 
  gk_clock_tick init -1 
  gk_now init -(ksmps / sr)
endop

/** Adjust clock by iadjust number of beats.
    Value may be positive or negative. */
opcode adjust_clock, 0, i 
  iadjust xin
  gk_now init i(gk_now) + iadjust 
endop


instr Clock ;; our clock  
  ;; tick at 1/16th note
  kfreq = (4 * gk_tempo) / 60     ;; frequency of 16th note
  kdur = 1 / kfreq                ;; duration of 16th note in seconds 
  kstep = (gk_tempo / 60) / kr    ;; step size in quarter notes per buffer
  kstep16th = kfreq / kr          ;; step size in 16th notes per buffer
  gk_now += kstep                 ;; advance beat clock
  gk_clock_internal += kstep16th  ;; advance 16th note clock

  // checks if next buffer will be one where clock will
  // trigger.  If so, then schedule event for time 0 
  // which will get processed next buffer. 
  if(gk_clock_internal + kstep16th >= 1.0 ) then
    gk_clock_internal -= 1.0 
    gk_clock_tick += 1 
    event("i", "Perform", 0, kdur, gk_clock_tick)
  endif
endin

;; Randomization

/** Given a random chance value between 0 and 1, calculates a random value and
returns 1 if value is less than chance value. For example, giving a value of 0.7,
it can read as "70 percent of time, return 1; else 0" */
opcode choose, i, i
  iamount xin
  ival = 0

  if(random(0,1) < limit:i(iamount, 0, 1)) then
    ival = 1 
  endif
  xout ival
endop

;; Array Functions

/** Cycles through karray using index. */
opcode cycle, i, ik[]
  indx, kvals[] xin
  ival = i(kvals, indx % lenarray(kvals))
  xout ival
endop


/** Checks to see if item exists within array. Returns 1 if
  true and 0 if false. */
opcode contains, i, ii[]
  ival, iarr[] xin
  indx = 0
  iret = 0
  while (indx < lenarray:i(iarr)) do
    if (iarr[indx] == ival) then
      iret = 1
      igoto end
    endif
    indx += 1
  od
end:
  xout iret
endop 

/** Checks to see if item exists within array. Returns 1 if
  true and 0 if false. */
opcode contains, i, ik[]
  ival, karr[] xin
  indx = 0
  iret = 0
  while (indx < lenarray:i(karr)) do
    if (i(karr,indx) == ival) then
      iret = 1
      igoto end
    endif
    indx += 1
  od
end:
  xout iret
endop 

/** Create a new array by removing all instances of a
given number from an existing array. */ 
opcode remove, k[], ik[]
  ival, karr[] xin
 
  ifound = 0
  indx = 0
  while (indx < lenarray:i(karr)) do
  	if(i(karr, indx) == ival) then
      ifound += 1
    endif
    indx += 1
  od

  kout[] init (lenarray:i(karr) - ifound)
    
  indx = 0
  iwriteIndx = 0
  
  while (indx < lenarray:i(karr)) do
    iv = i(karr, indx)
    if(iv != ival) then
      kout[iwriteIndx] init iv
      iwriteIndx += 1
    endif
    indx += 1
  od
    
  xout kout
endop

/** Returns random item from karray. */
opcode rand, i, k[]
  kvals[] xin
  indx = int(random(0, lenarray(kvals)))
  ival = i(kvals, indx)
  xout ival
endop

/** Returns random item from String array. */
opcode rand, S, S[]
  Svals[] xin
  indx = int(random(0, lenarray(Svals)))
  Sval = Svals[indx]
  xout Sval
endop

/** Returns random item from karray. */
opcode randk, k, k[]
  kvals[] xin
  kndx = int(random:k(0, lenarray:k(kvals)))
  kval = kvals[kndx]
  xout kval
endop

/** Returns random item from karray. */
opcode randk, S, S[]
  Svals[] xin
  kndx = int(random:k(0, lenarray:k(Svals)))
  Sval = Svals[kndx]
  xout Sval
endop


;; Event

/** Wrapper opcode that calls schedule only if iamp > 0 and ifreq > 0. */
opcode cause, 0, Siiii
  Sinstr, istart, idur, ifreq, iamp xin
  if(ifreq > 0 && iamp > 0) then
    schedule(Sinstr, istart, idur, ifreq, iamp)
  endif
endop

;; Beats

/** Given a hexadecimal beat string pattern and optional
itick (defaults to current now_tick()), returns value 1 if
the given tick matches a hit in the hexadecimal beat, or 
returns 0 otherwise. */
opcode hexbeat, i, So
  Spat, itick xin

  if(itick <= 0) then
    itick = now_tick()
  endif

  istrlen = strlen(Spat)

  iout = 0

  if (istrlen > 0) then
    ;; 4 bits/beats per hex value
    ipatlen = strlen(Spat) * 4
    ;; get beat within pattern length
    itick = itick % ipatlen
    ;; figure which hex value to use from string
    ipatidx = int(itick / 4)
    ;; figure out which bit from hex to use
    ibitidx = itick % 4 
    
    ;; convert individual hex from string to decimal/binary
    ibeatPat = strtol(strcat("0x", strsub(Spat, ipatidx, ipatidx + 1))) 

    ;; bit shift/mask to check onset from hex's bits
    iout = (ibeatPat >> (3 - ibitidx)) & 1 
  endif

  xout iout

endop


/** Given hex beat pattern, use given itick to fire 
  events for given instrument, duration, frequency, and
  amplitude */
opcode hexplay, 0, SiSiip
  Spat, itick, Sinstr, idur, ifreq, iamp xin

  if(ifreq > 0 && iamp > 0 && strlen(Sinstr) > 0 && hexbeat(Spat, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop

/** Given hex beat pattern, use global clock to fire 
  events for given instrument, duration, frequency, and
  amplitude */
opcode hexplay, 0, SSiip
  Spat, Sinstr, idur, ifreq, iamp xin

  itick = i(gk_clock_tick)

  if(ifreq > 0 && iamp > 0 && strlen(Sinstr) > 0 && hexbeat(Spat, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop


/** Given an octal beat string pattern and optional
itick (defaults to current now_tick()), returns value 1 if
the given tick matches a hit in the octal beat, or 
returns 0 otherwise. */
opcode octalbeat, i, Si
  Spat, itick xin

  ;; 3 bits/beats per octal value
  ipatlen = strlen(Spat) * 4
  ;; get beat within pattern length
  itick = itick % ipatlen
  ;; figure which octal value to use from string
  ipatidx = int(itick / 3)
  ;; figure out which bit from octal to use
  ibitidx = itick % 3 
  
  ;; convert individual octal from string to decimal/binary
  ibeatPat = strtol(strcat("0", strsub(Spat, ipatidx, ipatidx + 1))) 

  ;; bit shift/mask to check onset from hex's bits
  xout (ibeatPat >> (2 - ibitidx)) & 1 

endop

opcode octalplay, 0, SiSiip
  Spat, ibeat, Sinstr, idur, ifreq, iamp xin

  if(octalbeat(Spat, ibeat) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop

opcode octalplay, 0, SSiip
  Spat, Sinstr, idur, ifreq, iamp xin

  itick = i(gk_clock_tick)

  if(octalbeat(Spat, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp )
  endif
endop

;; Phase Functions

/** Given count and period, return phase value in range [0-1) */
opcode phs, i, ii
  icount, iperiod xin
  xout (icount % iperiod) / iperiod 
endop

/** Given period in ticks, return current phase of global
  clock in range [0-1) */
opcode phs, i, i
  iticks xin
  xout (i(gk_clock_tick) % iticks) / iticks
endop

/** Given period in beats, return current phase of global
  clock in range [0-1) */
opcode phsb, i, i
  ibeats xin
  iticks = ibeats * 4
  xout (i(gk_clock_tick) % iticks) / iticks
endop

/** Given period in measures, return current phase of global
  clock in range [0-1) */
opcode phsm, i, i
  imeasures xin
  iticks = imeasures * 4 * 4
  xout (i(gk_clock_tick) % iticks) / iticks
endop


;; Iterative Euclidean Beat Generator
;; Returns string of 1 and 0's
opcode euclid_str, S, ii
  ihits, isteps xin

  Sleft = "1"
  Sright = "0"

  ileft = ihits
  iright = isteps - ileft

  while iright > 1 do
    if (iright > ileft) then
      iright = iright - ileft 
      Sleft = strcat(Sleft, Sright)
    else
      itemp = iright
      iright = ileft - iright
      ileft = itemp 
      Stemp = Sleft
      Sleft = strcat(Sleft, Sright)
      Sright = Stemp
    endif
  od

  Sout = ""
  indx = 0 
  while (indx < ileft) do
    Sout = strcat(Sout, Sleft)
    indx += 1
  od
  indx = 0 
  while (indx < iright) do
    Sout = strcat(Sout, Sright)
    indx += 1
  od

  xout Sout
endop


/** Given number of ihits for a period of isteps and an optional
itick (defaults to current now_tick()), returns value 1 if
the given tick matches a hit in the euclidean rhythm, or 
returns 0 otherwise. */
opcode euclid, i, iio
  ihits, isteps, itick  xin

  if(itick <= 0) then
    itick = now_tick()
  endif

  Sval = euclid_str(ihits, isteps)
  indx = itick % strlen(Sval)
  xout strtol(strsub(Sval, indx, indx + 1))
endop

opcode euclidplay, 0, iiiSiip
  ihits, isteps, itick, Sinstr, idur, ifreq, iamp xin

  if(euclid(ihits, isteps, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp)
  endif
endop


opcode euclidplay, 0, iiSiip
  ihits, isteps, Sinstr, idur, ifreq, iamp xin

  itick = i(gk_clock_tick)

  if(euclid(ihits, isteps, itick) == 1) then
    schedule(Sinstr, 0, idur, ifreq, iamp)
  endif
endop

;; Phase-based Oscillators 

/** Returns cosine of given phase (0-1.0) */
opcode xcos, i,i
  iphase  xin
  xout cos(2 * $M_PI * iphase)
endop

/** Range version of xcos, similar to Impromptu's cosr */
opcode xcos, i,iii
  iphase, ioffset, irange  xin
  xout ioffset + (cos(2 * $M_PI * iphase) * irange)
endop

/** Returns sine of given phase (0-1.0) */
opcode xsin, i,i
  iphase  xin
  xout sin(2 * $M_PI * iphase)
endop

/** Range version of xsin, similar to Impromptu's sinr */
opcode xsin, i,iii
  iphase, ioffset, irange  xin
  xout ioffset + (sin(2 * $M_PI * iphase) * irange)
endop

/** Non-interpolating oscillator. Given phase in range 0-1, 
returns value within the give k-array table. */
opcode xosc, i, ik[]
  iphase, kvals[]  xin
  indx = int(lenarray:i(kvals) * (iphase % 1))  
  xout i(kvals, indx)
endop


/** Non-interpolating oscillator. Given phase duration in beats, 
returns value within the give k-array table. (shorthand for xosc(phsb(ibeats), karr) )*/
opcode xoscb, i,ik[]
  ibeats, kvals[] xin
  xout xosc(phsb(ibeats), kvals)
endop

/** Non-interpolating oscillator. Given phase duration in measures, 
returns value within the give k-array table. (shorthand for xosc(phsm(ibeats), karr) )*/
opcode xoscm, i, ik[]
  ibeats, kvals[] xin
  xout xosc(phsm(ibeats), kvals)
endop


/** Linearly-interpolating oscillator. Given phase in range 0-1, 
returns value intepolated within the two closest points of phase within k-array
table. */
opcode xosci, i, ik[]
  iphase, kvals[]  xin
  ilen = lenarray:i(kvals)
  indx = ilen * (iphase % 1)
  ibase = int(indx)  
  ifrac = indx - ibase 

  iv0 = i(kvals, ibase)  
  iv1 = i(kvals, (ibase + 1) % ilen) 
  xout iv0 + (iv1 - iv0) * ifrac
endop


/** Linearly-interpolating oscillator. Given phase duration in beats, 
returns value intepolated within the two closest points of phase within k-array
table. (shorthand for xosci(phsb(ibeats), karr) )*/
opcode xoscib, i,ik[]
  ibeats, kvals[] xin
  xout xosci(phsb(ibeats), kvals)
endop

/** Linearly-interpolating oscillator. Given phase duration in measures, 
returns value intepolated within the two closest points of phase within k-array
table. (shorthand for xosci(phsm(ibeats), karr) )*/
opcode xoscim, i,ik[]
  ibeats, kvals[] xin
  xout xosci(phsm(ibeats), kvals)
endop

/** Line (Ramp) oscillator. Given phase in range 0-1, return interpolated value between given istart and iend. */
opcode xlin, i, iii
  iphase, istart, iend xin
  xout istart + (iend - istart) * iphase
endop

;; Duration Sequences

/** Given a tick value and array of durations, returns new duration value for tick. */
opcode xoscd, i, ik[]
  itick, kdurs[] xin
  indx = 0
  isum = 0
  ilen = lenarray:i(kdurs)
  ival = 0

  while (indx < ilen) do
    isum += i(kdurs, indx)
    indx += 1
  od

  itick = itick % isum
  indx = 0
  ival = 0
  icur = 0

  while (indx < ilen) do
    itemp = i(kdurs, indx) 

    if(itick < icur + itemp) then
      ival = itemp 
      indx += ilen
    else
      icur += abs(itemp)
    endif
    
    indx += 1
  od

  xout ival 

 endop 


/** Given an array of durations, returns new duration value for current clock tick. Useful with mod division and cycle for additive/subtractive rhythms. */
opcode xoscd, i, k[]
  kdurs[] xin
  xout xoscd(now_tick(), kdurs)
endop


/** Given a tick value and array of durations, returns new duration or 0 depending upon whether tick hits a new duration value. Values
may be positive or negative, but not zero. Negative values can be interpreted as rest durations. */
opcode dur_seq, i, ik[]
  itick, kdurs[] xin
  ival = 0
  icur = 0
  ilen = lenarray:i(kdurs)
  itotal = 0

  indx = 0
  while (indx < ilen) do
    itotal += abs:i(i(kdurs, indx))
    indx += 1
  od

  ;print itotal

  indx = 0
  itick = itick % itotal

  while (indx < ilen) do
    itemp = i(kdurs, indx) 
    if(icur == itick) then
      ival = itemp 
      indx += ilen
    elseif (icur > itick) then
      indx += ilen 
    else
      icur += abs(itemp)
    endif
    
    indx += 1
  od
  xout ival 
endop


/** Given an array of durations, returns new duration or 0 depending upon
 * whether current clock tick hits a new duration value. Values
may be positive or negative, but not zero. Negative values can be interpreted
as rest durations. */
opcode dur_seq, i, k[]
  kdurs[] xin
  xout dur_seq(now_tick(), kdurs)
endop

/** Experimental opcode for generating melodic lines given array of durations, pitches, and amplitudes. Durations follow dur_seq practice that negative values are rests. Pitch and amp array indexing wraps according to their array lengths given index of non-rest duration value currently fired. */ 
opcode melodic, iii, ik[]k[]k[]
  itick, kdurs[], kpchs[], kamps[] xin

  idur = dur_seq(itick, kdurs)
  ipch = 0
  iamp = 0

  indx = 0
  itotal = 0
  ilen = lenarray:i(kdurs)

  while (indx < ilen) do
    itotal += abs:i(i(kdurs, indx))
    indx += 1
  od

  itick = itick % itotal

  if(idur > 0) then
    indx = 0
    icur = 0
    ivalindx = 0

    while (indx < ilen) do
      itemp = i(kdurs, indx) 

      if(icur == itick) then
        indx += ilen
      elseif (icur > itick) then
        indx += ilen 
      else
        if (itemp > 0) then
          ivalindx += 1 
        endif

        icur += abs(itemp)
      endif
      
      indx += 1
    od

    ipch = i(kpchs, ivalindx % lenarray:i(kpchs))
    iamp = i(kamps, ivalindx % lenarray:i(kamps))
  endif

  xout idur, ipch, iamp
endop

/** Experimental opcode for generating melodic lines given array of durations, pitches, and amplitudes. Durations follow dur_seq practice that negative values are rests. Pitch and amp array indexing wraps according to their array lengths given index of non-rest duration value currently fired. */ 
opcode melodic, iii, k[]k[]k[]
  kdurs[], kpchs[], kamps[] xin
  idur, ipch, iamp = melodic(now_tick(), kdurs, kpchs, kamps)
  xout idur, ipch, iamp
endop

;; String functions

/** 
  rotate - Rotates string by irot number of values.  
  (Inspired by rotate from Charlie Roberts' Gibber.)
*/
opcode rotate, S, Si
  Sval, irot xin

  ilen = strlen(Sval)
  irot = irot % ilen
  Sout = strcat(strsub(Sval, irot, ilen), strsub(Sval, 0, irot))
  xout Sout
endop


/** Repeats a given String x number of times. For example, \`Sval = strrep("ab6a", 2)\` will produce the value of "ab6aab6a". Useful in working with Hex beat strings.  */
opcode strrep, S, Si
  Sval, inum xin
    
  Sout = Sval
  indx = 1
  while (indx < inum) do
    Sout = strcat(Sout, Sval) 
    indx += 1
  od

  xout Sout
endop


;; Channel Helper

/** Sets i-rate value into channel and sets initialization to true. Works together 
  with xchan */
opcode xchnset, 0, Si
  SchanName, ival xin
  Sinit = sprintf("%s_initialized", SchanName)
  chnset(1, Sinit)
  chnset(ival, SchanName)
endop

/** xchan 
  Initializes a channel with initial value if channel has default value of 0 and
  then returns the current value from the channel. Useful in live coding to define
  a dynamic point that will be automated or set outside of the instrument that is
  using the channel. 

  Opcode is overloaded to return i- or k- value. Be sure to use xchan:i or xchan:k
  to specify which value to use. 
*/
opcode xchan, i,Si
  SchanName, initVal xin
   
  Sinit = sprintf("%s_initialized", SchanName)
  if(chnget:i(Sinit) == 0) then
    chnset(1, Sinit)
    chnset(initVal, SchanName)
  endif
  xout chnget:i(SchanName)
endop

/** xchan 
  Initializes a channel with initial value if channel has default value of 0 and
  then returns the current value from the channel. Useful in live coding to define
  a dynamic point that will be automated or set outside of the instrument that is
  using the channel. 

  Opcode is overloaded to return i- or k- value. Be sure to use xchan:i or xchan:k
  to specify which value to use. 
*/
opcode xchan, k,Si
  SchanName, initVal xin
    
  Sinit = sprintf("%s_initialized", SchanName)
  if(chnget:i(SchanName) == 0) then
    chnset(1, Sinit)
    chnset(initVal, SchanName)
  endif
  xout chnget:k(SchanName)
endop

;; SCALE/HARMONY (experimental)

gi_scale_major[] = array(0, 2, 4, 5, 7, 9, 11) 
gi_scale_minor[] = array(0, 2, 3, 5, 7, 8, 10)

gi_cur_scale[] = gi_scale_minor
gi_scale_base = 60
gi_chord_offset = 0

/** Set root note of scale in MIDI note number. */
opcode set_root, 0,i 
  iscale_root xin
  gi_scale_base = iscale_root
endop

/** Calculate frequency from root note of scale, using 
octave and pitch class. */
opcode from_root, i, ii
  ioct, ipc xin
  ival = gi_scale_base + (ioct * 12) + ipc
  xout cpsmidinn(ival)
endop

/** Set the global scale.  Currently supports "maj" for major and "min" for minor scales. */
opcode set_scale, 0,S
  Scale xin
  if(strcmp("maj", Scale) == 0) then
    gi_cur_scale = gi_scale_major
  else
    gi_cur_scale = gi_scale_minor
  endif
endop

/** Calculate frequency from root note of scale, using 
octave and scale degree. */
opcode in_scale, i, ii
  ioct, idegree xin

  ibase = gi_scale_base + (ioct * 12)

  idegrees = lenarray(gi_cur_scale)

  ioct = int(idegree / idegrees)
  indx = idegree % idegrees

  if(indx < 0) then
    ioct -= 1
    indx += idegrees
  endif

  xout cpsmidinn(ibase + (ioct * 12) + gi_cur_scale[int(indx)]) 
endop

/** Calculate frequency from root note of scale, using 
octave and scale degree. (k-rate version of opcode) */
opcode in_scale, k, kk 
  koct, kdegree xin

  kbase = gi_scale_base + (koct * 12)

  idegrees = lenarray(gi_cur_scale)

  koct = int(kdegree / idegrees)
  kndx = kdegree % idegrees

  if(kndx < 0) then
    koct -= 1
    kndx += idegrees
  endif

  xout cpsmidinn(kbase + (koct * 12) + gi_cur_scale[int(kndx)]) 
endop

/** Quantizes given MIDI note number to the given scale 
    (Base on pc:quantize from Extempore) */
opcode pc_quantize, i, ii[]
  ipitch_in, iscale[] xin
  inotenum = round:i(ipitch_in)
  ipc = inotenum % 12
  iout = inotenum
  
  
  indx = 0
  while (indx < 7) do
    if(contains(ipc + indx, iscale) == 1) then
      iout = inotenum + indx
      goto end
    elseif (contains(ipc - indx, iscale) == 1) then
      iout = inotenum - indx
      goto end
    endif
    indx += 1
  od
  end:
  xout iout
endop

/** Quantizes given MIDI note number to the current active scale 
    (Base on pc:quantize from Extempore) */
opcode pc_quantize, i, i
  ipitch_in xin
  ival = pc_quantize(ipitch_in, gi_cur_scale)
  xout ival
endop  

/* BELOW CHORD SYSTEM IS EXPERIMENTAL */

gi_chord_base = 0 
gi_chord_maj[] = array(0,4,7)
gi_chord_maj7[] = array(0,4,7,11)
gi_chord_min[] = array(0,3,7)
gi_chord_min7[] = array(0,3,7,10)
gi_chord_dim[] = array(0,3,6)
gi_chord_dim7[] = array(0,3,6,9)
gi_chord_aug[] = array(0,4,8)
gi_chord_current[] = gi_chord_maj 

opcode set_chord, 0, ii[]
  ichord_root, ichord_intervals[] xin
  gi_chord_base = ichord_root
  gi_chord_current = ichord_intervals
endop

opcode set_chord, 0, S 
  Schord xin
endop

opcode in_chord, i, ii
  ioct, idegree xin

  ibase = gi_scale_base + (ioct * 12) + gi_chord_base

  idegrees = lenarray(gi_chord_current)

  ioct = int(idegree / idegrees)
  indx = idegree % idegrees

  if(indx < 0) then
    ioct -= 1
    indx += idegrees
  endif

  xout cpsmidinn(ibase + (ioct * 12) + gi_chord_current[indx]) 
endop

;; AUDIO

/** Utility opcode for declicking an audio signal. Should only be used in instruments that have positive p3 duration. */
opcode declick, a, a
  ain xin
  aenv = linseg:a(0, 0.01, 1, p3 - 0.02, 1, 0.01, 0, 0.01, 0)
  xout ain * aenv
endop

/** Custom non-interpolating oscil that takes in kfrequency and array to use as oscillator table
data. Outputs k-rate signal. */
opcode oscil, k, kk[]
  kfreq, kin[] xin
  ilen = lenarray(kin)
  kphs = phasor:k(kfreq)
  kout = kin[int(kphs * ilen) % ilen]
  xout kout
endop


;; KILLING INSTANCES

instr KillImpl
  Sinstr = p4 
  if (nstrnum(Sinstr) > 0) then
    turnoff2(Sinstr, 0, 0)
  endif
  turnoff
endin

/** Turns off running instances of named instruments.  Useful when livecoding
  audio and control signal process instruments. May not be effective if for
  temporal recursion instruments as they may be non-running but scheduled in the
  event system. In those situations, try using clear_instr to overwrite the
  instrument definition. */
opcode kill, 0,S
  Sinstr xin
  schedule("KillImpl", 0, 0.01, Sinstr)
endop

/** Redefines instr to empty body. Useful for killing
  temporal recursion or clock callback functions */
opcode clear_instr, 0,S
  Sinstr xin
  Sinstr_body = sprintf("instr %s\\nendin\\n", Sinstr)
  ires = compilestr(Sinstr_body)
  prints(sprintf("Cleared instrument definition: %s\\n", 
          Sinstr))
endop

/** Starts running a named instrument for indefinite time using p2=0 and p3=-1. 
  Will first turnoff any instances of existing named instrument first.  Useful
  when livecoding always-on audio and control signal process instruments. */
opcode start, 0,S
  Sinstr xin

  if (nstrnum(Sinstr) > 0) then
    kill(Sinstr)
    schedule(Sinstr, ksmps / sr,-1)
  endif
endop

/** Stops a running named instrument, allowing for release segments to operate. */
opcode stop, 0,S
  Sinstr xin

  if (nstrnum(Sinstr) > 0) then
    schedule(-nstrnum(Sinstr), 0, 0)
  endif
endop

instr CodeEval
  Scode = p4
  ires = compilestr(Scode)
endin

/** Evaluate code at a given time */
opcode eval_at_time, 0, Si 
  Scode, istart xin
  iblock init ksmps / sr
  ;; adjust one block of time difference since this is
  ;; will need to be added as an event back on to the scheduler
  schedule("CodeEval", max:i(0, istart - iblock), 0, Scode)
endop


;; Fades 

gi_fade_range init -30


/** Sets the range in db to fade over. By default, range is -30 (i.e., fades from -30dbfs to 0dbfs) */
opcode set_fade_range, 0, i
  irange xin
  gi_fade_range init irange
endop

/** Given a fade channel identifier (number) and number of ticks to fade over time, advances from current fade channel value towards 0dbfs (1.0) using the globally set fade range. (By default starts fading in from -30dBfs and stops at 0dbfs.) */
opcode fade_in, i, ii
  ident, inumticks xin
  Schan = sprintf("fade_chan_%d", ident)
  ival = chnget:i(Schan)
  if(ival < 1.0) then
    ival = limit:i(ival + (1 / inumticks), 0, 1.0) 
    chnset(ival, Schan)
    iret = ampdbfs((1- ival) * gi_fade_range)
  else
    iret = ival
  endif

  xout iret 
endop

/** Given a fade channel identifier (number) and number of ticks to fade over time, advances from current fade channel value towards 0 using the globally set fade range. (By default starts fading out from 0dBfs and stops at -30dbfs.) */
opcode fade_out, i, ii
  ident, inumticks xin
  Schan = sprintf("fade_chan_%d", ident)

  ival = chnget:i(Schan)
  iret init 0

  if(ival > 0.0) then
    ival = limit:i(ival - (1 / inumticks), 0, 1.0) 
    chnset(ival, Schan)
    iret = ampdbfs((1- ival) * gi_fade_range)
  else
    iret = ival
  endif

  xout iret 
endop

/** Read value from fade channel. Useful if copy/pasting then wanting to just read from fade and control in the original code. */
opcode fade_read, i, i
  ident xin
  Schan = sprintf("fade_chan_%d", ident)
  iret = chnget:i(Schan)
  xout iret 
endop

/**  Set value for fade channel to given value. Should be in range 0-1.0.  (Typically one sets to either 0 or 1.) */
opcode set_fade, 0,ii
  ident, ival xin
  Schan = sprintf("fade_chan_%d", ident)
  ival = limit:i(ival, 0, 1.0) 
  chnset(ival, Schan)
endop

;; Stereo Audio Bus

ga_sbus[] init 16, 2

/** Write two audio signals into stereo bus at given index */
opcode sbus_write, 0,iaa
  ibus, al, ar xin
  ga_sbus[ibus][0] = al
  ga_sbus[ibus][1] = ar
endop

/** Mix two audio signals into stereo bus at given index */
opcode sbus_mix, 0,iaa
  ibus, al, ar xin
  ga_sbus[ibus][0] = ga_sbus[ibus][0] + al
  ga_sbus[ibus][1] = ga_sbus[ibus][1] + ar
endop

/** Clear audio signals from bus channel */
opcode sbus_clear, 0, i
  ibus xin
  aclear init 0
  ga_sbus[ibus][0] = aclear
  ga_sbus[ibus][1] = aclear
endop

/** Read audio signals from bus channel */
opcode sbus_read, aa, i
  ibus xin
  aclear init 0
  al = ga_sbus[ibus][0] 
  ar = ga_sbus[ibus][1] 
  xout al, ar
endop

;; MIXER

gi_reverb_mixer_on init 0

/** Always-on Mixer instrument with Reverb send channel. Use start("ReverbMixer") to run. Designed 
    for use with pan_verb_mix to simplify signal-based live coding. */
instr ReverbMixer

  gi_reverb_mixer_on init 1

  ;; dry and reverb send signals
  a1, a2 sbus_read 0
  a3, a4 sbus_read 1
  
  al, ar reverbsc a3, a4, xchan:k("Reverb.fb", 0.7), xchan:k("Reverb.cut", 12000)
  
  kamp = xchan:k("Mix.amp", 1.0)
  
  a1 = tanh(a1 + al) * kamp
  a2 = tanh(a2 + ar) * kamp
  
  out(a1, a2)
  
  sbus_clear(0)
  sbus_clear(1)
endin


/** Always-on Mixer instrument with Reverb send channel and feedback delay. Use start("FBReverbMixer") to run. Designed 
    for use with pan_verb_mix to simplify signal-based live coding. */
instr FBReverbMixer 
  al, ar sbus_read 0
  
  afb0 init 0
  afb1 init 0

  gi_reverb_mixer_on init 1

  ;; dry and reverb send signals
  a1, a2 sbus_read 0
  a3, a4 sbus_read 1
  
  al, ar reverbsc a3, a4, xchan:k("Reverb.fb", 0.7), xchan:k("Reverb.cut", 12000)

  a1 = tanh(a1 + al + afb0) 
  a2 = tanh(a2 + ar + afb1)
 
  kfb_amt = xchan:k("FB.amt", 0.9)
  kfb_dur = xchan:k("FB.dur", 4.2) * 1000 ;; time in ms

  afb0 = vdelay(a1 * kfb_amt, kfb_dur, 10000)
  afb1 = vdelay(a2 * kfb_amt, kfb_dur, 10000)

  kamp = xchan:k("Mix.amp", 1.0)
  a1 *= kamp
  a2 *= kamp
  
  out(a1, a2)
  
  sbus_clear(0)
  sbus_clear(1)

endin

/** Utility opcode to pan signal, send dry to mixer, and send amount 
    of signal to reverb. If ReverbMixer is not on, will output just 
    panned signal using out opcode. */
opcode pan_verb_mix, 0,akk
  asig, kpan, krvb xin
   ;; Panning and send to mixer
  al, ar pan2 asig, kpan
 
  if(gi_reverb_mixer_on == 1) then
    sbus_mix(0, al, ar)
    sbus_mix(1, al * krvb, ar * krvb)
  else 
    out(al, ar)
  endif
endop

/** Utility opcode to send dry stereo to mixer and send amount 
    of stereo signal to reverb. If ReverbMixer is not on, will output just 
    panned signal using out opcode. */
opcode reverb_mix, 0, aak
  al, ar, krvb xin
 
  if(gi_reverb_mixer_on == 1) then
    sbus_mix(0, al, ar)
    sbus_mix(1, al * krvb, ar * krvb)
  else 
    out(al, ar)
  endif
endop

;; Automation

/** Set a channel value at a given time. p4=ChannelName, p5=value*/ 
instr ChnSet
  Schan = p4
  ival = p5
  chnset(ival, Schan)
endin

/** Automation instrument for channels. Takes in "ChannelName", start value, end value, and automation type (0=linear, else exponential). */ 
instr Auto 
  Schan = p4
  istart = p5
  iend = p6
  itype = p7
  kauto init 0

  if(itype == 0) then
    kauto = line:k(istart, p3, iend)
  else
    kauto = expon:k(istart, p3, iend)
  endif

  chnset(kauto, Schan)
endin

/** Automate channel value over time. Takes in "ChannelName", duration, start value, end value, and automation type (0=linear, else exponential). For exponential, signs of istart and end must match and neither can be zero. */ 
opcode automate, 0, Siiii
  Schan, idur, istart, iend, itype xin
  schedule("Auto", 0, idur, Schan, istart, iend, itype)
endop

instr FadeOutMix
  kauto = ampdbfs:k(line:k(0, p3, -60))
  chnset(kauto, "Mix.amp")
endin

/** Utility opcode for end of performances to fade out Mixer over given idur time. idur defaults to 30 seconds. **/
opcode fade_out_mix, 0, o
  idur xin
  idur = (idur <= 0 ? 30 : idur)
  schedule("FadeOutMix", 0, idur) 
  schedule("ChnSet", idur + 0.1, 0, "Mix.amp", 0)
endop

;; DSP

/** Saturation using tanh */
opcode saturate, a, ak
  asig, ksat xin
  xout tanh(asig * ksat) / tanh(ksat)
endop

;; SYNTHS

xchnset("rvb.default", 0.1)
xchnset("drums.rvb.default", 0.1)

/** Substractive Synth, 3osc */
instr Sub1
  asig = vco2(ampdbfs(-12), p4)
  asig += vco2(ampdbfs(-12), p4 * 1.01, 10)
  asig += vco2(ampdbfs(-12), p4 * 2, 10)
  asig = zdf_ladder(asig, expon(10000, p3, 400), 5)
  asig = declick(asig) * p5
  pan_verb_mix(asig, xchan:i("Sub1.pan", 0.5), xchan:i("Sub1.rvb", chnget:i("rvb.default")))
endin


/** Subtractive Synth, two saws, fifth freq apart */
instr Sub2
  icut = xchan:i("Sub2.cut", sr / 3)
  asig = vco2(ampdbfs(-12), p4) 
  asig += vco2(ampdbfs(-12), p4 * 1.5) 
  asig = zdf_ladder(asig, expon(icut, p3, 400), 5)
  asig = declick(asig) * p5
  pan_verb_mix(asig, xchan:i("Sub2.pan", 0.5), xchan:i("Sub2.rvb", chnget:i("rvb.default")))
endin


/** Subtractive Synth, three detuned saws, swells in */
instr Sub3 
  asig = vco2(p5, p4)
  asig += vco2(p5, p4 * 1.01)
  asig += vco2(p5, p4 * 0.995)
  asig *= 0.33 
  asig = zdf_ladder(asig, expon(100, p3, 22000), 12) 
  asig = declick(asig)
  pan_verb_mix(asig, xchan:i("Sub3.pan", 0.5), xchan:i("Sub3.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, detuned square/saw, stabby. 
   Nice as a lead in octave 2, nicely grungy in octave -2, -1
*/
instr Sub4 
  asig = vco2(0.5, p4 * 2)
  asig += vco2(0.5, p4 * 2.01, 10)
  asig += vco2(1, p4, 10)
  asig += vco2(1, p4 * 0.99)
  itarget = p4 * 2
  asig = zdf_ladder(asig, expseg(20000, 0.15, itarget, 0.1, itarget), 5)
  asig = declick(asig) * p5 * 0.15
  pan_verb_mix(asig, xchan:i("Sub4.pan", 0.5), xchan:i("Sub4.rvb", chnget:i("rvb.default")))
endin


/** Subtractive Synth, detuned square/triangle */
instr Sub5
  asig = vco2(0.5, p4, 10)
  asig += vco2(0.25, p4 * 2.0001, 12)
  asig = zdf_ladder(asig, expseg(10000, 0.1, 500, 0.1, 500), 2)
  asig = declick(asig) * p5 * 0.75
  pan_verb_mix(asig, xchan:i("Sub5.pan", 0.5), xchan:i("Sub5.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, saw, K35 filters */
instr Sub6
  asig = vco2(p5, p4)

  asig = K35_hpf(asig, limit:i(p4, 30, 16000), 1)
  asig = K35_lpf(asig, expseg:k(12000, p3, limit:i(p4 * 8, 30, 12000)), 2.5)
  
  asig = saturate(asig, 4.5)
  asig *= p5 * 0.5
  
  asig = declick(asig)
  
  pan_verb_mix(asig, xchan:i("Sub6.pan", 0.5), xchan:i("Sub6.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, saw + tri, K35 filters */
instr Sub7
  asig = vco2(p5, p4)
  asig += vco2(p5, p4 * 2, 4, 0.5)

  asig = K35_hpf(asig, limit:i(p4, 30, 16000), 1)
  asig = K35_lpf(asig, expseg:k(12000, p3, limit:i(p4 * 8, 30, 12000)), 2.5)
  
  asig = saturate(asig, 4.5)
  asig *= p5 * 0.3
  
  asig = declick(asig)
  
  pan_verb_mix(asig, xchan:i("Sub7.pan", 0.5), xchan:i("Sub7.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Synth, square + saw + tri, diode ladder filter */
instr Sub8
  asig = vco2(p5, p4, 10)
  asig += vco2(p5 * 0.5, p4 * 2)
  asig += vco2(p5 * 0.15, p4 * 3.5, 12)  
  
  aenv = expon:a(1, 0.15, 0.001)
  asig = saturate(asig, 10)
  asig = diode_ladder(asig, 4000 + aenv * 4000, 12)
  asig = zdf_2pole(asig, p5, 0.25, 1)
  asig *= linen:a(1, 0, p3, .001) * 0.5
  pan_verb_mix(asig, xchan:i("Sub8.pan", 0.5), xchan:i("Sub8.rvb", chnget:i("rvb.default")))
endin

/** SynthBrass subtractive synth */ 
instr SynBrass
  ipch = p4

  asig = vco2(0.25, ipch)
  asig += vco2(0.25, ipch * 2.00)
  asig = zdf_ladder(asig, expseg(12000, 0.25, 500, 0.05, 500), 4)
  asig = declick(asig * p5)

  pan_verb_mix(asig, xchan:i("SynBrass.pan", 0.5), xchan:i("SynBrass.rvb", chnget:i("rvb.default")))
endin

/** Synth Harp subtracitve Synth */
instr SynHarp
  
  asig = vco2(p5, p4)
  asig += vco2(p5, p4 * 0.9993423423)
  asig += vco2(p5, p4 * 1.00093029423048) 
  
  ioct = octcps(p4)
  
  asig = zdf_ladder(asig, cpsoct(limit(linseg:a(ioct + 4, 0.015, ioct + 2, 0.2, ioct), 4.25, 14)), 0.5)
  asig = zdf_2pole(asig, p4 * 0.5, 0.5, 1)    
  
  asig *= linen:a(1, 0.012, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("SynHarp.pan", 0.5), xchan:i("SynHarp.rvb", chnget:i("rvb.default")))
endin
 
/** SuperSaw sound using 9 bandlimited saws (3 sets of detuned saws at octaves)*/
instr SSaw
  asig = vco2(1, p4)
  asig += vco2(1, p4 * cent(9.04234))
  asig += vco2(1, p4 * cent(-7.214342))
  
  asig += vco2(1, p4 * cent(1206.294143))
  asig += vco2(1, p4 * cent(1193.732))
  asig += vco2(1, p4 * cent(1200))
  
  asig += vco2(1, p4 * cent(2406.294143))
  asig += vco2(1, p4 * cent(2393.732))
  asig += vco2(1, p4 * cent(2400))
  
  asig *= 0.1
  icut = xchan:i("SSaw.cut", 16000)
  asig = zdf_ladder(asig, expseg(icut, p3 - 0.05, icut, 0.05, 200), 0.5)
  asig *= p5 
  asig = declick(asig)

  pan_verb_mix(asig, xchan:i("SSaw.pan", 0.5), xchan:i("SSaw.rvb", chnget:i("rvb.default")))
endin

/** Modal Synthesis Instrument: Percussive/organ-y sound */
instr Mode1
  asig = mpulse(p5, 0)

  asig1 = mode(asig, p4, p4 * 0.5)
  asig1 += mode(asig, p4 * 2, p4 * 0.25)
  asig1 += mode(asig, p4 * 4, p4 * 0.125)

  asig = declick(asig1) 

  pan_verb_mix(asig, xchan:i("Mode1.pan", 0.5), xchan:i("Mode1.rvb", chnget:i("rvb.default")))
endin

/** Pluck sound using impulses, noise, and waveguides*/
instr Plk 
  asig = mpulse(p5, 1 / p4)
  asig += random:a(-0.1, 0.1) * expseg(p5, 0.02, 0.001, p3, 0.001)
  
  aout wguide1 asig, 1/ p4, 10000, 0.8
  aout += wguide1(asig, 1/ (2 * p4), 12000, 0.6)

  aout = K35_hpf(aout, p4, 0.5)
  aout = zdf_ladder(aout, expon(10000, p3, 100), 3)
  aout = dcblock2(aout)
  
  asig = declick(aout) 
  
  pan_verb_mix(asig, xchan:i("Plk.pan", 0.5), xchan:i("Plk.rvb", chnget:i("rvb.default")))
endin

gi_organ1 = ftgen(0, 0, 65536, 10, 1, 0.5, 0.3, 0.2, 0.05, 0.015)
/** Wavetable Organ sound using additive synthesis */
instr Organ1
  asig = oscili(p5, p4, gi_organ1)
  asig *= 0.5
  asig = declick(asig)

  pan_verb_mix(asig, xchan:i("Organ1.pan", 0.5), xchan:i("Organ1.rvb", chnget:i("rvb.default")))
endin

/** Organ sound based on M1 Organ 2 patch */
instr Organ2
  asig = vco2(1, p4, 4, 0.25)
  asig += vco2(0.8, p4 * 2, 12)
  asig += vco2(0.3, p4 * 3, 10)
     
  icutStart = limit:i(xchan:i("Organ2.cut", 2000), 40, sr * 1/2)
  icutEnd = limit:i(xchan:i("Organ2.cutEnd", 500), 40, sr * 1/2)
  asig = zdf_ladder(asig, expseg(icutStart, 0.08, icutEnd, p3, icutEnd), 2)
  
  asig *= p5 * 0.67
  asig = declick(asig)
  
  pan_verb_mix(asig, xchan:i("Organ2.pan", 0.5), xchan:i("Organ2.rvb", chnget:i("rvb.default")))
endin

giorgan_claribel_flute = ftgen(0, 0, 65536, 10, 1, ampdbfs(-30), ampdbfs(-35), ampdbfs(-40), ampdbfs(-32), ampdbfs(-40), ampdbfs(-42))

/** Wavetable Organ using Flute 8' and Flute 4', wavetable based on Claribel Flute 
    http://www.pykett.org.uk/the_tonal_structure_of_organ_flutes.htm */
instr Organ3 
  asig = oscili(p5, p4, giorgan_claribel_flute)
  asig += oscili(p5, p4 * 2, giorgan_claribel_flute)  
  ;asig += oscili(p5, p4 * 0.5)
  
  asig *= linen:a(1, .02, p3, .01)

  pan_verb_mix(asig, xchan:i("Organ3.pan", 0.5), xchan:i("Organ3.rvb", chnget:i("rvb.default")))
endin

/** Subtractive Bass sound */

instr Bass

  asig = vco2(p5, p4, 10)
  asig += vco2(p5 * 0.25, p4 * 0.9992342342, 10)  
  asig += vco2(p5 * 0.5, p4 * 2.000234234)
  aenv = linseg:a(1, 0.2, 0.1, p3 - 0.2, 0) * 6
  asig = zdf_ladder(asig, cpsoct(5 + aenv), 4 )
  
  asig *= linen:a(0.7, 0, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("Bass.pan", 0.5), xchan:i("Bass.rvb", chnget:i("rvb.default")))

endin

/** MS20-style Bass Sound */

instr ms20_bass 
  ipch = p4 
  iamp = p5 
  aenv = expseg(1000, 0.1, ipch * 2, p3 - .05, ipch * 2)

  asig = vco2(1.0, ipch)
  asig = K35_hpf(asig, ipch, 5, 0, 1)
  asig = K35_lpf(asig, aenv, 8, 0, 1)

  asig *= expon:a(iamp, p3, 0.0001) 

  pan_verb_mix(asig, xchan:i("ms20_bass.pan", 0.5), xchan:i("ms20_bass.rvb", chnget:i("rvb.default")))
endin


/** VoxHumana Patch */

instr VoxHumana 
  ipch = p4 
  iamp = p5 
  aenv = transegr:a(0, 0.453, 1, 1.0, 2.242, -1, 0)

  klfo_pulse_width = lfo(0.125, 5.72, 1)
  klfo_saw = lfo(0.021, 5.04, 1)
  klfo_pulse = lfo(0.013, 3.5, 1)

  asaw = vco2(iamp, ipch * (1 + klfo_saw))
  apulse = vco2(iamp, ipch * (1.00004 + klfo_pulse), 2, 0.625 + klfo_pulse_width)

  aout = sum(asaw, apulse) * 0.0625 * aenv

  ikeyfollow = 1 + exp( (ipch - 50) / 10000)

  aout = butterlp(aout, 1986 * ikeyfollow)

  pan_verb_mix(aout, xchan:i("VoxHumana.pan", 0.5), xchan:i("VoxHumana.rvb", chnget:i("rvb.default")))
endin

/** FM 3:1 C:M ratio, 2->0.025 index, nice for bass */
instr FM1 
  icar = xchan("FM1.car", 1)
  imod = xchan("FM1.mod", 3)
  asig = foscili(p5, p4, icar, imod, expon(2, 0.2, 0.025))
  asig = declick(asig) * 0.5
  pan_verb_mix(asig, xchan:i("FM1.pan", 0.5), xchan:i("FM1.rvb", chnget:i("rvb.default")))
endin

/** Filtered noise, exponential envelope */
instr Noi 
  p3 = max:i(p3, 0.4) 
  asig = pinker() * p5 * expon(1, p3, 0.001) * 0.1

  a1 = mode(asig, p4, 80)
  a2 = mode(asig, p4 * 2, 40)
  a3 = mode(asig, p4 * 3, 30)
  a4 = mode(asig, p4 * 4, 20)

  asig sum a1, a2, a3, a4

  asig = declick(asig) * 0.25

  pan_verb_mix(asig, xchan:i("Noi.pan", 0.5), xchan:i("Noi.rvb", chnget:i("rvb.default")))
endin


/** Wobble patched based on Jacob Joaquin's "Tempo-Synced Wobble Bass" */
instr Wobble
  /*p3 = max:i(p3, 0.4) */

  itri = chnget:i("Wobble.triangle")
  if(itri == 0) then
    ;; unipolar triangle
    itri = ftgen(0, 0, 8192, -7, 0, 4096, 1, 4096, 0)
    chnset(itri, "Wobble.triangle")
  endif

  ;; dur in ticks (16ths) for wobble lfo 
  iticks = xchan("Wobble.ticks", 2)
  ;; modulation max
  imod = p4 * 8 

  klfo = oscili:k(1, 1 / ticks(iticks), itri)

  asig = vco2(p5, p4 * 2.018)
  asig += vco2(p5, p4, 10)
  asig = zdf_ladder(asig, min:k(p4 + (imod * klfo), 22000), 12) 
  asig *= expon(1, beats(16), 0.001)
  asig = declick(asig)
  pan_verb_mix(asig, xchan:i("Wobble.pan", 0.5), xchan:i("Wobble.rvb", chnget:i("rvb.default")))

endin

/** Simple Sine-wave instrument with exponential envelope */
instr Sine
  asig = oscili(p5, p4)
  asig *= expseg:a(0.1, 0.001, 1, 0.1, 0.001, p3, 0.001)
  pan_verb_mix(asig, xchan:i("Sine.pan", 0.5), xchan:i("Sine.rvb", chnget:i("rvb.default")))
endin

/** Simple Square-wave instrument with exponential envelope */
instr Square
  asig = vco2(p5, p4, 10)
  asig *= expseg:a(0.1, 0.005, 1, 0.1, 0.001, p3, 0.001)
  pan_verb_mix(asig, xchan:i("Square.pan", 0.5), xchan:i("Square.rvb", chnget:i("rvb.default")))
endin

/** Simple Sawtooth-wave instrument with exponential envelope */
instr Saw
  asig = vco2(p5, p4)
  asig *= expseg:a(0.1, 0.005, 1, 0.1, 0.001, p3, 0.001)
  pan_verb_mix(asig, xchan:i("Saw.pan", 0.5), xchan:i("Saw.rvb", chnget:i("rvb.default")))
endin


;; SQUINE WAVE SYNTHS

/** Squinewave Synth, 2 osc */
instr Squine1
  asig squinewave a(p4), expon:a(.8, p3, .1), expon:a(.9, p3, .5), 0, 4
  a2 squinewave a(p4 * 1.0019234234), expseg:a(.8, p3, .6), a(0), 0, 4

  asig = (asig + a2 * 0.05) * p5 * 0.5
  asig = butterhp(asig, p4)
  asig *= linen:a(1, .015, p3, .02) 
  asig = dcblock2(asig)

  pan_verb_mix(asig, xchan:i("Squine1.pan", 0.5), xchan:i("Squine1.rvb", chnget:i("rvb.default")))
  
endin

gi_lc_sine = ftgen(0, 0, 65536, 10, 1)

/** Formant Synth, buzz source, soprano ah formants */
instr Form1 
  iamp = p5
  ifreq = p4
  asig = buzz(1, ifreq * (1 + lfo(.003, 4)), (sr / 2) / ifreq, gi_lc_sine)
  
  a1 = butterbp(asig, 800, 80)
  a2 = butterbp(asig * ampdbfs(-6), 1150, 90)
  a3 = butterbp(asig * ampdbfs(-32), 2900 , 120)
  a4 = butterbp(asig * ampdbfs(-20), 3900, 130)
  a5 = butterbp(asig * ampdbfs(-50), 4950, 140)

  asig = a1 + a2 + a3 + a4 + a5
  asig *= 35 * iamp * adsr(0.05, 0, 1, 0.01)
  
  pan_verb_mix(asig, xchan:i("Form1.pan", 0.5), xchan:i("Form1.rvb", chnget:i("rvb.default")))
endin

;; MONOPHONIC SYNTHS

/** Monophone synth using sawtooth wave and 4pole lpf. Use "start("Mono") to run the monosynth, then use MonoNote instrument to play the instrument. */
instr Mono
  asig = vco2(xchan:k("Mono.amp", 0.0), portk(xchan:k("Mono.freq", 60), xchan:k("Mono.glide", 0.02)))
  asig = zdf_ladder(asig, xchan:k("Mono.cut", 4000), xchan:k("Mono.Q", 10))
  
  kpan = xchan:k("Mono.pan", 0.5)
  aL,aR pan2  asig,kpan             

  pan_verb_mix(asig, xchan:k("Mono.pan", 0.5), xchan:k("Mono.rvb", chnget:i("rvb.default")))
endin
maxalloc("Mono", 1)

/** Note playing instrument for Mono synth. Be careful to use this
and not try to create multiple Mono instruments! */
instr MonoNote
  chnset(expon(p5, p3, 0.001), "Mono.amp")
  chnset(p4, "Mono.freq")
endin


;; DRUMS

/** Bandpass-filtered impulse glitchy click sound. p4 = center frequency (e.g., 3000, 6000) */
instr Click 
  asig = mpulse(1, 0)
  asig = zdf_2pole(asig, p4, 3, 3)
  
  asig *= p5 * 4      ;; adjust amp 
  asig *= linen:a(1, 0, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("Click.pan", 0.5), xchan:i("Click.rvb", chnget:i("rvb.default")))
endin

/** Highpass-filtered noise+saw sound. Use NoiSaw.cut channel to adjust cutoff. */
instr NoiSaw 
  asig = random:a(-1, 1)
  asig += vco2(1, 100)
  asig = zdf_2pole(asig, xchan:i("NoiSaw.cut", 3000), 1, 3)
  
  asig *= p5 * 0.5
  asig *= expseg:a(1, 0.1, 0.001, p3, 0.0001)
  
  asig *= linen:a(1, 0, p3, 0.01)
  
  pan_verb_mix(asig, xchan:i("NoiSaw.pan", 0.5), xchan:i("NoiSaw.rvb", chnget:i("rvb.default")))
endin

/** Modified clap instrument by Istvan Varga (clap1.orc) */
instr Clap
  ifreq = p4 ;; ignore
  iamp = p5

  ibpfrq  =  1046.5       /* bandpass filter frequency */
  kbpbwd =  port:k(ibpfrq*0.25, 0.03, ibpfrq*4.0)   /* bandpass filter bandwidth */
  idec  =  0.5          /* decay time        */

  a1  =  1.0
  a1_ delay1 a1
  a1  =  a1 - a1_
  a2  delay a1, 0.011
  a3  delay a1, 0.023
  a4  delay a1, 0.031

  a1  tone a1, 60.0
  a2  tone a2, 60.0
  a3  tone a3, 60.0
  a4  tone a4, 1.0 / idec

  aenv1 =  a1 + a2 + a3 + a4*60.0*idec

  a_  unirand 2.0
  a_  =  aenv1 * (a_ - 1.0)
  a_  butterbp a_, ibpfrq, kbpbwd

  aout = a_ * 80 * iamp ;; 
  pan_verb_mix(aout, xchan:k("Clap.pan", 0.7), xchan:k("Clap.rvb", chnget:i("drums.rvb.default")))
endin



gi_808_sine  ftgen 0,0,1024,10,1   ;A SINE WAVE
gi_808_cos ftgen 0,0,65536,9,1,1,90  ;A COSINE WAVE 

/** Bass Drum - From Iain McCurdy's TR-808.csd */
instr BD  ;BASS DRUM
  p3  = 2 * xchan("BD.decay", 0.5)              ;NOTE DURATION. SCALED USING GUI 'Decay' KNOB

  ilevel = xchan("BD.level", 1) * 2
  itune = xchan("BD.tune", 0)

  ;SUSTAIN AND BODY OF THE SOUND
  kmul = transeg(0.2,p3*0.5,-15,0.01, p3*0.5,0,0)         ;PARTIAL STRENGTHS MULTIPLIER USED BY GBUZZ. DECAYS FROM A SOUND WITH OVERTONES TO A SINE TONE.
  kbend = transeg(0.5,1.2,-4, 0,1,0,0)            ;SLIGHT PITCH BEND AT THE START OF THE NOTE 
  asig = gbuzz(0.5,50*octave(itune)*semitone(kbend),20,1,kmul,gi_808_cos)   ;GBUZZ TONE
  aenv = transeg:a(1,p3-0.004,-6,0)             ;AMPLITUDE ENVELOPE FOR SUSTAIN OF THE SOUND
  aatt = linseg:a(0,0.004,1, .01, 1)              ;SOFT ATTACK
  asig= asig*aenv*aatt

  ;HARD, SHORT ATTACK OF THE SOUND
  aenv  = linseg:a(1,0.07,0, .01, 0)              ;AMPLITUDE ENVELOPE (FAST DECAY)            
  acps = expsega(400,0.07,0.001,1,0.001)            ;FREQUENCY OF THE ATTACK SOUND. QUICKLY GLISSES FROM 400 Hz TO SUB-AUDIO
  aimp = oscili(aenv,acps*octave(itune*0.25),gi_808_sine)       ;CREATE ATTACK SOUND
  
  amix  = ((asig*0.5)+(aimp*0.35))*ilevel*p5      ;MIX SUSTAIN AND ATTACK SOUND ELEMENTS AND SCALE USING GUI 'Level' KNOB
  
  pan_verb_mix(amix, xchan:k("BD.pan", 0.5), xchan:k("BD.rvb", chnget:i("drums.rvb.default")))
endin


/** Snare Drum - From Iain McCurdy's TR-808.csd */
instr SD  ;SNARE DRUM
  
  ;SOUND CONSISTS OF TWO SINE TONES, AN OCTAVE APART AND A NOISE SIGNAL
  idur = xchan("SD.decay", 1.0) 
  ilevel = xchan("SD.level", 1) 
  itune = xchan("SD.tune", 0)

  ifrq    = 342   ;FREQUENCY OF THE TONES
  iNseDur = 0.3 * idur  ;DURATION OF THE NOISE COMPONENT
  iPchDur = 0.1 * idur  ;DURATION OF THE SINE TONES COMPONENT
  p3  = iNseDur   ;p3 DURATION TAKEN FROM NOISE COMPONENT DURATION (ALWATS THE LONGEST COMPONENT)
  
  ;SINE TONES COMPONENT
  aenv1 = expseg(1, iPchDur, 0.0001, p3-iPchDur, 0.0001)    ;AMPLITUDE ENVELOPE
  apitch1 = oscili(1, ifrq * octave(itune), gi_808_sine)      ;SINE TONE 1
  apitch2 = oscili(0.25, ifrq * 0.5 * octave(itune), gi_808_sine)   ;SINE TONE 2 (AN OCTAVE LOWER)
  apitch  = (apitch1+apitch2)*0.75        ;MIX THE TWO SINE TONES

  ;NOISE COMPONENT
  aenv2 = expon(1,p3,0.0005)          ;AMPLITUDE ENVELOPE
  anoise = noise(0.75, 0)           ;CREATE SOME NOISE
  anoise = butbp(anoise, 10000*octave(itune), 10000)    ;BANDPASS FILTER THE NOISE SIGNAL
  anoise = buthp(anoise, 1000)          ;HIGHPASS FILTER THE NOISE SIGNAL
  kcf = expseg(5000, 0.1, 3000, p3-0.2, 3000)     ;CUTOFF FREQUENCY FOR A LOWPASS FILTER
  anoise = butlp(anoise,kcf)                      ;LOWPASS FILTER THE NOISE SIGNAL
  amix  = ((apitch*aenv1)+(anoise*aenv2))*ilevel*p5 ;MIX AUDIO SIGNALS AND SCALE ACCORDING TO GUI 'Level' CONTROL

  pan_verb_mix(amix, xchan:k("SD.pan", 0.5), xchan:k("SD.rvb", chnget:i("drums.rvb.default")))
endin


/** Open High Hat - From Iain McCurdy's TR-808.csd */
instr OHH ;OPEN HIGH HAT

  idur = xchan("OHH.decay", 1.0)  
  ilevel = xchan("OHH.level", 1) 
  itune = xchan("OHH.tune", 0)
  ioct = octave:i(itune)


  kFrq1 = 296*ioct  ;FREQUENCIES OF THE 6 OSCILLATORS
  kFrq2 = 285*ioct  
  kFrq3 = 365*ioct  
  kFrq4 = 348*ioct  
  kFrq5 = 420*ioct  
  kFrq6 = 835*ioct  
  p3  = 0.5*idur    ;DURATION OF THE NOTE
  
  ;SOUND CONSISTS OF 6 PULSE OSCILLATORS MIXED WITH A NOISE COMPONENT
  ;PITCHED ELEMENT
  aenv  linseg  1,p3-0.05,0.1,0.05,0    ;AMPLITUDE ENVELOPE FOR THE PULSE OSCILLATORS
  ipw = 0.25        ;PULSE WIDTH
  a1  vco2  0.5,kFrq1,2,ipw     ;PULSE OSCILLATORS...
  a2  vco2  0.5,kFrq2,2,ipw
  a3  vco2  0.5,kFrq3,2,ipw
  a4  vco2  0.5,kFrq4,2,ipw
  a5  vco2  0.5,kFrq5,2,ipw
  a6  vco2  0.5,kFrq6,2,ipw
  amix  sum a1,a2,a3,a4,a5,a6   ;MIX THE PULSE OSCILLATORS
  amix  reson amix,5000*ioct,5000,1 ;BANDPASS FILTER THE MIXTURE
  amix  buthp amix,5000     ;HIGHPASS FILTER THE SOUND...
  amix  buthp amix,5000     ;...AND AGAIN
  amix  = amix*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;NOISE ELEMENT
  anoise  noise 0.8,0       ;GENERATE SOME WHITE NOISE
  aenv  linseg  1,p3-0.05,0.1,0.05,0    ;CREATE AN AMPLITUDE ENVELOPE
  kcf expseg  20000,0.7,9000,p3-0.1,9000  ;CREATE A CUTOFF FREQ. ENVELOPE
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,8000     ;HIGHPASS FILTER THE NOISE SIGNAL
  anoise  = anoise*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;MIX PULSE OSCILLATOR AND NOISE COMPONENTS
  amix  = (amix+anoise)*ilevel*p5*0.55

  pan_verb_mix(amix, xchan:k("OHH.pan", 0.5), xchan:k("OHH.rvb", chnget:i("drums.rvb.default")))
endin


/** Closed High Hat - From Iain McCurdy's TR-808.csd */
instr CHH ;CLOSED HIGH HAT
  idur = xchan("CHH.decay", 1.0)  
  ilevel = xchan("CHH.level", 1) 
  itune = xchan("CHH.tune", 0)
  ioct = octave:i(itune)

  kFrq1 = 296*ioct  ;FREQUENCIES OF THE 6 OSCILLATORS
  kFrq2 = 285*ioct  
  kFrq3 = 365*ioct  
  kFrq4 = 348*ioct  
  kFrq5 = 420*ioct  
  kFrq6 = 835*ioct  
  idur  = 0.088*idur    ;DURATION OF THE NOTE
  p3  limit idur,0.1,10   ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)

  iohh = nstrnum("OHH")
  iactive = active(iohh)      ;SENSE ACTIVITY OF PREVIOUS INSTRUMENT (OPEN HIGH HAT) 
  if iactive>0 then     ;IF 'OPEN HIGH HAT' IS ACTIVE...
   turnoff2 iohh,0,0    ;TURN IT OFF (CLOSED HIGH HAT TAKES PRESIDENCE)
  endif

  ;PITCHED ELEMENT
  aenv  expsega 1,idur,0.001,1,0.001    ;AMPLITUDE ENVELOPE FOR THE PULSE OSCILLATORS
  ipw = 0.25        ;PULSE WIDTH
  a1  vco2  0.5,kFrq1,2,ipw     ;PULSE OSCILLATORS...     
  a2  vco2  0.5,kFrq2,2,ipw
  a3  vco2  0.5,kFrq3,2,ipw
  a4  vco2  0.5,kFrq4,2,ipw
  a5  vco2  0.5,kFrq5,2,ipw
  a6  vco2  0.5,kFrq6,2,ipw
  amix  sum a1,a2,a3,a4,a5,a6   ;MIX THE PULSE OSCILLATORS
  amix  reson amix,5000*ioct,5000,1 ;BANDPASS FILTER THE MIXTURE
  amix  buthp amix,5000     ;HIGHPASS FILTER THE SOUND...
  amix  buthp amix,5000     ;...AND AGAIN
  amix  = amix*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;NOISE ELEMENT
  anoise  noise 0.8,0       ;GENERATE SOME WHITE NOISE
  aenv  expsega 1,idur,0.001,1,0.001    ;CREATE AN AMPLITUDE ENVELOPE
  kcf expseg  20000,0.7,9000,idur-0.1,9000  ;CREATE A CUTOFF FREQ. ENVELOPE
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,8000     ;HIGHPASS FILTER THE NOISE SIGNAL
  anoise  = anoise*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;MIX PULSE OSCILLATOR AND NOISE COMPONENTS
  amix  = (amix+anoise)*ilevel*p5*0.55

  pan_verb_mix(amix, xchan:k("CHH.pan", 0.5), xchan:k("CHH.rvb", chnget:i("drums.rvb.default")))
endin

/** High Tom - From Iain McCurdy's TR-808.csd */
instr HiTom ;HIGH TOM
  idur = xchan("HiTom.decay", 1.0)  
  ilevel = xchan("HiTom.level", 1) 
  itune = xchan("HiTom.tune", 0)
  ioct = octave:i(itune)

  ifrq      = 200 * ioct  ;FREQUENCY
  p3      = 0.5 * idur      ;DURATION OF THIS NOTE

  ;SINE TONE SIGNAL
  aAmpEnv transeg 1,p3,-10,0.001        ;AMPLITUDE ENVELOPE FOR SINE TONE SIGNAL
  afmod expsega 5,0.125/ifrq,1,1,1      ;FREQUENCY MODULATION ENVELOPE. GIVES THE TONE MORE OF AN ATTACK.
  asig  oscili  -aAmpEnv*0.6,ifrq*afmod,gi_808_sine   ;SINE TONE SIGNAL

  ;NOISE SIGNAL
  aEnvNse transeg 1,p3,-6,0.001       ;AMPLITUDE ENVELOPE FOR NOISE SIGNAL
  anoise  dust2 0.4, 8000       ;GENERATE NOISE SIGNAL
  anoise  reson anoise,400*ioct,800,1 ;BANDPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,100*ioct   ;HIGHPASS FILTER THE NOSIE SIGNAL
  anoise  butlp anoise,1000*ioct    ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  = anoise * aEnvNse      ;SCALE NOISE SIGNAL WITH AMPLITUDE ENVELOPE
  
  ;MIX THE TWO SOUND COMPONENTS
  amix  = (asig + anoise)*ilevel*p5

  pan_verb_mix(amix, xchan:k("HiTom.pan", 0.5), xchan:k("HiTom.rvb", chnget:i("drums.rvb.default")))
endin

/** Mid Tom - From Iain McCurdy's TR-808.csd */
instr MidTom ;MID TOM
  idur = xchan("MidTom.decay", 1.0) 
  ilevel = xchan("MidTom.level", 1) 
  itune = xchan("MidTom.tune", 0)
  ioct = octave:i(itune)

  ifrq      = 133*ioct    ;FREQUENCY
  p3      = 0.6 * idur      ;DURATION OF THIS NOTE

  ;SINE TONE SIGNAL
  aAmpEnv transeg 1,p3,-10,0.001        ;AMPLITUDE ENVELOPE FOR SINE TONE SIGNAL
  afmod expsega 5,0.125/ifrq,1,1,1      ;FREQUENCY MODULATION ENVELOPE. GIVES THE TONE MORE OF AN ATTACK.
  asig  oscili  -aAmpEnv*0.6,ifrq*afmod,gi_808_sine   ;SINE TONE SIGNAL

  ;NOISE SIGNAL
  aEnvNse transeg 1,p3,-6,0.001       ;AMPLITUDE ENVELOPE FOR NOISE SIGNAL
  anoise  dust2 0.4, 8000       ;GENERATE NOISE SIGNAL
  anoise  reson anoise, 400*ioct,800,1  ;BANDPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,100*ioct   ;HIGHPASS FILTER THE NOSIE SIGNAL
  anoise  butlp anoise,600*ioct   ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  = anoise * aEnvNse      ;SCALE NOISE SIGNAL WITH AMPLITUDE ENVELOPE
  
  ;MIX THE TWO SOUND COMPONENTS
  amix  = (asig + anoise)*ilevel*p5

  pan_verb_mix(amix, xchan:k("MidTom.pan", 0.5), xchan:k("MidTom.rvb", chnget:i("drums.rvb.default")))
endin

/** Low Tom - From Iain McCurdy's TR-808.csd */
instr LowTom  ;LOW TOM
  idur = xchan("LowTom.decay", 1.0) 
  ilevel = xchan("LowTom.level", 1) 
  itune = xchan("LowTom.tune", 0)
  ioct = octave:i(itune)

  ifrq      = 90 * ioct ;FREQUENCY
  p3    = 0.7*idur    ;DURATION OF THIS NOTE

  ;SINE TONE SIGNAL
  aAmpEnv transeg 1,p3,-10,0.001        ;AMPLITUDE ENVELOPE FOR SINE TONE SIGNAL
  afmod expsega 5,0.125/ifrq,1,1,1      ;FREQUENCY MODULATION ENVELOPE. GIVES THE TONE MORE OF AN ATTACK.
  asig  oscili  -aAmpEnv*0.6,ifrq*afmod,gi_808_sine   ;SINE TONE SIGNAL

  ;NOISE SIGNAL
  aEnvNse transeg 1,p3,-6,0.001       ;AMPLITUDE ENVELOPE FOR NOISE SIGNAL
  anoise  dust2 0.4, 8000       ;GENERATE NOISE SIGNAL
  anoise  reson anoise,40*ioct,800,1    ;BANDPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,100*ioct   ;HIGHPASS FILTER THE NOSIE SIGNAL
  anoise  butlp anoise,600*ioct   ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  = anoise * aEnvNse      ;SCALE NOISE SIGNAL WITH AMPLITUDE ENVELOPE
  
  ;MIX THE TWO SOUND COMPONENTS
  amix  = (asig + anoise)*ilevel*p5

  pan_verb_mix(amix, xchan:k("LowTom.pan", 0.5), xchan:k("LowTom.rvb", chnget:i("drums.rvb.default")))
endin



/** Cymbal - From Iain McCurdy's TR-808.csd */
instr Cymbal  ;CYMBAL
  idur = xchan("Cymbal.decay", 1.0) 
  ilevel = xchan("Cymbal.level", 1) 
  itune = xchan("Cymbal.tune", 0)
  ioct = octave:i(itune)

  iFrq1 = 296*ioct  ;FREQUENCIES OF THE 6 OSCILLATORS
  iFrq2 = 285*ioct
  iFrq3 = 365*ioct
  iFrq4 = 348*ioct     
  iFrq5 = 420*ioct
  iFrq6 = 835*ioct
  p3  = 2*idur  ;DURATION OF THE NOTE

  ;SOUND CONSISTS OF 6 PULSE OSCILLATORS MIXED WITH A NOISE COMPONENT
  ;PITCHED ELEMENT
  aenv  expon 1,p3,0.0001   ;AMPLITUDE ENVELOPE FOR THE PULSE OSCILLATORS 
  ipw = 0.25      ;PULSE WIDTH      
  a1  vco2  0.5,iFrq1,2,ipw   ;PULSE OSCILLATORS...  
  a2  vco2  0.5,iFrq2,2,ipw
  a3  vco2  0.5,iFrq3,2,ipw
  a4  vco2  0.5,iFrq4,2,ipw
  a5  vco2  0.5,iFrq5,2,ipw 
  a6  vco2  0.5,iFrq6,2,ipw

  amix  sum a1,a2,a3,a4,a5,a6   ;MIX THE PULSE OSCILLATORS
  amix  reson amix,5000 * ioct,5000,1 ;BANDPASS FILTER THE MIXTURE
  amix  buthp amix,10000      ;HIGHPASS FILTER THE SOUND
  amix  butlp amix,12000      ;LOWPASS FILTER THE SOUND...
  amix  butlp amix,12000      ;AND AGAIN...
  amix  = amix*aenv     ;APPLY THE AMPLITUDE ENVELOPE
  
  ;NOISE ELEMENT
  anoise  noise 0.8,0       ;GENERATE SOME WHITE NOISE
  aenv  expsega 1,0.3,0.07,p3-0.1,0.00001 ;CREATE AN AMPLITUDE ENVELOPE
  kcf expseg  14000,0.7,7000,p3-0.1,5000  ;CREATE A CUTOFF FREQ. ENVELOPE
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE NOISE SIGNAL
  anoise  buthp anoise,8000     ;HIGHPASS FILTER THE NOISE SIGNAL
  anoise  = anoise*aenv     ;APPLY THE AMPLITUDE ENVELOPE            

  ;MIX PULSE OSCILLATOR AND NOISE COMPONENTS
  amix  = (amix+anoise)*ilevel*p5*0.85

  pan_verb_mix(amix, xchan:k("Cymbal.pan", 0.5), xchan:k("Cymbal.rvb", chnget:i("drums.rvb.default")))
endin

;WAVEFORM FOR TR808 RIMSHOT
giTR808RimShot  ftgen 0,0,1024,10, 0.971,0.269,0.041,0.054,0.011,0.013,0.08,0.0065,0.005,0.004,0.003,0.003,0.002,0.002,0.002,0.002,0.002,0.001,0.001,0.001,0.001,0.001,0.002,0.001,0.001  

/** Rimshot - From Iain McCurdy's TR-808.csd */
instr Rimshot ;RIM SHOT

  idur = xchan("Rimshot.decay", 1.0)  
  ilevel = xchan("Rimshot.level", 1) 
  itune = xchan("Rimshot.tune", 0)

  idur  = 0.027*idur    ;NOTE DURATION
  p3  limit idur,0.1,10     ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)

  ;RING
  aenv1 expsega 1,idur,0.001,1,0.001    ;AMPLITUDE ENVELOPE FOR SUSTAIN ELEMENT OF SOUND
  ifrq1 = 1700*octave(itune)    ;FREQUENCY OF SUSTAIN ELEMENT OF SOUND
  aring oscili  1,ifrq1,giTR808RimShot,0    ;CREATE SUSTAIN ELEMENT OF SOUND  
  aring butbp aring,ifrq1,ifrq1*8 
  aring = aring*(aenv1-0.001)*0.5     ;APPLY AMPLITUDE ENVELOPE

  ;NOISE
  anoise  noise 1,0         ;CREATE A NOISE SIGNAL
  aenv2 expsega 1, 0.002, 0.8, 0.005, 0.5, idur-0.002-0.005, 0.0001, 1, 0.0001  ;CREATE AMPLITUDE ENVELOPE
  anoise  buthp anoise,800      ;HIGHPASS FILTER THE NOISE SOUND
  kcf expseg  4000,idur,20        ;CUTOFF FREQUENCY FUNCTION FOR LOWPASS FILTER
  anoise  butlp anoise,kcf      ;LOWPASS FILTER THE SOUND
  anoise  = anoise*(aenv2-0.001)  ;APPLY ENVELOPE TO NOISE SIGNAL

  ;MIX
  amix  = (aring+anoise)*ilevel*p5*0.8

  pan_verb_mix(amix, xchan:k("Rimshot.pan", 0.5), xchan:k("Rimshot.rvb", chnget:i("drums.rvb.default")))
endin


/** Claves - From Iain McCurdy's TR-808.csd */
instr Claves  
  idur = xchan("Claves.decay", 1.0) 
  ilevel = xchan("Claves.level", 1) 
  itune = xchan("Claves.tune", 0)

  ifrq  = 2500*octave(itune)  ;FREQUENCY OF OSCILLATOR
  idur  = 0.045   * idur    ;DURATION OF THE NOTE
  p3  limit idur,0.1,10     ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)      
  aenv  expsega 1,idur,0.001,1,0.001    ;AMPLITUDE ENVELOPE
  afmod expsega 3,0.00005,1,1,1     ;FREQUENCY MODULATION ENVELOPE. GIVES THE SOUND A LITTLE MORE ATTACK.
  asig  oscili  -(aenv-0.001),ifrq*afmod,gi_808_sine,0  ;AUDIO OSCILLATOR
  asig  = asig * 0.4 * ilevel * p5    ;RESCALE AMPLITUDE

  pan_verb_mix(asig, xchan:k("Claves.pan", 0.5), xchan:k("Claves.rvb", chnget:i("drums.rvb.default")))
endin


/** Cowbell - From Iain McCurdy's TR-808.csd */
instr Cowbell 
  idur = xchan("Cowbell.decay", 1.0)  
  ilevel = xchan("Cowbell.level", 1) 
  itune = xchan("Cowbell.tune", 0)

  ifrq1 = 562 * octave(itune) ;FREQUENCIES OF THE TWO OSCILLATORS
  ifrq2 = 845 * octave(itune) ;
  ipw   = 0.5         ;PULSE WIDTH OF THE OSCILLATOR  
  ishp  = -30   
  idur  = 0.7         ;NOTE DURATION
  p3  = 0.7*idur      ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)
  ishape  = -30       ;SHAPE OF THE CURVES IN THE AMPLITUDE ENVELOPE
  kenv1 transeg 1,p3*0.3,ishape,0.2, p3*0.7,ishape,0.2  ;FIRST AMPLITUDE ENVELOPE - PRINCIPALLY THE ATTACK OF THE NOTE
  kenv2 expon 1,p3,0.0005       ;SECOND AMPLITUDE ENVELOPE - THE SUSTAIN PORTION OF THE NOTE
  kenv  = kenv1*kenv2     ;COMBINE THE TWO ENVELOPES
  itype = 2       ;WAVEFORM FOR VCO2 (2=PULSE)
  a1  vco2  0.65,ifrq1,itype,ipw    ;CREATE THE TWO OSCILLATORS
  a2  vco2  0.65,ifrq2,itype,ipw
  amix  = a1+a2       ;MIX THE TWO OSCILLATORS 
  iLPF2 = 10000       ;LOWPASS FILTER RESTING FREQUENCY
  kcf expseg  12000,0.07,iLPF2,1,iLPF2  ;LOWPASS FILTER CUTOFF FREQUENCY ENVELOPE
  alpf  butlp amix,kcf      ;LOWPASS FILTER THE MIX OF THE TWO OSCILLATORS (CREATE A NEW SIGNAL)
  abpf  reson amix, ifrq2, 25     ;BANDPASS FILTER THE MIX OF THE TWO OSCILLATORS (CREATE A NEW SIGNAL)
  amix  dcblock2  (abpf*0.06*kenv1)+(alpf*0.5)+(amix*0.9) ;MIX ALL SIGNALS AND BLOCK DC OFFSET
  amix  buthp amix,700      ;HIGHPASS FILTER THE MIX OF ALL SIGNALS
  amix  = amix * 0.07 * kenv * p5 * ilevel  ;RESCALE AMPLITUDE

  pan_verb_mix(amix, xchan:k("Cowbell.pan", 0.5), xchan:k("Cowbell.rvb", chnget:i("drums.rvb.default")))
endin

/** Maraca - from Iain McCurdy's TR-808.csd */ 
instr Maraca  ;MARACA
  idur = xchan("Maraca.decay", 1.0) 
  ilevel = xchan("Maraca.level", 1) 
  itune = xchan("Maraca.tune", 0)
  ioct = octave:i(itune)

  idur  = 0.07*idur       ;DURATION 3
  p3  limit idur,0.1,10       ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)
  iHPF  limit 6000*ioct,20,sr/2 ;HIGHPASS FILTER FREQUENCY  
  iLPF  limit 12000*ioct,20,sr/3  ;LOWPASS FILTER FREQUENCY. (LIMIT MAXIMUM TO PREVENT OUT OF RANGE VALUES)
  ;AMPLITUDE ENVELOPE
  iBP1  = 0.4         ;BREAK-POINT 1
  iDur1 = 0.014*idur      ;DURATION 1
  iBP2  = 1         ;BREAKPOINT 2
  iDur2 = 0.01 *idur      ;DURATION 2
  iBP3  = 0.05          ;BREAKPOINT 3
  p3  limit idur,0.1,10       ;LIMIT THE MINIMUM DURATION OF THE NOTE (VERY SHORT NOTES CAN RESULT IN THE INDICATOR LIGHT ON-OFF NOTE BEING TO0 SHORT)
  aenv  expsega iBP1,iDur1,iBP2,iDur2,iBP3    ;CREATE AMPLITUDE ENVELOPE
  anoise  noise 0.75,0          ;CREATE A NOISE SIGNAL
  anoise  buthp anoise,iHPF       ;HIGHPASS FILTER THE SOUND
  anoise  butlp anoise,iLPF       ;LOWPASS FILTER THE SOUND
  anoise  = anoise*aenv*p5*ilevel ;SCALE THE AMPLITUDE

  pan_verb_mix(anoise, xchan:k("Maraca.pan", 0.5), xchan:k("Maraca.rvb", chnget:i("drums.rvb.default")))
endin

/** High Conga - From Iain McCurdy's TR-808.csd */
instr HiConga ;HIGH CONGA
  idur = xchan("HiConga.decay", 1.0)  
  ilevel = xchan("HiConga.level", 1) 
  itune = xchan("HiConga.tune", 0)
  ioct = octave:i(itune)

  ifrq    = 420*ioct    ;FREQUENCY OF NOTE
  p3    = 0.22*idur     ;DURATION OF NOTE
  aenv  transeg 0.7,1/ifrq,1,1,p3,-6,0.001  ;AMPLITUDE ENVELOPE
  afrq  expsega ifrq*3,0.25/ifrq,ifrq,1,ifrq  ;FREQUENCY ENVELOPE (CREATE A SHARPER ATTACK)
  asig  oscili  -aenv*0.25,afrq,gi_808_sine   ;CREATE THE AUDIO OSCILLATOR
  asig  = asig*p5*ilevel  ;SCALE THE AMPLITUDE
  
  pan_verb_mix(asig, xchan:k("HiConga.pan", 0.5), xchan:k("HiConga.rvb", chnget:i("drums.rvb.default")))
endin

/** Mid Conga - From Iain McCurdy's TR-808.csd */
instr MidConga  ;MID CONGA
  idur = xchan("MidConga.decay", 1.0) 
  ilevel = xchan("MidConga.level", 1) 
  itune = xchan("MidConga.tune", 0)
  ioct = octave:i(itune)

  ifrq    = 310*ioct    ;FREQUENCY OF NOTE
  p3    = 0.33*idur     ;DURATION OF NOTE
  aenv  transeg 0.7,1/ifrq,1,1,p3,-6,0.001  ;AMPLITUDE ENVELOPE 
  afrq  expsega ifrq*3,0.25/ifrq,ifrq,1,ifrq  ;FREQUENCY ENVELOPE (CREATE A SHARPER ATTACK)
  asig  oscili  -aenv*0.25,afrq,gi_808_sine   ;CREATE THE AUDIO OSCILLATOR
  asig  = asig*p5*ilevel    ;SCALE THE AMPLITUDE

  pan_verb_mix(asig, xchan:k("MidConga.pan", 0.5), xchan:k("MidConga.rvb", chnget:i("drums.rvb.default")))
endin

/** Low Conga - From Iain McCurdy's TR-808.csd */
instr LowConga  ;LOW CONGA
  idur = xchan("LowConga.decay", 1.0) 
  ilevel = xchan("LowConga.level", 1) 
  itune = xchan("LowConga.tune", 0)
  ioct = octave:i(itune)

  ifrq    = 227*ioct    ;FREQUENCY OF NOTE
  p3    = 0.41*idur     ;DURATION OF NOTE   
  aenv  transeg 0.7,1/ifrq,1,1,p3,-6,0.001  ;AMPLITUDE ENVELOPE 
  afrq  expsega ifrq*3,0.25/ifrq,ifrq,1,ifrq  ;FREQUENCY ENVELOPE (CREATE A SHARPER ATTACK)
  asig  oscili  -aenv*0.25,afrq,gi_808_sine   ;CREATE THE AUDIO OSCILLATOR
  asig  = asig*p5*ilevel  ;SCALE THE AMPLITUDE

  pan_verb_mix(asig, xchan:k("LowConga.pan", 0.5), xchan:k("LowConga.rvb", chnget:i("drums.rvb.default")))
endin

;; INITIALIZATION OF SYSTEM

start("Clock")
`,my=async t=>{!t||(await t.stop(),await t.reset(),await t.setOption("-m0"),await t.setOption("-odac"),await t.setOption("-+msg_color=false"),await t.setOption("--daemon"),await t.compileOrc(`ksmps=32
0dbfs=1
nchnls=2
nchnls_i=1
`+m4),await t.start())},g4=()=>{const t="https://github.com/kunstmusik/csound-live-code/blob/master/doc/intro.md";window.open(t)},v4=(t,e)=>{const n=t.toLowerCase().endsWith(".orc")?t:t+".orc",r=new Blob([e],{type:"text/plain;charset=utf-8"});SE.exports.saveAs(r,n)};let E0=[[/^\s*instr/,"instr"],[/^\s*endin/,"endin"],[/^\s*opcode/,"opcode"],[/^\s*endop/,"endop"]];const b4=t=>{for(let e=0;e<E0.length;e++)if(t.match(E0[e][0])!=null)return E0[e][1];return null},V5=(t,e,n,r)=>{const i=t.state.doc;for(let o=e;o!=r;o+=n){let s=b4(i.line(o).text);if(s!=null)return[o,s]}return null},y4=t=>{const e=t.state,n=e.selection,r=e.doc;let{from:i,to:o}=n.main,s=e.sliceDoc(i,o);if(i===o){let a=V5(t,r.lineAt(i).number,-1,0),l=V5(t,r.lineAt(i).number,1,r.lines+1);if(a!=null&&l!=null&&(a[1]==="instr"&&l[1]==="endin"||a[1]==="opcode"&&l[1]==="endop"))i=r.line(a[0]).from,o=r.line(l[0]).to,s=e.sliceDoc(i,o);else{const c=r.lineAt(i);i=c.from,o=c.to,s=c.text}}return{text:s,from:i,to:o}},kE=se.define(),wE=se.define(),x4=(t,e,n)=>{const r=F.mark({class:n});t.dispatch({effects:kE.of([r.range(e.from,e.to)])}),setTimeout(()=>{t.dispatch({effects:wE.of((i,o)=>o<=e.from||i>=e.to)})},250)},S4=kt.define({create(){return F.none},update(t,e){t=t.map(e.changes);for(let n of e.effects)n.is(kE)?t=t.update({add:n.value,sort:!0}):n.is(wE)&&(t=t.update({filter:n.value}));return t},provide:t=>K.decorations.from(t)});let zp=5;const L5=t=>{const e=`hexplay("8",
      "Sub5", p3,
      in_scale(-1, 0),
      fade_in(`+zp+`, 128) * ampdbfs(-12))
`;zp+=1;const n=t.state.selection.main;return t.dispatch({changes:{from:n.from,to:n.to,insert:e}}),!0},X5=t=>{const e=`euclidplay(13, 32,
      "Sub5", p3,
      in_scale(-1, 0),
      fade_in(`+zp+`, 128) * ampdbfs(-12))
`;zp+=1;const n=t.state.selection.main;return t.dispatch({changes:{from:n.from,to:n.to,insert:e}}),!0},xf=t=>e=>{let n=y4(e);return t.compileOrc(n.text),x4(e,n,"CodeMirror-highlight"),!0},k4=t=>{const e={"Ctrl-e":xf(t),"Cmd-e":xf(t),"Ctrl-Enter":xf(t),"Cmd-Enter":xf(t),"Ctrl-h":L5,"Cmd-h":L5,"Ctrl-j":X5,"Cmd-j":X5,"Ctrl-;":wc,"Cmd-;":wc,"Ctrl-Alt-c":wc,"Cmd-Alt-c":wc};return Object.keys(e).map(r=>{const i=e[r];return{key:r,mac:r,run:i,preventDefault:!0}})};var Ep=Boolean(globalThis==null?void 0:globalThis.document)?S.exports.useLayoutEffect:S.exports.useEffect,Wx=S.exports.createContext({});Wx.displayName="ColorModeContext";function Yx(){const t=S.exports.useContext(Wx);if(t===void 0)throw new Error("useColorMode must be used within a ColorModeProvider");return t}var Sf={light:"chakra-ui-light",dark:"chakra-ui-dark"};function w4(t={}){const{preventTransition:e=!0}=t,n={setDataset:r=>{const i=e?n.preventTransition():void 0;document.documentElement.dataset.theme=r,document.documentElement.style.colorScheme=r,i==null||i()},setClassName(r){document.body.classList.add(r?Sf.dark:Sf.light),document.body.classList.remove(r?Sf.light:Sf.dark)},query(){return window.matchMedia("(prefers-color-scheme: dark)")},getSystemTheme(r){var o;return((o=n.query().matches)!=null?o:r==="dark")?"dark":"light"},addListener(r){const i=n.query(),o=s=>{r(s.matches?"dark":"light")};return typeof i.addListener=="function"?i.addListener(o):i.addEventListener("change",o),()=>{typeof i.removeListener=="function"?i.removeListener(o):i.removeEventListener("change",o)}},preventTransition(){const r=document.createElement("style");return r.appendChild(document.createTextNode("*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")),document.head.appendChild(r),()=>{window.getComputedStyle(document.body),requestAnimationFrame(()=>{requestAnimationFrame(()=>{document.head.removeChild(r)})})}}};return n}var O4="chakra-ui-color-mode";function OE(t){return{ssr:!1,type:"localStorage",get(e){if(!(globalThis!=null&&globalThis.document))return e;let n;try{n=localStorage.getItem(t)||e}catch{}return n||e},set(e){try{localStorage.setItem(t,e)}catch{}}}}var T4=OE(O4),B5=()=>{};function A5(t,e){return t.type==="cookie"&&t.ssr?t.get(e):e}function TE(t){const{value:e,children:n,options:{useSystemColorMode:r,initialColorMode:i,disableTransitionOnChange:o}={},colorModeManager:s=T4}=t,a=i==="dark"?"dark":"light",[l,c]=S.exports.useState(()=>A5(s,a)),[u,d]=S.exports.useState(()=>A5(s)),{getSystemTheme:f,setClassName:h,setDataset:p,addListener:m}=S.exports.useMemo(()=>w4({preventTransition:o}),[o]),b=i==="system"&&!l?u:l,g=S.exports.useCallback(x=>{const k=x==="system"?f():x;c(k),h(k==="dark"),p(k),s.set(k)},[s,f,h,p]);Ep(()=>{i==="system"&&d(f())},[]),S.exports.useEffect(()=>{const x=s.get();if(x){g(x);return}if(i==="system"){g("system");return}g(a)},[s,a,i,g]);const v=S.exports.useCallback(()=>{g(b==="dark"?"light":"dark")},[b,g]);S.exports.useEffect(()=>{if(!!r)return m(g)},[r,m,g]);const y=S.exports.useMemo(()=>({colorMode:e!=null?e:b,toggleColorMode:e?B5:v,setColorMode:e?B5:g,forced:e!==void 0}),[b,v,g,e]);return z(Wx.Provider,{value:y,children:n})}TE.displayName="ColorModeProvider";var gy={exports:{}};(function(t,e){var n=200,r="__lodash_hash_undefined__",i=800,o=16,s=9007199254740991,a="[object Arguments]",l="[object Array]",c="[object AsyncFunction]",u="[object Boolean]",d="[object Date]",f="[object Error]",h="[object Function]",p="[object GeneratorFunction]",m="[object Map]",b="[object Number]",g="[object Null]",v="[object Object]",y="[object Proxy]",x="[object RegExp]",k="[object Set]",O="[object String]",T="[object Undefined]",M="[object WeakMap]",E="[object ArrayBuffer]",I="[object DataView]",B="[object Float32Array]",D="[object Float64Array]",J="[object Int8Array]",ae="[object Int16Array]",oe="[object Int32Array]",Y="[object Uint8Array]",ee="[object Uint8ClampedArray]",L="[object Uint16Array]",W="[object Uint32Array]",q=/[\\^$.*+?()[\]{}|]/g,le=/^\[object .+?Constructor\]$/,ue=/^(?:0|[1-9]\d*)$/,re={};re[B]=re[D]=re[J]=re[ae]=re[oe]=re[Y]=re[ee]=re[L]=re[W]=!0,re[a]=re[l]=re[E]=re[u]=re[I]=re[d]=re[f]=re[h]=re[m]=re[b]=re[v]=re[x]=re[k]=re[O]=re[M]=!1;var Ce=typeof pi=="object"&&pi&&pi.Object===Object&&pi,Re=typeof self=="object"&&self&&self.Object===Object&&self,We=Ce||Re||Function("return this")(),De=e&&!e.nodeType&&e,rt=De&&!0&&t&&!t.nodeType&&t,Bn=rt&&rt.exports===De,Or=Bn&&Ce.process,Li=function(){try{var w=rt&&rt.require&&rt.require("util").types;return w||Or&&Or.binding&&Or.binding("util")}catch{}}(),Ue=Li&&Li.isTypedArray;function Tr(w,P,N){switch(N.length){case 0:return w.call(P);case 1:return w.call(P,N[0]);case 2:return w.call(P,N[0],N[1]);case 3:return w.call(P,N[0],N[1],N[2])}return w.apply(P,N)}function $s(w,P){for(var N=-1,H=Array(w);++N<w;)H[N]=P(N);return H}function Fl(w){return function(P){return w(P)}}function Td(w,P){return w==null?void 0:w[P]}function Pd(w,P){return function(N){return w(P(N))}}var Sg=Array.prototype,kg=Function.prototype,An=Object.prototype,Xi=We["__core-js_shared__"],Zo=kg.toString,Zn=An.hasOwnProperty,ea=function(){var w=/[^.]+$/.exec(Xi&&Xi.keys&&Xi.keys.IE_PROTO||"");return w?"Symbol(src)_1."+w:""}(),Hl=An.toString,Cd=Zo.call(Object),Md=RegExp("^"+Zo.call(Zn).replace(q,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Go=Bn?We.Buffer:void 0,sk=We.Symbol,ak=We.Uint8Array,lk=Go?Go.allocUnsafe:void 0,ck=Pd(Object.getPrototypeOf,Object),uk=Object.create,RL=An.propertyIsEnumerable,IL=Sg.splice,Wo=sk?sk.toStringTag:void 0,Rd=function(){try{var w=Tg(Object,"defineProperty");return w({},"",{}),w}catch{}}(),zL=Go?Go.isBuffer:void 0,dk=Math.max,EL=Date.now,fk=Tg(We,"Map"),jl=Tg(Object,"create"),NL=function(){function w(){}return function(P){if(!Fo(P))return{};if(uk)return uk(P);w.prototype=P;var N=new w;return w.prototype=void 0,N}}();function Yo(w){var P=-1,N=w==null?0:w.length;for(this.clear();++P<N;){var H=w[P];this.set(H[0],H[1])}}function VL(){this.__data__=jl?jl(null):{},this.size=0}function LL(w){var P=this.has(w)&&delete this.__data__[w];return this.size-=P?1:0,P}function XL(w){var P=this.__data__;if(jl){var N=P[w];return N===r?void 0:N}return Zn.call(P,w)?P[w]:void 0}function BL(w){var P=this.__data__;return jl?P[w]!==void 0:Zn.call(P,w)}function AL(w,P){var N=this.__data__;return this.size+=this.has(w)?0:1,N[w]=jl&&P===void 0?r:P,this}Yo.prototype.clear=VL,Yo.prototype.delete=LL,Yo.prototype.get=XL,Yo.prototype.has=BL,Yo.prototype.set=AL;function si(w){var P=-1,N=w==null?0:w.length;for(this.clear();++P<N;){var H=w[P];this.set(H[0],H[1])}}function ZL(){this.__data__=[],this.size=0}function GL(w){var P=this.__data__,N=Id(P,w);if(N<0)return!1;var H=P.length-1;return N==H?P.pop():IL.call(P,N,1),--this.size,!0}function WL(w){var P=this.__data__,N=Id(P,w);return N<0?void 0:P[N][1]}function YL(w){return Id(this.__data__,w)>-1}function FL(w,P){var N=this.__data__,H=Id(N,w);return H<0?(++this.size,N.push([w,P])):N[H][1]=P,this}si.prototype.clear=ZL,si.prototype.delete=GL,si.prototype.get=WL,si.prototype.has=YL,si.prototype.set=FL;function ta(w){var P=-1,N=w==null?0:w.length;for(this.clear();++P<N;){var H=w[P];this.set(H[0],H[1])}}function HL(){this.size=0,this.__data__={hash:new Yo,map:new(fk||si),string:new Yo}}function jL(w){var P=Ed(this,w).delete(w);return this.size-=P?1:0,P}function DL(w){return Ed(this,w).get(w)}function UL(w){return Ed(this,w).has(w)}function KL(w,P){var N=Ed(this,w),H=N.size;return N.set(w,P),this.size+=N.size==H?0:1,this}ta.prototype.clear=HL,ta.prototype.delete=jL,ta.prototype.get=DL,ta.prototype.has=UL,ta.prototype.set=KL;function na(w){var P=this.__data__=new si(w);this.size=P.size}function qL(){this.__data__=new si,this.size=0}function QL(w){var P=this.__data__,N=P.delete(w);return this.size=P.size,N}function JL(w){return this.__data__.get(w)}function _L(w){return this.__data__.has(w)}function $L(w,P){var N=this.__data__;if(N instanceof si){var H=N.__data__;if(!fk||H.length<n-1)return H.push([w,P]),this.size=++N.size,this;N=this.__data__=new ta(H)}return N.set(w,P),this.size=N.size,this}na.prototype.clear=qL,na.prototype.delete=QL,na.prototype.get=JL,na.prototype.has=_L,na.prototype.set=$L;function eX(w,P){var N=Mg(w),H=!N&&Cg(w),me=!N&&!H&&vk(w),Ie=!N&&!H&&!me&&yk(w),Ye=N||H||me||Ie,he=Ye?$s(w.length,String):[],Fe=he.length;for(var Gn in w)(P||Zn.call(w,Gn))&&!(Ye&&(Gn=="length"||me&&(Gn=="offset"||Gn=="parent")||Ie&&(Gn=="buffer"||Gn=="byteLength"||Gn=="byteOffset")||mk(Gn,Fe)))&&he.push(Gn);return he}function wg(w,P,N){(N!==void 0&&!Nd(w[P],N)||N===void 0&&!(P in w))&&Og(w,P,N)}function tX(w,P,N){var H=w[P];(!(Zn.call(w,P)&&Nd(H,N))||N===void 0&&!(P in w))&&Og(w,P,N)}function Id(w,P){for(var N=w.length;N--;)if(Nd(w[N][0],P))return N;return-1}function Og(w,P,N){P=="__proto__"&&Rd?Rd(w,P,{configurable:!0,enumerable:!0,value:N,writable:!0}):w[P]=N}var nX=mX();function zd(w){return w==null?w===void 0?T:g:Wo&&Wo in Object(w)?gX(w):kX(w)}function hk(w){return Dl(w)&&zd(w)==a}function rX(w){if(!Fo(w)||xX(w))return!1;var P=Ig(w)?Md:le;return P.test(PX(w))}function iX(w){return Dl(w)&&bk(w.length)&&!!re[zd(w)]}function oX(w){if(!Fo(w))return SX(w);var P=gk(w),N=[];for(var H in w)H=="constructor"&&(P||!Zn.call(w,H))||N.push(H);return N}function pk(w,P,N,H,me){w!==P&&nX(P,function(Ie,Ye){if(me||(me=new na),Fo(Ie))sX(w,P,Ye,N,pk,H,me);else{var he=H?H(Pg(w,Ye),Ie,Ye+"",w,P,me):void 0;he===void 0&&(he=Ie),wg(w,Ye,he)}},xk)}function sX(w,P,N,H,me,Ie,Ye){var he=Pg(w,N),Fe=Pg(P,N),Gn=Ye.get(Fe);if(Gn){wg(w,N,Gn);return}var vn=Ie?Ie(he,Fe,N+"",w,P,Ye):void 0,Ul=vn===void 0;if(Ul){var zg=Mg(Fe),Eg=!zg&&vk(Fe),kk=!zg&&!Eg&&yk(Fe);vn=Fe,zg||Eg||kk?Mg(he)?vn=he:CX(he)?vn=fX(he):Eg?(Ul=!1,vn=cX(Fe,!0)):kk?(Ul=!1,vn=dX(Fe,!0)):vn=[]:MX(Fe)||Cg(Fe)?(vn=he,Cg(he)?vn=RX(he):(!Fo(he)||Ig(he))&&(vn=vX(Fe))):Ul=!1}Ul&&(Ye.set(Fe,vn),me(vn,Fe,H,Ie,Ye),Ye.delete(Fe)),wg(w,N,vn)}function aX(w,P){return OX(wX(w,P,Sk),w+"")}var lX=Rd?function(w,P){return Rd(w,"toString",{configurable:!0,enumerable:!1,value:zX(P),writable:!0})}:Sk;function cX(w,P){if(P)return w.slice();var N=w.length,H=lk?lk(N):new w.constructor(N);return w.copy(H),H}function uX(w){var P=new w.constructor(w.byteLength);return new ak(P).set(new ak(w)),P}function dX(w,P){var N=P?uX(w.buffer):w.buffer;return new w.constructor(N,w.byteOffset,w.length)}function fX(w,P){var N=-1,H=w.length;for(P||(P=Array(H));++N<H;)P[N]=w[N];return P}function hX(w,P,N,H){var me=!N;N||(N={});for(var Ie=-1,Ye=P.length;++Ie<Ye;){var he=P[Ie],Fe=H?H(N[he],w[he],he,N,w):void 0;Fe===void 0&&(Fe=w[he]),me?Og(N,he,Fe):tX(N,he,Fe)}return N}function pX(w){return aX(function(P,N){var H=-1,me=N.length,Ie=me>1?N[me-1]:void 0,Ye=me>2?N[2]:void 0;for(Ie=w.length>3&&typeof Ie=="function"?(me--,Ie):void 0,Ye&&bX(N[0],N[1],Ye)&&(Ie=me<3?void 0:Ie,me=1),P=Object(P);++H<me;){var he=N[H];he&&w(P,he,H,Ie)}return P})}function mX(w){return function(P,N,H){for(var me=-1,Ie=Object(P),Ye=H(P),he=Ye.length;he--;){var Fe=Ye[w?he:++me];if(N(Ie[Fe],Fe,Ie)===!1)break}return P}}function Ed(w,P){var N=w.__data__;return yX(P)?N[typeof P=="string"?"string":"hash"]:N.map}function Tg(w,P){var N=Td(w,P);return rX(N)?N:void 0}function gX(w){var P=Zn.call(w,Wo),N=w[Wo];try{w[Wo]=void 0;var H=!0}catch{}var me=Hl.call(w);return H&&(P?w[Wo]=N:delete w[Wo]),me}function vX(w){return typeof w.constructor=="function"&&!gk(w)?NL(ck(w)):{}}function mk(w,P){var N=typeof w;return P=P==null?s:P,!!P&&(N=="number"||N!="symbol"&&ue.test(w))&&w>-1&&w%1==0&&w<P}function bX(w,P,N){if(!Fo(N))return!1;var H=typeof P;return(H=="number"?Rg(N)&&mk(P,N.length):H=="string"&&P in N)?Nd(N[P],w):!1}function yX(w){var P=typeof w;return P=="string"||P=="number"||P=="symbol"||P=="boolean"?w!=="__proto__":w===null}function xX(w){return!!ea&&ea in w}function gk(w){var P=w&&w.constructor,N=typeof P=="function"&&P.prototype||An;return w===N}function SX(w){var P=[];if(w!=null)for(var N in Object(w))P.push(N);return P}function kX(w){return Hl.call(w)}function wX(w,P,N){return P=dk(P===void 0?w.length-1:P,0),function(){for(var H=arguments,me=-1,Ie=dk(H.length-P,0),Ye=Array(Ie);++me<Ie;)Ye[me]=H[P+me];me=-1;for(var he=Array(P+1);++me<P;)he[me]=H[me];return he[P]=N(Ye),Tr(w,this,he)}}function Pg(w,P){if(!(P==="constructor"&&typeof w[P]=="function")&&P!="__proto__")return w[P]}var OX=TX(lX);function TX(w){var P=0,N=0;return function(){var H=EL(),me=o-(H-N);if(N=H,me>0){if(++P>=i)return arguments[0]}else P=0;return w.apply(void 0,arguments)}}function PX(w){if(w!=null){try{return Zo.call(w)}catch{}try{return w+""}catch{}}return""}function Nd(w,P){return w===P||w!==w&&P!==P}var Cg=hk(function(){return arguments}())?hk:function(w){return Dl(w)&&Zn.call(w,"callee")&&!RL.call(w,"callee")},Mg=Array.isArray;function Rg(w){return w!=null&&bk(w.length)&&!Ig(w)}function CX(w){return Dl(w)&&Rg(w)}var vk=zL||EX;function Ig(w){if(!Fo(w))return!1;var P=zd(w);return P==h||P==p||P==c||P==y}function bk(w){return typeof w=="number"&&w>-1&&w%1==0&&w<=s}function Fo(w){var P=typeof w;return w!=null&&(P=="object"||P=="function")}function Dl(w){return w!=null&&typeof w=="object"}function MX(w){if(!Dl(w)||zd(w)!=v)return!1;var P=ck(w);if(P===null)return!0;var N=Zn.call(P,"constructor")&&P.constructor;return typeof N=="function"&&N instanceof N&&Zo.call(N)==Cd}var yk=Ue?Fl(Ue):iX;function RX(w){return hX(w,xk(w))}function xk(w){return Rg(w)?eX(w,!0):oX(w)}var IX=pX(function(w,P,N,H){pk(w,P,N,H)});function zX(w){return function(){return w}}function Sk(w){return w}function EX(){return!1}t.exports=IX})(gy,gy.exports);const qn=gy.exports;function br(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}function hs(t,...e){return P4(t)?t(...e):t}var P4=t=>typeof t=="function",C4=t=>/!(important)?$/.test(t),Z5=t=>typeof t=="string"?t.replace(/!(important)?$/,"").trim():t,vy=(t,e)=>n=>{const r=String(e),i=C4(r),o=Z5(r),s=t?`${t}.${o}`:o;let a=br(n.__cssMap)&&s in n.__cssMap?n.__cssMap[s].varRef:e;return a=Z5(a),i?`${a} !important`:a};function Zu(t){const{scale:e,transform:n,compose:r}=t;return(o,s)=>{var c;const a=vy(e,o)(s);let l=(c=n==null?void 0:n(a,s))!=null?c:a;return r&&(l=r(l,s)),l}}var kf=(...t)=>e=>t.reduce((n,r)=>r(n),e);function sr(t,e){return n=>{const r={property:n,scale:t};return r.transform=Zu({scale:t,transform:e}),r}}var M4=({rtl:t,ltr:e})=>n=>n.direction==="rtl"?t:e;function R4(t){const{property:e,scale:n,transform:r}=t;return{scale:n,property:M4(e),transform:n?Zu({scale:n,compose:r}):r}}var PE=["rotate(var(--chakra-rotate, 0))","scaleX(var(--chakra-scale-x, 1))","scaleY(var(--chakra-scale-y, 1))","skewX(var(--chakra-skew-x, 0))","skewY(var(--chakra-skew-y, 0))"];function I4(){return["translateX(var(--chakra-translate-x, 0))","translateY(var(--chakra-translate-y, 0))",...PE].join(" ")}function z4(){return["translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)",...PE].join(" ")}var E4={"--chakra-blur":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-brightness":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-contrast":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-grayscale":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-hue-rotate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-invert":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-saturate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-sepia":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-drop-shadow":"var(--chakra-empty,/*!*/ /*!*/)",filter:["var(--chakra-blur)","var(--chakra-brightness)","var(--chakra-contrast)","var(--chakra-grayscale)","var(--chakra-hue-rotate)","var(--chakra-invert)","var(--chakra-saturate)","var(--chakra-sepia)","var(--chakra-drop-shadow)"].join(" ")},N4={backdropFilter:["var(--chakra-backdrop-blur)","var(--chakra-backdrop-brightness)","var(--chakra-backdrop-contrast)","var(--chakra-backdrop-grayscale)","var(--chakra-backdrop-hue-rotate)","var(--chakra-backdrop-invert)","var(--chakra-backdrop-opacity)","var(--chakra-backdrop-saturate)","var(--chakra-backdrop-sepia)"].join(" "),"--chakra-backdrop-blur":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-brightness":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-contrast":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-grayscale":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-hue-rotate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-invert":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-opacity":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-saturate":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-backdrop-sepia":"var(--chakra-empty,/*!*/ /*!*/)"};function V4(t){return{"--chakra-ring-offset-shadow":"var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)","--chakra-ring-shadow":"var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)","--chakra-ring-width":t,boxShadow:["var(--chakra-ring-offset-shadow)","var(--chakra-ring-shadow)","var(--chakra-shadow, 0 0 #0000)"].join(", ")}}var L4={"row-reverse":{space:"--chakra-space-x-reverse",divide:"--chakra-divide-x-reverse"},"column-reverse":{space:"--chakra-space-y-reverse",divide:"--chakra-divide-y-reverse"}},CE="& > :not(style) ~ :not(style)",X4={[CE]:{marginInlineStart:"calc(var(--chakra-space-x) * calc(1 - var(--chakra-space-x-reverse)))",marginInlineEnd:"calc(var(--chakra-space-x) * var(--chakra-space-x-reverse))"}},B4={[CE]:{marginTop:"calc(var(--chakra-space-y) * calc(1 - var(--chakra-space-y-reverse)))",marginBottom:"calc(var(--chakra-space-y) * var(--chakra-space-y-reverse))"}},by={"to-t":"to top","to-tr":"to top right","to-r":"to right","to-br":"to bottom right","to-b":"to bottom","to-bl":"to bottom left","to-l":"to left","to-tl":"to top left"},A4=new Set(Object.values(by)),ME=new Set(["none","-moz-initial","inherit","initial","revert","unset"]),Z4=t=>t.trim();function G4(t,e){var d;var n;if(t==null||ME.has(t))return t;const r=/(?<type>^[a-z-A-Z]+)\((?<values>(.*))\)/g,{type:i,values:o}=(d=(n=r.exec(t))==null?void 0:n.groups)!=null?d:{};if(!i||!o)return t;const s=i.includes("-gradient")?i:`${i}-gradient`,[a,...l]=o.split(",").map(Z4).filter(Boolean);if((l==null?void 0:l.length)===0)return t;const c=a in by?by[a]:a;l.unshift(c);const u=l.map(f=>{if(A4.has(f))return f;const h=f.indexOf(" "),[p,m]=h!==-1?[f.substr(0,h),f.substr(h+1)]:[f],b=RE(m)?m:m&&m.split(" "),g=`colors.${p}`,v=g in e.__cssMap?e.__cssMap[g].varRef:p;return b?[v,...Array.isArray(b)?b:[b]].join(" "):v});return`${s}(${u.join(", ")})`}var RE=t=>typeof t=="string"&&t.includes("(")&&t.includes(")"),W4=(t,e)=>G4(t,e!=null?e:{});function Y4(t){return/^var\(--.+\)$/.test(t)}var F4=t=>{const e=parseFloat(t.toString()),n=t.toString().replace(String(e),"");return{unitless:!n,value:e,unit:n}},Ir=t=>e=>`${t}(${e})`,ge={filter(t){return t!=="auto"?t:E4},backdropFilter(t){return t!=="auto"?t:N4},ring(t){return V4(ge.px(t))},bgClip(t){return t==="text"?{color:"transparent",backgroundClip:"text"}:{backgroundClip:t}},transform(t){return t==="auto"?I4():t==="auto-gpu"?z4():t},vh(t){return t==="$100vh"?"var(--chakra-vh)":t},px(t){if(t==null)return t;const{unitless:e}=F4(t);return e||typeof t=="number"?`${t}px`:t},fraction(t){return typeof t!="number"||t>1?t:`${t*100}%`},float(t,e){const n={left:"right",right:"left"};return e.direction==="rtl"?n[t]:t},degree(t){if(Y4(t)||t==null)return t;const e=typeof t=="string"&&!t.endsWith("deg");return typeof t=="number"||e?`${t}deg`:t},gradient:W4,blur:Ir("blur"),opacity:Ir("opacity"),brightness:Ir("brightness"),contrast:Ir("contrast"),dropShadow:Ir("drop-shadow"),grayscale:Ir("grayscale"),hueRotate:Ir("hue-rotate"),invert:Ir("invert"),saturate:Ir("saturate"),sepia:Ir("sepia"),bgImage(t){return t==null||RE(t)||ME.has(t)?t:`url(${t})`},outline(t){const e=String(t)==="0"||String(t)==="none";return t!==null&&e?{outline:"2px solid transparent",outlineOffset:"2px"}:{outline:t}},flexDirection(t){var i;const{space:e,divide:n}=(i=L4[t])!=null?i:{},r={flexDirection:t};return e&&(r[e]=1),n&&(r[n]=1),r}},C={borderWidths:sr("borderWidths"),borderStyles:sr("borderStyles"),colors:sr("colors"),borders:sr("borders"),radii:sr("radii",ge.px),space:sr("space",kf(ge.vh,ge.px)),spaceT:sr("space",kf(ge.vh,ge.px)),degreeT(t){return{property:t,transform:ge.degree}},prop(t,e,n){return{property:t,scale:e,...e&&{transform:Zu({scale:e,transform:n})}}},propT(t,e){return{property:t,transform:e}},sizes:sr("sizes",kf(ge.vh,ge.px)),sizesT:sr("sizes",kf(ge.vh,ge.fraction)),shadows:sr("shadows"),logical:R4,blur:sr("blur",ge.blur)},ph={background:C.colors("background"),backgroundColor:C.colors("backgroundColor"),backgroundImage:C.propT("backgroundImage",ge.bgImage),backgroundSize:!0,backgroundPosition:!0,backgroundRepeat:!0,backgroundAttachment:!0,backgroundClip:{transform:ge.bgClip},bgSize:C.prop("backgroundSize"),bgPosition:C.prop("backgroundPosition"),bg:C.colors("background"),bgColor:C.colors("backgroundColor"),bgPos:C.prop("backgroundPosition"),bgRepeat:C.prop("backgroundRepeat"),bgAttachment:C.prop("backgroundAttachment"),bgGradient:C.propT("backgroundImage",ge.gradient),bgClip:{transform:ge.bgClip}};Object.assign(ph,{bgImage:ph.backgroundImage,bgImg:ph.backgroundImage});var be={border:C.borders("border"),borderWidth:C.borderWidths("borderWidth"),borderStyle:C.borderStyles("borderStyle"),borderColor:C.colors("borderColor"),borderRadius:C.radii("borderRadius"),borderTop:C.borders("borderTop"),borderBlockStart:C.borders("borderBlockStart"),borderTopLeftRadius:C.radii("borderTopLeftRadius"),borderStartStartRadius:C.logical({scale:"radii",property:{ltr:"borderTopLeftRadius",rtl:"borderTopRightRadius"}}),borderEndStartRadius:C.logical({scale:"radii",property:{ltr:"borderBottomLeftRadius",rtl:"borderBottomRightRadius"}}),borderTopRightRadius:C.radii("borderTopRightRadius"),borderStartEndRadius:C.logical({scale:"radii",property:{ltr:"borderTopRightRadius",rtl:"borderTopLeftRadius"}}),borderEndEndRadius:C.logical({scale:"radii",property:{ltr:"borderBottomRightRadius",rtl:"borderBottomLeftRadius"}}),borderRight:C.borders("borderRight"),borderInlineEnd:C.borders("borderInlineEnd"),borderBottom:C.borders("borderBottom"),borderBlockEnd:C.borders("borderBlockEnd"),borderBottomLeftRadius:C.radii("borderBottomLeftRadius"),borderBottomRightRadius:C.radii("borderBottomRightRadius"),borderLeft:C.borders("borderLeft"),borderInlineStart:{property:"borderInlineStart",scale:"borders"},borderInlineStartRadius:C.logical({scale:"radii",property:{ltr:["borderTopLeftRadius","borderBottomLeftRadius"],rtl:["borderTopRightRadius","borderBottomRightRadius"]}}),borderInlineEndRadius:C.logical({scale:"radii",property:{ltr:["borderTopRightRadius","borderBottomRightRadius"],rtl:["borderTopLeftRadius","borderBottomLeftRadius"]}}),borderX:C.borders(["borderLeft","borderRight"]),borderInline:C.borders("borderInline"),borderY:C.borders(["borderTop","borderBottom"]),borderBlock:C.borders("borderBlock"),borderTopWidth:C.borderWidths("borderTopWidth"),borderBlockStartWidth:C.borderWidths("borderBlockStartWidth"),borderTopColor:C.colors("borderTopColor"),borderBlockStartColor:C.colors("borderBlockStartColor"),borderTopStyle:C.borderStyles("borderTopStyle"),borderBlockStartStyle:C.borderStyles("borderBlockStartStyle"),borderBottomWidth:C.borderWidths("borderBottomWidth"),borderBlockEndWidth:C.borderWidths("borderBlockEndWidth"),borderBottomColor:C.colors("borderBottomColor"),borderBlockEndColor:C.colors("borderBlockEndColor"),borderBottomStyle:C.borderStyles("borderBottomStyle"),borderBlockEndStyle:C.borderStyles("borderBlockEndStyle"),borderLeftWidth:C.borderWidths("borderLeftWidth"),borderInlineStartWidth:C.borderWidths("borderInlineStartWidth"),borderLeftColor:C.colors("borderLeftColor"),borderInlineStartColor:C.colors("borderInlineStartColor"),borderLeftStyle:C.borderStyles("borderLeftStyle"),borderInlineStartStyle:C.borderStyles("borderInlineStartStyle"),borderRightWidth:C.borderWidths("borderRightWidth"),borderInlineEndWidth:C.borderWidths("borderInlineEndWidth"),borderRightColor:C.colors("borderRightColor"),borderInlineEndColor:C.colors("borderInlineEndColor"),borderRightStyle:C.borderStyles("borderRightStyle"),borderInlineEndStyle:C.borderStyles("borderInlineEndStyle"),borderTopRadius:C.radii(["borderTopLeftRadius","borderTopRightRadius"]),borderBottomRadius:C.radii(["borderBottomLeftRadius","borderBottomRightRadius"]),borderLeftRadius:C.radii(["borderTopLeftRadius","borderBottomLeftRadius"]),borderRightRadius:C.radii(["borderTopRightRadius","borderBottomRightRadius"])};Object.assign(be,{rounded:be.borderRadius,roundedTop:be.borderTopRadius,roundedTopLeft:be.borderTopLeftRadius,roundedTopRight:be.borderTopRightRadius,roundedTopStart:be.borderStartStartRadius,roundedTopEnd:be.borderStartEndRadius,roundedBottom:be.borderBottomRadius,roundedBottomLeft:be.borderBottomLeftRadius,roundedBottomRight:be.borderBottomRightRadius,roundedBottomStart:be.borderEndStartRadius,roundedBottomEnd:be.borderEndEndRadius,roundedLeft:be.borderLeftRadius,roundedRight:be.borderRightRadius,roundedStart:be.borderInlineStartRadius,roundedEnd:be.borderInlineEndRadius,borderStart:be.borderInlineStart,borderEnd:be.borderInlineEnd,borderTopStartRadius:be.borderStartStartRadius,borderTopEndRadius:be.borderStartEndRadius,borderBottomStartRadius:be.borderEndStartRadius,borderBottomEndRadius:be.borderEndEndRadius,borderStartRadius:be.borderInlineStartRadius,borderEndRadius:be.borderInlineEndRadius,borderStartWidth:be.borderInlineStartWidth,borderEndWidth:be.borderInlineEndWidth,borderStartColor:be.borderInlineStartColor,borderEndColor:be.borderInlineEndColor,borderStartStyle:be.borderInlineStartStyle,borderEndStyle:be.borderInlineEndStyle});var H4={color:C.colors("color"),textColor:C.colors("color"),fill:C.colors("fill"),stroke:C.colors("stroke")},yy={boxShadow:C.shadows("boxShadow"),mixBlendMode:!0,blendMode:C.prop("mixBlendMode"),backgroundBlendMode:!0,bgBlendMode:C.prop("backgroundBlendMode"),opacity:!0};Object.assign(yy,{shadow:yy.boxShadow});var j4={filter:{transform:ge.filter},blur:C.blur("--chakra-blur"),brightness:C.propT("--chakra-brightness",ge.brightness),contrast:C.propT("--chakra-contrast",ge.contrast),hueRotate:C.degreeT("--chakra-hue-rotate"),invert:C.propT("--chakra-invert",ge.invert),saturate:C.propT("--chakra-saturate",ge.saturate),dropShadow:C.propT("--chakra-drop-shadow",ge.dropShadow),backdropFilter:{transform:ge.backdropFilter},backdropBlur:C.blur("--chakra-backdrop-blur"),backdropBrightness:C.propT("--chakra-backdrop-brightness",ge.brightness),backdropContrast:C.propT("--chakra-backdrop-contrast",ge.contrast),backdropHueRotate:C.degreeT("--chakra-backdrop-hue-rotate"),backdropInvert:C.propT("--chakra-backdrop-invert",ge.invert),backdropSaturate:C.propT("--chakra-backdrop-saturate",ge.saturate)},Np={alignItems:!0,alignContent:!0,justifyItems:!0,justifyContent:!0,flexWrap:!0,flexDirection:{transform:ge.flexDirection},experimental_spaceX:{static:X4,transform:Zu({scale:"space",transform:t=>t!==null?{"--chakra-space-x":t}:null})},experimental_spaceY:{static:B4,transform:Zu({scale:"space",transform:t=>t!=null?{"--chakra-space-y":t}:null})},flex:!0,flexFlow:!0,flexGrow:!0,flexShrink:!0,flexBasis:C.sizes("flexBasis"),justifySelf:!0,alignSelf:!0,order:!0,placeItems:!0,placeContent:!0,placeSelf:!0,gap:C.space("gap"),rowGap:C.space("rowGap"),columnGap:C.space("columnGap")};Object.assign(Np,{flexDir:Np.flexDirection});var IE={gridGap:C.space("gridGap"),gridColumnGap:C.space("gridColumnGap"),gridRowGap:C.space("gridRowGap"),gridColumn:!0,gridRow:!0,gridAutoFlow:!0,gridAutoColumns:!0,gridColumnStart:!0,gridColumnEnd:!0,gridRowStart:!0,gridRowEnd:!0,gridAutoRows:!0,gridTemplate:!0,gridTemplateColumns:!0,gridTemplateRows:!0,gridTemplateAreas:!0,gridArea:!0},D4={appearance:!0,cursor:!0,resize:!0,userSelect:!0,pointerEvents:!0,outline:{transform:ge.outline},outlineOffset:!0,outlineColor:C.colors("outlineColor")},Wn={width:C.sizesT("width"),inlineSize:C.sizesT("inlineSize"),height:C.sizes("height"),blockSize:C.sizes("blockSize"),boxSize:C.sizes(["width","height"]),minWidth:C.sizes("minWidth"),minInlineSize:C.sizes("minInlineSize"),minHeight:C.sizes("minHeight"),minBlockSize:C.sizes("minBlockSize"),maxWidth:C.sizes("maxWidth"),maxInlineSize:C.sizes("maxInlineSize"),maxHeight:C.sizes("maxHeight"),maxBlockSize:C.sizes("maxBlockSize"),overflow:!0,overflowX:!0,overflowY:!0,overscrollBehavior:!0,overscrollBehaviorX:!0,overscrollBehaviorY:!0,display:!0,verticalAlign:!0,boxSizing:!0,boxDecorationBreak:!0,float:C.propT("float",ge.float),objectFit:!0,objectPosition:!0,visibility:!0,isolation:!0};Object.assign(Wn,{w:Wn.width,h:Wn.height,minW:Wn.minWidth,maxW:Wn.maxWidth,minH:Wn.minHeight,maxH:Wn.maxHeight,overscroll:Wn.overscrollBehavior,overscrollX:Wn.overscrollBehaviorX,overscrollY:Wn.overscrollBehaviorY});var U4={listStyleType:!0,listStylePosition:!0,listStylePos:C.prop("listStylePosition"),listStyleImage:!0,listStyleImg:C.prop("listStyleImage")};function K4(t,e,n,r){const i=typeof e=="string"?e.split("."):[e];for(r=0;r<i.length&&t;r+=1)t=t[i[r]];return t===void 0?n:t}var q4=t=>{const e=new WeakMap;return(r,i,o,s)=>{if(typeof r>"u")return t(r,i,o);e.has(r)||e.set(r,new Map);const a=e.get(r);if(a.has(i))return a.get(i);const l=t(r,i,o,s);return a.set(i,l),l}},Q4=q4(K4),J4={border:"0px",clip:"rect(0, 0, 0, 0)",width:"1px",height:"1px",margin:"-1px",padding:"0px",overflow:"hidden",whiteSpace:"nowrap",position:"absolute"},_4={position:"static",width:"auto",height:"auto",clip:"auto",padding:"0",margin:"0",overflow:"visible",whiteSpace:"normal"},N0=(t,e,n)=>{const r={},i=Q4(t,e,{});for(const o in i)o in n&&n[o]!=null||(r[o]=i[o]);return r},$4={srOnly:{transform(t){return t===!0?J4:t==="focusable"?_4:{}}},layerStyle:{processResult:!0,transform:(t,e,n)=>N0(e,`layerStyles.${t}`,n)},textStyle:{processResult:!0,transform:(t,e,n)=>N0(e,`textStyles.${t}`,n)},apply:{processResult:!0,transform:(t,e,n)=>N0(e,t,n)}},jc={position:!0,pos:C.prop("position"),zIndex:C.prop("zIndex","zIndices"),inset:C.spaceT("inset"),insetX:C.spaceT(["left","right"]),insetInline:C.spaceT("insetInline"),insetY:C.spaceT(["top","bottom"]),insetBlock:C.spaceT("insetBlock"),top:C.spaceT("top"),insetBlockStart:C.spaceT("insetBlockStart"),bottom:C.spaceT("bottom"),insetBlockEnd:C.spaceT("insetBlockEnd"),left:C.spaceT("left"),insetInlineStart:C.logical({scale:"space",property:{ltr:"left",rtl:"right"}}),right:C.spaceT("right"),insetInlineEnd:C.logical({scale:"space",property:{ltr:"right",rtl:"left"}})};Object.assign(jc,{insetStart:jc.insetInlineStart,insetEnd:jc.insetInlineEnd});var eH={ring:{transform:ge.ring},ringColor:C.colors("--chakra-ring-color"),ringOffset:C.prop("--chakra-ring-offset-width"),ringOffsetColor:C.colors("--chakra-ring-offset-color"),ringInset:C.prop("--chakra-ring-inset")},Xe={margin:C.spaceT("margin"),marginTop:C.spaceT("marginTop"),marginBlockStart:C.spaceT("marginBlockStart"),marginRight:C.spaceT("marginRight"),marginInlineEnd:C.spaceT("marginInlineEnd"),marginBottom:C.spaceT("marginBottom"),marginBlockEnd:C.spaceT("marginBlockEnd"),marginLeft:C.spaceT("marginLeft"),marginInlineStart:C.spaceT("marginInlineStart"),marginX:C.spaceT(["marginInlineStart","marginInlineEnd"]),marginInline:C.spaceT("marginInline"),marginY:C.spaceT(["marginTop","marginBottom"]),marginBlock:C.spaceT("marginBlock"),padding:C.space("padding"),paddingTop:C.space("paddingTop"),paddingBlockStart:C.space("paddingBlockStart"),paddingRight:C.space("paddingRight"),paddingBottom:C.space("paddingBottom"),paddingBlockEnd:C.space("paddingBlockEnd"),paddingLeft:C.space("paddingLeft"),paddingInlineStart:C.space("paddingInlineStart"),paddingInlineEnd:C.space("paddingInlineEnd"),paddingX:C.space(["paddingInlineStart","paddingInlineEnd"]),paddingInline:C.space("paddingInline"),paddingY:C.space(["paddingTop","paddingBottom"]),paddingBlock:C.space("paddingBlock")};Object.assign(Xe,{m:Xe.margin,mt:Xe.marginTop,mr:Xe.marginRight,me:Xe.marginInlineEnd,marginEnd:Xe.marginInlineEnd,mb:Xe.marginBottom,ml:Xe.marginLeft,ms:Xe.marginInlineStart,marginStart:Xe.marginInlineStart,mx:Xe.marginX,my:Xe.marginY,p:Xe.padding,pt:Xe.paddingTop,py:Xe.paddingY,px:Xe.paddingX,pb:Xe.paddingBottom,pl:Xe.paddingLeft,ps:Xe.paddingInlineStart,paddingStart:Xe.paddingInlineStart,pr:Xe.paddingRight,pe:Xe.paddingInlineEnd,paddingEnd:Xe.paddingInlineEnd});var tH={textDecorationColor:C.colors("textDecorationColor"),textDecoration:!0,textDecor:{property:"textDecoration"},textDecorationLine:!0,textDecorationStyle:!0,textDecorationThickness:!0,textUnderlineOffset:!0,textShadow:C.shadows("textShadow")},nH={clipPath:!0,transform:C.propT("transform",ge.transform),transformOrigin:!0,translateX:C.spaceT("--chakra-translate-x"),translateY:C.spaceT("--chakra-translate-y"),skewX:C.degreeT("--chakra-skew-x"),skewY:C.degreeT("--chakra-skew-y"),scaleX:C.prop("--chakra-scale-x"),scaleY:C.prop("--chakra-scale-y"),scale:C.prop(["--chakra-scale-x","--chakra-scale-y"]),rotate:C.degreeT("--chakra-rotate")},rH={transition:!0,transitionDelay:!0,animation:!0,willChange:!0,transitionDuration:C.prop("transitionDuration","transition.duration"),transitionProperty:C.prop("transitionProperty","transition.property"),transitionTimingFunction:C.prop("transitionTimingFunction","transition.easing")},iH={fontFamily:C.prop("fontFamily","fonts"),fontSize:C.prop("fontSize","fontSizes",ge.px),fontWeight:C.prop("fontWeight","fontWeights"),lineHeight:C.prop("lineHeight","lineHeights"),letterSpacing:C.prop("letterSpacing","letterSpacings"),textAlign:!0,fontStyle:!0,wordBreak:!0,overflowWrap:!0,textOverflow:!0,textTransform:!0,whiteSpace:!0,noOfLines:{static:{overflow:"hidden",textOverflow:"ellipsis",display:"-webkit-box",WebkitBoxOrient:"vertical",WebkitLineClamp:"var(--chakra-line-clamp)"},property:"--chakra-line-clamp"}},oH={scrollBehavior:!0,scrollSnapAlign:!0,scrollSnapStop:!0,scrollSnapType:!0,scrollMargin:C.spaceT("scrollMargin"),scrollMarginTop:C.spaceT("scrollMarginTop"),scrollMarginBottom:C.spaceT("scrollMarginBottom"),scrollMarginLeft:C.spaceT("scrollMarginLeft"),scrollMarginRight:C.spaceT("scrollMarginRight"),scrollMarginX:C.spaceT(["scrollMarginLeft","scrollMarginRight"]),scrollMarginY:C.spaceT(["scrollMarginTop","scrollMarginBottom"]),scrollPadding:C.spaceT("scrollPadding"),scrollPaddingTop:C.spaceT("scrollPaddingTop"),scrollPaddingBottom:C.spaceT("scrollPaddingBottom"),scrollPaddingLeft:C.spaceT("scrollPaddingLeft"),scrollPaddingRight:C.spaceT("scrollPaddingRight"),scrollPaddingX:C.spaceT(["scrollPaddingLeft","scrollPaddingRight"]),scrollPaddingY:C.spaceT(["scrollPaddingTop","scrollPaddingBottom"])};function zE(t){return br(t)&&t.reference?t.reference:String(t)}var Wm=(t,...e)=>e.map(zE).join(` ${t} `).replace(/calc/g,""),G5=(...t)=>`calc(${Wm("+",...t)})`,W5=(...t)=>`calc(${Wm("-",...t)})`,xy=(...t)=>`calc(${Wm("*",...t)})`,Y5=(...t)=>`calc(${Wm("/",...t)})`,F5=t=>{const e=zE(t);return e!=null&&!Number.isNaN(parseFloat(e))?String(e).startsWith("-")?String(e).slice(1):`-${e}`:xy(e,-1)},is=Object.assign(t=>({add:(...e)=>is(G5(t,...e)),subtract:(...e)=>is(W5(t,...e)),multiply:(...e)=>is(xy(t,...e)),divide:(...e)=>is(Y5(t,...e)),negate:()=>is(F5(t)),toString:()=>t.toString()}),{add:G5,subtract:W5,multiply:xy,divide:Y5,negate:F5});function sH(t,e="-"){return t.replace(/\s+/g,e)}function aH(t){const e=sH(t.toString());return cH(lH(e))}function lH(t){return t.includes("\\.")?t:!Number.isInteger(parseFloat(t.toString()))?t.replace(".","\\."):t}function cH(t){return t.replace(/[!-,/:-@[-^`{-~]/g,"\\$&")}function uH(t,e=""){return[e,t].filter(Boolean).join("-")}function dH(t,e){return`var(${t}${e?`, ${e}`:""})`}function fH(t,e=""){return aH(`--${uH(t,e)}`)}function Me(t,e,n){const r=fH(t,n);return{variable:r,reference:dH(r,e)}}function hH(t){const e=t==null?0:t.length;return e?t[e-1]:void 0}function pH(t){const e=parseFloat(t.toString()),n=t.toString().replace(String(e),"");return{unitless:!n,value:e,unit:n}}function Sy(t){if(t==null)return t;const{unitless:e}=pH(t);return e||typeof t=="number"?`${t}px`:t}var EE=(t,e)=>parseInt(t[1],10)>parseInt(e[1],10)?1:-1,Fx=t=>Object.fromEntries(Object.entries(t).sort(EE));function H5(t){const e=Fx(t);return Object.assign(Object.values(e),e)}function mH(t){const e=Object.keys(Fx(t));return new Set(e)}function j5(t){var n;if(!t)return t;t=(n=Sy(t))!=null?n:t;const e=t.endsWith("px")?-1:-.0625;return typeof t=="number"?`${t+e}`:t.replace(/(\d+\.?\d*)/u,r=>`${parseFloat(r)+e}`)}function Tc(t,e){const n=["@media screen"];return t&&n.push("and",`(min-width: ${Sy(t)})`),e&&n.push("and",`(max-width: ${Sy(e)})`),n.join(" ")}function gH(t){var o;if(!t)return null;t.base=(o=t.base)!=null?o:"0px";const e=H5(t),n=Object.entries(t).sort(EE).map(([s,a],l,c)=>{var d;let[,u]=(d=c[l+1])!=null?d:[];return u=parseFloat(u)>0?j5(u):void 0,{_minW:j5(a),breakpoint:s,minW:a,maxW:u,maxWQuery:Tc(null,u),minWQuery:Tc(a),minMaxQuery:Tc(a,u)}}),r=mH(t),i=Array.from(r.values());return{keys:r,normalized:e,isResponsive(s){const a=Object.keys(s);return a.length>0&&a.every(l=>r.has(l))},asObject:Fx(t),asArray:H5(t),details:n,media:[null,...e.map(s=>Tc(s)).slice(1)],toArrayValue(s){if(!br(s))throw new Error("toArrayValue: value must be an object");const a=i.map(l=>{var c;return(c=s[l])!=null?c:null});for(;hH(a)===null;)a.pop();return a},toObjectValue(s){if(!Array.isArray(s))throw new Error("toObjectValue: value must be an array");return s.reduce((a,l,c)=>{const u=i[c];return u!=null&&l!=null&&(a[u]=l),a},{})}}}var Ot={hover:(t,e)=>`${t}:hover ${e}, ${t}[data-hover] ${e}`,focus:(t,e)=>`${t}:focus ${e}, ${t}[data-focus] ${e}`,focusVisible:(t,e)=>`${t}:focus-visible ${e}`,focusWithin:(t,e)=>`${t}:focus-within ${e}`,active:(t,e)=>`${t}:active ${e}, ${t}[data-active] ${e}`,disabled:(t,e)=>`${t}:disabled ${e}, ${t}[data-disabled] ${e}`,invalid:(t,e)=>`${t}:invalid ${e}, ${t}[data-invalid] ${e}`,checked:(t,e)=>`${t}:checked ${e}, ${t}[data-checked] ${e}`,indeterminate:(t,e)=>`${t}:indeterminate ${e}, ${t}[aria-checked=mixed] ${e}, ${t}[data-indeterminate] ${e}`,readOnly:(t,e)=>`${t}:read-only ${e}, ${t}[readonly] ${e}, ${t}[data-read-only] ${e}`,expanded:(t,e)=>`${t}:read-only ${e}, ${t}[aria-expanded=true] ${e}, ${t}[data-expanded] ${e}`,placeholderShown:(t,e)=>`${t}:placeholder-shown ${e}`},Ai=t=>NE(e=>t(e,"&"),"[role=group]","[data-group]",".group"),ai=t=>NE(e=>t(e,"~ &"),"[data-peer]",".peer"),NE=(t,...e)=>e.map(t).join(", "),Ym={_hover:"&:hover, &[data-hover]",_active:"&:active, &[data-active]",_focus:"&:focus, &[data-focus]",_highlighted:"&[data-highlighted]",_focusWithin:"&:focus-within",_focusVisible:"&:focus-visible, &[data-focus-visible]",_disabled:"&:disabled, &[disabled], &[aria-disabled=true], &[data-disabled]",_readOnly:"&[aria-readonly=true], &[readonly], &[data-readonly]",_before:"&::before",_after:"&::after",_empty:"&:empty",_expanded:"&[aria-expanded=true], &[data-expanded]",_checked:"&[aria-checked=true], &[data-checked]",_grabbed:"&[aria-grabbed=true], &[data-grabbed]",_pressed:"&[aria-pressed=true], &[data-pressed]",_invalid:"&[aria-invalid=true], &[data-invalid]",_valid:"&[data-valid], &[data-state=valid]",_loading:"&[data-loading], &[aria-busy=true]",_selected:"&[aria-selected=true], &[data-selected]",_hidden:"&[hidden], &[data-hidden]",_autofill:"&:-webkit-autofill",_even:"&:nth-of-type(even)",_odd:"&:nth-of-type(odd)",_first:"&:first-of-type",_last:"&:last-of-type",_notFirst:"&:not(:first-of-type)",_notLast:"&:not(:last-of-type)",_visited:"&:visited",_activeLink:"&[aria-current=page]",_activeStep:"&[aria-current=step]",_indeterminate:"&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",_groupHover:Ai(Ot.hover),_peerHover:ai(Ot.hover),_groupFocus:Ai(Ot.focus),_peerFocus:ai(Ot.focus),_groupFocusVisible:Ai(Ot.focusVisible),_peerFocusVisible:ai(Ot.focusVisible),_groupActive:Ai(Ot.active),_peerActive:ai(Ot.active),_groupDisabled:Ai(Ot.disabled),_peerDisabled:ai(Ot.disabled),_groupInvalid:Ai(Ot.invalid),_peerInvalid:ai(Ot.invalid),_groupChecked:Ai(Ot.checked),_peerChecked:ai(Ot.checked),_groupFocusWithin:Ai(Ot.focusWithin),_peerFocusWithin:ai(Ot.focusWithin),_peerPlaceholderShown:ai(Ot.placeholderShown),_placeholder:"&::placeholder",_placeholderShown:"&:placeholder-shown",_fullScreen:"&:fullscreen",_selection:"&::selection",_rtl:"[dir=rtl] &, &[dir=rtl]",_ltr:"[dir=ltr] &, &[dir=ltr]",_mediaDark:"@media (prefers-color-scheme: dark)",_mediaReduceMotion:"@media (prefers-reduced-motion: reduce)",_dark:".chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]",_light:".chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]"},vH=Object.keys(Ym);function D5(t,e){return Me(String(t).replace(/\./g,"-"),void 0,e)}function bH(t,e){let n={};const r={};for(const[i,o]of Object.entries(t)){const{isSemantic:s,value:a}=o,{variable:l,reference:c}=D5(i,e==null?void 0:e.cssVarPrefix);if(!s){if(i.startsWith("space")){const f=i.split("."),[h,...p]=f,m=`${h}.-${p.join(".")}`,b=is.negate(a),g=is.negate(c);r[m]={value:b,var:l,varRef:g}}n[l]=a,r[i]={value:a,var:l,varRef:c};continue}const u=f=>{const p=[String(i).split(".")[0],f].join(".");if(!t[p])return f;const{reference:b}=D5(p,e==null?void 0:e.cssVarPrefix);return b},d=br(a)?a:{default:a};n=qn(n,Object.entries(d).reduce((f,[h,p])=>{var v;var m;const b=u(p);if(h==="default")return f[l]=b,f;const g=(v=(m=Ym)==null?void 0:m[h])!=null?v:h;return f[g]={[l]:b},f},{})),r[i]={value:c,var:l,varRef:c}}return{cssVars:n,cssMap:r}}function yH(t,e=[]){const n=Object.assign({},t);for(const r of e)r in n&&delete n[r];return n}function xH(t,e){const n={};for(const r of e)r in t&&(n[r]=t[r]);return n}var SH=["colors","borders","borderWidths","borderStyles","fonts","fontSizes","fontWeights","letterSpacings","lineHeights","radii","space","shadows","sizes","zIndices","transition","blur"];function kH(t){return xH(t,SH)}function wH(t){return t.semanticTokens}function OH(t){const{__cssMap:e,__cssVars:n,__breakpoints:r,...i}=t;return i}function TH({tokens:t,semanticTokens:e}){var i,o;const n=Object.entries((i=ky(t))!=null?i:{}).map(([s,a])=>[s,{isSemantic:!1,value:a}]),r=Object.entries((o=ky(e,1))!=null?o:{}).map(([s,a])=>[s,{isSemantic:!0,value:a}]);return Object.fromEntries([...n,...r])}function ky(t,e=1/0){return!br(t)&&!Array.isArray(t)||!e?t:Object.entries(t).reduce((n,[r,i])=>(br(i)||Array.isArray(i)?Object.entries(ky(i,e-1)).forEach(([o,s])=>{n[`${r}.${o}`]=s}):n[r]=i,n),{})}function PH(t){var e;const n=OH(t),r=kH(n),i=wH(n),o=TH({tokens:r,semanticTokens:i}),s=(e=n.config)==null?void 0:e.cssVarPrefix,{cssMap:a,cssVars:l}=bH(o,{cssVarPrefix:s});return Object.assign(n,{__cssVars:{...{"--chakra-ring-inset":"var(--chakra-empty,/*!*/ /*!*/)","--chakra-ring-offset-width":"0px","--chakra-ring-offset-color":"#fff","--chakra-ring-color":"rgba(66, 153, 225, 0.6)","--chakra-ring-offset-shadow":"0 0 #0000","--chakra-ring-shadow":"0 0 #0000","--chakra-space-x-reverse":"0","--chakra-space-y-reverse":"0"},...l},__cssMap:a,__breakpoints:gH(n.breakpoints)}),n}var Hx=qn({},ph,be,H4,Np,Wn,j4,eH,D4,IE,$4,jc,yy,Xe,oH,iH,tH,nH,U4,rH);Object.assign({},Xe,Wn,Np,IE,jc);var CH=[...Object.keys(Hx),...vH],MH={...Hx,...Ym},RH=t=>t in MH,IH=t=>e=>{if(!e.__breakpoints)return t;const{isResponsive:n,toArrayValue:r,media:i}=e.__breakpoints,o={};for(const s in t){let a=hs(t[s],e);if(a==null)continue;if(a=br(a)&&n(a)?r(a):a,!Array.isArray(a)){o[s]=a;continue}const l=a.slice(0,i.length).length;for(let c=0;c<l;c+=1){const u=i==null?void 0:i[c];if(!u){o[s]=a[c];continue}o[u]=o[u]||{},a[c]!=null&&(o[u][s]=a[c])}}return o};function zH(t){const e=[];let n="",r=!1;for(let i=0;i<t.length;i++){const o=t[i];o==="("?(r=!0,n+=o):o===")"?(r=!1,n+=o):o===","&&!r?(e.push(n),n=""):n+=o}return n=n.trim(),n&&e.push(n),e}function EH(t){return/^var\(--.+\)$/.test(t)}var NH=(t,e)=>t.startsWith("--")&&typeof e=="string"&&!EH(e),VH=(t,e)=>{var s,a;if(e==null)return e;const n=l=>{var c,u;return(u=(c=t.__cssMap)==null?void 0:c[l])==null?void 0:u.varRef},r=l=>{var c;return(c=n(l))!=null?c:l},[i,o]=zH(e);return e=(a=(s=n(i))!=null?s:r(o))!=null?a:r(e),e};function LH(t){const{configs:e={},pseudos:n={},theme:r}=t,i=(o,s=!1)=>{var d,f;var a;const l=hs(o,r),c=IH(l)(r);let u={};for(let h in c){const p=c[h];let m=hs(p,r);h in n&&(h=n[h]),NH(h,m)&&(m=VH(r,m));let b=e[h];if(b===!0&&(b={property:h}),br(m)){u[h]=(d=u[h])!=null?d:{},u[h]=qn({},u[h],i(m,!0));continue}let g=(f=(a=b==null?void 0:b.transform)==null?void 0:a.call(b,m,r,l))!=null?f:m;g=b!=null&&b.processResult?i(g,!0):g;const v=hs(b==null?void 0:b.property,r);if(!s&&(b==null?void 0:b.static)){const y=hs(b.static,r);u=qn({},u,y)}if(v&&Array.isArray(v)){for(const y of v)u[y]=g;continue}if(v){v==="&"&&br(g)?u=qn({},u,g):u[v]=g;continue}if(br(g)){u=qn({},u,g);continue}u[h]=g}return u};return i}var VE=t=>e=>LH({theme:e,pseudos:Ym,configs:Hx})(t);function Ge(t){return{definePartsStyle(e){return e},defineMultiStyleConfig(e){return{parts:t,...e}}}}function XH(t,e){if(Array.isArray(t))return t;if(br(t))return e(t);if(t!=null)return[t]}function BH(t,e){for(let n=e+1;n<t.length;n++)if(t[n]!=null)return n;return-1}function AH(t){const e=t.__breakpoints;return function(r,i,o,s){var a,l;if(!e)return;const c={},u=XH(o,e.toArrayValue);if(!u)return c;const d=u.length,f=d===1,h=!!r.parts;for(let p=0;p<d;p++){const m=e.details[p],b=e.details[BH(u,p)],g=Tc(m.minW,b==null?void 0:b._minW),v=hs((a=r[i])==null?void 0:a[u[p]],s);if(!!v){if(h){(l=r.parts)==null||l.forEach(y=>{qn(c,{[y]:f?v[y]:{[g]:v[y]}})});continue}if(!h){f?qn(c,v):c[g]=v;continue}c[g]=v}}return c}}function ZH(t){return e=>{var s;const{variant:n,size:r,theme:i}=e,o=AH(i);return qn({},hs((s=t.baseStyle)!=null?s:{},e),o(t,"sizes",r,e),o(t,"variants",n,e))}}function GH(t,e,n){var o;var r,i;return(o=(i=(r=t.__cssMap)==null?void 0:r[`${e}.${n}`])==null?void 0:i.varRef)!=null?o:n}function ut(t){return yH(t,["styleConfig","size","variant","colorScheme"])}function WH(t){if(t.sheet)return t.sheet;for(var e=0;e<document.styleSheets.length;e++)if(document.styleSheets[e].ownerNode===t)return document.styleSheets[e]}function YH(t){var e=document.createElement("style");return e.setAttribute("data-emotion",t.key),t.nonce!==void 0&&e.setAttribute("nonce",t.nonce),e.appendChild(document.createTextNode("")),e.setAttribute("data-s",""),e}var FH=function(){function t(n){var r=this;this._insertTag=function(i){var o;r.tags.length===0?r.insertionPoint?o=r.insertionPoint.nextSibling:r.prepend?o=r.container.firstChild:o=r.before:o=r.tags[r.tags.length-1].nextSibling,r.container.insertBefore(i,o),r.tags.push(i)},this.isSpeedy=n.speedy===void 0?!0:n.speedy,this.tags=[],this.ctr=0,this.nonce=n.nonce,this.key=n.key,this.container=n.container,this.prepend=n.prepend,this.insertionPoint=n.insertionPoint,this.before=null}var e=t.prototype;return e.hydrate=function(r){r.forEach(this._insertTag)},e.insert=function(r){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(YH(this));var i=this.tags[this.tags.length-1];if(this.isSpeedy){var o=WH(i);try{o.insertRule(r,o.cssRules.length)}catch{}}else i.appendChild(document.createTextNode(r));this.ctr++},e.flush=function(){this.tags.forEach(function(r){return r.parentNode&&r.parentNode.removeChild(r)}),this.tags=[],this.ctr=0},t}(),At="-ms-",Vp="-moz-",ye="-webkit-",LE="comm",jx="rule",Dx="decl",HH="@import",XE="@keyframes",jH=Math.abs,Fm=String.fromCharCode,DH=Object.assign;function UH(t,e){return Ct(t,0)^45?(((e<<2^Ct(t,0))<<2^Ct(t,1))<<2^Ct(t,2))<<2^Ct(t,3):0}function BE(t){return t.trim()}function KH(t,e){return(t=e.exec(t))?t[0]:t}function ke(t,e,n){return t.replace(e,n)}function wy(t,e){return t.indexOf(e)}function Ct(t,e){return t.charCodeAt(e)|0}function Gu(t,e,n){return t.slice(e,n)}function Lr(t){return t.length}function Ux(t){return t.length}function wf(t,e){return e.push(t),t}function qH(t,e){return t.map(e).join("")}var Hm=1,Sl=1,AE=0,mn=0,at=0,Al="";function jm(t,e,n,r,i,o,s){return{value:t,root:e,parent:n,type:r,props:i,children:o,line:Hm,column:Sl,length:s,return:""}}function ac(t,e){return DH(jm("",null,null,"",null,null,0),t,{length:-t.length},e)}function QH(){return at}function JH(){return at=mn>0?Ct(Al,--mn):0,Sl--,at===10&&(Sl=1,Hm--),at}function Rn(){return at=mn<AE?Ct(Al,mn++):0,Sl++,at===10&&(Sl=1,Hm++),at}function qr(){return Ct(Al,mn)}function mh(){return mn}function md(t,e){return Gu(Al,t,e)}function Wu(t){switch(t){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function ZE(t){return Hm=Sl=1,AE=Lr(Al=t),mn=0,[]}function GE(t){return Al="",t}function gh(t){return BE(md(mn-1,Oy(t===91?t+2:t===40?t+1:t)))}function _H(t){for(;(at=qr())&&at<33;)Rn();return Wu(t)>2||Wu(at)>3?"":" "}function $H(t,e){for(;--e&&Rn()&&!(at<48||at>102||at>57&&at<65||at>70&&at<97););return md(t,mh()+(e<6&&qr()==32&&Rn()==32))}function Oy(t){for(;Rn();)switch(at){case t:return mn;case 34:case 39:t!==34&&t!==39&&Oy(at);break;case 40:t===41&&Oy(t);break;case 92:Rn();break}return mn}function ej(t,e){for(;Rn()&&t+at!==47+10;)if(t+at===42+42&&qr()===47)break;return"/*"+md(e,mn-1)+"*"+Fm(t===47?t:Rn())}function tj(t){for(;!Wu(qr());)Rn();return md(t,mn)}function nj(t){return GE(vh("",null,null,null,[""],t=ZE(t),0,[0],t))}function vh(t,e,n,r,i,o,s,a,l){for(var c=0,u=0,d=s,f=0,h=0,p=0,m=1,b=1,g=1,v=0,y="",x=i,k=o,O=r,T=y;b;)switch(p=v,v=Rn()){case 40:if(p!=108&&Ct(T,d-1)==58){wy(T+=ke(gh(v),"&","&\f"),"&\f")!=-1&&(g=-1);break}case 34:case 39:case 91:T+=gh(v);break;case 9:case 10:case 13:case 32:T+=_H(p);break;case 92:T+=$H(mh()-1,7);continue;case 47:switch(qr()){case 42:case 47:wf(rj(ej(Rn(),mh()),e,n),l);break;default:T+="/"}break;case 123*m:a[c++]=Lr(T)*g;case 125*m:case 59:case 0:switch(v){case 0:case 125:b=0;case 59+u:h>0&&Lr(T)-d&&wf(h>32?K5(T+";",r,n,d-1):K5(ke(T," ","")+";",r,n,d-2),l);break;case 59:T+=";";default:if(wf(O=U5(T,e,n,c,u,i,a,y,x=[],k=[],d),o),v===123)if(u===0)vh(T,e,O,O,x,o,d,a,k);else switch(f===99&&Ct(T,3)===110?100:f){case 100:case 109:case 115:vh(t,O,O,r&&wf(U5(t,O,O,0,0,i,a,y,i,x=[],d),k),i,k,d,a,r?x:k);break;default:vh(T,O,O,O,[""],k,0,a,k)}}c=u=h=0,m=g=1,y=T="",d=s;break;case 58:d=1+Lr(T),h=p;default:if(m<1){if(v==123)--m;else if(v==125&&m++==0&&JH()==125)continue}switch(T+=Fm(v),v*m){case 38:g=u>0?1:(T+="\f",-1);break;case 44:a[c++]=(Lr(T)-1)*g,g=1;break;case 64:qr()===45&&(T+=gh(Rn())),f=qr(),u=d=Lr(y=T+=tj(mh())),v++;break;case 45:p===45&&Lr(T)==2&&(m=0)}}return o}function U5(t,e,n,r,i,o,s,a,l,c,u){for(var d=i-1,f=i===0?o:[""],h=Ux(f),p=0,m=0,b=0;p<r;++p)for(var g=0,v=Gu(t,d+1,d=jH(m=s[p])),y=t;g<h;++g)(y=BE(m>0?f[g]+" "+v:ke(v,/&\f/g,f[g])))&&(l[b++]=y);return jm(t,e,n,i===0?jx:a,l,c,u)}function rj(t,e,n){return jm(t,e,n,LE,Fm(QH()),Gu(t,2,-2),0)}function K5(t,e,n,r){return jm(t,e,n,Dx,Gu(t,0,r),Gu(t,r+1,-1),r)}function Da(t,e){for(var n="",r=Ux(t),i=0;i<r;i++)n+=e(t[i],i,t,e)||"";return n}function ij(t,e,n,r){switch(t.type){case HH:case Dx:return t.return=t.return||t.value;case LE:return"";case XE:return t.return=t.value+"{"+Da(t.children,r)+"}";case jx:t.value=t.props.join(",")}return Lr(n=Da(t.children,r))?t.return=t.value+"{"+n+"}":""}function oj(t){var e=Ux(t);return function(n,r,i,o){for(var s="",a=0;a<e;a++)s+=t[a](n,r,i,o)||"";return s}}function sj(t){return function(e){e.root||(e=e.return)&&t(e)}}var q5=function(e){var n=new WeakMap;return function(r){if(n.has(r))return n.get(r);var i=e(r);return n.set(r,i),i}};function WE(t){var e=Object.create(null);return function(n){return e[n]===void 0&&(e[n]=t(n)),e[n]}}var aj=function(e,n,r){for(var i=0,o=0;i=o,o=qr(),i===38&&o===12&&(n[r]=1),!Wu(o);)Rn();return md(e,mn)},lj=function(e,n){var r=-1,i=44;do switch(Wu(i)){case 0:i===38&&qr()===12&&(n[r]=1),e[r]+=aj(mn-1,n,r);break;case 2:e[r]+=gh(i);break;case 4:if(i===44){e[++r]=qr()===58?"&\f":"",n[r]=e[r].length;break}default:e[r]+=Fm(i)}while(i=Rn());return e},cj=function(e,n){return GE(lj(ZE(e),n))},Q5=new WeakMap,uj=function(e){if(!(e.type!=="rule"||!e.parent||e.length<1)){for(var n=e.value,r=e.parent,i=e.column===r.column&&e.line===r.line;r.type!=="rule";)if(r=r.parent,!r)return;if(!(e.props.length===1&&n.charCodeAt(0)!==58&&!Q5.get(r))&&!i){Q5.set(e,!0);for(var o=[],s=cj(n,o),a=r.props,l=0,c=0;l<s.length;l++)for(var u=0;u<a.length;u++,c++)e.props[c]=o[l]?s[l].replace(/&\f/g,a[u]):a[u]+" "+s[l]}}},dj=function(e){if(e.type==="decl"){var n=e.value;n.charCodeAt(0)===108&&n.charCodeAt(2)===98&&(e.return="",e.value="")}};function YE(t,e){switch(UH(t,e)){case 5103:return ye+"print-"+t+t;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return ye+t+t;case 5349:case 4246:case 4810:case 6968:case 2756:return ye+t+Vp+t+At+t+t;case 6828:case 4268:return ye+t+At+t+t;case 6165:return ye+t+At+"flex-"+t+t;case 5187:return ye+t+ke(t,/(\w+).+(:[^]+)/,ye+"box-$1$2"+At+"flex-$1$2")+t;case 5443:return ye+t+At+"flex-item-"+ke(t,/flex-|-self/,"")+t;case 4675:return ye+t+At+"flex-line-pack"+ke(t,/align-content|flex-|-self/,"")+t;case 5548:return ye+t+At+ke(t,"shrink","negative")+t;case 5292:return ye+t+At+ke(t,"basis","preferred-size")+t;case 6060:return ye+"box-"+ke(t,"-grow","")+ye+t+At+ke(t,"grow","positive")+t;case 4554:return ye+ke(t,/([^-])(transform)/g,"$1"+ye+"$2")+t;case 6187:return ke(ke(ke(t,/(zoom-|grab)/,ye+"$1"),/(image-set)/,ye+"$1"),t,"")+t;case 5495:case 3959:return ke(t,/(image-set\([^]*)/,ye+"$1$`$1");case 4968:return ke(ke(t,/(.+:)(flex-)?(.*)/,ye+"box-pack:$3"+At+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+ye+t+t;case 4095:case 3583:case 4068:case 2532:return ke(t,/(.+)-inline(.+)/,ye+"$1$2")+t;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Lr(t)-1-e>6)switch(Ct(t,e+1)){case 109:if(Ct(t,e+4)!==45)break;case 102:return ke(t,/(.+:)(.+)-([^]+)/,"$1"+ye+"$2-$3$1"+Vp+(Ct(t,e+3)==108?"$3":"$2-$3"))+t;case 115:return~wy(t,"stretch")?YE(ke(t,"stretch","fill-available"),e)+t:t}break;case 4949:if(Ct(t,e+1)!==115)break;case 6444:switch(Ct(t,Lr(t)-3-(~wy(t,"!important")&&10))){case 107:return ke(t,":",":"+ye)+t;case 101:return ke(t,/(.+:)([^;!]+)(;|!.+)?/,"$1"+ye+(Ct(t,14)===45?"inline-":"")+"box$3$1"+ye+"$2$3$1"+At+"$2box$3")+t}break;case 5936:switch(Ct(t,e+11)){case 114:return ye+t+At+ke(t,/[svh]\w+-[tblr]{2}/,"tb")+t;case 108:return ye+t+At+ke(t,/[svh]\w+-[tblr]{2}/,"tb-rl")+t;case 45:return ye+t+At+ke(t,/[svh]\w+-[tblr]{2}/,"lr")+t}return ye+t+At+t+t}return t}var fj=function(e,n,r,i){if(e.length>-1&&!e.return)switch(e.type){case Dx:e.return=YE(e.value,e.length);break;case XE:return Da([ac(e,{value:ke(e.value,"@","@"+ye)})],i);case jx:if(e.length)return qH(e.props,function(o){switch(KH(o,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return Da([ac(e,{props:[ke(o,/:(read-\w+)/,":"+Vp+"$1")]})],i);case"::placeholder":return Da([ac(e,{props:[ke(o,/:(plac\w+)/,":"+ye+"input-$1")]}),ac(e,{props:[ke(o,/:(plac\w+)/,":"+Vp+"$1")]}),ac(e,{props:[ke(o,/:(plac\w+)/,At+"input-$1")]})],i)}return""})}},hj=[fj],pj=function(e){var n=e.key;if(n==="css"){var r=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(r,function(m){var b=m.getAttribute("data-emotion");b.indexOf(" ")!==-1&&(document.head.appendChild(m),m.setAttribute("data-s",""))})}var i=e.stylisPlugins||hj,o={},s,a=[];s=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+n+' "]'),function(m){for(var b=m.getAttribute("data-emotion").split(" "),g=1;g<b.length;g++)o[b[g]]=!0;a.push(m)});var l,c=[uj,dj];{var u,d=[ij,sj(function(m){u.insert(m)})],f=oj(c.concat(i,d)),h=function(b){return Da(nj(b),f)};l=function(b,g,v,y){u=v,h(b?b+"{"+g.styles+"}":g.styles),y&&(p.inserted[g.name]=!0)}}var p={key:n,sheet:new FH({key:n,container:s,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend,insertionPoint:e.insertionPoint}),nonce:e.nonce,inserted:o,registered:{},insert:l};return p.sheet.hydrate(a),p},FE={exports:{}},Pe={};/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var wt=typeof Symbol=="function"&&Symbol.for,Kx=wt?Symbol.for("react.element"):60103,qx=wt?Symbol.for("react.portal"):60106,Dm=wt?Symbol.for("react.fragment"):60107,Um=wt?Symbol.for("react.strict_mode"):60108,Km=wt?Symbol.for("react.profiler"):60114,qm=wt?Symbol.for("react.provider"):60109,Qm=wt?Symbol.for("react.context"):60110,Qx=wt?Symbol.for("react.async_mode"):60111,Jm=wt?Symbol.for("react.concurrent_mode"):60111,_m=wt?Symbol.for("react.forward_ref"):60112,$m=wt?Symbol.for("react.suspense"):60113,mj=wt?Symbol.for("react.suspense_list"):60120,eg=wt?Symbol.for("react.memo"):60115,tg=wt?Symbol.for("react.lazy"):60116,gj=wt?Symbol.for("react.block"):60121,vj=wt?Symbol.for("react.fundamental"):60117,bj=wt?Symbol.for("react.responder"):60118,yj=wt?Symbol.for("react.scope"):60119;function Ln(t){if(typeof t=="object"&&t!==null){var e=t.$$typeof;switch(e){case Kx:switch(t=t.type,t){case Qx:case Jm:case Dm:case Km:case Um:case $m:return t;default:switch(t=t&&t.$$typeof,t){case Qm:case _m:case tg:case eg:case qm:return t;default:return e}}case qx:return e}}}function HE(t){return Ln(t)===Jm}Pe.AsyncMode=Qx;Pe.ConcurrentMode=Jm;Pe.ContextConsumer=Qm;Pe.ContextProvider=qm;Pe.Element=Kx;Pe.ForwardRef=_m;Pe.Fragment=Dm;Pe.Lazy=tg;Pe.Memo=eg;Pe.Portal=qx;Pe.Profiler=Km;Pe.StrictMode=Um;Pe.Suspense=$m;Pe.isAsyncMode=function(t){return HE(t)||Ln(t)===Qx};Pe.isConcurrentMode=HE;Pe.isContextConsumer=function(t){return Ln(t)===Qm};Pe.isContextProvider=function(t){return Ln(t)===qm};Pe.isElement=function(t){return typeof t=="object"&&t!==null&&t.$$typeof===Kx};Pe.isForwardRef=function(t){return Ln(t)===_m};Pe.isFragment=function(t){return Ln(t)===Dm};Pe.isLazy=function(t){return Ln(t)===tg};Pe.isMemo=function(t){return Ln(t)===eg};Pe.isPortal=function(t){return Ln(t)===qx};Pe.isProfiler=function(t){return Ln(t)===Km};Pe.isStrictMode=function(t){return Ln(t)===Um};Pe.isSuspense=function(t){return Ln(t)===$m};Pe.isValidElementType=function(t){return typeof t=="string"||typeof t=="function"||t===Dm||t===Jm||t===Km||t===Um||t===$m||t===mj||typeof t=="object"&&t!==null&&(t.$$typeof===tg||t.$$typeof===eg||t.$$typeof===qm||t.$$typeof===Qm||t.$$typeof===_m||t.$$typeof===vj||t.$$typeof===bj||t.$$typeof===yj||t.$$typeof===gj)};Pe.typeOf=Ln;(function(t){t.exports=Pe})(FE);var jE=FE.exports,xj={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},Sj={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},DE={};DE[jE.ForwardRef]=xj;DE[jE.Memo]=Sj;var kj=!0;function wj(t,e,n){var r="";return n.split(" ").forEach(function(i){t[i]!==void 0?e.push(t[i]+";"):r+=i+" "}),r}var UE=function(e,n,r){var i=e.key+"-"+n.name;(r===!1||kj===!1)&&e.registered[i]===void 0&&(e.registered[i]=n.styles)},KE=function(e,n,r){UE(e,n,r);var i=e.key+"-"+n.name;if(e.inserted[n.name]===void 0){var o=n;do e.insert(n===o?"."+i:"",o,e.sheet,!0),o=o.next;while(o!==void 0)}};function Oj(t){for(var e=0,n,r=0,i=t.length;i>=4;++r,i-=4)n=t.charCodeAt(r)&255|(t.charCodeAt(++r)&255)<<8|(t.charCodeAt(++r)&255)<<16|(t.charCodeAt(++r)&255)<<24,n=(n&65535)*1540483477+((n>>>16)*59797<<16),n^=n>>>24,e=(n&65535)*1540483477+((n>>>16)*59797<<16)^(e&65535)*1540483477+((e>>>16)*59797<<16);switch(i){case 3:e^=(t.charCodeAt(r+2)&255)<<16;case 2:e^=(t.charCodeAt(r+1)&255)<<8;case 1:e^=t.charCodeAt(r)&255,e=(e&65535)*1540483477+((e>>>16)*59797<<16)}return e^=e>>>13,e=(e&65535)*1540483477+((e>>>16)*59797<<16),((e^e>>>15)>>>0).toString(36)}var Tj={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},Pj=/[A-Z]|^ms/g,Cj=/_EMO_([^_]+?)_([^]*?)_EMO_/g,qE=function(e){return e.charCodeAt(1)===45},J5=function(e){return e!=null&&typeof e!="boolean"},V0=WE(function(t){return qE(t)?t:t.replace(Pj,"-$&").toLowerCase()}),_5=function(e,n){switch(e){case"animation":case"animationName":if(typeof n=="string")return n.replace(Cj,function(r,i,o){return Xr={name:i,styles:o,next:Xr},i})}return Tj[e]!==1&&!qE(e)&&typeof n=="number"&&n!==0?n+"px":n};function Yu(t,e,n){if(n==null)return"";if(n.__emotion_styles!==void 0)return n;switch(typeof n){case"boolean":return"";case"object":{if(n.anim===1)return Xr={name:n.name,styles:n.styles,next:Xr},n.name;if(n.styles!==void 0){var r=n.next;if(r!==void 0)for(;r!==void 0;)Xr={name:r.name,styles:r.styles,next:Xr},r=r.next;var i=n.styles+";";return i}return Mj(t,e,n)}case"function":{if(t!==void 0){var o=Xr,s=n(t);return Xr=o,Yu(t,e,s)}break}}if(e==null)return n;var a=e[n];return a!==void 0?a:n}function Mj(t,e,n){var r="";if(Array.isArray(n))for(var i=0;i<n.length;i++)r+=Yu(t,e,n[i])+";";else for(var o in n){var s=n[o];if(typeof s!="object")e!=null&&e[s]!==void 0?r+=o+"{"+e[s]+"}":J5(s)&&(r+=V0(o)+":"+_5(o,s)+";");else if(Array.isArray(s)&&typeof s[0]=="string"&&(e==null||e[s[0]]===void 0))for(var a=0;a<s.length;a++)J5(s[a])&&(r+=V0(o)+":"+_5(o,s[a])+";");else{var l=Yu(t,e,s);switch(o){case"animation":case"animationName":{r+=V0(o)+":"+l+";";break}default:r+=o+"{"+l+"}"}}}return r}var $5=/label:\s*([^\s;\n{]+)\s*(;|$)/g,Xr,Jx=function(e,n,r){if(e.length===1&&typeof e[0]=="object"&&e[0]!==null&&e[0].styles!==void 0)return e[0];var i=!0,o="";Xr=void 0;var s=e[0];s==null||s.raw===void 0?(i=!1,o+=Yu(r,n,s)):o+=s[0];for(var a=1;a<e.length;a++)o+=Yu(r,n,e[a]),i&&(o+=s[a]);$5.lastIndex=0;for(var l="",c;(c=$5.exec(o))!==null;)l+="-"+c[1];var u=Oj(o)+l;return{name:u,styles:o,next:Xr}},Rj=function(e){return e()},QE=Ck["useInsertionEffect"]?Ck["useInsertionEffect"]:!1,Ij=QE||Rj,eO=QE||S.exports.useLayoutEffect,JE=S.exports.createContext(typeof HTMLElement<"u"?pj({key:"css"}):null);JE.Provider;var _E=function(e){return S.exports.forwardRef(function(n,r){var i=S.exports.useContext(JE);return e(n,i,r)})},Fu=S.exports.createContext({}),zj=function(e,n){if(typeof n=="function"){var r=n(e);return r}return bl({},e,n)},Ej=q5(function(t){return q5(function(e){return zj(t,e)})}),Nj=function(e){var n=S.exports.useContext(Fu);return e.theme!==n&&(n=Ej(n)(e.theme)),S.exports.createElement(Fu.Provider,{value:n},e.children)},ng=_E(function(t,e){var n=t.styles,r=Jx([n],void 0,S.exports.useContext(Fu)),i=S.exports.useRef();return eO(function(){var o=e.key+"-global",s=new e.sheet.constructor({key:o,nonce:e.sheet.nonce,container:e.sheet.container,speedy:e.sheet.isSpeedy}),a=!1,l=document.querySelector('style[data-emotion="'+o+" "+r.name+'"]');return e.sheet.tags.length&&(s.before=e.sheet.tags[0]),l!==null&&(a=!0,l.setAttribute("data-emotion",o),s.hydrate([l])),i.current=[s,a],function(){s.flush()}},[e]),eO(function(){var o=i.current,s=o[0],a=o[1];if(a){o[1]=!1;return}if(r.next!==void 0&&KE(e,r.next,!0),s.tags.length){var l=s.tags[s.tags.length-1].nextElementSibling;s.before=l,s.flush()}e.insert("",r,s,!1)},[e,r.name]),null});function Vj(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return Jx(e)}var Lj=function(){var e=Vj.apply(void 0,arguments),n="animation-"+e.name;return{name:n,styles:"@keyframes "+n+"{"+e.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}};function Xj(t){return typeof t=="function"}function Bj(t,e){const n={};return Object.keys(t).forEach(r=>{e.includes(r)||(n[r]=t[r])}),n}function Aj(t,e,n,r){const i=typeof e=="string"?e.split("."):[e];for(r=0;r<i.length&&t;r+=1)t=t[i[r]];return t===void 0?n:t}var Zj=t=>{const e=new WeakMap;return(r,i,o,s)=>{if(typeof r>"u")return t(r,i,o);e.has(r)||e.set(r,new Map);const a=e.get(r);if(a.has(i))return a.get(i);const l=t(r,i,o,s);return a.set(i,l),l}},$E=Zj(Aj);function e9(t,e){const n={};return Object.keys(t).forEach(r=>{const i=t[r];e(i,r,t)&&(n[r]=i)}),n}var t9=t=>e9(t,e=>e!=null);function Gj(){return!!(typeof window<"u"&&window.document&&window.document.createElement)}var Wj=Gj();function n9(t,...e){return Xj(t)?t(...e):t}function Yj(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}Object.freeze(["base","sm","md","lg","xl","2xl"]);function Fj(t={}){const{strict:e=!0,errorMessage:n="useContext: `context` is undefined. Seems you forgot to wrap component within the Provider",name:r}=t,i=S.exports.createContext(void 0);i.displayName=r;function o(){var s;const a=S.exports.useContext(i);if(!a&&e){const l=new Error(n);throw l.name="ContextError",(s=Error.captureStackTrace)==null||s.call(Error,l,o),l}return a}return[i.Provider,o,i]}var Hj=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,jj=WE(function(t){return Hj.test(t)||t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&t.charCodeAt(2)<91}),Dj=jj,Uj=function(e){return e!=="theme"},tO=function(e){return typeof e=="string"&&e.charCodeAt(0)>96?Dj:Uj},nO=function(e,n,r){var i;if(n){var o=n.shouldForwardProp;i=e.__emotion_forwardProp&&o?function(s){return e.__emotion_forwardProp(s)&&o(s)}:o}return typeof i!="function"&&r&&(i=e.__emotion_forwardProp),i},Kj=function(e){var n=e.cache,r=e.serialized,i=e.isStringTag;return UE(n,r,i),Ij(function(){return KE(n,r,i)}),null},qj=function t(e,n){var r=e.__emotion_real===e,i=r&&e.__emotion_base||e,o,s;n!==void 0&&(o=n.label,s=n.target);var a=nO(e,n,r),l=a||tO(i),c=!l("as");return function(){var u=arguments,d=r&&e.__emotion_styles!==void 0?e.__emotion_styles.slice(0):[];if(o!==void 0&&d.push("label:"+o+";"),u[0]==null||u[0].raw===void 0)d.push.apply(d,u);else{d.push(u[0][0]);for(var f=u.length,h=1;h<f;h++)d.push(u[h],u[0][h])}var p=_E(function(m,b,g){var v=c&&m.as||i,y="",x=[],k=m;if(m.theme==null){k={};for(var O in m)k[O]=m[O];k.theme=S.exports.useContext(Fu)}typeof m.className=="string"?y=wj(b.registered,x,m.className):m.className!=null&&(y=m.className+" ");var T=Jx(d.concat(x),b.registered,k);y+=b.key+"-"+T.name,s!==void 0&&(y+=" "+s);var M=c&&a===void 0?tO(v):l,E={};for(var I in m)c&&I==="as"||M(I)&&(E[I]=m[I]);return E.className=y,E.ref=g,S.exports.createElement(S.exports.Fragment,null,S.exports.createElement(Kj,{cache:b,serialized:T,isStringTag:typeof v=="string"}),S.exports.createElement(v,E))});return p.displayName=o!==void 0?o:"Styled("+(typeof i=="string"?i:i.displayName||i.name||"Component")+")",p.defaultProps=e.defaultProps,p.__emotion_real=p,p.__emotion_base=i,p.__emotion_styles=d,p.__emotion_forwardProp=a,Object.defineProperty(p,"toString",{value:function(){return"."+s}}),p.withComponent=function(m,b){return t(m,bl({},n,b,{shouldForwardProp:nO(p,b,!0)})).apply(void 0,d)},p}},Qj=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"],Ty=qj.bind();Qj.forEach(function(t){Ty[t]=Ty(t)});function we(t,e={}){let n=!1;function r(){if(!n){n=!0;return}throw new Error("[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?")}function i(...u){r();for(const d of u)e[d]=l(d);return we(t,e)}function o(...u){for(const d of u)d in e||(e[d]=l(d));return we(t,e)}function s(){return Object.fromEntries(Object.entries(e).map(([d,f])=>[d,f.selector]))}function a(){return Object.fromEntries(Object.entries(e).map(([d,f])=>[d,f.className]))}function l(u){const h=`chakra-${(["container","root"].includes(u!=null?u:"")?[t]:[t,u]).filter(Boolean).join("__")}`;return{className:h,selector:`.${h}`,toString:()=>u}}return{parts:i,toPart:l,extend:o,selectors:s,classnames:a,get keys(){return Object.keys(e)},__type:{}}}var Jj=we("accordion").parts("root","container","button","panel").extend("icon"),_j=we("alert").parts("title","description","container").extend("icon","spinner"),$j=we("avatar").parts("label","badge","container").extend("excessLabel","group"),e8=we("breadcrumb").parts("link","item","container").extend("separator");we("button").parts();var t8=we("checkbox").parts("control","icon","container").extend("label");we("progress").parts("track","filledTrack").extend("label");var n8=we("drawer").parts("overlay","dialogContainer","dialog").extend("header","closeButton","body","footer"),r8=we("editable").parts("preview","input","textarea"),i8=we("form").parts("container","requiredIndicator","helperText"),o8=we("formError").parts("text","icon"),s8=we("input").parts("addon","field","element"),a8=we("list").parts("container","item","icon"),l8=we("menu").parts("button","list","item").extend("groupTitle","command","divider"),c8=we("modal").parts("overlay","dialogContainer","dialog").extend("header","closeButton","body","footer"),u8=we("numberinput").parts("root","field","stepperGroup","stepper");we("pininput").parts("field");var d8=we("popover").parts("content","header","body","footer").extend("popper","arrow","closeButton"),f8=we("progress").parts("label","filledTrack","track"),h8=we("radio").parts("container","control","label"),p8=we("select").parts("field","icon"),m8=we("slider").parts("container","track","thumb","filledTrack","mark"),g8=we("stat").parts("container","label","helpText","number","icon"),v8=we("switch").parts("container","track","thumb"),b8=we("table").parts("table","thead","tbody","tr","th","td","tfoot","caption"),y8=we("tabs").parts("root","tab","tablist","tabpanel","tabpanels","indicator"),x8=we("tag").parts("container","label","closeButton"),S8=we("card").parts("container","header","body","footer");function Nt(t,e){k8(t)&&(t="100%");var n=w8(t);return t=e===360?t:Math.min(e,Math.max(0,parseFloat(t))),n&&(t=parseInt(String(t*e),10)/100),Math.abs(t-e)<1e-6?1:(e===360?t=(t<0?t%e+e:t%e)/parseFloat(String(e)):t=t%e/parseFloat(String(e)),t)}function Of(t){return Math.min(1,Math.max(0,t))}function k8(t){return typeof t=="string"&&t.indexOf(".")!==-1&&parseFloat(t)===1}function w8(t){return typeof t=="string"&&t.indexOf("%")!==-1}function r9(t){return t=parseFloat(t),(isNaN(t)||t<0||t>1)&&(t=1),t}function Tf(t){return t<=1?"".concat(Number(t)*100,"%"):t}function ps(t){return t.length===1?"0"+t:String(t)}function O8(t,e,n){return{r:Nt(t,255)*255,g:Nt(e,255)*255,b:Nt(n,255)*255}}function rO(t,e,n){t=Nt(t,255),e=Nt(e,255),n=Nt(n,255);var r=Math.max(t,e,n),i=Math.min(t,e,n),o=0,s=0,a=(r+i)/2;if(r===i)s=0,o=0;else{var l=r-i;switch(s=a>.5?l/(2-r-i):l/(r+i),r){case t:o=(e-n)/l+(e<n?6:0);break;case e:o=(n-t)/l+2;break;case n:o=(t-e)/l+4;break}o/=6}return{h:o,s,l:a}}function L0(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*(6*n):n<1/2?e:n<2/3?t+(e-t)*(2/3-n)*6:t}function T8(t,e,n){var r,i,o;if(t=Nt(t,360),e=Nt(e,100),n=Nt(n,100),e===0)i=n,o=n,r=n;else{var s=n<.5?n*(1+e):n+e-n*e,a=2*n-s;r=L0(a,s,t+1/3),i=L0(a,s,t),o=L0(a,s,t-1/3)}return{r:r*255,g:i*255,b:o*255}}function iO(t,e,n){t=Nt(t,255),e=Nt(e,255),n=Nt(n,255);var r=Math.max(t,e,n),i=Math.min(t,e,n),o=0,s=r,a=r-i,l=r===0?0:a/r;if(r===i)o=0;else{switch(r){case t:o=(e-n)/a+(e<n?6:0);break;case e:o=(n-t)/a+2;break;case n:o=(t-e)/a+4;break}o/=6}return{h:o,s:l,v:s}}function P8(t,e,n){t=Nt(t,360)*6,e=Nt(e,100),n=Nt(n,100);var r=Math.floor(t),i=t-r,o=n*(1-e),s=n*(1-i*e),a=n*(1-(1-i)*e),l=r%6,c=[n,s,o,o,a,n][l],u=[a,n,n,s,o,o][l],d=[o,o,a,n,n,s][l];return{r:c*255,g:u*255,b:d*255}}function oO(t,e,n,r){var i=[ps(Math.round(t).toString(16)),ps(Math.round(e).toString(16)),ps(Math.round(n).toString(16))];return r&&i[0].startsWith(i[0].charAt(1))&&i[1].startsWith(i[1].charAt(1))&&i[2].startsWith(i[2].charAt(1))?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join("")}function C8(t,e,n,r,i){var o=[ps(Math.round(t).toString(16)),ps(Math.round(e).toString(16)),ps(Math.round(n).toString(16)),ps(M8(r))];return i&&o[0].startsWith(o[0].charAt(1))&&o[1].startsWith(o[1].charAt(1))&&o[2].startsWith(o[2].charAt(1))&&o[3].startsWith(o[3].charAt(1))?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0)+o[3].charAt(0):o.join("")}function M8(t){return Math.round(parseFloat(t)*255).toString(16)}function sO(t){return yn(t)/255}function yn(t){return parseInt(t,16)}function R8(t){return{r:t>>16,g:(t&65280)>>8,b:t&255}}var Py={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",goldenrod:"#daa520",gold:"#ffd700",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavenderblush:"#fff0f5",lavender:"#e6e6fa",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};function I8(t){var e={r:0,g:0,b:0},n=1,r=null,i=null,o=null,s=!1,a=!1;return typeof t=="string"&&(t=N8(t)),typeof t=="object"&&(li(t.r)&&li(t.g)&&li(t.b)?(e=O8(t.r,t.g,t.b),s=!0,a=String(t.r).substr(-1)==="%"?"prgb":"rgb"):li(t.h)&&li(t.s)&&li(t.v)?(r=Tf(t.s),i=Tf(t.v),e=P8(t.h,r,i),s=!0,a="hsv"):li(t.h)&&li(t.s)&&li(t.l)&&(r=Tf(t.s),o=Tf(t.l),e=T8(t.h,r,o),s=!0,a="hsl"),Object.prototype.hasOwnProperty.call(t,"a")&&(n=t.a)),n=r9(n),{ok:s,format:t.format||a,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:n}}var z8="[-\\+]?\\d+%?",E8="[-\\+]?\\d*\\.\\d+%?",ao="(?:".concat(E8,")|(?:").concat(z8,")"),X0="[\\s|\\(]+(".concat(ao,")[,|\\s]+(").concat(ao,")[,|\\s]+(").concat(ao,")\\s*\\)?"),B0="[\\s|\\(]+(".concat(ao,")[,|\\s]+(").concat(ao,")[,|\\s]+(").concat(ao,")[,|\\s]+(").concat(ao,")\\s*\\)?"),ur={CSS_UNIT:new RegExp(ao),rgb:new RegExp("rgb"+X0),rgba:new RegExp("rgba"+B0),hsl:new RegExp("hsl"+X0),hsla:new RegExp("hsla"+B0),hsv:new RegExp("hsv"+X0),hsva:new RegExp("hsva"+B0),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};function N8(t){if(t=t.trim().toLowerCase(),t.length===0)return!1;var e=!1;if(Py[t])t=Py[t],e=!0;else if(t==="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var n=ur.rgb.exec(t);return n?{r:n[1],g:n[2],b:n[3]}:(n=ur.rgba.exec(t),n?{r:n[1],g:n[2],b:n[3],a:n[4]}:(n=ur.hsl.exec(t),n?{h:n[1],s:n[2],l:n[3]}:(n=ur.hsla.exec(t),n?{h:n[1],s:n[2],l:n[3],a:n[4]}:(n=ur.hsv.exec(t),n?{h:n[1],s:n[2],v:n[3]}:(n=ur.hsva.exec(t),n?{h:n[1],s:n[2],v:n[3],a:n[4]}:(n=ur.hex8.exec(t),n?{r:yn(n[1]),g:yn(n[2]),b:yn(n[3]),a:sO(n[4]),format:e?"name":"hex8"}:(n=ur.hex6.exec(t),n?{r:yn(n[1]),g:yn(n[2]),b:yn(n[3]),format:e?"name":"hex"}:(n=ur.hex4.exec(t),n?{r:yn(n[1]+n[1]),g:yn(n[2]+n[2]),b:yn(n[3]+n[3]),a:sO(n[4]+n[4]),format:e?"name":"hex8"}:(n=ur.hex3.exec(t),n?{r:yn(n[1]+n[1]),g:yn(n[2]+n[2]),b:yn(n[3]+n[3]),format:e?"name":"hex"}:!1)))))))))}function li(t){return Boolean(ur.CSS_UNIT.exec(String(t)))}var gd=function(){function t(e,n){e===void 0&&(e=""),n===void 0&&(n={});var r;if(e instanceof t)return e;typeof e=="number"&&(e=R8(e)),this.originalInput=e;var i=I8(e);this.originalInput=e,this.r=i.r,this.g=i.g,this.b=i.b,this.a=i.a,this.roundA=Math.round(100*this.a)/100,this.format=(r=n.format)!==null&&r!==void 0?r:i.format,this.gradientType=n.gradientType,this.r<1&&(this.r=Math.round(this.r)),this.g<1&&(this.g=Math.round(this.g)),this.b<1&&(this.b=Math.round(this.b)),this.isValid=i.ok}return t.prototype.isDark=function(){return this.getBrightness()<128},t.prototype.isLight=function(){return!this.isDark()},t.prototype.getBrightness=function(){var e=this.toRgb();return(e.r*299+e.g*587+e.b*114)/1e3},t.prototype.getLuminance=function(){var e=this.toRgb(),n,r,i,o=e.r/255,s=e.g/255,a=e.b/255;return o<=.03928?n=o/12.92:n=Math.pow((o+.055)/1.055,2.4),s<=.03928?r=s/12.92:r=Math.pow((s+.055)/1.055,2.4),a<=.03928?i=a/12.92:i=Math.pow((a+.055)/1.055,2.4),.2126*n+.7152*r+.0722*i},t.prototype.getAlpha=function(){return this.a},t.prototype.setAlpha=function(e){return this.a=r9(e),this.roundA=Math.round(100*this.a)/100,this},t.prototype.toHsv=function(){var e=iO(this.r,this.g,this.b);return{h:e.h*360,s:e.s,v:e.v,a:this.a}},t.prototype.toHsvString=function(){var e=iO(this.r,this.g,this.b),n=Math.round(e.h*360),r=Math.round(e.s*100),i=Math.round(e.v*100);return this.a===1?"hsv(".concat(n,", ").concat(r,"%, ").concat(i,"%)"):"hsva(".concat(n,", ").concat(r,"%, ").concat(i,"%, ").concat(this.roundA,")")},t.prototype.toHsl=function(){var e=rO(this.r,this.g,this.b);return{h:e.h*360,s:e.s,l:e.l,a:this.a}},t.prototype.toHslString=function(){var e=rO(this.r,this.g,this.b),n=Math.round(e.h*360),r=Math.round(e.s*100),i=Math.round(e.l*100);return this.a===1?"hsl(".concat(n,", ").concat(r,"%, ").concat(i,"%)"):"hsla(".concat(n,", ").concat(r,"%, ").concat(i,"%, ").concat(this.roundA,")")},t.prototype.toHex=function(e){return e===void 0&&(e=!1),oO(this.r,this.g,this.b,e)},t.prototype.toHexString=function(e){return e===void 0&&(e=!1),"#"+this.toHex(e)},t.prototype.toHex8=function(e){return e===void 0&&(e=!1),C8(this.r,this.g,this.b,this.a,e)},t.prototype.toHex8String=function(e){return e===void 0&&(e=!1),"#"+this.toHex8(e)},t.prototype.toRgb=function(){return{r:Math.round(this.r),g:Math.round(this.g),b:Math.round(this.b),a:this.a}},t.prototype.toRgbString=function(){var e=Math.round(this.r),n=Math.round(this.g),r=Math.round(this.b);return this.a===1?"rgb(".concat(e,", ").concat(n,", ").concat(r,")"):"rgba(".concat(e,", ").concat(n,", ").concat(r,", ").concat(this.roundA,")")},t.prototype.toPercentageRgb=function(){var e=function(n){return"".concat(Math.round(Nt(n,255)*100),"%")};return{r:e(this.r),g:e(this.g),b:e(this.b),a:this.a}},t.prototype.toPercentageRgbString=function(){var e=function(n){return Math.round(Nt(n,255)*100)};return this.a===1?"rgb(".concat(e(this.r),"%, ").concat(e(this.g),"%, ").concat(e(this.b),"%)"):"rgba(".concat(e(this.r),"%, ").concat(e(this.g),"%, ").concat(e(this.b),"%, ").concat(this.roundA,")")},t.prototype.toName=function(){if(this.a===0)return"transparent";if(this.a<1)return!1;for(var e="#"+oO(this.r,this.g,this.b,!1),n=0,r=Object.entries(Py);n<r.length;n++){var i=r[n],o=i[0],s=i[1];if(e===s)return o}return!1},t.prototype.toString=function(e){var n=Boolean(e);e=e!=null?e:this.format;var r=!1,i=this.a<1&&this.a>=0,o=!n&&i&&(e.startsWith("hex")||e==="name");return o?e==="name"&&this.a===0?this.toName():this.toRgbString():(e==="rgb"&&(r=this.toRgbString()),e==="prgb"&&(r=this.toPercentageRgbString()),(e==="hex"||e==="hex6")&&(r=this.toHexString()),e==="hex3"&&(r=this.toHexString(!0)),e==="hex4"&&(r=this.toHex8String(!0)),e==="hex8"&&(r=this.toHex8String()),e==="name"&&(r=this.toName()),e==="hsl"&&(r=this.toHslString()),e==="hsv"&&(r=this.toHsvString()),r||this.toHexString())},t.prototype.toNumber=function(){return(Math.round(this.r)<<16)+(Math.round(this.g)<<8)+Math.round(this.b)},t.prototype.clone=function(){return new t(this.toString())},t.prototype.lighten=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.l+=e/100,n.l=Of(n.l),new t(n)},t.prototype.brighten=function(e){e===void 0&&(e=10);var n=this.toRgb();return n.r=Math.max(0,Math.min(255,n.r-Math.round(255*-(e/100)))),n.g=Math.max(0,Math.min(255,n.g-Math.round(255*-(e/100)))),n.b=Math.max(0,Math.min(255,n.b-Math.round(255*-(e/100)))),new t(n)},t.prototype.darken=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.l-=e/100,n.l=Of(n.l),new t(n)},t.prototype.tint=function(e){return e===void 0&&(e=10),this.mix("white",e)},t.prototype.shade=function(e){return e===void 0&&(e=10),this.mix("black",e)},t.prototype.desaturate=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.s-=e/100,n.s=Of(n.s),new t(n)},t.prototype.saturate=function(e){e===void 0&&(e=10);var n=this.toHsl();return n.s+=e/100,n.s=Of(n.s),new t(n)},t.prototype.greyscale=function(){return this.desaturate(100)},t.prototype.spin=function(e){var n=this.toHsl(),r=(n.h+e)%360;return n.h=r<0?360+r:r,new t(n)},t.prototype.mix=function(e,n){n===void 0&&(n=50);var r=this.toRgb(),i=new t(e).toRgb(),o=n/100,s={r:(i.r-r.r)*o+r.r,g:(i.g-r.g)*o+r.g,b:(i.b-r.b)*o+r.b,a:(i.a-r.a)*o+r.a};return new t(s)},t.prototype.analogous=function(e,n){e===void 0&&(e=6),n===void 0&&(n=30);var r=this.toHsl(),i=360/n,o=[this];for(r.h=(r.h-(i*e>>1)+720)%360;--e;)r.h=(r.h+i)%360,o.push(new t(r));return o},t.prototype.complement=function(){var e=this.toHsl();return e.h=(e.h+180)%360,new t(e)},t.prototype.monochromatic=function(e){e===void 0&&(e=6);for(var n=this.toHsv(),r=n.h,i=n.s,o=n.v,s=[],a=1/e;e--;)s.push(new t({h:r,s:i,v:o})),o=(o+a)%1;return s},t.prototype.splitcomplement=function(){var e=this.toHsl(),n=e.h;return[this,new t({h:(n+72)%360,s:e.s,l:e.l}),new t({h:(n+216)%360,s:e.s,l:e.l})]},t.prototype.onBackground=function(e){var n=this.toRgb(),r=new t(e).toRgb();return new t({r:r.r+(n.r-r.r)*n.a,g:r.g+(n.g-r.g)*n.a,b:r.b+(n.b-r.b)*n.a})},t.prototype.triad=function(){return this.polyad(3)},t.prototype.tetrad=function(){return this.polyad(4)},t.prototype.polyad=function(e){for(var n=this.toHsl(),r=n.h,i=[this],o=360/e,s=1;s<e;s++)i.push(new t({h:(r+s*o)%360,s:n.s,l:n.l}));return i},t.prototype.equals=function(e){return this.toRgbString()===new t(e).toRgbString()},t}();function i9(t){if(t===void 0&&(t={}),t.count!==void 0&&t.count!==null){var e=t.count,n=[];for(t.count=void 0;e>n.length;)t.count=null,t.seed&&(t.seed+=1),n.push(i9(t));return t.count=e,n}var r=V8(t.hue,t.seed),i=L8(r,t),o=X8(r,i,t),s={h:r,s:i,v:o};return t.alpha!==void 0&&(s.a=t.alpha),new gd(s)}function V8(t,e){var n=A8(t),r=Lp(n,e);return r<0&&(r=360+r),r}function L8(t,e){if(e.hue==="monochrome")return 0;if(e.luminosity==="random")return Lp([0,100],e.seed);var n=o9(t).saturationRange,r=n[0],i=n[1];switch(e.luminosity){case"bright":r=55;break;case"dark":r=i-10;break;case"light":i=55;break}return Lp([r,i],e.seed)}function X8(t,e,n){var r=B8(t,e),i=100;switch(n.luminosity){case"dark":i=r+20;break;case"light":r=(i+r)/2;break;case"random":r=0,i=100;break}return Lp([r,i],n.seed)}function B8(t,e){for(var n=o9(t).lowerBounds,r=0;r<n.length-1;r++){var i=n[r][0],o=n[r][1],s=n[r+1][0],a=n[r+1][1];if(e>=i&&e<=s){var l=(a-o)/(s-i),c=o-l*i;return l*e+c}}return 0}function A8(t){var e=parseInt(t,10);if(!Number.isNaN(e)&&e<360&&e>0)return[e,e];if(typeof t=="string"){var n=a9.find(function(s){return s.name===t});if(n){var r=s9(n);if(r.hueRange)return r.hueRange}var i=new gd(t);if(i.isValid){var o=i.toHsv().h;return[o,o]}}return[0,360]}function o9(t){t>=334&&t<=360&&(t-=360);for(var e=0,n=a9;e<n.length;e++){var r=n[e],i=s9(r);if(i.hueRange&&t>=i.hueRange[0]&&t<=i.hueRange[1])return i}throw Error("Color not found")}function Lp(t,e){if(e===void 0)return Math.floor(t[0]+Math.random()*(t[1]+1-t[0]));var n=t[1]||1,r=t[0]||0;e=(e*9301+49297)%233280;var i=e/233280;return Math.floor(r+i*(n-r))}function s9(t){var e=t.lowerBounds[0][0],n=t.lowerBounds[t.lowerBounds.length-1][0],r=t.lowerBounds[t.lowerBounds.length-1][1],i=t.lowerBounds[0][1];return{name:t.name,hueRange:t.hueRange,lowerBounds:t.lowerBounds,saturationRange:[e,n],brightnessRange:[r,i]}}var a9=[{name:"monochrome",hueRange:null,lowerBounds:[[0,0],[100,0]]},{name:"red",hueRange:[-26,18],lowerBounds:[[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]},{name:"orange",hueRange:[19,46],lowerBounds:[[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]},{name:"yellow",hueRange:[47,62],lowerBounds:[[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]},{name:"green",hueRange:[63,178],lowerBounds:[[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]},{name:"blue",hueRange:[179,257],lowerBounds:[[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]},{name:"purple",hueRange:[258,282],lowerBounds:[[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]},{name:"pink",hueRange:[283,334],lowerBounds:[[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]}];function Z8(t,e,n,r,i){for(e=e.split?e.split("."):e,r=0;r<e.length;r++)t=t?t[e[r]]:i;return t===i?n:t}var G8=t=>Object.keys(t).length===0,Jt=(t,e,n)=>{const r=Z8(t,`colors.${e}`,e),{isValid:i}=new gd(r);return i?r:n},W8=t=>e=>{const n=Jt(e,t);return new gd(n).isDark()?"dark":"light"},Y8=t=>e=>W8(t)(e)==="dark",kl=(t,e)=>n=>{const r=Jt(n,t);return new gd(r).setAlpha(e).toRgbString()};function aO(t="1rem",e="rgba(255, 255, 255, 0.15)"){return{backgroundImage:`linear-gradient(
    45deg,
    ${e} 25%,
    transparent 25%,
    transparent 50%,
    ${e} 50%,
    ${e} 75%,
    transparent 75%,
    transparent
  )`,backgroundSize:`${t} ${t}`}}function F8(t){const e=i9().toHexString();return!t||G8(t)?e:t.string&&t.colors?j8(t.string,t.colors):t.string&&!t.colors?H8(t.string):t.colors&&!t.string?D8(t.colors):e}function H8(t){let e=0;if(t.length===0)return e.toString();for(let r=0;r<t.length;r+=1)e=t.charCodeAt(r)+((e<<5)-e),e=e&e;let n="#";for(let r=0;r<3;r+=1){const i=e>>r*8&255;n+=`00${i.toString(16)}`.substr(-2)}return n}function j8(t,e){let n=0;if(t.length===0)return e[0];for(let r=0;r<t.length;r+=1)n=t.charCodeAt(r)+((n<<5)-n),n=n&n;return n=(n%e.length+e.length)%e.length,e[n]}function D8(t){return t[Math.floor(Math.random()*t.length)]}function te(t,e){return n=>n.colorMode==="dark"?e:t}function _x(t){const{orientation:e,vertical:n,horizontal:r}=t;return e?e==="vertical"?n:r:{}}function U8(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}function l9(t){return U8(t)&&t.reference?t.reference:String(t)}var rg=(t,...e)=>e.map(l9).join(` ${t} `).replace(/calc/g,""),lO=(...t)=>`calc(${rg("+",...t)})`,cO=(...t)=>`calc(${rg("-",...t)})`,Cy=(...t)=>`calc(${rg("*",...t)})`,uO=(...t)=>`calc(${rg("/",...t)})`,dO=t=>{const e=l9(t);return e!=null&&!Number.isNaN(parseFloat(e))?String(e).startsWith("-")?String(e).slice(1):`-${e}`:Cy(e,-1)},gi=Object.assign(t=>({add:(...e)=>gi(lO(t,...e)),subtract:(...e)=>gi(cO(t,...e)),multiply:(...e)=>gi(Cy(t,...e)),divide:(...e)=>gi(uO(t,...e)),negate:()=>gi(dO(t)),toString:()=>t.toString()}),{add:lO,subtract:cO,multiply:Cy,divide:uO,negate:dO});function K8(t){return!Number.isInteger(parseFloat(t.toString()))}function q8(t,e="-"){return t.replace(/\s+/g,e)}function c9(t){const e=q8(t.toString());return e.includes("\\.")?t:K8(t)?e.replace(".","\\."):t}function Q8(t,e=""){return[e,c9(t)].filter(Boolean).join("-")}function J8(t,e){return`var(${c9(t)}${e?`, ${e}`:""})`}function _8(t,e=""){return`--${Q8(t,e)}`}function gt(t,e){const n=_8(t,e==null?void 0:e.prefix);return{variable:n,reference:J8(n,$8(e==null?void 0:e.fallback))}}function $8(t){return typeof t=="string"?t:t==null?void 0:t.reference}var{definePartsStyle:eD,defineMultiStyleConfig:tD}=Ge(Jj.keys),nD={borderTopWidth:"1px",borderColor:"inherit",_last:{borderBottomWidth:"1px"}},rD={transitionProperty:"common",transitionDuration:"normal",fontSize:"md",_focusVisible:{boxShadow:"outline"},_hover:{bg:"blackAlpha.50"},_disabled:{opacity:.4,cursor:"not-allowed"},px:"4",py:"2"},iD={pt:"2",px:"4",pb:"5"},oD={fontSize:"1.25em"},sD=eD({container:nD,button:rD,panel:iD,icon:oD}),aD=tD({baseStyle:sD}),{definePartsStyle:vd,defineMultiStyleConfig:lD}=Ge(_j.keys),In=Me("alert-fg"),Ri=Me("alert-bg"),cD=vd({container:{bg:Ri.reference,px:"4",py:"3"},title:{fontWeight:"bold",lineHeight:"6",marginEnd:"2"},description:{lineHeight:"6"},icon:{color:In.reference,flexShrink:0,marginEnd:"3",w:"5",h:"6"},spinner:{color:In.reference,flexShrink:0,marginEnd:"3",w:"5",h:"5"}});function $x(t){const{theme:e,colorScheme:n}=t,r=kl(`${n}.200`,.16)(e);return{light:`colors.${n}.100`,dark:r}}var uD=vd(t=>{const{colorScheme:e}=t,n=$x(t);return{container:{[In.variable]:`colors.${e}.500`,[Ri.variable]:n.light,_dark:{[In.variable]:`colors.${e}.200`,[Ri.variable]:n.dark}}}}),dD=vd(t=>{const{colorScheme:e}=t,n=$x(t);return{container:{[In.variable]:`colors.${e}.500`,[Ri.variable]:n.light,_dark:{[In.variable]:`colors.${e}.200`,[Ri.variable]:n.dark},paddingStart:"3",borderStartWidth:"4px",borderStartColor:In.reference}}}),fD=vd(t=>{const{colorScheme:e}=t,n=$x(t);return{container:{[In.variable]:`colors.${e}.500`,[Ri.variable]:n.light,_dark:{[In.variable]:`colors.${e}.200`,[Ri.variable]:n.dark},pt:"2",borderTopWidth:"4px",borderTopColor:In.reference}}}),hD=vd(t=>{const{colorScheme:e}=t;return{container:{[In.variable]:"colors.white",[Ri.variable]:`colors.${e}.500`,_dark:{[In.variable]:"colors.gray.900",[Ri.variable]:`colors.${e}.200`},color:In.reference}}}),pD={subtle:uD,"left-accent":dD,"top-accent":fD,solid:hD},mD=lD({baseStyle:cD,variants:pD,defaultProps:{variant:"subtle",colorScheme:"blue"}}),u9={px:"1px",.5:"0.125rem",1:"0.25rem",1.5:"0.375rem",2:"0.5rem",2.5:"0.625rem",3:"0.75rem",3.5:"0.875rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem",12:"3rem",14:"3.5rem",16:"4rem",20:"5rem",24:"6rem",28:"7rem",32:"8rem",36:"9rem",40:"10rem",44:"11rem",48:"12rem",52:"13rem",56:"14rem",60:"15rem",64:"16rem",72:"18rem",80:"20rem",96:"24rem"},gD={max:"max-content",min:"min-content",full:"100%","3xs":"14rem","2xs":"16rem",xs:"20rem",sm:"24rem",md:"28rem",lg:"32rem",xl:"36rem","2xl":"42rem","3xl":"48rem","4xl":"56rem","5xl":"64rem","6xl":"72rem","7xl":"80rem","8xl":"90rem",prose:"60ch"},vD={sm:"640px",md:"768px",lg:"1024px",xl:"1280px"},bD={...u9,...gD,container:vD},d9=bD,yD=t=>typeof t=="function";function en(t,...e){return yD(t)?t(...e):t}var{definePartsStyle:f9,defineMultiStyleConfig:xD}=Ge($j.keys),Ua=Me("avatar-border-color"),A0=Me("avatar-bg"),SD={borderRadius:"full",border:"0.2em solid",[Ua.variable]:"white",_dark:{[Ua.variable]:"colors.gray.800"},borderColor:Ua.reference},kD={[A0.variable]:"colors.gray.200",_dark:{[A0.variable]:"colors.whiteAlpha.400"},bgColor:A0.reference},fO=Me("avatar-background"),wD=t=>{const{name:e,theme:n}=t,r=e?F8({string:e}):"colors.gray.400",i=Y8(r)(n);let o="white";return i||(o="gray.800"),{bg:fO.reference,"&:not([data-loaded])":{[fO.variable]:r},color:o,[Ua.variable]:"colors.white",_dark:{[Ua.variable]:"colors.gray.800"},borderColor:Ua.reference,verticalAlign:"top"}},OD=f9(t=>({badge:en(SD,t),excessLabel:en(kD,t),container:en(wD,t)}));function Zi(t){const e=t!=="100%"?d9[t]:void 0;return f9({container:{width:t,height:t,fontSize:`calc(${e!=null?e:t} / 2.5)`},excessLabel:{width:t,height:t},label:{fontSize:`calc(${e!=null?e:t} / 2.5)`,lineHeight:t!=="100%"?e!=null?e:t:void 0}})}var TD={"2xs":Zi(4),xs:Zi(6),sm:Zi(8),md:Zi(12),lg:Zi(16),xl:Zi(24),"2xl":Zi(32),full:Zi("100%")},PD=xD({baseStyle:OD,sizes:TD,defaultProps:{size:"md"}}),CD={px:1,textTransform:"uppercase",fontSize:"xs",borderRadius:"sm",fontWeight:"bold"},Ka=Me("badge-bg"),Hr=Me("badge-color"),MD=t=>{const{colorScheme:e,theme:n}=t,r=kl(`${e}.500`,.6)(n);return{[Ka.variable]:`colors.${e}.500`,[Hr.variable]:"colors.white",_dark:{[Ka.variable]:r,[Hr.variable]:"colors.whiteAlpha.800"},bg:Ka.reference,color:Hr.reference}},RD=t=>{const{colorScheme:e,theme:n}=t,r=kl(`${e}.200`,.16)(n);return{[Ka.variable]:`colors.${e}.100`,[Hr.variable]:`colors.${e}.800`,_dark:{[Ka.variable]:r,[Hr.variable]:`colors.${e}.200`},bg:Ka.reference,color:Hr.reference}},ID=t=>{const{colorScheme:e,theme:n}=t,r=kl(`${e}.200`,.8)(n);return{[Hr.variable]:`colors.${e}.500`,_dark:{[Hr.variable]:r},color:Hr.reference,boxShadow:`inset 0 0 0px 1px ${Hr.reference}`}},zD={solid:MD,subtle:RD,outline:ID},Dc={baseStyle:CD,variants:zD,defaultProps:{variant:"subtle",colorScheme:"gray"}},{defineMultiStyleConfig:ED,definePartsStyle:ND}=Ge(e8.keys),VD={transitionProperty:"common",transitionDuration:"fast",transitionTimingFunction:"ease-out",cursor:"pointer",textDecoration:"none",outline:"none",color:"inherit",_hover:{textDecoration:"underline"},_focusVisible:{boxShadow:"outline"}},LD=ND({link:VD}),XD=ED({baseStyle:LD}),BD={lineHeight:"1.2",borderRadius:"md",fontWeight:"semibold",transitionProperty:"common",transitionDuration:"normal",_focusVisible:{boxShadow:"outline"},_disabled:{opacity:.4,cursor:"not-allowed",boxShadow:"none"},_hover:{_disabled:{bg:"initial"}}},h9=t=>{const{colorScheme:e,theme:n}=t;if(e==="gray")return{color:te("inherit","whiteAlpha.900")(t),_hover:{bg:te("gray.100","whiteAlpha.200")(t)},_active:{bg:te("gray.200","whiteAlpha.300")(t)}};const r=kl(`${e}.200`,.12)(n),i=kl(`${e}.200`,.24)(n);return{color:te(`${e}.600`,`${e}.200`)(t),bg:"transparent",_hover:{bg:te(`${e}.50`,r)(t)},_active:{bg:te(`${e}.100`,i)(t)}}},AD=t=>{const{colorScheme:e}=t,n=te("gray.200","whiteAlpha.300")(t);return{border:"1px solid",borderColor:e==="gray"?n:"currentColor",".chakra-button__group[data-attached] > &:not(:last-of-type)":{marginEnd:"-1px"},...en(h9,t)}},ZD={yellow:{bg:"yellow.400",color:"black",hoverBg:"yellow.500",activeBg:"yellow.600"},cyan:{bg:"cyan.400",color:"black",hoverBg:"cyan.500",activeBg:"cyan.600"}},GD=t=>{var a;const{colorScheme:e}=t;if(e==="gray"){const l=te("gray.100","whiteAlpha.200")(t);return{bg:l,_hover:{bg:te("gray.200","whiteAlpha.300")(t),_disabled:{bg:l}},_active:{bg:te("gray.300","whiteAlpha.400")(t)}}}const{bg:n=`${e}.500`,color:r="white",hoverBg:i=`${e}.600`,activeBg:o=`${e}.700`}=(a=ZD[e])!=null?a:{},s=te(n,`${e}.200`)(t);return{bg:s,color:te(r,"gray.800")(t),_hover:{bg:te(i,`${e}.300`)(t),_disabled:{bg:s}},_active:{bg:te(o,`${e}.400`)(t)}}},WD=t=>{const{colorScheme:e}=t;return{padding:0,height:"auto",lineHeight:"normal",verticalAlign:"baseline",color:te(`${e}.500`,`${e}.200`)(t),_hover:{textDecoration:"underline",_disabled:{textDecoration:"none"}},_active:{color:te(`${e}.700`,`${e}.500`)(t)}}},YD={bg:"none",color:"inherit",display:"inline",lineHeight:"inherit",m:"0",p:"0"},FD={ghost:h9,outline:AD,solid:GD,link:WD,unstyled:YD},HD={lg:{h:"12",minW:"12",fontSize:"lg",px:"6"},md:{h:"10",minW:"10",fontSize:"md",px:"4"},sm:{h:"8",minW:"8",fontSize:"sm",px:"3"},xs:{h:"6",minW:"6",fontSize:"xs",px:"2"}},jD={baseStyle:BD,variants:FD,sizes:HD,defaultProps:{variant:"solid",size:"md",colorScheme:"gray"}},{definePartsStyle:ks,defineMultiStyleConfig:DD}=Ge(S8.keys),Xp=Me("card-bg"),qa=Me("card-padding"),UD=ks({container:{[Xp.variable]:"chakra-body-bg",backgroundColor:Xp.reference,color:"chakra-body-text"},body:{padding:qa.reference,flex:"1 1 0%"},header:{padding:qa.reference},footer:{padding:qa.reference}}),KD={sm:ks({container:{borderRadius:"base",[qa.variable]:"space.3"}}),md:ks({container:{borderRadius:"md",[qa.variable]:"space.5"}}),lg:ks({container:{borderRadius:"xl",[qa.variable]:"space.7"}})},qD={elevated:ks({container:{boxShadow:"base",_dark:{[Xp.variable]:"colors.gray.700"}}}),outline:ks({container:{borderWidth:"1px",borderColor:"chakra-border-color"}}),filled:ks({container:{[Xp.variable]:"colors.chakra-subtle-bg"}}),unstyled:{body:{padding:0},header:{padding:0},footer:{padding:0}}},QD=DD({baseStyle:UD,variants:qD,sizes:KD,defaultProps:{variant:"elevated",size:"md"}}),{definePartsStyle:bh,defineMultiStyleConfig:JD}=Ge(t8.keys),Uc=Me("checkbox-size"),_D=t=>{const{colorScheme:e}=t;return{w:Uc.reference,h:Uc.reference,transitionProperty:"box-shadow",transitionDuration:"normal",border:"2px solid",borderRadius:"sm",borderColor:"inherit",color:"white",_checked:{bg:te(`${e}.500`,`${e}.200`)(t),borderColor:te(`${e}.500`,`${e}.200`)(t),color:te("white","gray.900")(t),_hover:{bg:te(`${e}.600`,`${e}.300`)(t),borderColor:te(`${e}.600`,`${e}.300`)(t)},_disabled:{borderColor:te("gray.200","transparent")(t),bg:te("gray.200","whiteAlpha.300")(t),color:te("gray.500","whiteAlpha.500")(t)}},_indeterminate:{bg:te(`${e}.500`,`${e}.200`)(t),borderColor:te(`${e}.500`,`${e}.200`)(t),color:te("white","gray.900")(t)},_disabled:{bg:te("gray.100","whiteAlpha.100")(t),borderColor:te("gray.100","transparent")(t)},_focusVisible:{boxShadow:"outline"},_invalid:{borderColor:te("red.500","red.300")(t)}}},$D={_disabled:{cursor:"not-allowed"}},eU={userSelect:"none",_disabled:{opacity:.4}},tU={transitionProperty:"transform",transitionDuration:"normal"},nU=bh(t=>({icon:tU,container:$D,control:en(_D,t),label:eU})),rU={sm:bh({control:{[Uc.variable]:"sizes.3"},label:{fontSize:"sm"},icon:{fontSize:"3xs"}}),md:bh({control:{[Uc.variable]:"sizes.4"},label:{fontSize:"md"},icon:{fontSize:"2xs"}}),lg:bh({control:{[Uc.variable]:"sizes.5"},label:{fontSize:"lg"},icon:{fontSize:"2xs"}})},Bp=JD({baseStyle:nU,sizes:rU,defaultProps:{size:"md",colorScheme:"blue"}}),Kc=gt("close-button-size"),lc=gt("close-button-bg"),iU={w:[Kc.reference],h:[Kc.reference],borderRadius:"md",transitionProperty:"common",transitionDuration:"normal",_disabled:{opacity:.4,cursor:"not-allowed",boxShadow:"none"},_hover:{[lc.variable]:"colors.blackAlpha.100",_dark:{[lc.variable]:"colors.whiteAlpha.100"}},_active:{[lc.variable]:"colors.blackAlpha.200",_dark:{[lc.variable]:"colors.whiteAlpha.200"}},_focusVisible:{boxShadow:"outline"},bg:lc.reference},oU={lg:{[Kc.variable]:"sizes.10",fontSize:"md"},md:{[Kc.variable]:"sizes.8",fontSize:"xs"},sm:{[Kc.variable]:"sizes.6",fontSize:"2xs"}},sU={baseStyle:iU,sizes:oU,defaultProps:{size:"md"}},{variants:aU,defaultProps:lU}=Dc,cU={fontFamily:"mono",fontSize:"sm",px:"0.2em",borderRadius:"sm"},uU={baseStyle:cU,variants:aU,defaultProps:lU},dU={w:"100%",mx:"auto",maxW:"prose",px:"4"},fU={baseStyle:dU},hU={opacity:.6,borderColor:"inherit"},pU={borderStyle:"solid"},mU={borderStyle:"dashed"},gU={solid:pU,dashed:mU},vU={baseStyle:hU,variants:gU,defaultProps:{variant:"solid"}},{definePartsStyle:My,defineMultiStyleConfig:bU}=Ge(n8.keys),Z0=Me("drawer-bg"),G0=Me("drawer-box-shadow");function sa(t){return My(t==="full"?{dialog:{maxW:"100vw",h:"100vh"}}:{dialog:{maxW:t}})}var yU={bg:"blackAlpha.600",zIndex:"overlay"},xU={display:"flex",zIndex:"modal",justifyContent:"center"},SU=t=>{const{isFullHeight:e}=t;return{...e&&{height:"100vh"},zIndex:"modal",maxH:"100vh",color:"inherit",[Z0.variable]:"colors.white",[G0.variable]:"shadows.lg",_dark:{[Z0.variable]:"colors.gray.700",[G0.variable]:"shadows.dark-lg"},bg:Z0.reference,boxShadow:G0.reference}},kU={px:"6",py:"4",fontSize:"xl",fontWeight:"semibold"},wU={position:"absolute",top:"2",insetEnd:"3"},OU={px:"6",py:"2",flex:"1",overflow:"auto"},TU={px:"6",py:"4"},PU=My(t=>({overlay:yU,dialogContainer:xU,dialog:en(SU,t),header:kU,closeButton:wU,body:OU,footer:TU})),CU={xs:sa("xs"),sm:sa("md"),md:sa("lg"),lg:sa("2xl"),xl:sa("4xl"),full:sa("full")},MU=bU({baseStyle:PU,sizes:CU,defaultProps:{size:"xs"}}),{definePartsStyle:RU,defineMultiStyleConfig:IU}=Ge(r8.keys),zU={borderRadius:"md",py:"1",transitionProperty:"common",transitionDuration:"normal"},EU={borderRadius:"md",py:"1",transitionProperty:"common",transitionDuration:"normal",width:"full",_focusVisible:{boxShadow:"outline"},_placeholder:{opacity:.6}},NU={borderRadius:"md",py:"1",transitionProperty:"common",transitionDuration:"normal",width:"full",_focusVisible:{boxShadow:"outline"},_placeholder:{opacity:.6}},VU=RU({preview:zU,input:EU,textarea:NU}),LU=IU({baseStyle:VU}),{definePartsStyle:XU,defineMultiStyleConfig:BU}=Ge(i8.keys),Qa=Me("form-control-color"),AU={marginStart:"1",[Qa.variable]:"colors.red.500",_dark:{[Qa.variable]:"colors.red.300"},color:Qa.reference},ZU={mt:"2",[Qa.variable]:"colors.gray.600",_dark:{[Qa.variable]:"colors.whiteAlpha.600"},color:Qa.reference,lineHeight:"normal",fontSize:"sm"},GU=XU({container:{width:"100%",position:"relative"},requiredIndicator:AU,helperText:ZU}),WU=BU({baseStyle:GU}),{definePartsStyle:YU,defineMultiStyleConfig:FU}=Ge(o8.keys),Ja=Me("form-error-color"),HU={[Ja.variable]:"colors.red.500",_dark:{[Ja.variable]:"colors.red.300"},color:Ja.reference,mt:"2",fontSize:"sm",lineHeight:"normal"},jU={marginEnd:"0.5em",[Ja.variable]:"colors.red.500",_dark:{[Ja.variable]:"colors.red.300"},color:Ja.reference},DU=YU({text:HU,icon:jU}),UU=FU({baseStyle:DU}),KU={fontSize:"md",marginEnd:"3",mb:"2",fontWeight:"medium",transitionProperty:"common",transitionDuration:"normal",opacity:1,_disabled:{opacity:.4}},qU={baseStyle:KU},QU={fontFamily:"heading",fontWeight:"bold"},JU={"4xl":{fontSize:["6xl",null,"7xl"],lineHeight:1},"3xl":{fontSize:["5xl",null,"6xl"],lineHeight:1},"2xl":{fontSize:["4xl",null,"5xl"],lineHeight:[1.2,null,1]},xl:{fontSize:["3xl",null,"4xl"],lineHeight:[1.33,null,1.2]},lg:{fontSize:["2xl",null,"3xl"],lineHeight:[1.33,null,1.2]},md:{fontSize:"xl",lineHeight:1.2},sm:{fontSize:"md",lineHeight:1.2},xs:{fontSize:"sm",lineHeight:1.2}},_U={baseStyle:QU,sizes:JU,defaultProps:{size:"xl"}},{definePartsStyle:yi,defineMultiStyleConfig:$U}=Ge(s8.keys),eK=yi({field:{width:"100%",minWidth:0,outline:0,position:"relative",appearance:"none",transitionProperty:"common",transitionDuration:"normal",_disabled:{opacity:.4,cursor:"not-allowed"}}}),Gi={lg:{fontSize:"lg",px:"4",h:"12",borderRadius:"md"},md:{fontSize:"md",px:"4",h:"10",borderRadius:"md"},sm:{fontSize:"sm",px:"3",h:"8",borderRadius:"sm"},xs:{fontSize:"xs",px:"2",h:"6",borderRadius:"sm"}},tK={lg:yi({field:Gi.lg,addon:Gi.lg}),md:yi({field:Gi.md,addon:Gi.md}),sm:yi({field:Gi.sm,addon:Gi.sm}),xs:yi({field:Gi.xs,addon:Gi.xs})};function eS(t){const{focusBorderColor:e,errorBorderColor:n}=t;return{focusBorderColor:e||te("blue.500","blue.300")(t),errorBorderColor:n||te("red.500","red.300")(t)}}var nK=yi(t=>{const{theme:e}=t,{focusBorderColor:n,errorBorderColor:r}=eS(t);return{field:{border:"1px solid",borderColor:"inherit",bg:"inherit",_hover:{borderColor:te("gray.300","whiteAlpha.400")(t)},_readOnly:{boxShadow:"none !important",userSelect:"all"},_invalid:{borderColor:Jt(e,r),boxShadow:`0 0 0 1px ${Jt(e,r)}`},_focusVisible:{zIndex:1,borderColor:Jt(e,n),boxShadow:`0 0 0 1px ${Jt(e,n)}`}},addon:{border:"1px solid",borderColor:te("inherit","whiteAlpha.50")(t),bg:te("gray.100","whiteAlpha.300")(t)}}}),rK=yi(t=>{const{theme:e}=t,{focusBorderColor:n,errorBorderColor:r}=eS(t);return{field:{border:"2px solid",borderColor:"transparent",bg:te("gray.100","whiteAlpha.50")(t),_hover:{bg:te("gray.200","whiteAlpha.100")(t)},_readOnly:{boxShadow:"none !important",userSelect:"all"},_invalid:{borderColor:Jt(e,r)},_focusVisible:{bg:"transparent",borderColor:Jt(e,n)}},addon:{border:"2px solid",borderColor:"transparent",bg:te("gray.100","whiteAlpha.50")(t)}}}),iK=yi(t=>{const{theme:e}=t,{focusBorderColor:n,errorBorderColor:r}=eS(t);return{field:{borderBottom:"1px solid",borderColor:"inherit",borderRadius:"0",px:"0",bg:"transparent",_readOnly:{boxShadow:"none !important",userSelect:"all"},_invalid:{borderColor:Jt(e,r),boxShadow:`0px 1px 0px 0px ${Jt(e,r)}`},_focusVisible:{borderColor:Jt(e,n),boxShadow:`0px 1px 0px 0px ${Jt(e,n)}`}},addon:{borderBottom:"2px solid",borderColor:"inherit",borderRadius:"0",px:"0",bg:"transparent"}}}),oK=yi({field:{bg:"transparent",px:"0",height:"auto"},addon:{bg:"transparent",px:"0",height:"auto"}}),sK={outline:nK,filled:rK,flushed:iK,unstyled:oK},xe=$U({baseStyle:eK,sizes:tK,variants:sK,defaultProps:{size:"md",variant:"outline"}}),W0=Me("kbd-bg"),aK={[W0.variable]:"colors.gray.100",_dark:{[W0.variable]:"colors.whiteAlpha.100"},bg:W0.reference,borderRadius:"md",borderWidth:"1px",borderBottomWidth:"3px",fontSize:"0.8em",fontWeight:"bold",lineHeight:"normal",px:"0.4em",whiteSpace:"nowrap"},lK={baseStyle:aK},cK={transitionProperty:"common",transitionDuration:"fast",transitionTimingFunction:"ease-out",cursor:"pointer",textDecoration:"none",outline:"none",color:"inherit",_hover:{textDecoration:"underline"},_focusVisible:{boxShadow:"outline"}},uK={baseStyle:cK},{defineMultiStyleConfig:dK,definePartsStyle:fK}=Ge(a8.keys),hK={marginEnd:"2",display:"inline",verticalAlign:"text-bottom"},pK=fK({icon:hK}),mK=dK({baseStyle:pK}),{defineMultiStyleConfig:gK,definePartsStyle:vK}=Ge(l8.keys),Vr=Me("menu-bg"),Y0=Me("menu-shadow"),bK={[Vr.variable]:"#fff",[Y0.variable]:"shadows.sm",_dark:{[Vr.variable]:"colors.gray.700",[Y0.variable]:"shadows.dark-lg"},color:"inherit",minW:"3xs",py:"2",zIndex:1,borderRadius:"md",borderWidth:"1px",bg:Vr.reference,boxShadow:Y0.reference},yK={py:"1.5",px:"3",transitionProperty:"background",transitionDuration:"ultra-fast",transitionTimingFunction:"ease-in",_focus:{[Vr.variable]:"colors.gray.100",_dark:{[Vr.variable]:"colors.whiteAlpha.100"}},_active:{[Vr.variable]:"colors.gray.200",_dark:{[Vr.variable]:"colors.whiteAlpha.200"}},_expanded:{[Vr.variable]:"colors.gray.100",_dark:{[Vr.variable]:"colors.whiteAlpha.100"}},_disabled:{opacity:.4,cursor:"not-allowed"},bg:Vr.reference},xK={mx:4,my:2,fontWeight:"semibold",fontSize:"sm"},SK={opacity:.6},kK={border:0,borderBottom:"1px solid",borderColor:"inherit",my:"2",opacity:.6},wK={transitionProperty:"common",transitionDuration:"normal"},OK=vK({button:wK,list:bK,item:yK,groupTitle:xK,command:SK,divider:kK}),TK=gK({baseStyle:OK}),{defineMultiStyleConfig:PK,definePartsStyle:Ry}=Ge(c8.keys),CK={bg:"blackAlpha.600",zIndex:"modal"},MK=t=>{const{isCentered:e,scrollBehavior:n}=t;return{display:"flex",zIndex:"modal",justifyContent:"center",alignItems:e?"center":"flex-start",overflow:n==="inside"?"hidden":"auto"}},RK=t=>{const{scrollBehavior:e}=t;return{borderRadius:"md",bg:te("white","gray.700")(t),color:"inherit",my:"16",zIndex:"modal",maxH:e==="inside"?"calc(100% - 7.5rem)":void 0,boxShadow:te("lg","dark-lg")(t)}},IK={px:"6",py:"4",fontSize:"xl",fontWeight:"semibold"},zK={position:"absolute",top:"2",insetEnd:"3"},EK=t=>{const{scrollBehavior:e}=t;return{px:"6",py:"2",flex:"1",overflow:e==="inside"?"auto":void 0}},NK={px:"6",py:"4"},VK=Ry(t=>({overlay:CK,dialogContainer:en(MK,t),dialog:en(RK,t),header:IK,closeButton:zK,body:en(EK,t),footer:NK}));function ar(t){return Ry(t==="full"?{dialog:{maxW:"100vw",minH:"$100vh",my:"0",borderRadius:"0"}}:{dialog:{maxW:t}})}var LK={xs:ar("xs"),sm:ar("sm"),md:ar("md"),lg:ar("lg"),xl:ar("xl"),"2xl":ar("2xl"),"3xl":ar("3xl"),"4xl":ar("4xl"),"5xl":ar("5xl"),"6xl":ar("6xl"),full:ar("full")},XK=PK({baseStyle:VK,sizes:LK,defaultProps:{size:"md"}}),BK={letterSpacings:{tighter:"-0.05em",tight:"-0.025em",normal:"0",wide:"0.025em",wider:"0.05em",widest:"0.1em"},lineHeights:{normal:"normal",none:1,shorter:1.25,short:1.375,base:1.5,tall:1.625,taller:"2",3:".75rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem"},fontWeights:{hairline:100,thin:200,light:300,normal:400,medium:500,semibold:600,bold:700,extrabold:800,black:900},fonts:{heading:'-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'},fontSizes:{"3xs":"0.45rem","2xs":"0.625rem",xs:"0.75rem",sm:"0.875rem",md:"1rem",lg:"1.125rem",xl:"1.25rem","2xl":"1.5rem","3xl":"1.875rem","4xl":"2.25rem","5xl":"3rem","6xl":"3.75rem","7xl":"4.5rem","8xl":"6rem","9xl":"8rem"}},p9=BK,{defineMultiStyleConfig:AK,definePartsStyle:m9}=Ge(u8.keys),tS=gt("number-input-stepper-width"),g9=gt("number-input-input-padding"),ZK=gi(tS).add("0.5rem").toString(),F0=gt("number-input-bg"),H0=gt("number-input-color"),j0=gt("number-input-border-color"),GK={[tS.variable]:"sizes.6",[g9.variable]:ZK},WK=t=>{var n;var e;return(n=(e=en(xe.baseStyle,t))==null?void 0:e.field)!=null?n:{}},YK={width:tS.reference},FK={borderStart:"1px solid",borderStartColor:j0.reference,color:H0.reference,bg:F0.reference,[H0.variable]:"colors.chakra-body-text",[j0.variable]:"colors.chakra-border-color",_dark:{[H0.variable]:"colors.whiteAlpha.800",[j0.variable]:"colors.whiteAlpha.300"},_active:{[F0.variable]:"colors.gray.200",_dark:{[F0.variable]:"colors.whiteAlpha.300"}},_disabled:{opacity:.4,cursor:"not-allowed"}},HK=m9(t=>{var e;return{root:GK,field:(e=en(WK,t))!=null?e:{},stepperGroup:YK,stepper:FK}});function Pf(t){var a;var e,n;const r=(e=xe.sizes)==null?void 0:e[t],i={lg:"md",md:"md",sm:"sm",xs:"sm"},o=(a=(n=r.field)==null?void 0:n.fontSize)!=null?a:"md",s=p9.fontSizes[o];return m9({field:{...r.field,paddingInlineEnd:g9.reference,verticalAlign:"top"},stepper:{fontSize:gi(s).multiply(.75).toString(),_first:{borderTopEndRadius:i[t]},_last:{borderBottomEndRadius:i[t],mt:"-1px",borderTopWidth:1}}})}var jK={xs:Pf("xs"),sm:Pf("sm"),md:Pf("md"),lg:Pf("lg")},DK=AK({baseStyle:HK,sizes:jK,variants:xe.variants,defaultProps:xe.defaultProps}),hO,UK={...(hO=xe.baseStyle)==null?void 0:hO.field,textAlign:"center"},KK={lg:{fontSize:"lg",w:12,h:12,borderRadius:"md"},md:{fontSize:"md",w:10,h:10,borderRadius:"md"},sm:{fontSize:"sm",w:8,h:8,borderRadius:"sm"},xs:{fontSize:"xs",w:6,h:6,borderRadius:"sm"}},pO,IP,qK={outline:t=>{var r;var e,n;return(r=(n=en((e=xe.variants)==null?void 0:e.outline,t))==null?void 0:n.field)!=null?r:{}},flushed:t=>{var r;var e,n;return(r=(n=en((e=xe.variants)==null?void 0:e.flushed,t))==null?void 0:n.field)!=null?r:{}},filled:t=>{var r;var e,n;return(r=(n=en((e=xe.variants)==null?void 0:e.filled,t))==null?void 0:n.field)!=null?r:{}},unstyled:(IP=(pO=xe.variants)==null?void 0:pO.unstyled.field)!=null?IP:{}},QK={baseStyle:UK,sizes:KK,variants:qK,defaultProps:xe.defaultProps},{defineMultiStyleConfig:JK,definePartsStyle:_K}=Ge(d8.keys),Cf=gt("popper-bg"),$K=gt("popper-arrow-bg"),mO=gt("popper-arrow-shadow-color"),eq={zIndex:10},tq={[Cf.variable]:"colors.white",bg:Cf.reference,[$K.variable]:Cf.reference,[mO.variable]:"colors.gray.200",_dark:{[Cf.variable]:"colors.gray.700",[mO.variable]:"colors.whiteAlpha.300"},width:"xs",border:"1px solid",borderColor:"inherit",borderRadius:"md",boxShadow:"sm",zIndex:"inherit",_focusVisible:{outline:0,boxShadow:"outline"}},nq={px:3,py:2,borderBottomWidth:"1px"},rq={px:3,py:2},iq={px:3,py:2,borderTopWidth:"1px"},oq={position:"absolute",borderRadius:"md",top:1,insetEnd:2,padding:2},sq=_K({popper:eq,content:tq,header:nq,body:rq,footer:iq,closeButton:oq}),aq=JK({baseStyle:sq}),{defineMultiStyleConfig:lq,definePartsStyle:Pc}=Ge(f8.keys),cq=t=>{const{colorScheme:e,theme:n,isIndeterminate:r,hasStripe:i}=t,o=te(aO(),aO("1rem","rgba(0,0,0,0.1)"))(t),s=te(`${e}.500`,`${e}.200`)(t),a=`linear-gradient(
    to right,
    transparent 0%,
    ${Jt(n,s)} 50%,
    transparent 100%
  )`;return{...!r&&i&&o,...r?{bgImage:a}:{bgColor:s}}},uq={lineHeight:"1",fontSize:"0.25em",fontWeight:"bold",color:"white"},dq=t=>({bg:te("gray.100","whiteAlpha.300")(t)}),fq=t=>({transitionProperty:"common",transitionDuration:"slow",...cq(t)}),hq=Pc(t=>({label:uq,filledTrack:fq(t),track:dq(t)})),pq={xs:Pc({track:{h:"1"}}),sm:Pc({track:{h:"2"}}),md:Pc({track:{h:"3"}}),lg:Pc({track:{h:"4"}})},mq=lq({sizes:pq,baseStyle:hq,defaultProps:{size:"md",colorScheme:"blue"}}),{defineMultiStyleConfig:gq,definePartsStyle:yh}=Ge(h8.keys),vq=t=>{var e;const n=(e=en(Bp.baseStyle,t))==null?void 0:e.control;return{...n,borderRadius:"full",_checked:{...n==null?void 0:n._checked,_before:{content:'""',display:"inline-block",pos:"relative",w:"50%",h:"50%",borderRadius:"50%",bg:"currentColor"}}}},bq=yh(t=>{var e,n,r,i;return{label:(n=(e=Bp).baseStyle)==null?void 0:n.call(e,t).label,container:(i=(r=Bp).baseStyle)==null?void 0:i.call(r,t).container,control:vq(t)}}),yq={md:yh({control:{w:"4",h:"4"},label:{fontSize:"md"}}),lg:yh({control:{w:"5",h:"5"},label:{fontSize:"lg"}}),sm:yh({control:{width:"3",height:"3"},label:{fontSize:"sm"}})},xq=gq({baseStyle:bq,sizes:yq,defaultProps:{size:"md",colorScheme:"blue"}}),{defineMultiStyleConfig:Sq,definePartsStyle:kq}=Ge(p8.keys),Mf=Me("select-bg"),gO,wq={...(gO=xe.baseStyle)==null?void 0:gO.field,appearance:"none",paddingBottom:"1px",lineHeight:"normal",bg:Mf.reference,[Mf.variable]:"colors.white",_dark:{[Mf.variable]:"colors.gray.700"},"> option, > optgroup":{bg:Mf.reference}},Oq={width:"6",height:"100%",insetEnd:"2",position:"relative",color:"currentColor",fontSize:"xl",_disabled:{opacity:.5}},Tq=kq({field:wq,icon:Oq}),Rf={paddingInlineEnd:"8"},vO,bO,yO,xO,SO,kO,wO,OO,Pq={lg:{...(vO=xe.sizes)==null?void 0:vO.lg,field:{...(bO=xe.sizes)==null?void 0:bO.lg.field,...Rf}},md:{...(yO=xe.sizes)==null?void 0:yO.md,field:{...(xO=xe.sizes)==null?void 0:xO.md.field,...Rf}},sm:{...(SO=xe.sizes)==null?void 0:SO.sm,field:{...(kO=xe.sizes)==null?void 0:kO.sm.field,...Rf}},xs:{...(wO=xe.sizes)==null?void 0:wO.xs,field:{...(OO=xe.sizes)==null?void 0:OO.xs.field,...Rf},icon:{insetEnd:"1"}}},Cq=Sq({baseStyle:Tq,sizes:Pq,variants:xe.variants,defaultProps:xe.defaultProps}),D0=Me("skeleton-start-color"),U0=Me("skeleton-end-color"),Mq={[D0.variable]:"colors.gray.100",[U0.variable]:"colors.gray.400",_dark:{[D0.variable]:"colors.gray.800",[U0.variable]:"colors.gray.600"},background:D0.reference,borderColor:U0.reference,opacity:.7,borderRadius:"sm"},Rq={baseStyle:Mq},K0=Me("skip-link-bg"),Iq={borderRadius:"md",fontWeight:"semibold",_focusVisible:{boxShadow:"outline",padding:"4",position:"fixed",top:"6",insetStart:"6",[K0.variable]:"colors.white",_dark:{[K0.variable]:"colors.gray.700"},bg:K0.reference}},zq={baseStyle:Iq},{defineMultiStyleConfig:Eq,definePartsStyle:ig}=Ge(m8.keys),Hu=Me("slider-thumb-size"),ju=Me("slider-track-size"),_i=Me("slider-bg"),Nq=t=>{const{orientation:e}=t;return{display:"inline-block",position:"relative",cursor:"pointer",_disabled:{opacity:.6,cursor:"default",pointerEvents:"none"},..._x({orientation:e,vertical:{h:"100%"},horizontal:{w:"100%"}})}},Vq=t=>({..._x({orientation:t.orientation,horizontal:{h:ju.reference},vertical:{w:ju.reference}}),overflow:"hidden",borderRadius:"sm",[_i.variable]:"colors.gray.200",_dark:{[_i.variable]:"colors.whiteAlpha.200"},_disabled:{[_i.variable]:"colors.gray.300",_dark:{[_i.variable]:"colors.whiteAlpha.300"}},bg:_i.reference}),Lq=t=>{const{orientation:e}=t;return{..._x({orientation:e,vertical:{left:"50%",transform:"translateX(-50%)",_active:{transform:"translateX(-50%) scale(1.15)"}},horizontal:{top:"50%",transform:"translateY(-50%)",_active:{transform:"translateY(-50%) scale(1.15)"}}}),w:Hu.reference,h:Hu.reference,display:"flex",alignItems:"center",justifyContent:"center",position:"absolute",outline:0,zIndex:1,borderRadius:"full",bg:"white",boxShadow:"base",border:"1px solid",borderColor:"transparent",transitionProperty:"transform",transitionDuration:"normal",_focusVisible:{boxShadow:"outline"},_disabled:{bg:"gray.300"}}},Xq=t=>{const{colorScheme:e}=t;return{width:"inherit",height:"inherit",[_i.variable]:`colors.${e}.500`,_dark:{[_i.variable]:`colors.${e}.200`},bg:_i.reference}},Bq=ig(t=>({container:Nq(t),track:Vq(t),thumb:Lq(t),filledTrack:Xq(t)})),Aq=ig({container:{[Hu.variable]:"sizes.4",[ju.variable]:"sizes.1"}}),Zq=ig({container:{[Hu.variable]:"sizes.3.5",[ju.variable]:"sizes.1"}}),Gq=ig({container:{[Hu.variable]:"sizes.2.5",[ju.variable]:"sizes.0.5"}}),Wq={lg:Aq,md:Zq,sm:Gq},Yq=Eq({baseStyle:Bq,sizes:Wq,defaultProps:{size:"md",colorScheme:"blue"}}),os=gt("spinner-size"),Fq={width:[os.reference],height:[os.reference]},Hq={xs:{[os.variable]:"sizes.3"},sm:{[os.variable]:"sizes.4"},md:{[os.variable]:"sizes.6"},lg:{[os.variable]:"sizes.8"},xl:{[os.variable]:"sizes.12"}},jq={baseStyle:Fq,sizes:Hq,defaultProps:{size:"md"}},{defineMultiStyleConfig:Dq,definePartsStyle:v9}=Ge(g8.keys),Uq={fontWeight:"medium"},Kq={opacity:.8,marginBottom:"2"},qq={verticalAlign:"baseline",fontWeight:"semibold"},Qq={marginEnd:1,w:"3.5",h:"3.5",verticalAlign:"middle"},Jq=v9({container:{},label:Uq,helpText:Kq,number:qq,icon:Qq}),_q={md:v9({label:{fontSize:"sm"},helpText:{fontSize:"sm"},number:{fontSize:"2xl"}})},$q=Dq({baseStyle:Jq,sizes:_q,defaultProps:{size:"md"}}),{defineMultiStyleConfig:eQ,definePartsStyle:xh}=Ge(v8.keys),qc=gt("switch-track-width"),ws=gt("switch-track-height"),q0=gt("switch-track-diff"),tQ=gi.subtract(qc,ws),Iy=gt("switch-thumb-x"),cc=gt("switch-bg"),nQ=t=>{const{colorScheme:e}=t;return{borderRadius:"full",p:"0.5",width:[qc.reference],height:[ws.reference],transitionProperty:"common",transitionDuration:"fast",[cc.variable]:"colors.gray.300",_dark:{[cc.variable]:"colors.whiteAlpha.400"},_focusVisible:{boxShadow:"outline"},_disabled:{opacity:.4,cursor:"not-allowed"},_checked:{[cc.variable]:`colors.${e}.500`,_dark:{[cc.variable]:`colors.${e}.200`}},bg:cc.reference}},rQ={bg:"white",transitionProperty:"transform",transitionDuration:"normal",borderRadius:"inherit",width:[ws.reference],height:[ws.reference],_checked:{transform:`translateX(${Iy.reference})`}},iQ=xh(t=>({container:{[q0.variable]:tQ,[Iy.variable]:q0.reference,_rtl:{[Iy.variable]:gi(q0).negate().toString()}},track:nQ(t),thumb:rQ})),oQ={sm:xh({container:{[qc.variable]:"1.375rem",[ws.variable]:"sizes.3"}}),md:xh({container:{[qc.variable]:"1.875rem",[ws.variable]:"sizes.4"}}),lg:xh({container:{[qc.variable]:"2.875rem",[ws.variable]:"sizes.6"}})},sQ=eQ({baseStyle:iQ,sizes:oQ,defaultProps:{size:"md",colorScheme:"blue"}}),{defineMultiStyleConfig:aQ,definePartsStyle:_a}=Ge(b8.keys),lQ=_a({table:{fontVariantNumeric:"lining-nums tabular-nums",borderCollapse:"collapse",width:"full"},th:{fontFamily:"heading",fontWeight:"bold",textTransform:"uppercase",letterSpacing:"wider",textAlign:"start"},td:{textAlign:"start"},caption:{mt:4,fontFamily:"heading",textAlign:"center",fontWeight:"medium"}}),Ap={"&[data-is-numeric=true]":{textAlign:"end"}},cQ=_a(t=>{const{colorScheme:e}=t;return{th:{color:te("gray.600","gray.400")(t),borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Ap},td:{borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Ap},caption:{color:te("gray.600","gray.100")(t)},tfoot:{tr:{"&:last-of-type":{th:{borderBottomWidth:0}}}}}}),uQ=_a(t=>{const{colorScheme:e}=t;return{th:{color:te("gray.600","gray.400")(t),borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Ap},td:{borderBottom:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t),...Ap},caption:{color:te("gray.600","gray.100")(t)},tbody:{tr:{"&:nth-of-type(odd)":{"th, td":{borderBottomWidth:"1px",borderColor:te(`${e}.100`,`${e}.700`)(t)},td:{background:te(`${e}.100`,`${e}.700`)(t)}}}},tfoot:{tr:{"&:last-of-type":{th:{borderBottomWidth:0}}}}}}),dQ={simple:cQ,striped:uQ,unstyled:{}},fQ={sm:_a({th:{px:"4",py:"1",lineHeight:"4",fontSize:"xs"},td:{px:"4",py:"2",fontSize:"sm",lineHeight:"4"},caption:{px:"4",py:"2",fontSize:"xs"}}),md:_a({th:{px:"6",py:"3",lineHeight:"4",fontSize:"xs"},td:{px:"6",py:"4",lineHeight:"5"},caption:{px:"6",py:"2",fontSize:"sm"}}),lg:_a({th:{px:"8",py:"4",lineHeight:"5",fontSize:"sm"},td:{px:"8",py:"5",lineHeight:"6"},caption:{px:"6",py:"2",fontSize:"md"}})},hQ=aQ({baseStyle:lQ,variants:dQ,sizes:fQ,defaultProps:{variant:"simple",size:"md",colorScheme:"gray"}}),sn=Me("tabs-color"),mr=Me("tabs-bg"),If=Me("tabs-border-color"),{defineMultiStyleConfig:pQ,definePartsStyle:Qr}=Ge(y8.keys),mQ=t=>{const{orientation:e}=t;return{display:e==="vertical"?"flex":"block"}},gQ=t=>{const{isFitted:e}=t;return{flex:e?1:void 0,transitionProperty:"common",transitionDuration:"normal",_focusVisible:{zIndex:1,boxShadow:"outline"},_disabled:{cursor:"not-allowed",opacity:.4}}},vQ=t=>{const{align:e="start",orientation:n}=t;return{justifyContent:{end:"flex-end",center:"center",start:"flex-start"}[e],flexDirection:n==="vertical"?"column":"row"}},bQ={p:4},yQ=Qr(t=>({root:mQ(t),tab:gQ(t),tablist:vQ(t),tabpanel:bQ})),xQ={sm:Qr({tab:{py:1,px:4,fontSize:"sm"}}),md:Qr({tab:{fontSize:"md",py:2,px:4}}),lg:Qr({tab:{fontSize:"lg",py:3,px:4}})},SQ=Qr(t=>{const{colorScheme:e,orientation:n}=t,r=n==="vertical",i=n==="vertical"?"borderStart":"borderBottom",o=r?"marginStart":"marginBottom";return{tablist:{[i]:"2px solid",borderColor:"inherit"},tab:{[i]:"2px solid",borderColor:"transparent",[o]:"-2px",_selected:{[sn.variable]:`colors.${e}.600`,_dark:{[sn.variable]:`colors.${e}.300`},borderColor:"currentColor"},_active:{[mr.variable]:"colors.gray.200",_dark:{[mr.variable]:"colors.whiteAlpha.300"}},_disabled:{_active:{bg:"none"}},color:sn.reference,bg:mr.reference}}}),kQ=Qr(t=>{const{colorScheme:e}=t;return{tab:{borderTopRadius:"md",border:"1px solid",borderColor:"transparent",mb:"-1px",[If.reference]:"transparent",_selected:{[sn.variable]:`colors.${e}.600`,[If.variable]:"colors.white",_dark:{[sn.variable]:`colors.${e}.300`,[If.variable]:"colors.gray.800"},borderColor:"inherit",borderBottomColor:If.reference},color:sn.reference},tablist:{mb:"-1px",borderBottom:"1px solid",borderColor:"inherit"}}}),wQ=Qr(t=>{const{colorScheme:e}=t;return{tab:{border:"1px solid",borderColor:"inherit",[mr.variable]:"colors.gray.50",_dark:{[mr.variable]:"colors.whiteAlpha.50"},mb:"-1px",_notLast:{marginEnd:"-1px"},_selected:{[mr.variable]:"colors.white",[sn.variable]:`colors.${e}.600`,_dark:{[mr.variable]:"colors.gray.800",[sn.variable]:`colors.${e}.300`},borderColor:"inherit",borderTopColor:"currentColor",borderBottomColor:"transparent"},color:sn.reference,bg:mr.reference},tablist:{mb:"-1px",borderBottom:"1px solid",borderColor:"inherit"}}}),OQ=Qr(t=>{const{colorScheme:e,theme:n}=t;return{tab:{borderRadius:"full",fontWeight:"semibold",color:"gray.600",_selected:{color:Jt(n,`${e}.700`),bg:Jt(n,`${e}.100`)}}}}),TQ=Qr(t=>{const{colorScheme:e}=t;return{tab:{borderRadius:"full",fontWeight:"semibold",[sn.variable]:"colors.gray.600",_dark:{[sn.variable]:"inherit"},_selected:{[sn.variable]:"colors.white",[mr.variable]:`colors.${e}.600`,_dark:{[sn.variable]:"colors.gray.800",[mr.variable]:`colors.${e}.300`}},color:sn.reference,bg:mr.reference}}}),PQ=Qr({}),CQ={line:SQ,enclosed:kQ,"enclosed-colored":wQ,"soft-rounded":OQ,"solid-rounded":TQ,unstyled:PQ},MQ=pQ({baseStyle:yQ,sizes:xQ,variants:CQ,defaultProps:{size:"md",variant:"line",colorScheme:"blue"}}),{defineMultiStyleConfig:RQ,definePartsStyle:Os}=Ge(x8.keys),IQ={fontWeight:"medium",lineHeight:1.2,outline:0,borderRadius:"md",_focusVisible:{boxShadow:"outline"}},zQ={lineHeight:1.2,overflow:"visible"},EQ={fontSize:"lg",w:"5",h:"5",transitionProperty:"common",transitionDuration:"normal",borderRadius:"full",marginStart:"1.5",marginEnd:"-1",opacity:.5,_disabled:{opacity:.4},_focusVisible:{boxShadow:"outline",bg:"rgba(0, 0, 0, 0.14)"},_hover:{opacity:.8},_active:{opacity:1}},NQ=Os({container:IQ,label:zQ,closeButton:EQ}),VQ={sm:Os({container:{minH:"5",minW:"5",fontSize:"xs",px:"2"},closeButton:{marginEnd:"-2px",marginStart:"0.35rem"}}),md:Os({container:{minH:"6",minW:"6",fontSize:"sm",px:"2"}}),lg:Os({container:{minH:"8",minW:"8",fontSize:"md",px:"3"}})},LQ={subtle:Os(t=>{var e;return{container:(e=Dc.variants)==null?void 0:e.subtle(t)}}),solid:Os(t=>{var e;return{container:(e=Dc.variants)==null?void 0:e.solid(t)}}),outline:Os(t=>{var e;return{container:(e=Dc.variants)==null?void 0:e.outline(t)}})},XQ=RQ({variants:LQ,baseStyle:NQ,sizes:VQ,defaultProps:{size:"md",variant:"subtle",colorScheme:"gray"}}),TO,BQ={...(TO=xe.baseStyle)==null?void 0:TO.field,paddingY:"2",minHeight:"20",lineHeight:"short",verticalAlign:"top"},PO,zP,AQ={outline:t=>{var n;var e;return(n=(e=xe.variants)==null?void 0:e.outline(t).field)!=null?n:{}},flushed:t=>{var n;var e;return(n=(e=xe.variants)==null?void 0:e.flushed(t).field)!=null?n:{}},filled:t=>{var n;var e;return(n=(e=xe.variants)==null?void 0:e.filled(t).field)!=null?n:{}},unstyled:(zP=(PO=xe.variants)==null?void 0:PO.unstyled.field)!=null?zP:{}},CO,MO,RO,IO,EP,NP,VP,LP,ZQ={xs:(EP=(CO=xe.sizes)==null?void 0:CO.xs.field)!=null?EP:{},sm:(NP=(MO=xe.sizes)==null?void 0:MO.sm.field)!=null?NP:{},md:(VP=(RO=xe.sizes)==null?void 0:RO.md.field)!=null?VP:{},lg:(LP=(IO=xe.sizes)==null?void 0:IO.lg.field)!=null?LP:{}},GQ={baseStyle:BQ,sizes:ZQ,variants:AQ,defaultProps:{size:"md",variant:"outline"}},zf=gt("tooltip-bg"),Q0=gt("tooltip-fg"),WQ=gt("popper-arrow-bg"),YQ={bg:zf.reference,color:Q0.reference,[zf.variable]:"colors.gray.700",[Q0.variable]:"colors.whiteAlpha.900",_dark:{[zf.variable]:"colors.gray.300",[Q0.variable]:"colors.gray.900"},[WQ.variable]:zf.reference,px:"2",py:"0.5",borderRadius:"sm",fontWeight:"medium",fontSize:"sm",boxShadow:"md",maxW:"xs",zIndex:"tooltip"},FQ={baseStyle:YQ},HQ={Accordion:aD,Alert:mD,Avatar:PD,Badge:Dc,Breadcrumb:XD,Button:jD,Checkbox:Bp,CloseButton:sU,Code:uU,Container:fU,Divider:vU,Drawer:MU,Editable:LU,Form:WU,FormError:UU,FormLabel:qU,Heading:_U,Input:xe,Kbd:lK,Link:uK,List:mK,Menu:TK,Modal:XK,NumberInput:DK,PinInput:QK,Popover:aq,Progress:mq,Radio:xq,Select:Cq,Skeleton:Rq,SkipLink:zq,Slider:Yq,Spinner:jq,Stat:$q,Switch:sQ,Table:hQ,Tabs:MQ,Tag:XQ,Textarea:GQ,Tooltip:FQ,Card:QD},jQ={none:0,"1px":"1px solid","2px":"2px solid","4px":"4px solid","8px":"8px solid"},DQ=jQ,UQ={base:"0em",sm:"30em",md:"48em",lg:"62em",xl:"80em","2xl":"96em"},KQ=UQ,qQ={transparent:"transparent",current:"currentColor",black:"#000000",white:"#FFFFFF",whiteAlpha:{50:"rgba(255, 255, 255, 0.04)",100:"rgba(255, 255, 255, 0.06)",200:"rgba(255, 255, 255, 0.08)",300:"rgba(255, 255, 255, 0.16)",400:"rgba(255, 255, 255, 0.24)",500:"rgba(255, 255, 255, 0.36)",600:"rgba(255, 255, 255, 0.48)",700:"rgba(255, 255, 255, 0.64)",800:"rgba(255, 255, 255, 0.80)",900:"rgba(255, 255, 255, 0.92)"},blackAlpha:{50:"rgba(0, 0, 0, 0.04)",100:"rgba(0, 0, 0, 0.06)",200:"rgba(0, 0, 0, 0.08)",300:"rgba(0, 0, 0, 0.16)",400:"rgba(0, 0, 0, 0.24)",500:"rgba(0, 0, 0, 0.36)",600:"rgba(0, 0, 0, 0.48)",700:"rgba(0, 0, 0, 0.64)",800:"rgba(0, 0, 0, 0.80)",900:"rgba(0, 0, 0, 0.92)"},gray:{50:"#F7FAFC",100:"#EDF2F7",200:"#E2E8F0",300:"#CBD5E0",400:"#A0AEC0",500:"#718096",600:"#4A5568",700:"#2D3748",800:"#1A202C",900:"#171923"},red:{50:"#FFF5F5",100:"#FED7D7",200:"#FEB2B2",300:"#FC8181",400:"#F56565",500:"#E53E3E",600:"#C53030",700:"#9B2C2C",800:"#822727",900:"#63171B"},orange:{50:"#FFFAF0",100:"#FEEBC8",200:"#FBD38D",300:"#F6AD55",400:"#ED8936",500:"#DD6B20",600:"#C05621",700:"#9C4221",800:"#7B341E",900:"#652B19"},yellow:{50:"#FFFFF0",100:"#FEFCBF",200:"#FAF089",300:"#F6E05E",400:"#ECC94B",500:"#D69E2E",600:"#B7791F",700:"#975A16",800:"#744210",900:"#5F370E"},green:{50:"#F0FFF4",100:"#C6F6D5",200:"#9AE6B4",300:"#68D391",400:"#48BB78",500:"#38A169",600:"#2F855A",700:"#276749",800:"#22543D",900:"#1C4532"},teal:{50:"#E6FFFA",100:"#B2F5EA",200:"#81E6D9",300:"#4FD1C5",400:"#38B2AC",500:"#319795",600:"#2C7A7B",700:"#285E61",800:"#234E52",900:"#1D4044"},blue:{50:"#ebf8ff",100:"#bee3f8",200:"#90cdf4",300:"#63b3ed",400:"#4299e1",500:"#3182ce",600:"#2b6cb0",700:"#2c5282",800:"#2a4365",900:"#1A365D"},cyan:{50:"#EDFDFD",100:"#C4F1F9",200:"#9DECF9",300:"#76E4F7",400:"#0BC5EA",500:"#00B5D8",600:"#00A3C4",700:"#0987A0",800:"#086F83",900:"#065666"},purple:{50:"#FAF5FF",100:"#E9D8FD",200:"#D6BCFA",300:"#B794F4",400:"#9F7AEA",500:"#805AD5",600:"#6B46C1",700:"#553C9A",800:"#44337A",900:"#322659"},pink:{50:"#FFF5F7",100:"#FED7E2",200:"#FBB6CE",300:"#F687B3",400:"#ED64A6",500:"#D53F8C",600:"#B83280",700:"#97266D",800:"#702459",900:"#521B41"},linkedin:{50:"#E8F4F9",100:"#CFEDFB",200:"#9BDAF3",300:"#68C7EC",400:"#34B3E4",500:"#00A0DC",600:"#008CC9",700:"#0077B5",800:"#005E93",900:"#004471"},facebook:{50:"#E8F4F9",100:"#D9DEE9",200:"#B7C2DA",300:"#6482C0",400:"#4267B2",500:"#385898",600:"#314E89",700:"#29487D",800:"#223B67",900:"#1E355B"},messenger:{50:"#D0E6FF",100:"#B9DAFF",200:"#A2CDFF",300:"#7AB8FF",400:"#2E90FF",500:"#0078FF",600:"#0063D1",700:"#0052AC",800:"#003C7E",900:"#002C5C"},whatsapp:{50:"#dffeec",100:"#b9f5d0",200:"#90edb3",300:"#65e495",400:"#3cdd78",500:"#22c35e",600:"#179848",700:"#0c6c33",800:"#01421c",900:"#001803"},twitter:{50:"#E5F4FD",100:"#C8E9FB",200:"#A8DCFA",300:"#83CDF7",400:"#57BBF5",500:"#1DA1F2",600:"#1A94DA",700:"#1681BF",800:"#136B9E",900:"#0D4D71"},telegram:{50:"#E3F2F9",100:"#C5E4F3",200:"#A2D4EC",300:"#7AC1E4",400:"#47A9DA",500:"#0088CC",600:"#007AB8",700:"#006BA1",800:"#005885",900:"#003F5E"}},QQ=qQ,JQ={none:"0",sm:"0.125rem",base:"0.25rem",md:"0.375rem",lg:"0.5rem",xl:"0.75rem","2xl":"1rem","3xl":"1.5rem",full:"9999px"},_Q=JQ,$Q={xs:"0 0 0 1px rgba(0, 0, 0, 0.05)",sm:"0 1px 2px 0 rgba(0, 0, 0, 0.05)",base:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",md:"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",lg:"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",xl:"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)","2xl":"0 25px 50px -12px rgba(0, 0, 0, 0.25)",outline:"0 0 0 3px rgba(66, 153, 225, 0.6)",inner:"inset 0 2px 4px 0 rgba(0,0,0,0.06)",none:"none","dark-lg":"rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"},eJ=$Q,tJ={common:"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",colors:"background-color, border-color, color, fill, stroke",dimensions:"width, height",position:"left, right, top, bottom",background:"background-color, background-image, background-position"},nJ={"ease-in":"cubic-bezier(0.4, 0, 1, 1)","ease-out":"cubic-bezier(0, 0, 0.2, 1)","ease-in-out":"cubic-bezier(0.4, 0, 0.2, 1)"},rJ={"ultra-fast":"50ms",faster:"100ms",fast:"150ms",normal:"200ms",slow:"300ms",slower:"400ms","ultra-slow":"500ms"},iJ={property:tJ,easing:nJ,duration:rJ},oJ=iJ,sJ={hide:-1,auto:"auto",base:0,docked:10,dropdown:1e3,sticky:1100,banner:1200,overlay:1300,modal:1400,popover:1500,skipLink:1600,toast:1700,tooltip:1800},aJ=sJ,lJ={none:0,sm:"4px",base:"8px",md:"12px",lg:"16px",xl:"24px","2xl":"40px","3xl":"64px"},cJ=lJ,uJ={breakpoints:KQ,zIndices:aJ,radii:_Q,blur:cJ,colors:QQ,...p9,sizes:d9,shadows:eJ,space:u9,borders:DQ,transition:oJ},dJ={colors:{"chakra-body-text":{_light:"gray.800",_dark:"whiteAlpha.900"},"chakra-body-bg":{_light:"white",_dark:"gray.800"},"chakra-border-color":{_light:"gray.200",_dark:"whiteAlpha.300"},"chakra-subtle-bg":{_light:"gray.100",_dark:"gray.700"},"chakra-placeholder-color":{_light:"gray.500",_dark:"whiteAlpha.400"}}},fJ={global:{body:{fontFamily:"body",color:"chakra-body-text",bg:"chakra-body-bg",transitionProperty:"background-color",transitionDuration:"normal",lineHeight:"base"},"*::placeholder":{color:"chakra-placeholder-color"},"*, *::before, &::after":{borderColor:"chakra-border-color",wordWrap:"break-word"}}};function hJ(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}var pJ=["borders","breakpoints","colors","components","config","direction","fonts","fontSizes","fontWeights","letterSpacings","lineHeights","radii","shadows","sizes","space","styles","transition","zIndices"];function mJ(t){return hJ(t)?pJ.every(e=>Object.prototype.hasOwnProperty.call(t,e)):!1}var gJ="ltr",vJ={useSystemColorMode:!1,initialColorMode:"light",cssVarPrefix:"chakra"},b9={semanticTokens:dJ,direction:gJ,...uJ,components:HQ,styles:fJ,config:vJ};function Cc(t){return typeof t=="function"}function bJ(...t){return e=>t.reduce((n,r)=>r(n),e)}function yJ(...t){let e=[...t],n=t[t.length-1];return mJ(n)&&e.length>1?e=e.slice(0,e.length-1):n=b9,bJ(...e.map(r=>i=>Cc(r)?r(i):xJ(i,r)))(n)}function xJ(...t){return qn({},...t,y9)}function y9(t,e,n,r){if((Cc(t)||Cc(e))&&Object.prototype.hasOwnProperty.call(r,n))return(...i)=>{const o=Cc(t)?t(...i):t,s=Cc(e)?e(...i):e;return qn({},o,s,y9)}}var SJ=typeof Element<"u",kJ=typeof Map=="function",wJ=typeof Set=="function",OJ=typeof ArrayBuffer=="function"&&!!ArrayBuffer.isView;function Sh(t,e){if(t===e)return!0;if(t&&e&&typeof t=="object"&&typeof e=="object"){if(t.constructor!==e.constructor)return!1;var n,r,i;if(Array.isArray(t)){if(n=t.length,n!=e.length)return!1;for(r=n;r--!==0;)if(!Sh(t[r],e[r]))return!1;return!0}var o;if(kJ&&t instanceof Map&&e instanceof Map){if(t.size!==e.size)return!1;for(o=t.entries();!(r=o.next()).done;)if(!e.has(r.value[0]))return!1;for(o=t.entries();!(r=o.next()).done;)if(!Sh(r.value[1],e.get(r.value[0])))return!1;return!0}if(wJ&&t instanceof Set&&e instanceof Set){if(t.size!==e.size)return!1;for(o=t.entries();!(r=o.next()).done;)if(!e.has(r.value[0]))return!1;return!0}if(OJ&&ArrayBuffer.isView(t)&&ArrayBuffer.isView(e)){if(n=t.length,n!=e.length)return!1;for(r=n;r--!==0;)if(t[r]!==e[r])return!1;return!0}if(t.constructor===RegExp)return t.source===e.source&&t.flags===e.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===e.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===e.toString();if(i=Object.keys(t),n=i.length,n!==Object.keys(e).length)return!1;for(r=n;r--!==0;)if(!Object.prototype.hasOwnProperty.call(e,i[r]))return!1;if(SJ&&t instanceof Element)return!1;for(r=n;r--!==0;)if(!((i[r]==="_owner"||i[r]==="__v"||i[r]==="__o")&&t.$$typeof)&&!Sh(t[i[r]],e[i[r]]))return!1;return!0}return t!==t&&e!==e}var TJ=function(e,n){try{return Sh(e,n)}catch(r){if((r.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw r}};function nS(){const t=S.exports.useContext(Fu);if(!t)throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`");return t}function PJ(){const t=Yx(),e=nS();return{...t,theme:e}}function CJ(t,e,n){var i,o;if(e==null)return e;const r=s=>{var a,l;return(l=(a=t.__breakpoints)==null?void 0:a.asArray)==null?void 0:l[s]};return(o=(i=r(e))!=null?i:r(n))!=null?o:n}function MJ(t,e,n){var i,o;if(e==null)return e;const r=s=>{var a,l;return(l=(a=t.__cssMap)==null?void 0:a[s])==null?void 0:l.value};return(o=(i=r(e))!=null?i:r(n))!=null?o:n}function RJ(t,e,n){const r=Array.isArray(e)?e:[e],i=Array.isArray(n)?n:[n];return o=>{const s=i.filter(Boolean),a=r.map((l,c)=>{var d,f;if(t==="breakpoints")return CJ(o,l,(d=s[c])!=null?d:l);const u=`${t}.${l}`;return MJ(o,u,(f=s[c])!=null?f:l)});return Array.isArray(e)?a:a[0]}}function IJ(t){const{cssVarsRoot:e,theme:n,children:r}=t,i=S.exports.useMemo(()=>PH(n),[n]);return tt(Nj,{theme:i,children:[z(zJ,{root:e}),r]})}function zJ({root:t=":host, :root"}){const e=[t,"[data-theme]"].join(",");return z(ng,{styles:n=>({[e]:n.__cssVars})})}Fj({name:"StylesContext",errorMessage:"useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` "});function EJ(){const{colorMode:t}=Yx();return z(ng,{styles:e=>{const n=$E(e,"styles.global"),r=n9(n,{theme:e,colorMode:t});return r?VE(r)(e):void 0}})}var NJ=new Set([...CH,"textStyle","layerStyle","apply","noOfLines","focusBorderColor","errorBorderColor","as","__css","css","sx"]),VJ=new Set(["htmlWidth","htmlHeight","htmlSize"]);function LJ(t){return VJ.has(t)||!NJ.has(t)}var XJ=({baseStyle:t})=>e=>{const{theme:n,css:r,__css:i,sx:o,...s}=e,a=e9(s,(d,f)=>RH(f)),l=n9(t,e),c=Object.assign({},i,l,t9(a),o),u=VE(c)(e.theme);return r?[u,r]:u};function J0(t,e){const{baseStyle:n,...r}=e!=null?e:{};r.shouldForwardProp||(r.shouldForwardProp=LJ);const i=XJ({baseStyle:n}),o=Ty(t,r)(i);return Z.forwardRef(function(l,c){const{colorMode:u,forced:d}=Yx();return Z.createElement(o,{ref:c,"data-theme":d?u:void 0,...l})})}function Q(t){return S.exports.forwardRef(t)}function x9(t,e={}){var u;const{styleConfig:n,...r}=e,{theme:i,colorMode:o}=PJ(),s=t?$E(i,`components.${t}`):void 0,a=n||s,l=qn({theme:i,colorMode:o},(u=a==null?void 0:a.defaultProps)!=null?u:{},t9(Bj(r,["children"]))),c=S.exports.useRef({});if(a){const f=ZH(a)(l);TJ(c.current,f)||(c.current=f)}return c.current}function gn(t,e={}){return x9(t,e)}function js(t,e={}){return x9(t,e)}function BJ(){const t=new Map;return new Proxy(J0,{apply(e,n,r){return J0(...r)},get(e,n){return t.has(n)||t.set(n,J0(n)),t.get(n)}})}var U=BJ();function AJ(t,e){return`${t} returned \`undefined\`. Seems you forgot to wrap component within ${e}`}function Xn(t={}){const{name:e,strict:n=!0,hookName:r="useContext",providerName:i="Provider",errorMessage:o}=t,s=S.exports.createContext(void 0);s.displayName=e;function a(){var l;const c=S.exports.useContext(s);if(!c&&n){const u=new Error(o!=null?o:AJ(r,i));throw u.name="ContextError",(l=Error.captureStackTrace)==null||l.call(Error,u,a),u}return c}return[s.Provider,a,s]}function ZJ(t,e){if(t!=null){if(typeof t=="function"){t(e);return}try{t.current=e}catch{throw new Error(`Cannot assign value '${e}' to ref '${t}'`)}}}function Mo(...t){return e=>{t.forEach(n=>{ZJ(n,e)})}}function GJ(...t){return S.exports.useMemo(()=>Mo(...t),t)}var st=(...t)=>t.filter(Boolean).join(" "),zO={path:tt("g",{stroke:"currentColor",strokeWidth:"1.5",children:[z("path",{strokeLinecap:"round",fill:"none",d:"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"}),z("path",{fill:"currentColor",strokeLinecap:"round",d:"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"}),z("circle",{fill:"none",strokeMiterlimit:"10",cx:"12",cy:"12",r:"11.25"})]}),viewBox:"0 0 24 24"},Ds=Q((t,e)=>{const{as:n,viewBox:r,color:i="currentColor",focusable:o=!1,children:s,className:a,__css:l,...c}=t,u=st("chakra-icon",a),d={w:"1em",h:"1em",display:"inline-block",lineHeight:"1em",flexShrink:0,color:i,...l},f={ref:e,focusable:o,className:u,__css:d},h=r!=null?r:zO.viewBox;if(n&&typeof n!="string")return Z.createElement(U.svg,{as:n,...f,...c});const p=s!=null?s:zO.path;return Z.createElement(U.svg,{verticalAlign:"middle",viewBox:h,...f,...c},p)});Ds.displayName="Icon";function Zp(t,e=[]){const n=S.exports.useRef(t);return S.exports.useEffect(()=>{n.current=t}),S.exports.useCallback((...r)=>{var i;return(i=n.current)==null?void 0:i.call(n,...r)},e)}const rS=S.exports.createContext({transformPagePoint:t=>t,isStatic:!1,reducedMotion:"never"}),og=S.exports.createContext({});function WJ(){return S.exports.useContext(og).visualElement}const Zl=S.exports.createContext(null),Us=typeof document<"u",Gp=Us?S.exports.useLayoutEffect:S.exports.useEffect,S9=S.exports.createContext({strict:!1});function YJ(t,e,n,r){const i=WJ(),o=S.exports.useContext(S9),s=S.exports.useContext(Zl),a=S.exports.useContext(rS).reducedMotion,l=S.exports.useRef();r=r||o.renderer,!l.current&&r&&(l.current=r(t,{visualState:e,parent:i,props:n,presenceId:s?s.id:void 0,blockInitialAnimation:s?s.initial===!1:!1,reducedMotionConfig:a}));const c=l.current;return Gp(()=>{c&&c.render()}),S.exports.useEffect(()=>{c&&c.animationState&&c.animationState.animateChanges()}),Gp(()=>()=>c&&c.notify("Unmount"),[]),c}function Ea(t){return typeof t=="object"&&Object.prototype.hasOwnProperty.call(t,"current")}function FJ(t,e,n){return S.exports.useCallback(r=>{r&&t.mount&&t.mount(r),e&&(r?e.mount(r):e.unmount()),n&&(typeof n=="function"?n(r):Ea(n)&&(n.current=r))},[e])}function Du(t){return typeof t=="string"||Array.isArray(t)}function sg(t){return typeof t=="object"&&typeof t.start=="function"}const HJ=["initial","animate","exit","whileHover","whileDrag","whileTap","whileFocus","whileInView"];function ag(t){return sg(t.animate)||HJ.some(e=>Du(t[e]))}function k9(t){return Boolean(ag(t)||t.variants)}function jJ(t,e){if(ag(t)){const{initial:n,animate:r}=t;return{initial:n===!1||Du(n)?n:void 0,animate:Du(r)?r:void 0}}return t.inherit!==!1?e:{}}function DJ(t){const{initial:e,animate:n}=jJ(t,S.exports.useContext(og));return S.exports.useMemo(()=>({initial:e,animate:n}),[EO(e),EO(n)])}function EO(t){return Array.isArray(t)?t.join(" "):t}const ci=t=>({isEnabled:e=>t.some(n=>!!e[n])}),Uu={measureLayout:ci(["layout","layoutId","drag"]),animation:ci(["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"]),exit:ci(["exit"]),drag:ci(["drag","dragControls"]),focus:ci(["whileFocus"]),hover:ci(["whileHover","onHoverStart","onHoverEnd"]),tap:ci(["whileTap","onTap","onTapStart","onTapCancel"]),pan:ci(["onPan","onPanStart","onPanSessionStart","onPanEnd"]),inView:ci(["whileInView","onViewportEnter","onViewportLeave"])};function UJ(t){for(const e in t)e==="projectionNodeConstructor"?Uu.projectionNodeConstructor=t[e]:Uu[e].Component=t[e]}function lg(t){const e=S.exports.useRef(null);return e.current===null&&(e.current=t()),e.current}const Qc={hasAnimatedSinceResize:!0,hasEverUpdated:!1};let KJ=1;function qJ(){return lg(()=>{if(Qc.hasEverUpdated)return KJ++})}const iS=S.exports.createContext({});class QJ extends Z.Component{getSnapshotBeforeUpdate(){const{visualElement:e,props:n}=this.props;return e&&e.setProps(n),null}componentDidUpdate(){}render(){return this.props.children}}const w9=S.exports.createContext({}),JJ=Symbol.for("motionComponentSymbol");function _J({preloadedFeatures:t,createVisualElement:e,projectionNodeConstructor:n,useRender:r,useVisualState:i,Component:o}){t&&UJ(t);function s(l,c){const u={...S.exports.useContext(rS),...l,layoutId:$J(l)},{isStatic:d}=u;let f=null;const h=DJ(l),p=d?void 0:qJ(),m=i(l,d);if(!d&&Us){h.visualElement=YJ(o,m,u,e);const b=S.exports.useContext(S9).strict,g=S.exports.useContext(w9);h.visualElement&&(f=h.visualElement.loadFeatures(u,b,t,p,n||Uu.projectionNodeConstructor,g))}return tt(QJ,{visualElement:h.visualElement,props:u,children:[f,z(og.Provider,{value:h,children:r(o,l,p,FJ(m,h.visualElement,c),m,d,h.visualElement)})]})}const a=S.exports.forwardRef(s);return a[JJ]=o,a}function $J({layoutId:t}){const e=S.exports.useContext(iS).id;return e&&t!==void 0?e+"-"+t:t}function e_(t){function e(r,i={}){return _J(t(r,i))}if(typeof Proxy>"u")return e;const n=new Map;return new Proxy(e,{get:(r,i)=>(n.has(i)||n.set(i,e(i)),n.get(i))})}const t_=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","text","tspan","use","view"];function oS(t){return typeof t!="string"||t.includes("-")?!1:!!(t_.indexOf(t)>-1||/[A-Z]/.test(t))}const Wp={};function n_(t){Object.assign(Wp,t)}const Yp=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],Gl=new Set(Yp);function O9(t,{layout:e,layoutId:n}){return Gl.has(t)||t.startsWith("origin")||(e||n!==void 0)&&(!!Wp[t]||t==="opacity")}const ti=t=>!!(t!=null&&t.getVelocity),r_={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},i_=(t,e)=>Yp.indexOf(t)-Yp.indexOf(e);function o_({transform:t,transformKeys:e},{enableHardwareAcceleration:n=!0,allowTransformNone:r=!0},i,o){let s="";e.sort(i_);for(const a of e)s+=`${r_[a]||a}(${t[a]}) `;return n&&!t.z&&(s+="translateZ(0)"),s=s.trim(),o?s=o(t,i?"":s):r&&i&&(s="none"),s}function T9(t){return t.startsWith("--")}const s_=(t,e)=>e&&typeof t=="number"?e.transform(t):t,P9=(t,e)=>n=>Math.max(Math.min(n,e),t),Jc=t=>t%1?Number(t.toFixed(5)):t,Ku=/(-)?([\d]*\.?[\d])+/g,zy=/(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,a_=/^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;function bd(t){return typeof t=="string"}const Ks={test:t=>typeof t=="number",parse:parseFloat,transform:t=>t},_c=Object.assign(Object.assign({},Ks),{transform:P9(0,1)}),Ef=Object.assign(Object.assign({},Ks),{default:1}),yd=t=>({test:e=>bd(e)&&e.endsWith(t)&&e.split(" ").length===1,parse:parseFloat,transform:e=>`${e}${t}`}),Yi=yd("deg"),Jr=yd("%"),ne=yd("px"),l_=yd("vh"),c_=yd("vw"),NO=Object.assign(Object.assign({},Jr),{parse:t=>Jr.parse(t)/100,transform:t=>Jr.transform(t*100)}),sS=(t,e)=>n=>Boolean(bd(n)&&a_.test(n)&&n.startsWith(t)||e&&Object.prototype.hasOwnProperty.call(n,e)),C9=(t,e,n)=>r=>{if(!bd(r))return r;const[i,o,s,a]=r.match(Ku);return{[t]:parseFloat(i),[e]:parseFloat(o),[n]:parseFloat(s),alpha:a!==void 0?parseFloat(a):1}},ms={test:sS("hsl","hue"),parse:C9("hue","saturation","lightness"),transform:({hue:t,saturation:e,lightness:n,alpha:r=1})=>"hsla("+Math.round(t)+", "+Jr.transform(Jc(e))+", "+Jr.transform(Jc(n))+", "+Jc(_c.transform(r))+")"},u_=P9(0,255),_0=Object.assign(Object.assign({},Ks),{transform:t=>Math.round(u_(t))}),lo={test:sS("rgb","red"),parse:C9("red","green","blue"),transform:({red:t,green:e,blue:n,alpha:r=1})=>"rgba("+_0.transform(t)+", "+_0.transform(e)+", "+_0.transform(n)+", "+Jc(_c.transform(r))+")"};function d_(t){let e="",n="",r="",i="";return t.length>5?(e=t.substr(1,2),n=t.substr(3,2),r=t.substr(5,2),i=t.substr(7,2)):(e=t.substr(1,1),n=t.substr(2,1),r=t.substr(3,1),i=t.substr(4,1),e+=e,n+=n,r+=r,i+=i),{red:parseInt(e,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:i?parseInt(i,16)/255:1}}const Ey={test:sS("#"),parse:d_,transform:lo.transform},Dt={test:t=>lo.test(t)||Ey.test(t)||ms.test(t),parse:t=>lo.test(t)?lo.parse(t):ms.test(t)?ms.parse(t):Ey.parse(t),transform:t=>bd(t)?t:t.hasOwnProperty("red")?lo.transform(t):ms.transform(t)},M9="${c}",R9="${n}";function f_(t){var e,n,r,i;return isNaN(t)&&bd(t)&&((n=(e=t.match(Ku))===null||e===void 0?void 0:e.length)!==null&&n!==void 0?n:0)+((i=(r=t.match(zy))===null||r===void 0?void 0:r.length)!==null&&i!==void 0?i:0)>0}function I9(t){typeof t=="number"&&(t=`${t}`);const e=[];let n=0;const r=t.match(zy);r&&(n=r.length,t=t.replace(zy,M9),e.push(...r.map(Dt.parse)));const i=t.match(Ku);return i&&(t=t.replace(Ku,R9),e.push(...i.map(Ks.parse))),{values:e,numColors:n,tokenised:t}}function z9(t){return I9(t).values}function E9(t){const{values:e,numColors:n,tokenised:r}=I9(t),i=e.length;return o=>{let s=r;for(let a=0;a<i;a++)s=s.replace(a<n?M9:R9,a<n?Dt.transform(o[a]):Jc(o[a]));return s}}const h_=t=>typeof t=="number"?0:t;function p_(t){const e=z9(t);return E9(t)(e.map(h_))}const Ii={test:f_,parse:z9,createTransformer:E9,getAnimatableNone:p_},m_=new Set(["brightness","contrast","saturate","opacity"]);function g_(t){let[e,n]=t.slice(0,-1).split("(");if(e==="drop-shadow")return t;const[r]=n.match(Ku)||[];if(!r)return t;const i=n.replace(r,"");let o=m_.has(e)?1:0;return r!==n&&(o*=100),e+"("+o+i+")"}const v_=/([a-z-]*)\(.*?\)/g,Ny=Object.assign(Object.assign({},Ii),{getAnimatableNone:t=>{const e=t.match(v_);return e?e.map(g_).join(" "):t}}),VO={...Ks,transform:Math.round},N9={borderWidth:ne,borderTopWidth:ne,borderRightWidth:ne,borderBottomWidth:ne,borderLeftWidth:ne,borderRadius:ne,radius:ne,borderTopLeftRadius:ne,borderTopRightRadius:ne,borderBottomRightRadius:ne,borderBottomLeftRadius:ne,width:ne,maxWidth:ne,height:ne,maxHeight:ne,size:ne,top:ne,right:ne,bottom:ne,left:ne,padding:ne,paddingTop:ne,paddingRight:ne,paddingBottom:ne,paddingLeft:ne,margin:ne,marginTop:ne,marginRight:ne,marginBottom:ne,marginLeft:ne,rotate:Yi,rotateX:Yi,rotateY:Yi,rotateZ:Yi,scale:Ef,scaleX:Ef,scaleY:Ef,scaleZ:Ef,skew:Yi,skewX:Yi,skewY:Yi,distance:ne,translateX:ne,translateY:ne,translateZ:ne,x:ne,y:ne,z:ne,perspective:ne,transformPerspective:ne,opacity:_c,originX:NO,originY:NO,originZ:ne,zIndex:VO,fillOpacity:_c,strokeOpacity:_c,numOctaves:VO};function aS(t,e,n,r){const{style:i,vars:o,transform:s,transformKeys:a,transformOrigin:l}=t;a.length=0;let c=!1,u=!1,d=!0;for(const f in e){const h=e[f];if(T9(f)){o[f]=h;continue}const p=N9[f],m=s_(h,p);if(Gl.has(f)){if(c=!0,s[f]=m,a.push(f),!d)continue;h!==(p.default||0)&&(d=!1)}else f.startsWith("origin")?(u=!0,l[f]=m):i[f]=m}if(e.transform||(c||r?i.transform=o_(t,n,d,r):i.transform&&(i.transform="none")),u){const{originX:f="50%",originY:h="50%",originZ:p=0}=l;i.transformOrigin=`${f} ${h} ${p}`}}const lS=()=>({style:{},transform:{},transformKeys:[],transformOrigin:{},vars:{}});function V9(t,e,n){for(const r in e)!ti(e[r])&&!O9(r,n)&&(t[r]=e[r])}function b_({transformTemplate:t},e,n){return S.exports.useMemo(()=>{const r=lS();return aS(r,e,{enableHardwareAcceleration:!n},t),Object.assign({},r.vars,r.style)},[e])}function y_(t,e,n){const r=t.style||{},i={};return V9(i,r,t),Object.assign(i,b_(t,e,n)),t.transformValues?t.transformValues(i):i}function x_(t,e,n){const r={},i=y_(t,e,n);return t.drag&&t.dragListener!==!1&&(r.draggable=!1,i.userSelect=i.WebkitUserSelect=i.WebkitTouchCallout="none",i.touchAction=t.drag===!0?"none":`pan-${t.drag==="x"?"y":"x"}`),r.style=i,r}const S_=["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"],k_=["whileTap","onTap","onTapStart","onTapCancel"],w_=["onPan","onPanStart","onPanSessionStart","onPanEnd"],O_=["whileInView","onViewportEnter","onViewportLeave","viewport"],T_=new Set(["initial","style","values","variants","transition","transformTemplate","transformValues","custom","inherit","layout","layoutId","layoutDependency","onLayoutAnimationStart","onLayoutAnimationComplete","onLayoutMeasure","onBeforeLayoutMeasure","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","drag","dragControls","dragListener","dragConstraints","dragDirectionLock","dragSnapToOrigin","_dragX","_dragY","dragElastic","dragMomentum","dragPropagation","dragTransition","onHoverStart","onHoverEnd","layoutScroll",...O_,...k_,...S_,...w_]);function Fp(t){return T_.has(t)}let L9=t=>!Fp(t);function P_(t){!t||(L9=e=>e.startsWith("on")?!Fp(e):t(e))}try{P_(require("@emotion/is-prop-valid").default)}catch{}function C_(t,e,n){const r={};for(const i in t)(L9(i)||n===!0&&Fp(i)||!e&&!Fp(i)||t.draggable&&i.startsWith("onDrag"))&&(r[i]=t[i]);return r}function LO(t,e,n){return typeof t=="string"?t:ne.transform(e+n*t)}function M_(t,e,n){const r=LO(e,t.x,t.width),i=LO(n,t.y,t.height);return`${r} ${i}`}const R_={offset:"stroke-dashoffset",array:"stroke-dasharray"},I_={offset:"strokeDashoffset",array:"strokeDasharray"};function z_(t,e,n=1,r=0,i=!0){t.pathLength=1;const o=i?R_:I_;t[o.offset]=ne.transform(-r);const s=ne.transform(e),a=ne.transform(n);t[o.array]=`${s} ${a}`}function cS(t,{attrX:e,attrY:n,originX:r,originY:i,pathLength:o,pathSpacing:s=1,pathOffset:a=0,...l},c,u){aS(t,l,c,u),t.attrs=t.style,t.style={};const{attrs:d,style:f,dimensions:h}=t;d.transform&&(h&&(f.transform=d.transform),delete d.transform),h&&(r!==void 0||i!==void 0||f.transform)&&(f.transformOrigin=M_(h,r!==void 0?r:.5,i!==void 0?i:.5)),e!==void 0&&(d.x=e),n!==void 0&&(d.y=n),o!==void 0&&z_(d,o,s,a,!1)}const X9=()=>({...lS(),attrs:{}});function E_(t,e){const n=S.exports.useMemo(()=>{const r=X9();return cS(r,e,{enableHardwareAcceleration:!1},t.transformTemplate),{...r.attrs,style:{...r.style}}},[e]);if(t.style){const r={};V9(r,t.style,t),n.style={...r,...n.style}}return n}function N_(t=!1){return(n,r,i,o,{latestValues:s},a)=>{const c=(oS(n)?E_:x_)(r,s,a),d={...C_(r,typeof n=="string",t),...c,ref:o};return i&&(d["data-projection-id"]=i),S.exports.createElement(n,d)}}const B9=t=>t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();function A9(t,{style:e,vars:n},r,i){Object.assign(t.style,e,i&&i.getProjectionStyles(r));for(const o in n)t.style.setProperty(o,n[o])}const Z9=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength"]);function G9(t,e,n,r){A9(t,e,void 0,r);for(const i in e.attrs)t.setAttribute(Z9.has(i)?i:B9(i),e.attrs[i])}function uS(t){const{style:e}=t,n={};for(const r in e)(ti(e[r])||O9(r,t))&&(n[r]=e[r]);return n}function W9(t){const e=uS(t);for(const n in t)if(ti(t[n])){const r=n==="x"||n==="y"?"attr"+n.toUpperCase():n;e[r]=t[n]}return e}function dS(t,e,n,r={},i={}){return typeof e=="function"&&(e=e(n!==void 0?n:t.custom,r,i)),typeof e=="string"&&(e=t.variants&&t.variants[e]),typeof e=="function"&&(e=e(n!==void 0?n:t.custom,r,i)),e}const qu=t=>Array.isArray(t),V_=t=>Boolean(t&&typeof t=="object"&&t.mix&&t.toValue),Y9=t=>qu(t)?t[t.length-1]||0:t;function kh(t){const e=ti(t)?t.get():t;return V_(e)?e.toValue():e}function L_({scrapeMotionValuesFromProps:t,createRenderState:e,onMount:n},r,i,o){const s={latestValues:X_(r,i,o,t),renderState:e()};return n&&(s.mount=a=>n(r,a,s)),s}const F9=t=>(e,n)=>{const r=S.exports.useContext(og),i=S.exports.useContext(Zl),o=()=>L_(t,e,r,i);return n?o():lg(o)};function X_(t,e,n,r){const i={},o=r(t);for(const f in o)i[f]=kh(o[f]);let{initial:s,animate:a}=t;const l=ag(t),c=k9(t);e&&c&&!l&&t.inherit!==!1&&(s===void 0&&(s=e.initial),a===void 0&&(a=e.animate));let u=n?n.initial===!1:!1;u=u||s===!1;const d=u?a:s;return d&&typeof d!="boolean"&&!sg(d)&&(Array.isArray(d)?d:[d]).forEach(h=>{const p=dS(t,h);if(!p)return;const{transitionEnd:m,transition:b,...g}=p;for(const v in g){let y=g[v];if(Array.isArray(y)){const x=u?y.length-1:0;y=y[x]}y!==null&&(i[v]=y)}for(const v in m)i[v]=m[v]}),i}const B_={useVisualState:F9({scrapeMotionValuesFromProps:W9,createRenderState:X9,onMount:(t,e,{renderState:n,latestValues:r})=>{try{n.dimensions=typeof e.getBBox=="function"?e.getBBox():e.getBoundingClientRect()}catch{n.dimensions={x:0,y:0,width:0,height:0}}cS(n,r,{enableHardwareAcceleration:!1},t.transformTemplate),G9(e,n)}})},A_={useVisualState:F9({scrapeMotionValuesFromProps:uS,createRenderState:lS})};function Z_(t,{forwardMotionProps:e=!1},n,r,i){return{...oS(t)?B_:A_,preloadedFeatures:n,useRender:N_(e),createVisualElement:r,projectionNodeConstructor:i,Component:t}}var Ee;(function(t){t.Animate="animate",t.Hover="whileHover",t.Tap="whileTap",t.Drag="whileDrag",t.Focus="whileFocus",t.InView="whileInView",t.Exit="exit"})(Ee||(Ee={}));function cg(t,e,n,r={passive:!0}){return t.addEventListener(e,n,r),()=>t.removeEventListener(e,n)}function Vy(t,e,n,r){S.exports.useEffect(()=>{const i=t.current;if(n&&i)return cg(i,e,n,r)},[t,e,n,r])}function G_({whileFocus:t,visualElement:e}){const{animationState:n}=e,r=()=>{n&&n.setActive(Ee.Focus,!0)},i=()=>{n&&n.setActive(Ee.Focus,!1)};Vy(e,"focus",t?r:void 0),Vy(e,"blur",t?i:void 0)}function H9(t){return typeof PointerEvent<"u"&&t instanceof PointerEvent?t.pointerType==="mouse":t instanceof MouseEvent}function j9(t){return!!t.touches}function W_(t){return e=>{const n=e instanceof MouseEvent;(!n||n&&e.button===0)&&t(e)}}const Y_={pageX:0,pageY:0};function F_(t,e="page"){const r=t.touches[0]||t.changedTouches[0]||Y_;return{x:r[e+"X"],y:r[e+"Y"]}}function H_(t,e="page"){return{x:t[e+"X"],y:t[e+"Y"]}}function fS(t,e="page"){return{point:j9(t)?F_(t,e):H_(t,e)}}const D9=(t,e=!1)=>{const n=r=>t(r,fS(r));return e?W_(n):n},j_=()=>Us&&window.onpointerdown===null,D_=()=>Us&&window.ontouchstart===null,U_=()=>Us&&window.onmousedown===null,K_={pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointercancel:"mousecancel",pointerover:"mouseover",pointerout:"mouseout",pointerenter:"mouseenter",pointerleave:"mouseleave"},q_={pointerdown:"touchstart",pointermove:"touchmove",pointerup:"touchend",pointercancel:"touchcancel"};function U9(t){return j_()?t:D_()?q_[t]:U_()?K_[t]:t}function $a(t,e,n,r){return cg(t,U9(e),D9(n,e==="pointerdown"),r)}function Hp(t,e,n,r){return Vy(t,U9(e),n&&D9(n,e==="pointerdown"),r)}function K9(t){let e=null;return()=>{const n=()=>{e=null};return e===null?(e=t,n):!1}}const XO=K9("dragHorizontal"),BO=K9("dragVertical");function q9(t){let e=!1;if(t==="y")e=BO();else if(t==="x")e=XO();else{const n=XO(),r=BO();n&&r?e=()=>{n(),r()}:(n&&n(),r&&r())}return e}function Q9(){const t=q9(!0);return t?(t(),!1):!0}function AO(t,e,n){return(r,i)=>{!H9(r)||Q9()||(t.animationState&&t.animationState.setActive(Ee.Hover,e),n&&n(r,i))}}function Q_({onHoverStart:t,onHoverEnd:e,whileHover:n,visualElement:r}){Hp(r,"pointerenter",t||n?AO(r,!0,t):void 0,{passive:!t}),Hp(r,"pointerleave",e||n?AO(r,!1,e):void 0,{passive:!e})}const J9=(t,e)=>e?t===e?!0:J9(t,e.parentElement):!1;function hS(t){return S.exports.useEffect(()=>()=>t(),[])}function _9(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]]);return n}var J_=function(){},jp=function(){};const Dp=(t,e,n)=>Math.min(Math.max(n,t),e),$0=.001,__=.01,ZO=10,$_=.05,e$=1;function t$({duration:t=800,bounce:e=.25,velocity:n=0,mass:r=1}){let i,o;J_(t<=ZO*1e3);let s=1-e;s=Dp($_,e$,s),t=Dp(__,ZO,t/1e3),s<1?(i=c=>{const u=c*s,d=u*t,f=u-n,h=Ly(c,s),p=Math.exp(-d);return $0-f/h*p},o=c=>{const d=c*s*t,f=d*n+n,h=Math.pow(s,2)*Math.pow(c,2)*t,p=Math.exp(-d),m=Ly(Math.pow(c,2),s);return(-i(c)+$0>0?-1:1)*((f-h)*p)/m}):(i=c=>{const u=Math.exp(-c*t),d=(c-n)*t+1;return-$0+u*d},o=c=>{const u=Math.exp(-c*t),d=(n-c)*(t*t);return u*d});const a=5/t,l=r$(i,o,a);if(t=t*1e3,isNaN(l))return{stiffness:100,damping:10,duration:t};{const c=Math.pow(l,2)*r;return{stiffness:c,damping:s*2*Math.sqrt(r*c),duration:t}}}const n$=12;function r$(t,e,n){let r=n;for(let i=1;i<n$;i++)r=r-t(r)/e(r);return r}function Ly(t,e){return t*Math.sqrt(1-e*e)}const i$=["duration","bounce"],o$=["stiffness","damping","mass"];function GO(t,e){return e.some(n=>t[n]!==void 0)}function s$(t){let e=Object.assign({velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1},t);if(!GO(t,o$)&&GO(t,i$)){const n=t$(t);e=Object.assign(Object.assign(Object.assign({},e),n),{velocity:0,mass:1}),e.isResolvedFromDuration=!0}return e}function pS(t){var{from:e=0,to:n=1,restSpeed:r=2,restDelta:i}=t,o=_9(t,["from","to","restSpeed","restDelta"]);const s={done:!1,value:e};let{stiffness:a,damping:l,mass:c,velocity:u,duration:d,isResolvedFromDuration:f}=s$(o),h=WO,p=WO;function m(){const b=u?-(u/1e3):0,g=n-e,v=l/(2*Math.sqrt(a*c)),y=Math.sqrt(a/c)/1e3;if(i===void 0&&(i=Math.min(Math.abs(n-e)/100,.4)),v<1){const x=Ly(y,v);h=k=>{const O=Math.exp(-v*y*k);return n-O*((b+v*y*g)/x*Math.sin(x*k)+g*Math.cos(x*k))},p=k=>{const O=Math.exp(-v*y*k);return v*y*O*(Math.sin(x*k)*(b+v*y*g)/x+g*Math.cos(x*k))-O*(Math.cos(x*k)*(b+v*y*g)-x*g*Math.sin(x*k))}}else if(v===1)h=x=>n-Math.exp(-y*x)*(g+(b+y*g)*x);else{const x=y*Math.sqrt(v*v-1);h=k=>{const O=Math.exp(-v*y*k),T=Math.min(x*k,300);return n-O*((b+v*y*g)*Math.sinh(T)+x*g*Math.cosh(T))/x}}}return m(),{next:b=>{const g=h(b);if(f)s.done=b>=d;else{const v=p(b)*1e3,y=Math.abs(v)<=r,x=Math.abs(n-g)<=i;s.done=y&&x}return s.value=s.done?n:g,s},flipTarget:()=>{u=-u,[e,n]=[n,e],m()}}}pS.needsInterpolation=(t,e)=>typeof t=="string"||typeof e=="string";const WO=t=>0,Qu=(t,e,n)=>{const r=e-t;return r===0?1:(n-t)/r},et=(t,e,n)=>-n*t+n*e+t;function ev(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*(2/3-n)*6:t}function YO({hue:t,saturation:e,lightness:n,alpha:r}){t/=360,e/=100,n/=100;let i=0,o=0,s=0;if(!e)i=o=s=n;else{const a=n<.5?n*(1+e):n+e-n*e,l=2*n-a;i=ev(l,a,t+1/3),o=ev(l,a,t),s=ev(l,a,t-1/3)}return{red:Math.round(i*255),green:Math.round(o*255),blue:Math.round(s*255),alpha:r}}const a$=(t,e,n)=>{const r=t*t,i=e*e;return Math.sqrt(Math.max(0,n*(i-r)+r))},l$=[Ey,lo,ms],FO=t=>l$.find(e=>e.test(t)),$9=(t,e)=>{let n=FO(t),r=FO(e),i=n.parse(t),o=r.parse(e);n===ms&&(i=YO(i),n=lo),r===ms&&(o=YO(o),r=lo);const s=Object.assign({},i);return a=>{for(const l in s)l!=="alpha"&&(s[l]=a$(i[l],o[l],a));return s.alpha=et(i.alpha,o.alpha,a),n.transform(s)}},Xy=t=>typeof t=="number",c$=(t,e)=>n=>e(t(n)),ug=(...t)=>t.reduce(c$);function eN(t,e){return Xy(t)?n=>et(t,e,n):Dt.test(t)?$9(t,e):nN(t,e)}const tN=(t,e)=>{const n=[...t],r=n.length,i=t.map((o,s)=>eN(o,e[s]));return o=>{for(let s=0;s<r;s++)n[s]=i[s](o);return n}},u$=(t,e)=>{const n=Object.assign(Object.assign({},t),e),r={};for(const i in n)t[i]!==void 0&&e[i]!==void 0&&(r[i]=eN(t[i],e[i]));return i=>{for(const o in r)n[o]=r[o](i);return n}};function HO(t){const e=Ii.parse(t),n=e.length;let r=0,i=0,o=0;for(let s=0;s<n;s++)r||typeof e[s]=="number"?r++:e[s].hue!==void 0?o++:i++;return{parsed:e,numNumbers:r,numRGB:i,numHSL:o}}const nN=(t,e)=>{const n=Ii.createTransformer(e),r=HO(t),i=HO(e);return r.numHSL===i.numHSL&&r.numRGB===i.numRGB&&r.numNumbers>=i.numNumbers?ug(tN(r.parsed,i.parsed),n):s=>`${s>0?e:t}`},d$=(t,e)=>n=>et(t,e,n);function f$(t){if(typeof t=="number")return d$;if(typeof t=="string")return Dt.test(t)?$9:nN;if(Array.isArray(t))return tN;if(typeof t=="object")return u$}function h$(t,e,n){const r=[],i=n||f$(t[0]),o=t.length-1;for(let s=0;s<o;s++){let a=i(t[s],t[s+1]);if(e){const l=Array.isArray(e)?e[s]:e;a=ug(l,a)}r.push(a)}return r}function p$([t,e],[n]){return r=>n(Qu(t,e,r))}function m$(t,e){const n=t.length,r=n-1;return i=>{let o=0,s=!1;if(i<=t[0]?s=!0:i>=t[r]&&(o=r-1,s=!0),!s){let l=1;for(;l<n&&!(t[l]>i||l===r);l++);o=l-1}const a=Qu(t[o],t[o+1],i);return e[o](a)}}function rN(t,e,{clamp:n=!0,ease:r,mixer:i}={}){const o=t.length;jp(o===e.length),jp(!r||!Array.isArray(r)||r.length===o-1),t[0]>t[o-1]&&(t=[].concat(t),e=[].concat(e),t.reverse(),e.reverse());const s=h$(e,r,i),a=o===2?p$(t,s):m$(t,s);return n?l=>a(Dp(t[0],t[o-1],l)):a}const dg=t=>e=>1-t(1-e),mS=t=>e=>e<=.5?t(2*e)/2:(2-t(2*(1-e)))/2,g$=t=>e=>Math.pow(e,t),iN=t=>e=>e*e*((t+1)*e-t),v$=t=>{const e=iN(t);return n=>(n*=2)<1?.5*e(n):.5*(2-Math.pow(2,-10*(n-1)))},oN=1.525,b$=4/11,y$=8/11,x$=9/10,gS=t=>t,vS=g$(2),S$=dg(vS),sN=mS(vS),aN=t=>1-Math.sin(Math.acos(t)),bS=dg(aN),k$=mS(bS),yS=iN(oN),w$=dg(yS),O$=mS(yS),T$=v$(oN),P$=4356/361,C$=35442/1805,M$=16061/1805,Up=t=>{if(t===1||t===0)return t;const e=t*t;return t<b$?7.5625*e:t<y$?9.075*e-9.9*t+3.4:t<x$?P$*e-C$*t+M$:10.8*t*t-20.52*t+10.72},R$=dg(Up),I$=t=>t<.5?.5*(1-Up(1-t*2)):.5*Up(t*2-1)+.5;function z$(t,e){return t.map(()=>e||sN).splice(0,t.length-1)}function E$(t){const e=t.length;return t.map((n,r)=>r!==0?r/(e-1):0)}function N$(t,e){return t.map(n=>n*e)}function wh({from:t=0,to:e=1,ease:n,offset:r,duration:i=300}){const o={done:!1,value:t},s=Array.isArray(e)?e:[t,e],a=N$(r&&r.length===s.length?r:E$(s),i);function l(){return rN(a,s,{ease:Array.isArray(n)?n:z$(s,n)})}let c=l();return{next:u=>(o.value=c(u),o.done=u>=i,o),flipTarget:()=>{s.reverse(),c=l()}}}function V$({velocity:t=0,from:e=0,power:n=.8,timeConstant:r=350,restDelta:i=.5,modifyTarget:o}){const s={done:!1,value:e};let a=n*t;const l=e+a,c=o===void 0?l:o(l);return c!==l&&(a=c-e),{next:u=>{const d=-a*Math.exp(-u/r);return s.done=!(d>i||d<-i),s.value=s.done?c:c+d,s},flipTarget:()=>{}}}const jO={keyframes:wh,spring:pS,decay:V$};function L$(t){if(Array.isArray(t.to))return wh;if(jO[t.type])return jO[t.type];const e=new Set(Object.keys(t));return e.has("ease")||e.has("duration")&&!e.has("dampingRatio")?wh:e.has("dampingRatio")||e.has("stiffness")||e.has("mass")||e.has("damping")||e.has("restSpeed")||e.has("restDelta")?pS:wh}const lN=1/60*1e3,X$=typeof performance<"u"?()=>performance.now():()=>Date.now(),cN=typeof window<"u"?t=>window.requestAnimationFrame(t):t=>setTimeout(()=>t(X$()),lN);function B$(t){let e=[],n=[],r=0,i=!1,o=!1;const s=new WeakSet,a={schedule:(l,c=!1,u=!1)=>{const d=u&&i,f=d?e:n;return c&&s.add(l),f.indexOf(l)===-1&&(f.push(l),d&&i&&(r=e.length)),l},cancel:l=>{const c=n.indexOf(l);c!==-1&&n.splice(c,1),s.delete(l)},process:l=>{if(i){o=!0;return}if(i=!0,[e,n]=[n,e],n.length=0,r=e.length,r)for(let c=0;c<r;c++){const u=e[c];u(l),s.has(u)&&(a.schedule(u),t())}i=!1,o&&(o=!1,a.process(l))}};return a}const A$=40;let By=!0,Ju=!1,Ay=!1;const el={delta:0,timestamp:0},xd=["read","update","preRender","render","postRender"],fg=xd.reduce((t,e)=>(t[e]=B$(()=>Ju=!0),t),{}),Z$=xd.reduce((t,e)=>{const n=fg[e];return t[e]=(r,i=!1,o=!1)=>(Ju||Y$(),n.schedule(r,i,o)),t},{}),G$=xd.reduce((t,e)=>(t[e]=fg[e].cancel,t),{});xd.reduce((t,e)=>(t[e]=()=>fg[e].process(el),t),{});const W$=t=>fg[t].process(el),uN=t=>{Ju=!1,el.delta=By?lN:Math.max(Math.min(t-el.timestamp,A$),1),el.timestamp=t,Ay=!0,xd.forEach(W$),Ay=!1,Ju&&(By=!1,cN(uN))},Y$=()=>{Ju=!0,By=!0,Ay||cN(uN)},F$=()=>el;function dN(t,e,n=0){return t-e-n}function H$(t,e,n=0,r=!0){return r?dN(e+-t,e,n):e-(t-e)+n}function j$(t,e,n,r){return r?t>=e+n:t<=-n}const D$=t=>{const e=({delta:n})=>t(n);return{start:()=>Z$.update(e,!0),stop:()=>G$.update(e)}};function fN(t){var e,n,{from:r,autoplay:i=!0,driver:o=D$,elapsed:s=0,repeat:a=0,repeatType:l="loop",repeatDelay:c=0,onPlay:u,onStop:d,onComplete:f,onRepeat:h,onUpdate:p}=t,m=_9(t,["from","autoplay","driver","elapsed","repeat","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate"]);let{to:b}=m,g,v=0,y=m.duration,x,k=!1,O=!0,T;const M=L$(m);!((n=(e=M).needsInterpolation)===null||n===void 0)&&n.call(e,r,b)&&(T=rN([0,100],[r,b],{clamp:!1}),r=0,b=100);const E=M(Object.assign(Object.assign({},m),{from:r,to:b}));function I(){v++,l==="reverse"?(O=v%2===0,s=H$(s,y,c,O)):(s=dN(s,y,c),l==="mirror"&&E.flipTarget()),k=!1,h&&h()}function B(){g.stop(),f&&f()}function D(ae){if(O||(ae=-ae),s+=ae,!k){const oe=E.next(Math.max(0,s));x=oe.value,T&&(x=T(x)),k=O?oe.done:s<=0}p==null||p(x),k&&(v===0&&(y!=null||(y=s)),v<a?j$(s,y,c,O)&&I():B())}function J(){u==null||u(),g=o(D),g.start()}return i&&J(),{stop:()=>{d==null||d(),g.stop()}}}function hN(t,e){return e?t*(1e3/e):0}function U$({from:t=0,velocity:e=0,min:n,max:r,power:i=.8,timeConstant:o=750,bounceStiffness:s=500,bounceDamping:a=10,restDelta:l=1,modifyTarget:c,driver:u,onUpdate:d,onComplete:f,onStop:h}){let p;function m(y){return n!==void 0&&y<n||r!==void 0&&y>r}function b(y){return n===void 0?r:r===void 0||Math.abs(n-y)<Math.abs(r-y)?n:r}function g(y){p==null||p.stop(),p=fN(Object.assign(Object.assign({},y),{driver:u,onUpdate:x=>{var k;d==null||d(x),(k=y.onUpdate)===null||k===void 0||k.call(y,x)},onComplete:f,onStop:h}))}function v(y){g(Object.assign({type:"spring",stiffness:s,damping:a,restDelta:l},y))}if(m(t))v({from:t,velocity:e,to:b(t)});else{let y=i*e+t;typeof c<"u"&&(y=c(y));const x=b(y),k=x===n?-1:1;let O,T;const M=E=>{O=T,T=E,e=hN(E-O,F$().delta),(k===1&&E>x||k===-1&&E<x)&&v({from:E,to:x,velocity:e})};g({type:"decay",from:t,velocity:e,timeConstant:o,power:i,restDelta:l,modifyTarget:c,onUpdate:m(y)?M:void 0})}return{stop:()=>p==null?void 0:p.stop()}}const Zy=t=>t.hasOwnProperty("x")&&t.hasOwnProperty("y"),DO=t=>Zy(t)&&t.hasOwnProperty("z"),Nf=(t,e)=>Math.abs(t-e);function xS(t,e){if(Xy(t)&&Xy(e))return Nf(t,e);if(Zy(t)&&Zy(e)){const n=Nf(t.x,e.x),r=Nf(t.y,e.y),i=DO(t)&&DO(e)?Nf(t.z,e.z):0;return Math.sqrt(Math.pow(n,2)+Math.pow(r,2)+Math.pow(i,2))}}const pN=(t,e)=>1-3*e+3*t,mN=(t,e)=>3*e-6*t,gN=t=>3*t,Kp=(t,e,n)=>((pN(e,n)*t+mN(e,n))*t+gN(e))*t,vN=(t,e,n)=>3*pN(e,n)*t*t+2*mN(e,n)*t+gN(e),K$=1e-7,q$=10;function Q$(t,e,n,r,i){let o,s,a=0;do s=e+(n-e)/2,o=Kp(s,r,i)-t,o>0?n=s:e=s;while(Math.abs(o)>K$&&++a<q$);return s}const J$=8,_$=.001;function $$(t,e,n,r){for(let i=0;i<J$;++i){const o=vN(e,n,r);if(o===0)return e;const s=Kp(e,n,r)-t;e-=s/o}return e}const Oh=11,Vf=1/(Oh-1);function eee(t,e,n,r){if(t===e&&n===r)return gS;const i=new Float32Array(Oh);for(let s=0;s<Oh;++s)i[s]=Kp(s*Vf,t,n);function o(s){let a=0,l=1;const c=Oh-1;for(;l!==c&&i[l]<=s;++l)a+=Vf;--l;const u=(s-i[l])/(i[l+1]-i[l]),d=a+u*Vf,f=vN(d,t,n);return f>=_$?$$(s,d,t,n):f===0?d:Q$(s,a,a+Vf,t,n)}return s=>s===0||s===1?s:Kp(o(s),e,r)}function tee({onTap:t,onTapStart:e,onTapCancel:n,whileTap:r,visualElement:i}){const o=t||e||n||r,s=S.exports.useRef(!1),a=S.exports.useRef(null),l={passive:!(e||t||n||h)};function c(){a.current&&a.current(),a.current=null}function u(){return c(),s.current=!1,i.animationState&&i.animationState.setActive(Ee.Tap,!1),!Q9()}function d(p,m){!u()||(J9(i.current,p.target)?t&&t(p,m):n&&n(p,m))}function f(p,m){!u()||n&&n(p,m)}function h(p,m){c(),!s.current&&(s.current=!0,a.current=ug($a(window,"pointerup",d,l),$a(window,"pointercancel",f,l)),i.animationState&&i.animationState.setActive(Ee.Tap,!0),e&&e(p,m))}Hp(i,"pointerdown",o?h:void 0,l),hS(c)}const nee="production",bN=typeof process>"u"||process.env===void 0?nee:"production",UO=new Set;function yN(t,e,n){t||UO.has(e)||(console.warn(e),n&&console.warn(n),UO.add(e))}const Gy=new WeakMap,tv=new WeakMap,ree=t=>{const e=Gy.get(t.target);e&&e(t)},iee=t=>{t.forEach(ree)};function oee({root:t,...e}){const n=t||document;tv.has(n)||tv.set(n,{});const r=tv.get(n),i=JSON.stringify(e);return r[i]||(r[i]=new IntersectionObserver(iee,{root:t,...e})),r[i]}function see(t,e,n){const r=oee(e);return Gy.set(t,n),r.observe(t),()=>{Gy.delete(t),r.unobserve(t)}}function aee({visualElement:t,whileInView:e,onViewportEnter:n,onViewportLeave:r,viewport:i={}}){const o=S.exports.useRef({hasEnteredView:!1,isInView:!1});let s=Boolean(e||n||r);i.once&&o.current.hasEnteredView&&(s=!1),(typeof IntersectionObserver>"u"?uee:cee)(s,o.current,t,i)}const lee={some:0,all:1};function cee(t,e,n,{root:r,margin:i,amount:o="some",once:s}){S.exports.useEffect(()=>{if(!t||!n.current)return;const a={root:r==null?void 0:r.current,rootMargin:i,threshold:typeof o=="number"?o:lee[o]},l=c=>{const{isIntersecting:u}=c;if(e.isInView===u||(e.isInView=u,s&&!u&&e.hasEnteredView))return;u&&(e.hasEnteredView=!0),n.animationState&&n.animationState.setActive(Ee.InView,u);const d=n.getProps(),f=u?d.onViewportEnter:d.onViewportLeave;f&&f(c)};return see(n.current,a,l)},[t,r,i,o])}function uee(t,e,n,{fallback:r=!0}){S.exports.useEffect(()=>{!t||!r||(bN!=="production"&&yN(!1,"IntersectionObserver not available on this device. whileInView animations will trigger on mount."),requestAnimationFrame(()=>{e.hasEnteredView=!0;const{onViewportEnter:i}=n.getProps();i&&i(null),n.animationState&&n.animationState.setActive(Ee.InView,!0)}))},[t])}const co=t=>e=>(t(e),null),dee={inView:co(aee),tap:co(tee),focus:co(G_),hover:co(Q_)};function SS(){const t=S.exports.useContext(Zl);if(t===null)return[!0,null];const{isPresent:e,onExitComplete:n,register:r}=t,i=S.exports.useId();return S.exports.useEffect(()=>r(i),[]),!e&&n?[!1,()=>n&&n(i)]:[!0]}function fee(){return hee(S.exports.useContext(Zl))}function hee(t){return t===null?!0:t.isPresent}function xN(t,e){if(!Array.isArray(e))return!1;const n=e.length;if(n!==t.length)return!1;for(let r=0;r<n;r++)if(e[r]!==t[r])return!1;return!0}const qp=t=>t*1e3,pee={linear:gS,easeIn:vS,easeInOut:sN,easeOut:S$,circIn:aN,circInOut:k$,circOut:bS,backIn:yS,backInOut:O$,backOut:w$,anticipate:T$,bounceIn:R$,bounceInOut:I$,bounceOut:Up},KO=t=>{if(Array.isArray(t)){jp(t.length===4);const[e,n,r,i]=t;return eee(e,n,r,i)}else if(typeof t=="string")return pee[t];return t},mee=t=>Array.isArray(t)&&typeof t[0]!="number",qO=(t,e)=>t==="zIndex"?!1:!!(typeof e=="number"||Array.isArray(e)||typeof e=="string"&&Ii.test(e)&&!e.startsWith("url(")),Do=()=>({type:"spring",stiffness:500,damping:25,restSpeed:10}),Lf=t=>({type:"spring",stiffness:550,damping:t===0?2*Math.sqrt(550):30,restSpeed:10}),nv=()=>({type:"keyframes",ease:"linear",duration:.3}),gee=t=>({type:"keyframes",duration:.8,values:t}),QO={x:Do,y:Do,z:Do,rotate:Do,rotateX:Do,rotateY:Do,rotateZ:Do,scaleX:Lf,scaleY:Lf,scale:Lf,opacity:nv,backgroundColor:nv,color:nv,default:Lf},vee=(t,e)=>{let n;return qu(e)?n=gee:n=QO[t]||QO.default,{to:e,...n(e)}},bee={...N9,color:Dt,backgroundColor:Dt,outlineColor:Dt,fill:Dt,stroke:Dt,borderColor:Dt,borderTopColor:Dt,borderRightColor:Dt,borderBottomColor:Dt,borderLeftColor:Dt,filter:Ny,WebkitFilter:Ny},kS=t=>bee[t];function wS(t,e){var n;let r=kS(t);return r!==Ny&&(r=Ii),(n=r.getAnimatableNone)===null||n===void 0?void 0:n.call(r,e)}const yee={current:!1},SN=1/60*1e3,xee=typeof performance<"u"?()=>performance.now():()=>Date.now(),kN=typeof window<"u"?t=>window.requestAnimationFrame(t):t=>setTimeout(()=>t(xee()),SN);function See(t){let e=[],n=[],r=0,i=!1,o=!1;const s=new WeakSet,a={schedule:(l,c=!1,u=!1)=>{const d=u&&i,f=d?e:n;return c&&s.add(l),f.indexOf(l)===-1&&(f.push(l),d&&i&&(r=e.length)),l},cancel:l=>{const c=n.indexOf(l);c!==-1&&n.splice(c,1),s.delete(l)},process:l=>{if(i){o=!0;return}if(i=!0,[e,n]=[n,e],n.length=0,r=e.length,r)for(let c=0;c<r;c++){const u=e[c];u(l),s.has(u)&&(a.schedule(u),t())}i=!1,o&&(o=!1,a.process(l))}};return a}const kee=40;let Wy=!0,_u=!1,Yy=!1;const tl={delta:0,timestamp:0},Sd=["read","update","preRender","render","postRender"],hg=Sd.reduce((t,e)=>(t[e]=See(()=>_u=!0),t),{}),yr=Sd.reduce((t,e)=>{const n=hg[e];return t[e]=(r,i=!1,o=!1)=>(_u||Oee(),n.schedule(r,i,o)),t},{}),Bs=Sd.reduce((t,e)=>(t[e]=hg[e].cancel,t),{}),rv=Sd.reduce((t,e)=>(t[e]=()=>hg[e].process(tl),t),{}),wee=t=>hg[t].process(tl),wN=t=>{_u=!1,tl.delta=Wy?SN:Math.max(Math.min(t-tl.timestamp,kee),1),tl.timestamp=t,Yy=!0,Sd.forEach(wee),Yy=!1,_u&&(Wy=!1,kN(wN))},Oee=()=>{_u=!0,Wy=!0,Yy||kN(wN)},Fy=()=>tl;function ON(t,e){const n=performance.now(),r=({timestamp:i})=>{const o=i-n;o>=e&&(Bs.read(r),t(o-e))};return yr.read(r,!0),()=>Bs.read(r)}function Tee({when:t,delay:e,delayChildren:n,staggerChildren:r,staggerDirection:i,repeat:o,repeatType:s,repeatDelay:a,from:l,...c}){return!!Object.keys(c).length}function Pee({ease:t,times:e,yoyo:n,flip:r,loop:i,...o}){const s={...o};return e&&(s.offset=e),o.duration&&(s.duration=qp(o.duration)),o.repeatDelay&&(s.repeatDelay=qp(o.repeatDelay)),t&&(s.ease=mee(t)?t.map(KO):KO(t)),o.type==="tween"&&(s.type="keyframes"),(n||i||r)&&(n?s.repeatType="reverse":i?s.repeatType="loop":r&&(s.repeatType="mirror"),s.repeat=i||n||r||o.repeat),o.type!=="spring"&&(s.type="keyframes"),s}function Cee(t,e){var n,r;return(r=(n=(OS(t,e)||{}).delay)!==null&&n!==void 0?n:t.delay)!==null&&r!==void 0?r:0}function Mee(t){return Array.isArray(t.to)&&t.to[0]===null&&(t.to=[...t.to],t.to[0]=t.from),t}function Ree(t,e,n){return Array.isArray(e.to)&&t.duration===void 0&&(t.duration=.8),Mee(e),Tee(t)||(t={...t,...vee(n,e.to)}),{...e,...Pee(t)}}function Iee(t,e,n,r,i){const o=OS(r,t)||{};let s=o.from!==void 0?o.from:e.get();const a=qO(t,n);s==="none"&&a&&typeof n=="string"?s=wS(t,n):JO(s)&&typeof n=="string"?s=_O(n):!Array.isArray(n)&&JO(n)&&typeof s=="string"&&(n=_O(s));const l=qO(t,s);function c(){const d={from:s,to:n,velocity:e.getVelocity(),onComplete:i,onUpdate:f=>e.set(f)};return o.type==="inertia"||o.type==="decay"?U$({...d,...o}):fN({...Ree(o,d,t),onUpdate:f=>{d.onUpdate(f),o.onUpdate&&o.onUpdate(f)},onComplete:()=>{d.onComplete(),o.onComplete&&o.onComplete()}})}function u(){const d=Y9(n);return e.set(d),i(),o.onUpdate&&o.onUpdate(d),o.onComplete&&o.onComplete(),{stop:()=>{}}}return!l||!a||o.type===!1?u:c}function JO(t){return t===0||typeof t=="string"&&parseFloat(t)===0&&t.indexOf(" ")===-1}function _O(t){return typeof t=="number"?0:wS("",t)}function OS(t,e){return t[e]||t.default||t}function TS(t,e,n,r={}){return yee.current&&(r={type:!1}),e.start(i=>{let o;const s=Iee(t,e,n,r,i),a=Cee(r,t),l=()=>o=s();let c;return a?c=ON(l,qp(a)):l(),()=>{c&&c(),o&&o.stop()}})}const zee=t=>/^\-?\d*\.?\d+$/.test(t),Eee=t=>/^0[^.\s]+$/.test(t);function PS(t,e){t.indexOf(e)===-1&&t.push(e)}function CS(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}class $c{constructor(){this.subscriptions=[]}add(e){return PS(this.subscriptions,e),()=>CS(this.subscriptions,e)}notify(e,n,r){const i=this.subscriptions.length;if(!!i)if(i===1)this.subscriptions[0](e,n,r);else for(let o=0;o<i;o++){const s=this.subscriptions[o];s&&s(e,n,r)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}const Nee=t=>!isNaN(parseFloat(t));class Vee{constructor(e){this.version="7.6.12",this.timeDelta=0,this.lastUpdated=0,this.updateSubscribers=new $c,this.velocityUpdateSubscribers=new $c,this.renderSubscribers=new $c,this.canTrackVelocity=!1,this.updateAndNotify=(n,r=!0)=>{this.prev=this.current,this.current=n;const{delta:i,timestamp:o}=Fy();this.lastUpdated!==o&&(this.timeDelta=i,this.lastUpdated=o,yr.postRender(this.scheduleVelocityCheck)),this.prev!==this.current&&this.updateSubscribers.notify(this.current),this.velocityUpdateSubscribers.getSize()&&this.velocityUpdateSubscribers.notify(this.getVelocity()),r&&this.renderSubscribers.notify(this.current)},this.scheduleVelocityCheck=()=>yr.postRender(this.velocityCheck),this.velocityCheck=({timestamp:n})=>{n!==this.lastUpdated&&(this.prev=this.current,this.velocityUpdateSubscribers.notify(this.getVelocity()))},this.hasAnimated=!1,this.prev=this.current=e,this.canTrackVelocity=Nee(this.current)}onChange(e){return this.updateSubscribers.add(e)}clearListeners(){this.updateSubscribers.clear()}onRenderRequest(e){return e(this.get()),this.renderSubscribers.add(e)}attach(e){this.passiveEffect=e}set(e,n=!0){!n||!this.passiveEffect?this.updateAndNotify(e,n):this.passiveEffect(e,this.updateAndNotify)}get(){return this.current}getPrevious(){return this.prev}getVelocity(){return this.canTrackVelocity?hN(parseFloat(this.current)-parseFloat(this.prev),this.timeDelta):0}start(e){return this.stop(),new Promise(n=>{this.hasAnimated=!0,this.stopAnimation=e(n)}).then(()=>this.clearAnimation())}stop(){this.stopAnimation&&this.stopAnimation(),this.clearAnimation()}isAnimating(){return!!this.stopAnimation}clearAnimation(){this.stopAnimation=null}destroy(){this.updateSubscribers.clear(),this.renderSubscribers.clear(),this.stop()}}function wl(t){return new Vee(t)}const TN=t=>e=>e.test(t),Lee={test:t=>t==="auto",parse:t=>t},PN=[Ks,ne,Jr,Yi,c_,l_,Lee],uc=t=>PN.find(TN(t)),Xee=[...PN,Dt,Ii],Bee=t=>Xee.find(TN(t));function Aee(t){const e={};return t.values.forEach((n,r)=>e[r]=n.get()),e}function Zee(t){const e={};return t.values.forEach((n,r)=>e[r]=n.getVelocity()),e}function pg(t,e,n){const r=t.getProps();return dS(r,e,n!==void 0?n:r.custom,Aee(t),Zee(t))}function Gee(t,e,n){t.hasValue(e)?t.getValue(e).set(n):t.addValue(e,wl(n))}function Wee(t,e){const n=pg(t,e);let{transitionEnd:r={},transition:i={},...o}=n?t.makeTargetAnimatable(n,!1):{};o={...o,...r};for(const s in o){const a=Y9(o[s]);Gee(t,s,a)}}function Yee(t,e,n){var r,i;const o=Object.keys(e).filter(a=>!t.hasValue(a)),s=o.length;if(!!s)for(let a=0;a<s;a++){const l=o[a],c=e[l];let u=null;Array.isArray(c)&&(u=c[0]),u===null&&(u=(i=(r=n[l])!==null&&r!==void 0?r:t.readValue(l))!==null&&i!==void 0?i:e[l]),u!=null&&(typeof u=="string"&&(zee(u)||Eee(u))?u=parseFloat(u):!Bee(u)&&Ii.test(c)&&(u=wS(l,c)),t.addValue(l,wl(u)),n[l]===void 0&&(n[l]=u),u!==null&&t.setBaseTarget(l,u))}}function Fee(t,e){return e?(e[t]||e.default||e).from:void 0}function Hee(t,e,n){var r;const i={};for(const o in t){const s=Fee(o,e);i[o]=s!==void 0?s:(r=n.getValue(o))===null||r===void 0?void 0:r.get()}return i}function Qp(t){return Boolean(ti(t)&&t.add)}function jee(t,e,n={}){t.notify("AnimationStart",e);let r;if(Array.isArray(e)){const i=e.map(o=>Hy(t,o,n));r=Promise.all(i)}else if(typeof e=="string")r=Hy(t,e,n);else{const i=typeof e=="function"?pg(t,e,n.custom):e;r=CN(t,i,n)}return r.then(()=>t.notify("AnimationComplete",e))}function Hy(t,e,n={}){var r;const i=pg(t,e,n.custom);let{transition:o=t.getDefaultTransition()||{}}=i||{};n.transitionOverride&&(o=n.transitionOverride);const s=i?()=>CN(t,i,n):()=>Promise.resolve(),a=!((r=t.variantChildren)===null||r===void 0)&&r.size?(c=0)=>{const{delayChildren:u=0,staggerChildren:d,staggerDirection:f}=o;return Dee(t,e,u+c,d,f,n)}:()=>Promise.resolve(),{when:l}=o;if(l){const[c,u]=l==="beforeChildren"?[s,a]:[a,s];return c().then(u)}else return Promise.all([s(),a(n.delay)])}function CN(t,e,{delay:n=0,transitionOverride:r,type:i}={}){var o;let{transition:s=t.getDefaultTransition(),transitionEnd:a,...l}=t.makeTargetAnimatable(e);const c=t.getValue("willChange");r&&(s=r);const u=[],d=i&&((o=t.animationState)===null||o===void 0?void 0:o.getState()[i]);for(const f in l){const h=t.getValue(f),p=l[f];if(!h||p===void 0||d&&Kee(d,f))continue;let m={delay:n,...s};t.shouldReduceMotion&&Gl.has(f)&&(m={...m,type:!1,delay:0});let b=TS(f,h,p,m);Qp(c)&&(c.add(f),b=b.then(()=>c.remove(f))),u.push(b)}return Promise.all(u).then(()=>{a&&Wee(t,a)})}function Dee(t,e,n=0,r=0,i=1,o){const s=[],a=(t.variantChildren.size-1)*r,l=i===1?(c=0)=>c*r:(c=0)=>a-c*r;return Array.from(t.variantChildren).sort(Uee).forEach((c,u)=>{s.push(Hy(c,e,{...o,delay:n+l(u)}).then(()=>c.notify("AnimationComplete",e)))}),Promise.all(s)}function Uee(t,e){return t.sortNodePosition(e)}function Kee({protectedKeys:t,needsAnimating:e},n){const r=t.hasOwnProperty(n)&&e[n]!==!0;return e[n]=!1,r}const MS=[Ee.Animate,Ee.InView,Ee.Focus,Ee.Hover,Ee.Tap,Ee.Drag,Ee.Exit],qee=[...MS].reverse(),Qee=MS.length;function Jee(t){return e=>Promise.all(e.map(({animation:n,options:r})=>jee(t,n,r)))}function _ee(t){let e=Jee(t);const n=ete();let r=!0;const i=(l,c)=>{const u=pg(t,c);if(u){const{transition:d,transitionEnd:f,...h}=u;l={...l,...h,...f}}return l};function o(l){e=l(t)}function s(l,c){var u;const d=t.getProps(),f=t.getVariantContext(!0)||{},h=[],p=new Set;let m={},b=1/0;for(let v=0;v<Qee;v++){const y=qee[v],x=n[y],k=(u=d[y])!==null&&u!==void 0?u:f[y],O=Du(k),T=y===c?x.isActive:null;T===!1&&(b=v);let M=k===f[y]&&k!==d[y]&&O;if(M&&r&&t.manuallyAnimateOnMount&&(M=!1),x.protectedKeys={...m},!x.isActive&&T===null||!k&&!x.prevProp||sg(k)||typeof k=="boolean")continue;const E=$ee(x.prevProp,k);let I=E||y===c&&x.isActive&&!M&&O||v>b&&O;const B=Array.isArray(k)?k:[k];let D=B.reduce(i,{});T===!1&&(D={});const{prevResolvedValues:J={}}=x,ae={...J,...D},oe=Y=>{I=!0,p.delete(Y),x.needsAnimating[Y]=!0};for(const Y in ae){const ee=D[Y],L=J[Y];m.hasOwnProperty(Y)||(ee!==L?qu(ee)&&qu(L)?!xN(ee,L)||E?oe(Y):x.protectedKeys[Y]=!0:ee!==void 0?oe(Y):p.add(Y):ee!==void 0&&p.has(Y)?oe(Y):x.protectedKeys[Y]=!0)}x.prevProp=k,x.prevResolvedValues=D,x.isActive&&(m={...m,...D}),r&&t.blockInitialAnimation&&(I=!1),I&&!M&&h.push(...B.map(Y=>({animation:Y,options:{type:y,...l}})))}if(p.size){const v={};p.forEach(y=>{const x=t.getBaseTarget(y);x!==void 0&&(v[y]=x)}),h.push({animation:v})}let g=Boolean(h.length);return r&&d.initial===!1&&!t.manuallyAnimateOnMount&&(g=!1),r=!1,g?e(h):Promise.resolve()}function a(l,c,u){var d;if(n[l].isActive===c)return Promise.resolve();(d=t.variantChildren)===null||d===void 0||d.forEach(h=>{var p;return(p=h.animationState)===null||p===void 0?void 0:p.setActive(l,c)}),n[l].isActive=c;const f=s(u,l);for(const h in n)n[h].protectedKeys={};return f}return{animateChanges:s,setActive:a,setAnimateFunction:o,getState:()=>n}}function $ee(t,e){return typeof e=="string"?e!==t:Array.isArray(e)?!xN(e,t):!1}function Uo(t=!1){return{isActive:t,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function ete(){return{[Ee.Animate]:Uo(!0),[Ee.InView]:Uo(),[Ee.Hover]:Uo(),[Ee.Tap]:Uo(),[Ee.Drag]:Uo(),[Ee.Focus]:Uo(),[Ee.Exit]:Uo()}}const tte={animation:co(({visualElement:t,animate:e})=>{t.animationState||(t.animationState=_ee(t)),sg(e)&&S.exports.useEffect(()=>e.subscribe(t),[e])}),exit:co(t=>{const{custom:e,visualElement:n}=t,[r,i]=SS(),o=S.exports.useContext(Zl);S.exports.useEffect(()=>{n.isPresent=r;const s=n.animationState&&n.animationState.setActive(Ee.Exit,!r,{custom:o&&o.custom||e});s&&!r&&s.then(i)},[r])})};class MN{constructor(e,n,{transformPagePoint:r}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.updatePoint=()=>{if(!(this.lastMoveEvent&&this.lastMoveEventInfo))return;const c=ov(this.lastMoveEventInfo,this.history),u=this.startEvent!==null,d=xS(c.offset,{x:0,y:0})>=3;if(!u&&!d)return;const{point:f}=c,{timestamp:h}=Fy();this.history.push({...f,timestamp:h});const{onStart:p,onMove:m}=this.handlers;u||(p&&p(this.lastMoveEvent,c),this.startEvent=this.lastMoveEvent),m&&m(this.lastMoveEvent,c)},this.handlePointerMove=(c,u)=>{if(this.lastMoveEvent=c,this.lastMoveEventInfo=iv(u,this.transformPagePoint),H9(c)&&c.buttons===0){this.handlePointerUp(c,u);return}yr.update(this.updatePoint,!0)},this.handlePointerUp=(c,u)=>{this.end();const{onEnd:d,onSessionEnd:f}=this.handlers,h=ov(iv(u,this.transformPagePoint),this.history);this.startEvent&&d&&d(c,h),f&&f(c,h)},j9(e)&&e.touches.length>1)return;this.handlers=n,this.transformPagePoint=r;const i=fS(e),o=iv(i,this.transformPagePoint),{point:s}=o,{timestamp:a}=Fy();this.history=[{...s,timestamp:a}];const{onSessionStart:l}=n;l&&l(e,ov(o,this.history)),this.removeListeners=ug($a(window,"pointermove",this.handlePointerMove),$a(window,"pointerup",this.handlePointerUp),$a(window,"pointercancel",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),Bs.update(this.updatePoint)}}function iv(t,e){return e?{point:e(t.point)}:t}function $O(t,e){return{x:t.x-e.x,y:t.y-e.y}}function ov({point:t},e){return{point:t,delta:$O(t,RN(e)),offset:$O(t,nte(e)),velocity:rte(e,.1)}}function nte(t){return t[0]}function RN(t){return t[t.length-1]}function rte(t,e){if(t.length<2)return{x:0,y:0};let n=t.length-1,r=null;const i=RN(t);for(;n>=0&&(r=t[n],!(i.timestamp-r.timestamp>qp(e)));)n--;if(!r)return{x:0,y:0};const o=(i.timestamp-r.timestamp)/1e3;if(o===0)return{x:0,y:0};const s={x:(i.x-r.x)/o,y:(i.y-r.y)/o};return s.x===1/0&&(s.x=0),s.y===1/0&&(s.y=0),s}function En(t){return t.max-t.min}function eT(t,e=0,n=.01){return xS(t,e)<n}function tT(t,e,n,r=.5){t.origin=r,t.originPoint=et(e.min,e.max,t.origin),t.scale=En(n)/En(e),(eT(t.scale,1,1e-4)||isNaN(t.scale))&&(t.scale=1),t.translate=et(n.min,n.max,t.origin)-t.originPoint,(eT(t.translate)||isNaN(t.translate))&&(t.translate=0)}function eu(t,e,n,r){tT(t.x,e.x,n.x,r==null?void 0:r.originX),tT(t.y,e.y,n.y,r==null?void 0:r.originY)}function nT(t,e,n){t.min=n.min+e.min,t.max=t.min+En(e)}function ite(t,e,n){nT(t.x,e.x,n.x),nT(t.y,e.y,n.y)}function rT(t,e,n){t.min=e.min-n.min,t.max=t.min+En(e)}function tu(t,e,n){rT(t.x,e.x,n.x),rT(t.y,e.y,n.y)}function ote(t,{min:e,max:n},r){return e!==void 0&&t<e?t=r?et(e,t,r.min):Math.max(t,e):n!==void 0&&t>n&&(t=r?et(n,t,r.max):Math.min(t,n)),t}function iT(t,e,n){return{min:e!==void 0?t.min+e:void 0,max:n!==void 0?t.max+n-(t.max-t.min):void 0}}function ste(t,{top:e,left:n,bottom:r,right:i}){return{x:iT(t.x,n,i),y:iT(t.y,e,r)}}function oT(t,e){let n=e.min-t.min,r=e.max-t.max;return e.max-e.min<t.max-t.min&&([n,r]=[r,n]),{min:n,max:r}}function ate(t,e){return{x:oT(t.x,e.x),y:oT(t.y,e.y)}}function lte(t,e){let n=.5;const r=En(t),i=En(e);return i>r?n=Qu(e.min,e.max-r,t.min):r>i&&(n=Qu(t.min,t.max-i,e.min)),Dp(0,1,n)}function cte(t,e){const n={};return e.min!==void 0&&(n.min=e.min-t.min),e.max!==void 0&&(n.max=e.max-t.min),n}const jy=.35;function ute(t=jy){return t===!1?t=0:t===!0&&(t=jy),{x:sT(t,"left","right"),y:sT(t,"top","bottom")}}function sT(t,e,n){return{min:aT(t,e),max:aT(t,n)}}function aT(t,e){var n;return typeof t=="number"?t:(n=t[e])!==null&&n!==void 0?n:0}const lT=()=>({translate:0,scale:1,origin:0,originPoint:0}),nu=()=>({x:lT(),y:lT()}),cT=()=>({min:0,max:0}),dt=()=>({x:cT(),y:cT()});function Nr(t){return[t("x"),t("y")]}function IN({top:t,left:e,right:n,bottom:r}){return{x:{min:e,max:n},y:{min:t,max:r}}}function dte({x:t,y:e}){return{top:e.min,right:t.max,bottom:e.max,left:t.min}}function fte(t,e){if(!e)return t;const n=e({x:t.left,y:t.top}),r=e({x:t.right,y:t.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}function sv(t){return t===void 0||t===1}function Dy({scale:t,scaleX:e,scaleY:n}){return!sv(t)||!sv(e)||!sv(n)}function Jo(t){return Dy(t)||zN(t)||t.z||t.rotate||t.rotateX||t.rotateY}function zN(t){return uT(t.x)||uT(t.y)}function uT(t){return t&&t!=="0%"}function Jp(t,e,n){const r=t-n,i=e*r;return n+i}function dT(t,e,n,r,i){return i!==void 0&&(t=Jp(t,i,r)),Jp(t,n,r)+e}function Uy(t,e=0,n=1,r,i){t.min=dT(t.min,e,n,r,i),t.max=dT(t.max,e,n,r,i)}function EN(t,{x:e,y:n}){Uy(t.x,e.translate,e.scale,e.originPoint),Uy(t.y,n.translate,n.scale,n.originPoint)}function hte(t,e,n,r=!1){var i,o;const s=n.length;if(!s)return;e.x=e.y=1;let a,l;for(let c=0;c<s;c++)a=n[c],l=a.projectionDelta,((o=(i=a.instance)===null||i===void 0?void 0:i.style)===null||o===void 0?void 0:o.display)!=="contents"&&(r&&a.options.layoutScroll&&a.scroll&&a!==a.root&&Na(t,{x:-a.scroll.offset.x,y:-a.scroll.offset.y}),l&&(e.x*=l.x.scale,e.y*=l.y.scale,EN(t,l)),r&&Jo(a.latestValues)&&Na(t,a.latestValues))}function Ui(t,e){t.min=t.min+e,t.max=t.max+e}function fT(t,e,[n,r,i]){const o=e[i]!==void 0?e[i]:.5,s=et(t.min,t.max,o);Uy(t,e[n],e[r],s,e.scale)}const pte=["x","scaleX","originX"],mte=["y","scaleY","originY"];function Na(t,e){fT(t.x,e,pte),fT(t.y,e,mte)}function NN(t,e){return IN(fte(t.getBoundingClientRect(),e))}function gte(t,e,n){const r=NN(t,n),{scroll:i}=e;return i&&(Ui(r.x,i.offset.x),Ui(r.y,i.offset.y)),r}const vte=new WeakMap;class bte{constructor(e){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=dt(),this.visualElement=e}start(e,{snapToCursor:n=!1}={}){if(this.visualElement.isPresent===!1)return;const r=a=>{this.stopAnimation(),n&&this.snapToCursor(fS(a,"page").point)},i=(a,l)=>{var c;const{drag:u,dragPropagation:d,onDragStart:f}=this.getProps();u&&!d&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=q9(u),!this.openGlobalLock)||(this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),Nr(h=>{var p,m;let b=this.getAxisMotionValue(h).get()||0;if(Jr.test(b)){const g=(m=(p=this.visualElement.projection)===null||p===void 0?void 0:p.layout)===null||m===void 0?void 0:m.layoutBox[h];g&&(b=En(g)*(parseFloat(b)/100))}this.originPoint[h]=b}),f==null||f(a,l),(c=this.visualElement.animationState)===null||c===void 0||c.setActive(Ee.Drag,!0))},o=(a,l)=>{const{dragPropagation:c,dragDirectionLock:u,onDirectionLock:d,onDrag:f}=this.getProps();if(!c&&!this.openGlobalLock)return;const{offset:h}=l;if(u&&this.currentDirection===null){this.currentDirection=yte(h),this.currentDirection!==null&&(d==null||d(this.currentDirection));return}this.updateAxis("x",l.point,h),this.updateAxis("y",l.point,h),this.visualElement.render(),f==null||f(a,l)},s=(a,l)=>this.stop(a,l);this.panSession=new MN(e,{onSessionStart:r,onStart:i,onMove:o,onSessionEnd:s},{transformPagePoint:this.visualElement.getTransformPagePoint()})}stop(e,n){const r=this.isDragging;if(this.cancel(),!r)return;const{velocity:i}=n;this.startAnimation(i);const{onDragEnd:o}=this.getProps();o==null||o(e,n)}cancel(){var e,n;this.isDragging=!1,this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!1),(e=this.panSession)===null||e===void 0||e.end(),this.panSession=void 0;const{dragPropagation:r}=this.getProps();!r&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),(n=this.visualElement.animationState)===null||n===void 0||n.setActive(Ee.Drag,!1)}updateAxis(e,n,r){const{drag:i}=this.getProps();if(!r||!Xf(e,i,this.currentDirection))return;const o=this.getAxisMotionValue(e);let s=this.originPoint[e]+r[e];this.constraints&&this.constraints[e]&&(s=ote(s,this.constraints[e],this.elastic[e])),o.set(s)}resolveConstraints(){const{dragConstraints:e,dragElastic:n}=this.getProps(),{layout:r}=this.visualElement.projection||{},i=this.constraints;e&&Ea(e)?this.constraints||(this.constraints=this.resolveRefConstraints()):e&&r?this.constraints=ste(r.layoutBox,e):this.constraints=!1,this.elastic=ute(n),i!==this.constraints&&r&&this.constraints&&!this.hasMutatedConstraints&&Nr(o=>{this.getAxisMotionValue(o)&&(this.constraints[o]=cte(r.layoutBox[o],this.constraints[o]))})}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:n}=this.getProps();if(!e||!Ea(e))return!1;const r=e.current,{projection:i}=this.visualElement;if(!i||!i.layout)return!1;const o=gte(r,i.root,this.visualElement.getTransformPagePoint());let s=ate(i.layout.layoutBox,o);if(n){const a=n(dte(s));this.hasMutatedConstraints=!!a,a&&(s=IN(a))}return s}startAnimation(e){const{drag:n,dragMomentum:r,dragElastic:i,dragTransition:o,dragSnapToOrigin:s,onDragTransitionEnd:a}=this.getProps(),l=this.constraints||{},c=Nr(u=>{var d;if(!Xf(u,n,this.currentDirection))return;let f=(d=l==null?void 0:l[u])!==null&&d!==void 0?d:{};s&&(f={min:0,max:0});const h=i?200:1e6,p=i?40:1e7,m={type:"inertia",velocity:r?e[u]:0,bounceStiffness:h,bounceDamping:p,timeConstant:750,restDelta:1,restSpeed:10,...o,...f};return this.startAxisValueAnimation(u,m)});return Promise.all(c).then(a)}startAxisValueAnimation(e,n){const r=this.getAxisMotionValue(e);return TS(e,r,0,n)}stopAnimation(){Nr(e=>this.getAxisMotionValue(e).stop())}getAxisMotionValue(e){var n,r;const i="_drag"+e.toUpperCase(),o=this.visualElement.getProps()[i];return o||this.visualElement.getValue(e,(r=(n=this.visualElement.getProps().initial)===null||n===void 0?void 0:n[e])!==null&&r!==void 0?r:0)}snapToCursor(e){Nr(n=>{const{drag:r}=this.getProps();if(!Xf(n,r,this.currentDirection))return;const{projection:i}=this.visualElement,o=this.getAxisMotionValue(n);if(i&&i.layout){const{min:s,max:a}=i.layout.layoutBox[n];o.set(e[n]-et(s,a,.5))}})}scalePositionWithinConstraints(){var e;if(!this.visualElement.current)return;const{drag:n,dragConstraints:r}=this.getProps(),{projection:i}=this.visualElement;if(!Ea(r)||!i||!this.constraints)return;this.stopAnimation();const o={x:0,y:0};Nr(a=>{const l=this.getAxisMotionValue(a);if(l){const c=l.get();o[a]=lte({min:c,max:c},this.constraints[a])}});const{transformTemplate:s}=this.visualElement.getProps();this.visualElement.current.style.transform=s?s({},""):"none",(e=i.root)===null||e===void 0||e.updateScroll(),i.updateLayout(),this.resolveConstraints(),Nr(a=>{if(!Xf(a,n,null))return;const l=this.getAxisMotionValue(a),{min:c,max:u}=this.constraints[a];l.set(et(c,u,o[a]))})}addListeners(){var e;if(!this.visualElement.current)return;vte.set(this.visualElement,this);const n=this.visualElement.current,r=$a(n,"pointerdown",c=>{const{drag:u,dragListener:d=!0}=this.getProps();u&&d&&this.start(c)}),i=()=>{const{dragConstraints:c}=this.getProps();Ea(c)&&(this.constraints=this.resolveRefConstraints())},{projection:o}=this.visualElement,s=o.addEventListener("measure",i);o&&!o.layout&&((e=o.root)===null||e===void 0||e.updateScroll(),o.updateLayout()),i();const a=cg(window,"resize",()=>this.scalePositionWithinConstraints()),l=o.addEventListener("didUpdate",({delta:c,hasLayoutChanged:u})=>{this.isDragging&&u&&(Nr(d=>{const f=this.getAxisMotionValue(d);!f||(this.originPoint[d]+=c[d].translate,f.set(f.get()+c[d].translate))}),this.visualElement.render())});return()=>{a(),r(),s(),l==null||l()}}getProps(){const e=this.visualElement.getProps(),{drag:n=!1,dragDirectionLock:r=!1,dragPropagation:i=!1,dragConstraints:o=!1,dragElastic:s=jy,dragMomentum:a=!0}=e;return{...e,drag:n,dragDirectionLock:r,dragPropagation:i,dragConstraints:o,dragElastic:s,dragMomentum:a}}}function Xf(t,e,n){return(e===!0||e===t)&&(n===null||n===t)}function yte(t,e=10){let n=null;return Math.abs(t.y)>e?n="y":Math.abs(t.x)>e&&(n="x"),n}function xte(t){const{dragControls:e,visualElement:n}=t,r=lg(()=>new bte(n));S.exports.useEffect(()=>e&&e.subscribe(r),[r,e]),S.exports.useEffect(()=>r.addListeners(),[r])}function Ste({onPan:t,onPanStart:e,onPanEnd:n,onPanSessionStart:r,visualElement:i}){const o=t||e||n||r,s=S.exports.useRef(null),{transformPagePoint:a}=S.exports.useContext(rS),l={onSessionStart:r,onStart:e,onMove:t,onEnd:(u,d)=>{s.current=null,n&&n(u,d)}};S.exports.useEffect(()=>{s.current!==null&&s.current.updateHandlers(l)});function c(u){s.current=new MN(u,l,{transformPagePoint:a})}Hp(i,"pointerdown",o&&c),hS(()=>s.current&&s.current.end())}const kte={pan:co(Ste),drag:co(xte)};function Ky(t){return typeof t=="string"&&t.startsWith("var(--")}const VN=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;function wte(t){const e=VN.exec(t);if(!e)return[,];const[,n,r]=e;return[n,r]}function qy(t,e,n=1){const[r,i]=wte(t);if(!r)return;const o=window.getComputedStyle(e).getPropertyValue(r);return o?o.trim():Ky(i)?qy(i,e,n+1):i}function Ote(t,{...e},n){const r=t.current;if(!(r instanceof Element))return{target:e,transitionEnd:n};n&&(n={...n}),t.values.forEach(i=>{const o=i.get();if(!Ky(o))return;const s=qy(o,r);s&&i.set(s)});for(const i in e){const o=e[i];if(!Ky(o))continue;const s=qy(o,r);!s||(e[i]=s,n&&n[i]===void 0&&(n[i]=o))}return{target:e,transitionEnd:n}}const Tte=new Set(["width","height","top","left","right","bottom","x","y"]),LN=t=>Tte.has(t),Pte=t=>Object.keys(t).some(LN),XN=(t,e)=>{t.set(e,!1),t.set(e)},hT=t=>t===Ks||t===ne;var pT;(function(t){t.width="width",t.height="height",t.left="left",t.right="right",t.top="top",t.bottom="bottom"})(pT||(pT={}));const mT=(t,e)=>parseFloat(t.split(", ")[e]),gT=(t,e)=>(n,{transform:r})=>{if(r==="none"||!r)return 0;const i=r.match(/^matrix3d\((.+)\)$/);if(i)return mT(i[1],e);{const o=r.match(/^matrix\((.+)\)$/);return o?mT(o[1],t):0}},Cte=new Set(["x","y","z"]),Mte=Yp.filter(t=>!Cte.has(t));function Rte(t){const e=[];return Mte.forEach(n=>{const r=t.getValue(n);r!==void 0&&(e.push([n,r.get()]),r.set(n.startsWith("scale")?1:0))}),e.length&&t.render(),e}const vT={width:({x:t},{paddingLeft:e="0",paddingRight:n="0"})=>t.max-t.min-parseFloat(e)-parseFloat(n),height:({y:t},{paddingTop:e="0",paddingBottom:n="0"})=>t.max-t.min-parseFloat(e)-parseFloat(n),top:(t,{top:e})=>parseFloat(e),left:(t,{left:e})=>parseFloat(e),bottom:({y:t},{top:e})=>parseFloat(e)+(t.max-t.min),right:({x:t},{left:e})=>parseFloat(e)+(t.max-t.min),x:gT(4,13),y:gT(5,14)},Ite=(t,e,n)=>{const r=e.measureViewportBox(),i=e.current,o=getComputedStyle(i),{display:s}=o,a={};s==="none"&&e.setStaticValue("display",t.display||"block"),n.forEach(c=>{a[c]=vT[c](r,o)}),e.render();const l=e.measureViewportBox();return n.forEach(c=>{const u=e.getValue(c);XN(u,a[c]),t[c]=vT[c](l,o)}),t},zte=(t,e,n={},r={})=>{e={...e},r={...r};const i=Object.keys(e).filter(LN);let o=[],s=!1;const a=[];if(i.forEach(l=>{const c=t.getValue(l);if(!t.hasValue(l))return;let u=n[l],d=uc(u);const f=e[l];let h;if(qu(f)){const p=f.length,m=f[0]===null?1:0;u=f[m],d=uc(u);for(let b=m;b<p;b++)h?jp(uc(f[b])===h):h=uc(f[b])}else h=uc(f);if(d!==h)if(hT(d)&&hT(h)){const p=c.get();typeof p=="string"&&c.set(parseFloat(p)),typeof f=="string"?e[l]=parseFloat(f):Array.isArray(f)&&h===ne&&(e[l]=f.map(parseFloat))}else(d==null?void 0:d.transform)&&(h==null?void 0:h.transform)&&(u===0||f===0)?u===0?c.set(h.transform(u)):e[l]=d.transform(f):(s||(o=Rte(t),s=!0),a.push(l),r[l]=r[l]!==void 0?r[l]:e[l],XN(c,f))}),a.length){const l=a.indexOf("height")>=0?window.pageYOffset:null,c=Ite(e,t,a);return o.length&&o.forEach(([u,d])=>{t.getValue(u).set(d)}),t.render(),Us&&l!==null&&window.scrollTo({top:l}),{target:c,transitionEnd:r}}else return{target:e,transitionEnd:r}};function Ete(t,e,n,r){return Pte(e)?zte(t,e,n,r):{target:e,transitionEnd:r}}const Nte=(t,e,n,r)=>{const i=Ote(t,e,r);return e=i.target,r=i.transitionEnd,Ete(t,e,n,r)},Qy={current:null},BN={current:!1};function Vte(){if(BN.current=!0,!!Us)if(window.matchMedia){const t=window.matchMedia("(prefers-reduced-motion)"),e=()=>Qy.current=t.matches;t.addListener(e),e()}else Qy.current=!1}function Lte(t,e,n){const{willChange:r}=e;for(const i in e){const o=e[i],s=n[i];if(ti(o))t.addValue(i,o),Qp(r)&&r.add(i);else if(ti(s))t.addValue(i,wl(o)),Qp(r)&&r.remove(i);else if(s!==o)if(t.hasValue(i)){const a=t.getValue(i);!a.hasAnimated&&a.set(o)}else{const a=t.getStaticValue(i);t.addValue(i,wl(a!==void 0?a:o))}}for(const i in n)e[i]===void 0&&t.removeValue(i);return e}const AN=Object.keys(Uu),Xte=AN.length,bT=["AnimationStart","AnimationComplete","Update","Unmount","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"];class Bte{constructor({parent:e,props:n,reducedMotionConfig:r,visualState:i},o={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.isPresent=!0,this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{!this.current||(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.scheduleRender=()=>yr.render(this.render,!1,!0);const{latestValues:s,renderState:a}=i;this.latestValues=s,this.baseTarget={...s},this.initialValues=n.initial?{...s}:{},this.renderState=a,this.parent=e,this.props=n,this.depth=e?e.depth+1:0,this.reducedMotionConfig=r,this.options=o,this.isControllingVariants=ag(n),this.isVariantNode=k9(n),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(e&&e.current);const{willChange:l,...c}=this.scrapeMotionValuesFromProps(n);for(const u in c){const d=c[u];s[u]!==void 0&&ti(d)&&(d.set(s[u],!1),Qp(l)&&l.add(u))}}scrapeMotionValuesFromProps(e){return{}}mount(e){var n;this.current=e,this.projection&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=(n=this.parent)===null||n===void 0?void 0:n.addVariantChild(this)),this.values.forEach((r,i)=>this.bindToMotionValue(i,r)),BN.current||Vte(),this.shouldReduceMotion=this.reducedMotionConfig==="never"?!1:this.reducedMotionConfig==="always"?!0:Qy.current,this.parent&&this.parent.children.add(this),this.setProps(this.props)}unmount(){var e,n,r;(e=this.projection)===null||e===void 0||e.unmount(),Bs.update(this.notifyUpdate),Bs.render(this.render),this.valueSubscriptions.forEach(i=>i()),(n=this.removeFromVariantTree)===null||n===void 0||n.call(this),(r=this.parent)===null||r===void 0||r.children.delete(this);for(const i in this.events)this.events[i].clear();this.current=null}bindToMotionValue(e,n){const r=Gl.has(e),i=n.onChange(s=>{this.latestValues[e]=s,this.props.onUpdate&&yr.update(this.notifyUpdate,!1,!0),r&&this.projection&&(this.projection.isTransformDirty=!0)}),o=n.onRenderRequest(this.scheduleRender);this.valueSubscriptions.set(e,()=>{i(),o()})}sortNodePosition(e){return!this.current||!this.sortInstanceNodePosition||this.type!==e.type?0:this.sortInstanceNodePosition(this.current,e.current)}loadFeatures(e,n,r,i,o,s){const a=[];for(let l=0;l<Xte;l++){const c=AN[l],{isEnabled:u,Component:d}=Uu[c];u(e)&&d&&a.push(S.exports.createElement(d,{key:c,...e,visualElement:this}))}if(!this.projection&&o){this.projection=new o(i,this.latestValues,this.parent&&this.parent.projection);const{layoutId:l,layout:c,drag:u,dragConstraints:d,layoutScroll:f}=e;this.projection.setOptions({layoutId:l,layout:c,alwaysMeasureLayout:Boolean(u)||d&&Ea(d),visualElement:this,scheduleRender:()=>this.scheduleRender(),animationType:typeof c=="string"?c:"both",initialPromotionConfig:s,layoutScroll:f})}return a}triggerBuild(){this.build(this.renderState,this.latestValues,this.options,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):dt()}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,n){this.latestValues[e]=n}makeTargetAnimatable(e,n=!0){return this.makeTargetAnimatableFromInstance(e,this.props,n)}setProps(e){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.props=e;for(let n=0;n<bT.length;n++){const r=bT[n];this.propEventSubscriptions[r]&&(this.propEventSubscriptions[r](),delete this.propEventSubscriptions[r]);const i=e["on"+r];i&&(this.propEventSubscriptions[r]=this.on(r,i))}this.prevMotionValues=Lte(this,this.scrapeMotionValuesFromProps(e),this.prevMotionValues)}getProps(){return this.props}getVariant(e){var n;return(n=this.props.variants)===null||n===void 0?void 0:n[e]}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){var e;return this.isVariantNode?this:(e=this.parent)===null||e===void 0?void 0:e.getClosestVariantNode()}getVariantContext(e=!1){var n,r;if(e)return(n=this.parent)===null||n===void 0?void 0:n.getVariantContext();if(!this.isControllingVariants){const o=((r=this.parent)===null||r===void 0?void 0:r.getVariantContext())||{};return this.props.initial!==void 0&&(o.initial=this.props.initial),o}const i={};for(let o=0;o<Ate;o++){const s=ZN[o],a=this.props[s];(Du(a)||a===!1)&&(i[s]=a)}return i}addVariantChild(e){var n;const r=this.getClosestVariantNode();if(r)return(n=r.variantChildren)===null||n===void 0||n.add(e),()=>r.variantChildren.delete(e)}addValue(e,n){this.hasValue(e)&&this.removeValue(e),this.values.set(e,n),this.latestValues[e]=n.get(),this.bindToMotionValue(e,n)}removeValue(e){var n;this.values.delete(e),(n=this.valueSubscriptions.get(e))===null||n===void 0||n(),this.valueSubscriptions.delete(e),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,n){if(this.props.values&&this.props.values[e])return this.props.values[e];let r=this.values.get(e);return r===void 0&&n!==void 0&&(r=wl(n),this.addValue(e,r)),r}readValue(e){return this.latestValues[e]!==void 0||!this.current?this.latestValues[e]:this.readValueFromInstance(this.current,e,this.options)}setBaseTarget(e,n){this.baseTarget[e]=n}getBaseTarget(e){var n;const{initial:r}=this.props,i=typeof r=="string"||typeof r=="object"?(n=dS(this.props,r))===null||n===void 0?void 0:n[e]:void 0;if(r&&i!==void 0)return i;const o=this.getBaseTargetFromProps(this.props,e);return o!==void 0&&!ti(o)?o:this.initialValues[e]!==void 0&&i===void 0?void 0:this.baseTarget[e]}on(e,n){return this.events[e]||(this.events[e]=new $c),this.events[e].add(n)}notify(e,...n){var r;(r=this.events[e])===null||r===void 0||r.notify(...n)}}const ZN=["initial",...MS],Ate=ZN.length;class GN extends Bte{sortInstanceNodePosition(e,n){return e.compareDocumentPosition(n)&2?1:-1}getBaseTargetFromProps(e,n){var r;return(r=e.style)===null||r===void 0?void 0:r[n]}removeValueFromRenderState(e,{vars:n,style:r}){delete n[e],delete r[e]}makeTargetAnimatableFromInstance({transition:e,transitionEnd:n,...r},{transformValues:i},o){let s=Hee(r,e||{},this);if(i&&(n&&(n=i(n)),r&&(r=i(r)),s&&(s=i(s))),o){Yee(this,r,s);const a=Nte(this,r,s,n);n=a.transitionEnd,r=a.target}return{transition:e,transitionEnd:n,...r}}}function Zte(t){return window.getComputedStyle(t)}class Gte extends GN{readValueFromInstance(e,n){if(Gl.has(n)){const r=kS(n);return r&&r.default||0}else{const r=Zte(e),i=(T9(n)?r.getPropertyValue(n):r[n])||0;return typeof i=="string"?i.trim():i}}measureInstanceViewportBox(e,{transformPagePoint:n}){return NN(e,n)}build(e,n,r,i){aS(e,n,r,i.transformTemplate)}scrapeMotionValuesFromProps(e){return uS(e)}renderInstance(e,n,r,i){A9(e,n,r,i)}}class Wte extends GN{getBaseTargetFromProps(e,n){return e[n]}readValueFromInstance(e,n){var r;return Gl.has(n)?((r=kS(n))===null||r===void 0?void 0:r.default)||0:(n=Z9.has(n)?n:B9(n),e.getAttribute(n))}measureInstanceViewportBox(){return dt()}scrapeMotionValuesFromProps(e){return W9(e)}build(e,n,r,i){cS(e,n,r,i.transformTemplate)}renderInstance(e,n,r,i){G9(e,n,r,i)}}const Yte=(t,e)=>oS(t)?new Wte(e,{enableHardwareAcceleration:!1}):new Gte(e,{enableHardwareAcceleration:!0});function yT(t,e){return e.max===e.min?0:t/(e.max-e.min)*100}const dc={correct:(t,e)=>{if(!e.target)return t;if(typeof t=="string")if(ne.test(t))t=parseFloat(t);else return t;const n=yT(t,e.target.x),r=yT(t,e.target.y);return`${n}% ${r}%`}},xT="_$css",Fte={correct:(t,{treeScale:e,projectionDelta:n})=>{const r=t,i=t.includes("var("),o=[];i&&(t=t.replace(VN,h=>(o.push(h),xT)));const s=Ii.parse(t);if(s.length>5)return r;const a=Ii.createTransformer(t),l=typeof s[0]!="number"?1:0,c=n.x.scale*e.x,u=n.y.scale*e.y;s[0+l]/=c,s[1+l]/=u;const d=et(c,u,.5);typeof s[2+l]=="number"&&(s[2+l]/=d),typeof s[3+l]=="number"&&(s[3+l]/=d);let f=a(s);if(i){let h=0;f=f.replace(xT,()=>{const p=o[h];return h++,p})}return f}};class Hte extends Z.Component{componentDidMount(){const{visualElement:e,layoutGroup:n,switchLayoutGroup:r,layoutId:i}=this.props,{projection:o}=e;n_(Dte),o&&(n.group&&n.group.add(o),r&&r.register&&i&&r.register(o),o.root.didUpdate(),o.addEventListener("animationComplete",()=>{this.safeToRemove()}),o.setOptions({...o.options,onExitComplete:()=>this.safeToRemove()})),Qc.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:n,visualElement:r,drag:i,isPresent:o}=this.props,s=r.projection;return s&&(s.isPresent=o,i||e.layoutDependency!==n||n===void 0?s.willUpdate():this.safeToRemove(),e.isPresent!==o&&(o?s.promote():s.relegate()||yr.postRender(()=>{var a;!((a=s.getStack())===null||a===void 0)&&a.members.length||this.safeToRemove()}))),null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),!e.currentAnimation&&e.isLead()&&this.safeToRemove())}componentWillUnmount(){const{visualElement:e,layoutGroup:n,switchLayoutGroup:r}=this.props,{projection:i}=e;i&&(i.scheduleCheckAfterUnmount(),n!=null&&n.group&&n.group.remove(i),r!=null&&r.deregister&&r.deregister(i))}safeToRemove(){const{safeToRemove:e}=this.props;e==null||e()}render(){return null}}function jte(t){const[e,n]=SS(),r=S.exports.useContext(iS);return z(Hte,{...t,layoutGroup:r,switchLayoutGroup:S.exports.useContext(w9),isPresent:e,safeToRemove:n})}const Dte={borderRadius:{...dc,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:dc,borderTopRightRadius:dc,borderBottomLeftRadius:dc,borderBottomRightRadius:dc,boxShadow:Fte},Ute={measureLayout:jte};function Kte(t,e,n={}){const r=ti(t)?t:wl(t);return TS("",r,e,n),{stop:()=>r.stop(),isAnimating:()=>r.isAnimating()}}const WN=["TopLeft","TopRight","BottomLeft","BottomRight"],qte=WN.length,ST=t=>typeof t=="string"?parseFloat(t):t,kT=t=>typeof t=="number"||ne.test(t);function Qte(t,e,n,r,i,o){var s,a,l,c;i?(t.opacity=et(0,(s=n.opacity)!==null&&s!==void 0?s:1,Jte(r)),t.opacityExit=et((a=e.opacity)!==null&&a!==void 0?a:1,0,_te(r))):o&&(t.opacity=et((l=e.opacity)!==null&&l!==void 0?l:1,(c=n.opacity)!==null&&c!==void 0?c:1,r));for(let u=0;u<qte;u++){const d=`border${WN[u]}Radius`;let f=wT(e,d),h=wT(n,d);if(f===void 0&&h===void 0)continue;f||(f=0),h||(h=0),f===0||h===0||kT(f)===kT(h)?(t[d]=Math.max(et(ST(f),ST(h),r),0),(Jr.test(h)||Jr.test(f))&&(t[d]+="%")):t[d]=h}(e.rotate||n.rotate)&&(t.rotate=et(e.rotate||0,n.rotate||0,r))}function wT(t,e){var n;return(n=t[e])!==null&&n!==void 0?n:t.borderRadius}const Jte=YN(0,.5,bS),_te=YN(.5,.95,gS);function YN(t,e,n){return r=>r<t?0:r>e?1:n(Qu(t,e,r))}function OT(t,e){t.min=e.min,t.max=e.max}function lr(t,e){OT(t.x,e.x),OT(t.y,e.y)}function TT(t,e,n,r,i){return t-=e,t=Jp(t,1/n,r),i!==void 0&&(t=Jp(t,1/i,r)),t}function $te(t,e=0,n=1,r=.5,i,o=t,s=t){if(Jr.test(e)&&(e=parseFloat(e),e=et(s.min,s.max,e/100)-s.min),typeof e!="number")return;let a=et(o.min,o.max,r);t===o&&(a-=e),t.min=TT(t.min,e,n,a,i),t.max=TT(t.max,e,n,a,i)}function PT(t,e,[n,r,i],o,s){$te(t,e[n],e[r],e[i],e.scale,o,s)}const ene=["x","scaleX","originX"],tne=["y","scaleY","originY"];function CT(t,e,n,r){PT(t.x,e,ene,n==null?void 0:n.x,r==null?void 0:r.x),PT(t.y,e,tne,n==null?void 0:n.y,r==null?void 0:r.y)}function MT(t){return t.translate===0&&t.scale===1}function FN(t){return MT(t.x)&&MT(t.y)}function HN(t,e){return t.x.min===e.x.min&&t.x.max===e.x.max&&t.y.min===e.y.min&&t.y.max===e.y.max}function RT(t){return En(t.x)/En(t.y)}function nne(t,e,n=.1){return xS(t,e)<=n}class rne{constructor(){this.members=[]}add(e){PS(this.members,e),e.scheduleRender()}remove(e){if(CS(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const n=this.members[this.members.length-1];n&&this.promote(n)}}relegate(e){const n=this.members.findIndex(i=>e===i);if(n===0)return!1;let r;for(let i=n;i>=0;i--){const o=this.members[i];if(o.isPresent!==!1){r=o;break}}return r?(this.promote(r),!0):!1}promote(e,n){var r;const i=this.lead;if(e!==i&&(this.prevLead=i,this.lead=e,e.show(),i)){i.instance&&i.scheduleRender(),e.scheduleRender(),e.resumeFrom=i,n&&(e.resumeFrom.preserveOpacity=!0),i.snapshot&&(e.snapshot=i.snapshot,e.snapshot.latestValues=i.animationValues||i.latestValues),!((r=e.root)===null||r===void 0)&&r.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:o}=e.options;o===!1&&i.hide()}}exitAnimationComplete(){this.members.forEach(e=>{var n,r,i,o,s;(r=(n=e.options).onExitComplete)===null||r===void 0||r.call(n),(s=(i=e.resumingFrom)===null||i===void 0?void 0:(o=i.options).onExitComplete)===null||s===void 0||s.call(o)})}scheduleRender(){this.members.forEach(e=>{e.instance&&e.scheduleRender(!1)})}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}function IT(t,e,n){let r="";const i=t.x.translate/e.x,o=t.y.translate/e.y;if((i||o)&&(r=`translate3d(${i}px, ${o}px, 0) `),(e.x!==1||e.y!==1)&&(r+=`scale(${1/e.x}, ${1/e.y}) `),n){const{rotate:l,rotateX:c,rotateY:u}=n;l&&(r+=`rotate(${l}deg) `),c&&(r+=`rotateX(${c}deg) `),u&&(r+=`rotateY(${u}deg) `)}const s=t.x.scale*e.x,a=t.y.scale*e.y;return(s!==1||a!==1)&&(r+=`scale(${s}, ${a})`),r||"none"}const ine=(t,e)=>t.depth-e.depth;class one{constructor(){this.children=[],this.isDirty=!1}add(e){PS(this.children,e),this.isDirty=!0}remove(e){CS(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(ine),this.isDirty=!1,this.children.forEach(e)}}const zT=["","X","Y","Z"],ET=1e3;let sne=0;function jN({attachResizeListener:t,defaultParent:e,measureScroll:n,checkIsScrollRoot:r,resetTransform:i}){return class{constructor(s,a={},l=e==null?void 0:e()){this.id=sne++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isTransformDirty=!1,this.isProjectionDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.potentialNodes=new Map,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.nodes.forEach(cne),this.nodes.forEach(fne),this.nodes.forEach(hne)},this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.elementId=s,this.latestValues=a,this.root=l?l.root||l:this,this.path=l?[...l.path,l]:[],this.parent=l,this.depth=l?l.depth+1:0,s&&this.root.registerPotentialNode(s,this);for(let c=0;c<this.path.length;c++)this.path[c].shouldResetTransform=!0;this.root===this&&(this.nodes=new one)}addEventListener(s,a){return this.eventHandlers.has(s)||this.eventHandlers.set(s,new $c),this.eventHandlers.get(s).add(a)}notifyListeners(s,...a){const l=this.eventHandlers.get(s);l==null||l.notify(...a)}hasListeners(s){return this.eventHandlers.has(s)}registerPotentialNode(s,a){this.potentialNodes.set(s,a)}mount(s,a=!1){var l;if(this.instance)return;this.isSVG=s instanceof SVGElement&&s.tagName!=="svg",this.instance=s;const{layoutId:c,layout:u,visualElement:d}=this.options;if(d&&!d.current&&d.mount(s),this.root.nodes.add(this),(l=this.parent)===null||l===void 0||l.children.add(this),this.elementId&&this.root.potentialNodes.delete(this.elementId),a&&(u||c)&&(this.isLayoutDirty=!0),t){let f;const h=()=>this.root.updateBlockedByResize=!1;t(s,()=>{this.root.updateBlockedByResize=!0,f&&f(),f=ON(h,250),Qc.hasAnimatedSinceResize&&(Qc.hasAnimatedSinceResize=!1,this.nodes.forEach(VT))})}c&&this.root.registerSharedNode(c,this),this.options.animate!==!1&&d&&(c||u)&&this.addEventListener("didUpdate",({delta:f,hasLayoutChanged:h,hasRelativeTargetChanged:p,layout:m})=>{var b,g,v,y,x;if(this.isTreeAnimationBlocked()){this.target=void 0,this.relativeTarget=void 0;return}const k=(g=(b=this.options.transition)!==null&&b!==void 0?b:d.getDefaultTransition())!==null&&g!==void 0?g:bne,{onLayoutAnimationStart:O,onLayoutAnimationComplete:T}=d.getProps(),M=!this.targetLayout||!HN(this.targetLayout,m)||p,E=!h&&p;if(((v=this.resumeFrom)===null||v===void 0?void 0:v.instance)||E||h&&(M||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(f,E);const I={...OS(k,"layout"),onPlay:O,onComplete:T};d.shouldReduceMotion&&(I.delay=0,I.type=!1),this.startAnimation(I)}else!h&&this.animationProgress===0&&VT(this),this.isLead()&&((x=(y=this.options).onExitComplete)===null||x===void 0||x.call(y));this.targetLayout=m})}unmount(){var s,a;this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this),(s=this.getStack())===null||s===void 0||s.remove(this),(a=this.parent)===null||a===void 0||a.children.delete(this),this.instance=void 0,Bs.preRender(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){var s;return this.isAnimationBlocked||((s=this.parent)===null||s===void 0?void 0:s.isTreeAnimationBlocked())||!1}startUpdate(){var s;this.isUpdateBlocked()||(this.isUpdating=!0,(s=this.nodes)===null||s===void 0||s.forEach(pne),this.animationId++)}willUpdate(s=!0){var a,l,c;if(this.root.isUpdateBlocked()){(l=(a=this.options).onExitComplete)===null||l===void 0||l.call(a);return}if(!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let h=0;h<this.path.length;h++){const p=this.path[h];p.shouldResetTransform=!0,p.updateScroll("snapshot")}const{layoutId:u,layout:d}=this.options;if(u===void 0&&!d)return;const f=(c=this.options.visualElement)===null||c===void 0?void 0:c.getProps().transformTemplate;this.prevTransformTemplateValue=f==null?void 0:f(this.latestValues,""),this.updateSnapshot(),s&&this.notifyListeners("willUpdate")}didUpdate(){if(this.isUpdateBlocked()){this.unblockUpdate(),this.clearAllSnapshots(),this.nodes.forEach(NT);return}!this.isUpdating||(this.isUpdating=!1,this.potentialNodes.size&&(this.potentialNodes.forEach(yne),this.potentialNodes.clear()),this.nodes.forEach(dne),this.nodes.forEach(ane),this.nodes.forEach(lne),this.clearAllSnapshots(),rv.update(),rv.preRender(),rv.render())}clearAllSnapshots(){this.nodes.forEach(une),this.sharedNodes.forEach(mne)}scheduleUpdateProjection(){yr.preRender(this.updateProjection,!1,!0)}scheduleCheckAfterUnmount(){yr.postRender(()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()})}updateSnapshot(){this.snapshot||!this.instance||(this.snapshot=this.measure())}updateLayout(){var s;if(!this.instance||(this.updateScroll(),!(this.options.alwaysMeasureLayout&&this.isLead())&&!this.isLayoutDirty))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let l=0;l<this.path.length;l++)this.path[l].updateScroll();const a=this.layout;this.layout=this.measure(!1),this.layoutCorrected=dt(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners("measure",this.layout.layoutBox),(s=this.options.visualElement)===null||s===void 0||s.notify("LayoutMeasure",this.layout.layoutBox,a==null?void 0:a.layoutBox)}updateScroll(s="measure"){let a=Boolean(this.options.layoutScroll&&this.instance);this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===s&&(a=!1),a&&(this.scroll={animationId:this.root.animationId,phase:s,isRoot:r(this.instance),offset:n(this.instance)})}resetTransform(){var s;if(!i)return;const a=this.isLayoutDirty||this.shouldResetTransform,l=this.projectionDelta&&!FN(this.projectionDelta),c=(s=this.options.visualElement)===null||s===void 0?void 0:s.getProps().transformTemplate,u=c==null?void 0:c(this.latestValues,""),d=u!==this.prevTransformTemplateValue;a&&(l||Jo(this.latestValues)||d)&&(i(this.instance,u),this.shouldResetTransform=!1,this.scheduleRender())}measure(s=!0){const a=this.measurePageBox();let l=this.removeElementScroll(a);return s&&(l=this.removeTransform(l)),xne(l),{animationId:this.root.animationId,measuredBox:a,layoutBox:l,latestValues:{},source:this.id}}measurePageBox(){const{visualElement:s}=this.options;if(!s)return dt();const a=s.measureViewportBox(),{scroll:l}=this.root;return l&&(Ui(a.x,l.offset.x),Ui(a.y,l.offset.y)),a}removeElementScroll(s){const a=dt();lr(a,s);for(let l=0;l<this.path.length;l++){const c=this.path[l],{scroll:u,options:d}=c;if(c!==this.root&&u&&d.layoutScroll){if(u.isRoot){lr(a,s);const{scroll:f}=this.root;f&&(Ui(a.x,-f.offset.x),Ui(a.y,-f.offset.y))}Ui(a.x,u.offset.x),Ui(a.y,u.offset.y)}}return a}applyTransform(s,a=!1){const l=dt();lr(l,s);for(let c=0;c<this.path.length;c++){const u=this.path[c];!a&&u.options.layoutScroll&&u.scroll&&u!==u.root&&Na(l,{x:-u.scroll.offset.x,y:-u.scroll.offset.y}),Jo(u.latestValues)&&Na(l,u.latestValues)}return Jo(this.latestValues)&&Na(l,this.latestValues),l}removeTransform(s){var a;const l=dt();lr(l,s);for(let c=0;c<this.path.length;c++){const u=this.path[c];if(!u.instance||!Jo(u.latestValues))continue;Dy(u.latestValues)&&u.updateSnapshot();const d=dt(),f=u.measurePageBox();lr(d,f),CT(l,u.latestValues,(a=u.snapshot)===null||a===void 0?void 0:a.layoutBox,d)}return Jo(this.latestValues)&&CT(l,this.latestValues),l}setTargetDelta(s){this.targetDelta=s,this.isProjectionDirty=!0,this.root.scheduleUpdateProjection()}setOptions(s){this.options={...this.options,...s,crossfade:s.crossfade!==void 0?s.crossfade:!0}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}resolveTargetDelta(){var s;const a=this.getLead();if(this.isProjectionDirty||(this.isProjectionDirty=a.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=a.isTransformDirty),!this.isProjectionDirty&&!this.attemptToResolveRelativeTarget)return;const{layout:l,layoutId:c}=this.options;if(!(!this.layout||!(l||c))){if(!this.targetDelta&&!this.relativeTarget){const u=this.getClosestProjectingParent();u&&u.layout?(this.relativeParent=u,this.relativeTarget=dt(),this.relativeTargetOrigin=dt(),tu(this.relativeTargetOrigin,this.layout.layoutBox,u.layout.layoutBox),lr(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(!(!this.relativeTarget&&!this.targetDelta)&&(this.target||(this.target=dt(),this.targetWithTransforms=dt()),this.relativeTarget&&this.relativeTargetOrigin&&((s=this.relativeParent)===null||s===void 0?void 0:s.target)?ite(this.target,this.relativeTarget,this.relativeParent.target):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.layoutBox):lr(this.target,this.layout.layoutBox),EN(this.target,this.targetDelta)):lr(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget)){this.attemptToResolveRelativeTarget=!1;const u=this.getClosestProjectingParent();u&&Boolean(u.resumingFrom)===Boolean(this.resumingFrom)&&!u.options.layoutScroll&&u.target?(this.relativeParent=u,this.relativeTarget=dt(),this.relativeTargetOrigin=dt(),tu(this.relativeTargetOrigin,this.target,u.target),lr(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}}}getClosestProjectingParent(){if(!(!this.parent||Dy(this.parent.latestValues)||zN(this.parent.latestValues)))return(this.parent.relativeTarget||this.parent.targetDelta)&&this.parent.layout?this.parent:this.parent.getClosestProjectingParent()}calcProjection(){var s;const{isProjectionDirty:a,isTransformDirty:l}=this;this.isProjectionDirty=this.isTransformDirty=!1;const c=this.getLead(),u=Boolean(this.resumingFrom)||this!==c;let d=!0;if(a&&(d=!1),u&&l&&(d=!1),d)return;const{layout:f,layoutId:h}=this.options;if(this.isTreeAnimating=Boolean(((s=this.parent)===null||s===void 0?void 0:s.isTreeAnimating)||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!(f||h))return;lr(this.layoutCorrected,this.layout.layoutBox),hte(this.layoutCorrected,this.treeScale,this.path,u);const{target:p}=c;if(!p)return;this.projectionDelta||(this.projectionDelta=nu(),this.projectionDeltaWithTransform=nu());const m=this.treeScale.x,b=this.treeScale.y,g=this.projectionTransform;eu(this.projectionDelta,this.layoutCorrected,p,this.latestValues),this.projectionTransform=IT(this.projectionDelta,this.treeScale),(this.projectionTransform!==g||this.treeScale.x!==m||this.treeScale.y!==b)&&(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners("projectionUpdate",p))}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(s=!0){var a,l,c;(l=(a=this.options).scheduleRender)===null||l===void 0||l.call(a),s&&((c=this.getStack())===null||c===void 0||c.scheduleRender()),this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}setAnimationOrigin(s,a=!1){var l,c;const u=this.snapshot,d=(u==null?void 0:u.latestValues)||{},f={...this.latestValues},h=nu();this.relativeTarget=this.relativeTargetOrigin=void 0,this.attemptToResolveRelativeTarget=!a;const p=dt(),m=(u==null?void 0:u.source)!==((l=this.layout)===null||l===void 0?void 0:l.source),b=(((c=this.getStack())===null||c===void 0?void 0:c.members.length)||0)<=1,g=Boolean(m&&!b&&this.options.crossfade===!0&&!this.path.some(vne));this.animationProgress=0,this.mixTargetDelta=v=>{var y;const x=v/1e3;LT(h.x,s.x,x),LT(h.y,s.y,x),this.setTargetDelta(h),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&((y=this.relativeParent)===null||y===void 0?void 0:y.layout)&&(tu(p,this.layout.layoutBox,this.relativeParent.layout.layoutBox),gne(this.relativeTarget,this.relativeTargetOrigin,p,x)),m&&(this.animationValues=f,Qte(f,d,this.latestValues,x,g,b)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=x},this.mixTargetDelta(0)}startAnimation(s){var a,l;this.notifyListeners("animationStart"),(a=this.currentAnimation)===null||a===void 0||a.stop(),this.resumingFrom&&((l=this.resumingFrom.currentAnimation)===null||l===void 0||l.stop()),this.pendingAnimation&&(Bs.update(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=yr.update(()=>{Qc.hasAnimatedSinceResize=!0,this.currentAnimation=Kte(0,ET,{...s,onUpdate:c=>{var u;this.mixTargetDelta(c),(u=s.onUpdate)===null||u===void 0||u.call(s,c)},onComplete:()=>{var c;(c=s.onComplete)===null||c===void 0||c.call(s),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0})}completeAnimation(){var s;this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0),(s=this.getStack())===null||s===void 0||s.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners("animationComplete")}finishAnimation(){var s;this.currentAnimation&&((s=this.mixTargetDelta)===null||s===void 0||s.call(this,ET),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const s=this.getLead();let{targetWithTransforms:a,target:l,layout:c,latestValues:u}=s;if(!(!a||!l||!c)){if(this!==s&&this.layout&&c&&DN(this.options.animationType,this.layout.layoutBox,c.layoutBox)){l=this.target||dt();const d=En(this.layout.layoutBox.x);l.x.min=s.target.x.min,l.x.max=l.x.min+d;const f=En(this.layout.layoutBox.y);l.y.min=s.target.y.min,l.y.max=l.y.min+f}lr(a,l),Na(a,u),eu(this.projectionDeltaWithTransform,this.layoutCorrected,a,u)}}registerSharedNode(s,a){var l,c,u;this.sharedNodes.has(s)||this.sharedNodes.set(s,new rne),this.sharedNodes.get(s).add(a),a.promote({transition:(l=a.options.initialPromotionConfig)===null||l===void 0?void 0:l.transition,preserveFollowOpacity:(u=(c=a.options.initialPromotionConfig)===null||c===void 0?void 0:c.shouldPreserveFollowOpacity)===null||u===void 0?void 0:u.call(c,a)})}isLead(){const s=this.getStack();return s?s.lead===this:!0}getLead(){var s;const{layoutId:a}=this.options;return a?((s=this.getStack())===null||s===void 0?void 0:s.lead)||this:this}getPrevLead(){var s;const{layoutId:a}=this.options;return a?(s=this.getStack())===null||s===void 0?void 0:s.prevLead:void 0}getStack(){const{layoutId:s}=this.options;if(s)return this.root.sharedNodes.get(s)}promote({needsReset:s,transition:a,preserveFollowOpacity:l}={}){const c=this.getStack();c&&c.promote(this,l),s&&(this.projectionDelta=void 0,this.needsReset=!0),a&&this.setOptions({transition:a})}relegate(){const s=this.getStack();return s?s.relegate(this):!1}resetRotation(){const{visualElement:s}=this.options;if(!s)return;let a=!1;const{latestValues:l}=s;if((l.rotate||l.rotateX||l.rotateY||l.rotateZ)&&(a=!0),!a)return;const c={};for(let u=0;u<zT.length;u++){const d="rotate"+zT[u];l[d]&&(c[d]=l[d],s.setStaticValue(d,0))}s==null||s.render();for(const u in c)s.setStaticValue(u,c[u]);s.scheduleRender()}getProjectionStyles(s={}){var a,l,c;const u={};if(!this.instance||this.isSVG)return u;if(this.isVisible)u.visibility="";else return{visibility:"hidden"};const d=(a=this.options.visualElement)===null||a===void 0?void 0:a.getProps().transformTemplate;if(this.needsReset)return this.needsReset=!1,u.opacity="",u.pointerEvents=kh(s.pointerEvents)||"",u.transform=d?d(this.latestValues,""):"none",u;const f=this.getLead();if(!this.projectionDelta||!this.layout||!f.target){const b={};return this.options.layoutId&&(b.opacity=this.latestValues.opacity!==void 0?this.latestValues.opacity:1,b.pointerEvents=kh(s.pointerEvents)||""),this.hasProjected&&!Jo(this.latestValues)&&(b.transform=d?d({},""):"none",this.hasProjected=!1),b}const h=f.animationValues||f.latestValues;this.applyTransformsToTarget(),u.transform=IT(this.projectionDeltaWithTransform,this.treeScale,h),d&&(u.transform=d(h,u.transform));const{x:p,y:m}=this.projectionDelta;u.transformOrigin=`${p.origin*100}% ${m.origin*100}% 0`,f.animationValues?u.opacity=f===this?(c=(l=h.opacity)!==null&&l!==void 0?l:this.latestValues.opacity)!==null&&c!==void 0?c:1:this.preserveOpacity?this.latestValues.opacity:h.opacityExit:u.opacity=f===this?h.opacity!==void 0?h.opacity:"":h.opacityExit!==void 0?h.opacityExit:0;for(const b in Wp){if(h[b]===void 0)continue;const{correct:g,applyTo:v}=Wp[b],y=g(h[b],f);if(v){const x=v.length;for(let k=0;k<x;k++)u[v[k]]=y}else u[b]=y}return this.options.layoutId&&(u.pointerEvents=f===this?kh(s.pointerEvents)||"":"none"),u}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach(s=>{var a;return(a=s.currentAnimation)===null||a===void 0?void 0:a.stop()}),this.root.nodes.forEach(NT),this.root.sharedNodes.clear()}}}function ane(t){t.updateLayout()}function lne(t){var e,n,r;const i=((e=t.resumeFrom)===null||e===void 0?void 0:e.snapshot)||t.snapshot;if(t.isLead()&&t.layout&&i&&t.hasListeners("didUpdate")){const{layoutBox:o,measuredBox:s}=t.layout,{animationType:a}=t.options,l=i.source!==t.layout.source;a==="size"?Nr(h=>{const p=l?i.measuredBox[h]:i.layoutBox[h],m=En(p);p.min=o[h].min,p.max=p.min+m}):DN(a,i.layoutBox,o)&&Nr(h=>{const p=l?i.measuredBox[h]:i.layoutBox[h],m=En(o[h]);p.max=p.min+m});const c=nu();eu(c,o,i.layoutBox);const u=nu();l?eu(u,t.applyTransform(s,!0),i.measuredBox):eu(u,o,i.layoutBox);const d=!FN(c);let f=!1;if(!t.resumeFrom){const h=t.getClosestProjectingParent();if(h&&!h.resumeFrom){const{snapshot:p,layout:m}=h;if(p&&m){const b=dt();tu(b,i.layoutBox,p.layoutBox);const g=dt();tu(g,o,m.layoutBox),HN(b,g)||(f=!0)}}}t.notifyListeners("didUpdate",{layout:o,snapshot:i,delta:u,layoutDelta:c,hasLayoutChanged:d,hasRelativeTargetChanged:f})}else t.isLead()&&((r=(n=t.options).onExitComplete)===null||r===void 0||r.call(n));t.options.transition=void 0}function cne(t){t.isProjectionDirty||(t.isProjectionDirty=Boolean(t.parent&&t.parent.isProjectionDirty)),t.isTransformDirty||(t.isTransformDirty=Boolean(t.parent&&t.parent.isTransformDirty))}function une(t){t.clearSnapshot()}function NT(t){t.clearMeasurements()}function dne(t){const{visualElement:e}=t.options;e!=null&&e.getProps().onBeforeLayoutMeasure&&e.notify("BeforeLayoutMeasure"),t.resetTransform()}function VT(t){t.finishAnimation(),t.targetDelta=t.relativeTarget=t.target=void 0}function fne(t){t.resolveTargetDelta()}function hne(t){t.calcProjection()}function pne(t){t.resetRotation()}function mne(t){t.removeLeadSnapshot()}function LT(t,e,n){t.translate=et(e.translate,0,n),t.scale=et(e.scale,1,n),t.origin=e.origin,t.originPoint=e.originPoint}function XT(t,e,n,r){t.min=et(e.min,n.min,r),t.max=et(e.max,n.max,r)}function gne(t,e,n,r){XT(t.x,e.x,n.x,r),XT(t.y,e.y,n.y,r)}function vne(t){return t.animationValues&&t.animationValues.opacityExit!==void 0}const bne={duration:.45,ease:[.4,0,.1,1]};function yne(t,e){let n=t.root;for(let o=t.path.length-1;o>=0;o--)if(Boolean(t.path[o].instance)){n=t.path[o];break}const i=(n&&n!==t.root?n.instance:document).querySelector(`[data-projection-id="${e}"]`);i&&t.mount(i,!0)}function BT(t){t.min=Math.round(t.min),t.max=Math.round(t.max)}function xne(t){BT(t.x),BT(t.y)}function DN(t,e,n){return t==="position"||t==="preserve-aspect"&&!nne(RT(e),RT(n),.2)}const Sne=jN({attachResizeListener:(t,e)=>cg(t,"resize",e),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),av={current:void 0},kne=jN({measureScroll:t=>({x:t.scrollLeft,y:t.scrollTop}),defaultParent:()=>{if(!av.current){const t=new Sne(0,{});t.mount(window),t.setOptions({layoutScroll:!0}),av.current=t}return av.current},resetTransform:(t,e)=>{t.style.transform=e!==void 0?e:"none"},checkIsScrollRoot:t=>Boolean(window.getComputedStyle(t).position==="fixed")}),wne={...tte,...dee,...kte,...Ute},Vi=e_((t,e)=>Z_(t,e,wne,Yte,kne));function UN(){const t=S.exports.useRef(!1);return Gp(()=>(t.current=!0,()=>{t.current=!1}),[]),t}function One(){const t=UN(),[e,n]=S.exports.useState(0),r=S.exports.useCallback(()=>{t.current&&n(e+1)},[e]);return[S.exports.useCallback(()=>yr.postRender(r),[r]),e]}class Tne extends S.exports.Component{getSnapshotBeforeUpdate(e){const n=this.props.childRef.current;if(n&&e.isPresent&&!this.props.isPresent){const r=this.props.sizeRef.current;r.height=n.offsetHeight||0,r.width=n.offsetWidth||0,r.top=n.offsetTop,r.left=n.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function Pne({children:t,isPresent:e}){const n=S.exports.useId(),r=S.exports.useRef(null),i=S.exports.useRef({width:0,height:0,top:0,left:0});return S.exports.useInsertionEffect(()=>{const{width:o,height:s,top:a,left:l}=i.current;if(e||!r.current||!o||!s)return;r.current.dataset.motionPopId=n;const c=document.createElement("style");return document.head.appendChild(c),c.sheet&&c.sheet.insertRule(`
          [data-motion-pop-id="${n}"] {
            position: absolute !important;
            width: ${o}px !important;
            height: ${s}px !important;
            top: ${a}px !important;
            left: ${l}px !important;
          }
        `),()=>{document.head.removeChild(c)}},[e]),z(Tne,{isPresent:e,childRef:r,sizeRef:i,children:S.exports.cloneElement(t,{ref:r})})}const lv=({children:t,initial:e,isPresent:n,onExitComplete:r,custom:i,presenceAffectsLayout:o,mode:s})=>{const a=lg(Cne),l=S.exports.useId(),c=S.exports.useMemo(()=>({id:l,initial:e,isPresent:n,custom:i,onExitComplete:u=>{a.set(u,!0);for(const d of a.values())if(!d)return;r&&r()},register:u=>(a.set(u,!1),()=>a.delete(u))}),o?void 0:[n]);return S.exports.useMemo(()=>{a.forEach((u,d)=>a.set(d,!1))},[n]),S.exports.useEffect(()=>{!n&&!a.size&&r&&r()},[n]),s==="popLayout"&&(t=z(Pne,{isPresent:n,children:t})),z(Zl.Provider,{value:c,children:t})};function Cne(){return new Map}const ma=t=>t.key||"";function Mne(t,e){t.forEach(n=>{const r=ma(n);e.set(r,n)})}function Rne(t){const e=[];return S.exports.Children.forEach(t,n=>{S.exports.isValidElement(n)&&e.push(n)}),e}const Bo=({children:t,custom:e,initial:n=!0,onExitComplete:r,exitBeforeEnter:i,presenceAffectsLayout:o=!0,mode:s="sync"})=>{i&&(s="wait",yN(!1,"Replace exitBeforeEnter with mode='wait'"));let[a]=One();const l=S.exports.useContext(iS).forceRender;l&&(a=l);const c=UN(),u=Rne(t);let d=u;const f=new Set,h=S.exports.useRef(d),p=S.exports.useRef(new Map).current,m=S.exports.useRef(!0);if(Gp(()=>{m.current=!1,Mne(u,p),h.current=d}),hS(()=>{m.current=!0,p.clear(),f.clear()}),m.current)return z(ei,{children:d.map(y=>z(lv,{isPresent:!0,initial:n?void 0:!1,presenceAffectsLayout:o,mode:s,children:y},ma(y)))});d=[...d];const b=h.current.map(ma),g=u.map(ma),v=b.length;for(let y=0;y<v;y++){const x=b[y];g.indexOf(x)===-1&&f.add(x)}return s==="wait"&&f.size&&(d=[]),f.forEach(y=>{if(g.indexOf(y)!==-1)return;const x=p.get(y);if(!x)return;const k=b.indexOf(y),O=()=>{p.delete(y),f.delete(y);const T=h.current.findIndex(M=>M.key===y);if(h.current.splice(T,1),!f.size){if(h.current=u,c.current===!1)return;a(),r&&r()}};d.splice(k,0,z(lv,{isPresent:!1,onExitComplete:O,custom:e,presenceAffectsLayout:o,mode:s,children:x},ma(x)))}),d=d.map(y=>{const x=y.key;return f.has(x)?y:z(lv,{isPresent:!0,presenceAffectsLayout:o,mode:s,children:y},ma(y))}),bN!=="production"&&s==="wait"&&d.length>1&&console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to "wait". This will lead to odd visual behaviour.`),z(ei,{children:f.size?d:d.map(y=>S.exports.cloneElement(y))})};var Zr=function(){return Zr=Object.assign||function(e){for(var n,r=1,i=arguments.length;r<i;r++){n=arguments[r];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},Zr.apply(this,arguments)};function KN(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]]);return n}function Ine(t,e,n){if(n||arguments.length===2)for(var r=0,i=e.length,o;r<i;r++)(o||!(r in e))&&(o||(o=Array.prototype.slice.call(e,0,r)),o[r]=e[r]);return t.concat(o||Array.prototype.slice.call(e))}var kd=(...t)=>t.filter(Boolean).join(" ");function zne(){return!1}var Ene=t=>{const{condition:e,message:n}=t;e&&zne()&&console.warn(n)},gs={ease:[.25,.1,.25,1],easeIn:[.4,0,1,1],easeOut:[0,0,.2,1],easeInOut:[.4,0,.2,1]},fc={scale:{enter:{scale:1},exit:{scale:.95}},fade:{enter:{opacity:1},exit:{opacity:0}},pushLeft:{enter:{x:"100%"},exit:{x:"-30%"}},pushRight:{enter:{x:"-100%"},exit:{x:"30%"}},pushUp:{enter:{y:"100%"},exit:{y:"-30%"}},pushDown:{enter:{y:"-100%"},exit:{y:"30%"}},slideLeft:{position:{left:0,top:0,bottom:0,width:"100%"},enter:{x:0,y:0},exit:{x:"-100%",y:0}},slideRight:{position:{right:0,top:0,bottom:0,width:"100%"},enter:{x:0,y:0},exit:{x:"100%",y:0}},slideUp:{position:{top:0,left:0,right:0,maxWidth:"100vw"},enter:{x:0,y:0},exit:{x:0,y:"-100%"}},slideDown:{position:{bottom:0,left:0,right:0,maxWidth:"100vw"},enter:{x:0,y:0},exit:{x:0,y:"100%"}}};function Jy(t){var n;switch((n=t==null?void 0:t.direction)!=null?n:"right"){case"right":return fc.slideRight;case"left":return fc.slideLeft;case"bottom":return fc.slideDown;case"top":return fc.slideUp;default:return fc.slideRight}}var Ts={enter:{duration:.2,ease:gs.easeOut},exit:{duration:.1,ease:gs.easeIn}},xr={enter:(t,e)=>({...t,delay:typeof e=="number"?e:e==null?void 0:e.enter}),exit:(t,e)=>({...t,delay:typeof e=="number"?e:e==null?void 0:e.exit})},Nne=t=>t!=null&&parseInt(t.toString(),10)>0,AT={exit:{height:{duration:.2,ease:gs.ease},opacity:{duration:.3,ease:gs.ease}},enter:{height:{duration:.3,ease:gs.ease},opacity:{duration:.4,ease:gs.ease}}},Vne={exit:({animateOpacity:t,startingHeight:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{...t&&{opacity:Nne(e)?1:0},height:e,transitionEnd:r==null?void 0:r.exit,transition:(o=n==null?void 0:n.exit)!=null?o:xr.exit(AT.exit,i)}},enter:({animateOpacity:t,endingHeight:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{...t&&{opacity:1},height:e,transitionEnd:r==null?void 0:r.enter,transition:(o=n==null?void 0:n.enter)!=null?o:xr.enter(AT.enter,i)}}},Lne=S.exports.forwardRef((t,e)=>{const{in:n,unmountOnExit:r,animateOpacity:i=!0,startingHeight:o=0,endingHeight:s="auto",style:a,className:l,transition:c,transitionEnd:u,...d}=t,[f,h]=S.exports.useState(!1);S.exports.useEffect(()=>{const v=setTimeout(()=>{h(!0)});return()=>clearTimeout(v)},[]),Ene({condition:Boolean(o>0&&r),message:"startingHeight and unmountOnExit are mutually exclusive. You can't use them together"});const p=parseFloat(o.toString())>0,m={startingHeight:o,endingHeight:s,animateOpacity:i,transition:f?c:{enter:{duration:0}},transitionEnd:{enter:u==null?void 0:u.enter,exit:r?u==null?void 0:u.exit:{...u==null?void 0:u.exit,display:p?"block":"none"}}},b=r?n:!0,g=n||r?"enter":"exit";return z(Bo,{initial:!1,custom:m,children:b&&Z.createElement(Vi.div,{ref:e,...d,className:kd("chakra-collapse",l),style:{overflow:"hidden",display:"block",...a},custom:m,variants:Vne,initial:r?"exit":!1,animate:g,exit:"exit"})})});Lne.displayName="Collapse";var Xne={enter:({transition:t,transitionEnd:e,delay:n}={})=>{var r;return{opacity:1,transition:(r=t==null?void 0:t.enter)!=null?r:xr.enter(Ts.enter,n),transitionEnd:e==null?void 0:e.enter}},exit:({transition:t,transitionEnd:e,delay:n}={})=>{var r;return{opacity:0,transition:(r=t==null?void 0:t.exit)!=null?r:xr.exit(Ts.exit,n),transitionEnd:e==null?void 0:e.exit}}},qN={initial:"exit",animate:"enter",exit:"exit",variants:Xne},Bne=S.exports.forwardRef(function(e,n){const{unmountOnExit:r,in:i,className:o,transition:s,transitionEnd:a,delay:l,...c}=e,u=i||r?"enter":"exit",d=r?i&&r:!0,f={transition:s,transitionEnd:a,delay:l};return z(Bo,{custom:f,children:d&&Z.createElement(Vi.div,{ref:n,className:kd("chakra-fade",o),custom:f,...qN,animate:u,...c})})});Bne.displayName="Fade";var Ane={exit:({reverse:t,initialScale:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{opacity:0,...t?{scale:e,transitionEnd:r==null?void 0:r.exit}:{transitionEnd:{scale:e,...r==null?void 0:r.exit}},transition:(o=n==null?void 0:n.exit)!=null?o:xr.exit(Ts.exit,i)}},enter:({transitionEnd:t,transition:e,delay:n})=>{var r;return{opacity:1,scale:1,transition:(r=e==null?void 0:e.enter)!=null?r:xr.enter(Ts.enter,n),transitionEnd:t==null?void 0:t.enter}}},QN={initial:"exit",animate:"enter",exit:"exit",variants:Ane},Zne=S.exports.forwardRef(function(e,n){const{unmountOnExit:r,in:i,reverse:o=!0,initialScale:s=.95,className:a,transition:l,transitionEnd:c,delay:u,...d}=e,f=r?i&&r:!0,h=i||r?"enter":"exit",p={initialScale:s,reverse:o,transition:l,transitionEnd:c,delay:u};return z(Bo,{custom:p,children:f&&Z.createElement(Vi.div,{ref:n,className:kd("chakra-offset-slide",a),...QN,animate:h,custom:p,...d})})});Zne.displayName="ScaleFade";var ZT={exit:{duration:.15,ease:gs.easeInOut},enter:{type:"spring",damping:25,stiffness:180}},Gne={exit:({direction:t,transition:e,transitionEnd:n,delay:r})=>{var o;const{exit:i}=Jy({direction:t});return{...i,transition:(o=e==null?void 0:e.exit)!=null?o:xr.exit(ZT.exit,r),transitionEnd:n==null?void 0:n.exit}},enter:({direction:t,transitionEnd:e,transition:n,delay:r})=>{var o;const{enter:i}=Jy({direction:t});return{...i,transition:(o=n==null?void 0:n.enter)!=null?o:xr.enter(ZT.enter,r),transitionEnd:e==null?void 0:e.enter}}},JN=S.exports.forwardRef(function(e,n){const{direction:r="right",style:i,unmountOnExit:o,in:s,className:a,transition:l,transitionEnd:c,delay:u,motionProps:d,...f}=e,h=Jy({direction:r}),p=Object.assign({position:"fixed"},h.position,i),m=o?s&&o:!0,b=s||o?"enter":"exit",g={transitionEnd:c,transition:l,direction:r,delay:u};return z(Bo,{custom:g,children:m&&Z.createElement(Vi.div,{...f,ref:n,initial:"exit",className:kd("chakra-slide",a),animate:b,exit:"exit",custom:g,variants:Gne,style:p,...d})})});JN.displayName="Slide";var Wne={initial:({offsetX:t,offsetY:e,transition:n,transitionEnd:r,delay:i})=>{var o;return{opacity:0,x:t,y:e,transition:(o=n==null?void 0:n.exit)!=null?o:xr.exit(Ts.exit,i),transitionEnd:r==null?void 0:r.exit}},enter:({transition:t,transitionEnd:e,delay:n})=>{var r;return{opacity:1,x:0,y:0,transition:(r=t==null?void 0:t.enter)!=null?r:xr.enter(Ts.enter,n),transitionEnd:e==null?void 0:e.enter}},exit:({offsetY:t,offsetX:e,transition:n,transitionEnd:r,reverse:i,delay:o})=>{var a;const s={x:e,y:t};return{opacity:0,transition:(a=n==null?void 0:n.exit)!=null?a:xr.exit(Ts.exit,o),...i?{...s,transitionEnd:r==null?void 0:r.exit}:{transitionEnd:{...s,...r==null?void 0:r.exit}}}}},_y={initial:"initial",animate:"enter",exit:"exit",variants:Wne},Yne=S.exports.forwardRef(function(e,n){const{unmountOnExit:r,in:i,reverse:o=!0,className:s,offsetX:a=0,offsetY:l=8,transition:c,transitionEnd:u,delay:d,...f}=e,h=r?i&&r:!0,p=i||r?"enter":"exit",m={offsetX:a,offsetY:l,reverse:o,transition:c,transitionEnd:u,delay:d};return z(Bo,{custom:m,children:h&&Z.createElement(Vi.div,{ref:n,className:kd("chakra-offset-slide",s),custom:m,..._y,animate:p,...f})})});Yne.displayName="SlideFade";var Fne=(...t)=>t.filter(Boolean).join(" "),Hne=Lj({"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}),RS=Q((t,e)=>{const n=gn("Spinner",t),{label:r="Loading...",thickness:i="2px",speed:o="0.45s",emptyColor:s="transparent",className:a,...l}=ut(t),c=Fne("chakra-spinner",a),u={display:"inline-block",borderColor:"currentColor",borderStyle:"solid",borderRadius:"99999px",borderWidth:i,borderBottomColor:s,borderLeftColor:s,animation:`${Hne} ${o} linear infinite`,...n};return Z.createElement(U.div,{ref:e,__css:u,className:c,...l},r&&Z.createElement(U.span,{srOnly:!0},r))});RS.displayName="Spinner";var mg=(...t)=>t.filter(Boolean).join(" ");function jne(t){return z(Ds,{viewBox:"0 0 24 24",...t,children:z("path",{fill:"currentColor",d:"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"})})}function Dne(t){return z(Ds,{viewBox:"0 0 24 24",...t,children:z("path",{fill:"currentColor",d:"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"})})}function GT(t){return z(Ds,{viewBox:"0 0 24 24",...t,children:z("path",{fill:"currentColor",d:"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"})})}var[Une,Kne]=Xn({name:"AlertContext",hookName:"useAlertContext",providerName:"<Alert />"}),[qne,IS]=Xn({name:"AlertStylesContext",hookName:"useAlertStyles",providerName:"<Alert />"}),_N={info:{icon:Dne,colorScheme:"blue"},warning:{icon:GT,colorScheme:"orange"},success:{icon:jne,colorScheme:"green"},error:{icon:GT,colorScheme:"red"},loading:{icon:RS,colorScheme:"blue"}};function Qne(t){return _N[t].colorScheme}function Jne(t){return _N[t].icon}var $N=Q(function(e,n){var c;const{status:r="info",addRole:i=!0,...o}=ut(e),s=(c=e.colorScheme)!=null?c:Qne(r),a=js("Alert",{...e,colorScheme:s}),l={width:"100%",display:"flex",alignItems:"center",position:"relative",overflow:"hidden",...a.container};return Z.createElement(Une,{value:{status:r}},Z.createElement(qne,{value:a},Z.createElement(U.div,{role:i?"alert":void 0,ref:n,...o,className:mg("chakra-alert",e.className),__css:l})))});$N.displayName="Alert";var eV=Q(function(e,n){const i={display:"inline",...IS().description};return Z.createElement(U.div,{ref:n,...e,className:mg("chakra-alert__desc",e.className),__css:i})});eV.displayName="AlertDescription";function tV(t){const{status:e}=Kne(),n=Jne(e),r=IS(),i=e==="loading"?r.spinner:r.icon;return Z.createElement(U.span,{display:"inherit",...t,className:mg("chakra-alert__icon",t.className),__css:i},t.children||z(n,{h:"100%",w:"100%"}))}tV.displayName="AlertIcon";var nV=Q(function(e,n){const r=IS();return Z.createElement(U.div,{ref:n,...e,className:mg("chakra-alert__title",e.className),__css:r.title})});nV.displayName="AlertTitle";function zS(t){return S.exports.Children.toArray(t).filter(e=>S.exports.isValidElement(e))}var gg=(...t)=>t.filter(Boolean).join(" "),WT=t=>t?"":void 0,[_ne,$ne]=Xn({strict:!1,name:"ButtonGroupContext"});function $y(t){const{children:e,className:n,...r}=t,i=S.exports.isValidElement(e)?S.exports.cloneElement(e,{"aria-hidden":!0,focusable:!1}):e,o=gg("chakra-button__icon",n);return Z.createElement(U.span,{display:"inline-flex",alignSelf:"center",flexShrink:0,...r,className:o},i)}$y.displayName="ButtonIcon";function e1(t){const{label:e,placement:n,spacing:r="0.5rem",children:i=z(RS,{color:"currentColor",width:"1em",height:"1em"}),className:o,__css:s,...a}=t,l=gg("chakra-button__spinner",o),c=n==="start"?"marginEnd":"marginStart",u=S.exports.useMemo(()=>({display:"flex",alignItems:"center",position:e?"relative":"absolute",[c]:e?r:0,fontSize:"1em",lineHeight:"normal",...s}),[s,e,c,r]);return Z.createElement(U.div,{className:l,...a,__css:u},i)}e1.displayName="ButtonSpinner";function ere(t){const[e,n]=S.exports.useState(!t);return{ref:S.exports.useCallback(o=>{!o||n(o.tagName==="BUTTON")},[]),type:e?"button":void 0}}var vg=Q((t,e)=>{const n=$ne(),r=gn("Button",{...n,...t}),{isDisabled:i=n==null?void 0:n.isDisabled,isLoading:o,isActive:s,children:a,leftIcon:l,rightIcon:c,loadingText:u,iconSpacing:d="0.5rem",type:f,spinner:h,spinnerPlacement:p="start",className:m,as:b,...g}=ut(t),v=S.exports.useMemo(()=>{const O={...r==null?void 0:r._focus,zIndex:1};return{display:"inline-flex",appearance:"none",alignItems:"center",justifyContent:"center",userSelect:"none",position:"relative",whiteSpace:"nowrap",verticalAlign:"middle",outline:"none",...r,...!!n&&{_focus:O}}},[r,n]),{ref:y,type:x}=ere(b),k={rightIcon:c,leftIcon:l,iconSpacing:d,children:a};return Z.createElement(U.button,{disabled:i||o,ref:GJ(e,y),as:b,type:f!=null?f:x,"data-active":WT(s),"data-loading":WT(o),__css:v,className:gg("chakra-button",m),...g},o&&p==="start"&&z(e1,{className:"chakra-button__spinner--start",label:u,placement:"start",spacing:d,children:h}),o?u||Z.createElement(U.span,{opacity:0},z(YT,{...k})):z(YT,{...k}),o&&p==="end"&&z(e1,{className:"chakra-button__spinner--end",label:u,placement:"end",spacing:d,children:h}))});vg.displayName="Button";function YT(t){const{leftIcon:e,rightIcon:n,children:r,iconSpacing:i}=t;return tt(ei,{children:[e&&z($y,{marginEnd:i,children:e}),r,n&&z($y,{marginStart:i,children:n})]})}var tre=Q(function(e,n){const{size:r,colorScheme:i,variant:o,className:s,spacing:a="0.5rem",isAttached:l,isDisabled:c,...u}=e,d=gg("chakra-button__group",s),f=S.exports.useMemo(()=>({size:r,colorScheme:i,variant:o,isDisabled:c}),[r,i,o,c]);let h={display:"inline-flex"};return l?h={...h,"> *:first-of-type:not(:last-of-type)":{borderEndRadius:0},"> *:not(:first-of-type):not(:last-of-type)":{borderRadius:0},"> *:not(:first-of-type):last-of-type":{borderStartRadius:0}}:h={...h,"& > *:not(style) ~ *:not(style)":{marginStart:a}},Z.createElement(_ne,{value:f},Z.createElement(U.div,{ref:n,role:"group",__css:h,className:d,"data-attached":l?"":void 0,...u}))});tre.displayName="ButtonGroup";var _o=Q((t,e)=>{const{icon:n,children:r,isRound:i,"aria-label":o,...s}=t,a=n||r,l=S.exports.isValidElement(a)?S.exports.cloneElement(a,{"aria-hidden":!0,focusable:!1}):null;return z(vg,{padding:"0",borderRadius:i?"full":void 0,ref:e,"aria-label":o,...s,children:l})});_o.displayName="IconButton";var Wl=(...t)=>t.filter(Boolean).join(" "),Bf=t=>t?"":void 0,cv=t=>t?!0:void 0;function FT(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}var[nre,rV]=Xn({name:"FormControlStylesContext",errorMessage:`useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in "<FormControl />" `}),[rre,Yl]=Xn({strict:!1,name:"FormControlContext"});function ire(t){const{id:e,isRequired:n,isInvalid:r,isDisabled:i,isReadOnly:o,...s}=t,a=S.exports.useId(),l=e||`field-${a}`,c=`${l}-label`,u=`${l}-feedback`,d=`${l}-helptext`,[f,h]=S.exports.useState(!1),[p,m]=S.exports.useState(!1),[b,g]=S.exports.useState(!1),v=S.exports.useCallback((T={},M=null)=>({id:d,...T,ref:Mo(M,E=>{!E||m(!0)})}),[d]),y=S.exports.useCallback((T={},M=null)=>{var E,I;return{...T,ref:M,"data-focus":Bf(b),"data-disabled":Bf(i),"data-invalid":Bf(r),"data-readonly":Bf(o),id:(E=T.id)!=null?E:c,htmlFor:(I=T.htmlFor)!=null?I:l}},[l,i,b,r,o,c]),x=S.exports.useCallback((T={},M=null)=>({id:u,...T,ref:Mo(M,E=>{!E||h(!0)}),"aria-live":"polite"}),[u]),k=S.exports.useCallback((T={},M=null)=>({...T,...s,ref:M,role:"group"}),[s]),O=S.exports.useCallback((T={},M=null)=>({...T,ref:M,role:"presentation","aria-hidden":!0,children:T.children||"*"}),[]);return{isRequired:!!n,isInvalid:!!r,isReadOnly:!!o,isDisabled:!!i,isFocused:!!b,onFocus:()=>g(!0),onBlur:()=>g(!1),hasFeedbackText:f,setHasFeedbackText:h,hasHelpText:p,setHasHelpText:m,id:l,labelId:c,feedbackId:u,helpTextId:d,htmlProps:s,getHelpTextProps:v,getErrorMessageProps:x,getRootProps:k,getLabelProps:y,getRequiredIndicatorProps:O}}var ore=Q(function(e,n){const r=js("Form",e),i=ut(e),{getRootProps:o,htmlProps:s,...a}=ire(i),l=Wl("chakra-form-control",e.className);return Z.createElement(rre,{value:a},Z.createElement(nre,{value:r},Z.createElement(U.div,{...o({},n),className:l,__css:r.container})))});ore.displayName="FormControl";var sre=Q(function(e,n){const r=Yl(),i=rV(),o=Wl("chakra-form__helper-text",e.className);return Z.createElement(U.div,{...r==null?void 0:r.getHelpTextProps(e,n),__css:i.helperText,className:o})});sre.displayName="FormHelperText";function are(t){const{isDisabled:e,isInvalid:n,isReadOnly:r,isRequired:i,...o}=lre(t);return{...o,disabled:e,readOnly:r,required:i,"aria-invalid":cv(n),"aria-required":cv(i),"aria-readonly":cv(r)}}function lre(t){var p,m,b;const e=Yl(),{id:n,disabled:r,readOnly:i,required:o,isRequired:s,isInvalid:a,isReadOnly:l,isDisabled:c,onFocus:u,onBlur:d,...f}=t,h=t["aria-describedby"]?[t["aria-describedby"]]:[];return(e==null?void 0:e.hasFeedbackText)&&(e==null?void 0:e.isInvalid)&&h.push(e.feedbackId),e!=null&&e.hasHelpText&&h.push(e.helpTextId),{...f,"aria-describedby":h.join(" ")||void 0,id:n!=null?n:e==null?void 0:e.id,isDisabled:(p=r!=null?r:c)!=null?p:e==null?void 0:e.isDisabled,isReadOnly:(m=i!=null?i:l)!=null?m:e==null?void 0:e.isReadOnly,isRequired:(b=o!=null?o:s)!=null?b:e==null?void 0:e.isRequired,isInvalid:a!=null?a:e==null?void 0:e.isInvalid,onFocus:FT(e==null?void 0:e.onFocus,u),onBlur:FT(e==null?void 0:e.onBlur,d)}}var[cre,ure]=Xn({name:"FormErrorStylesContext",errorMessage:`useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in "<FormError />" `}),dre=Q((t,e)=>{const n=js("FormError",t),r=ut(t),i=Yl();return i!=null&&i.isInvalid?Z.createElement(cre,{value:n},Z.createElement(U.div,{...i==null?void 0:i.getErrorMessageProps(r,e),className:Wl("chakra-form__error-message",t.className),__css:{display:"flex",alignItems:"center",...n.text}})):null});dre.displayName="FormErrorMessage";var fre=Q((t,e)=>{const n=ure(),r=Yl();if(!(r!=null&&r.isInvalid))return null;const i=Wl("chakra-form__error-icon",t.className);return z(Ds,{ref:e,"aria-hidden":!0,...t,__css:n.icon,className:i,children:z("path",{fill:"currentColor",d:"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"})})});fre.displayName="FormErrorIcon";var hre=Q(function(e,n){var f;const r=gn("FormLabel",e),i=ut(e),{className:o,children:s,requiredIndicator:a=z(iV,{}),optionalIndicator:l=null,...c}=i,u=Yl(),d=(f=u==null?void 0:u.getLabelProps(c,n))!=null?f:{ref:n,...c};return Z.createElement(U.label,{...d,className:Wl("chakra-form__label",i.className),__css:{display:"block",textAlign:"start",...r}},s,u!=null&&u.isRequired?a:l)});hre.displayName="FormLabel";var iV=Q(function(e,n){const r=Yl(),i=rV();if(!(r!=null&&r.isRequired))return null;const o=Wl("chakra-form__required-indicator",e.className);return Z.createElement(U.span,{...r==null?void 0:r.getRequiredIndicatorProps(e,n),__css:i.requiredIndicator,className:o})});iV.displayName="RequiredIndicator";function HT(t,e){const n=S.exports.useRef(!1),r=S.exports.useRef(!1);S.exports.useEffect(()=>{if(n.current&&r.current)return t();r.current=!0},e),S.exports.useEffect(()=>(n.current=!0,()=>{n.current=!1}),[])}function pre(t){return z(Ds,{focusable:"false","aria-hidden":!0,...t,children:z("path",{fill:"currentColor",d:"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"})})}var ES=Q(function(e,n){const r=gn("CloseButton",e),{children:i,isDisabled:o,__css:s,...a}=ut(e),l={outline:0,display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0};return Z.createElement(U.button,{type:"button","aria-label":"Close",ref:n,disabled:o,__css:{...l,...r,...s},...a},i||z(pre,{width:"1em",height:"1em"}))});ES.displayName="CloseButton";var oV=`
  :root {
    --chakra-vh: 100vh;
  }

  @supports (height: -webkit-fill-available) {
    :root {
      --chakra-vh: -webkit-fill-available;
    }
  }

  @supports (height: -moz-fill-available) {
    :root {
      --chakra-vh: -moz-fill-available;
    }
  }

  @supports (height: 100dvh) {
    :root {
      --chakra-vh: 100dvh;
    }
  }
`,mre=()=>z(ng,{styles:oV}),gre=()=>z(ng,{styles:`
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        font-feature-settings: 'kern';
      }

      *,
      *::before,
      *::after {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
      }

      main {
        display: block;
      }

      hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      pre,
      code,
      kbd,
      samp {
        font-family: SFMono-Regular,  Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      b,
      strong {
        font-weight: bold;
      }

      small {
        font-size: 80%;
      }

      sub,
      sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      sub {
        bottom: -0.25em;
      }

      sup {
        top: -0.5em;
      }

      img {
        border-style: none;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      button,
      input {
        overflow: visible;
      }

      button,
      select {
        text-transform: none;
      }

      button::-moz-focus-inner,
      [type="button"]::-moz-focus-inner,
      [type="reset"]::-moz-focus-inner,
      [type="submit"]::-moz-focus-inner {
        border-style: none;
        padding: 0;
      }

      fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      progress {
        vertical-align: baseline;
      }

      textarea {
        overflow: auto;
      }

      [type="checkbox"],
      [type="radio"] {
        box-sizing: border-box;
        padding: 0;
      }

      [type="number"]::-webkit-inner-spin-button,
      [type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      input[type="number"] {
        -moz-appearance: textfield;
      }

      [type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      [type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      details {
        display: block;
      }

      summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      body,
      blockquote,
      dl,
      dd,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      hr,
      figure,
      p,
      pre {
        margin: 0;
      }

      button {
        background: transparent;
        padding: 0;
      }

      fieldset {
        margin: 0;
        padding: 0;
      }

      ol,
      ul {
        margin: 0;
        padding: 0;
      }

      textarea {
        resize: vertical;
      }

      button,
      [role="button"] {
        cursor: pointer;
      }

      button::-moz-focus-inner {
        border: 0 !important;
      }

      table {
        border-collapse: collapse;
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-size: inherit;
        font-weight: inherit;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      img,
      svg,
      video,
      canvas,
      audio,
      iframe,
      embed,
      object {
        display: block;
      }

      img,
      video {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible] :focus:not([data-focus-visible-added]):not([data-focus-visible-disabled]) {
        outline: none;
        box-shadow: none;
      }

      select::-ms-expand {
        display: none;
      }

      ${oV}
    `});function uv(t,e,n,r){const i=Zp(n);return S.exports.useEffect(()=>{const o=typeof t=="function"?t():t!=null?t:document;if(!(!n||!o))return o.addEventListener(e,i,r),()=>{o.removeEventListener(e,i,r)}},[e,t,r,i,n]),()=>{const o=typeof t=="function"?t():t!=null?t:document;o==null||o.removeEventListener(e,i,r)}}var vre=Wj?S.exports.useLayoutEffect:S.exports.useEffect;function jT(t,e=[]){const n=S.exports.useRef(t);return vre(()=>{n.current=t}),S.exports.useCallback((...r)=>{var i;return(i=n.current)==null?void 0:i.call(n,...r)},e)}function bre(t,e){const n=t!==void 0;return[n,n&&typeof t<"u"?t:e]}function yre(t,e){const n=S.exports.useId();return S.exports.useMemo(()=>t||[e,n].filter(Boolean).join("-"),[t,e,n])}function xre(t={}){const{onClose:e,onOpen:n,isOpen:r,id:i}=t,o=jT(n),s=jT(e),[a,l]=S.exports.useState(t.defaultIsOpen||!1),[c,u]=bre(r,a),d=yre(i,"disclosure"),f=S.exports.useCallback(()=>{c||l(!1),s==null||s()},[c,s]),h=S.exports.useCallback(()=>{c||l(!0),o==null||o()},[c,o]),p=S.exports.useCallback(()=>{(u?f:h)()},[u,h,f]);return{isOpen:!!u,onOpen:h,onClose:f,onToggle:p,isControlled:c,getButtonProps:(m={})=>({...m,"aria-expanded":u,"aria-controls":d,onClick:Yj(m.onClick,p)}),getDisclosureProps:(m={})=>({...m,hidden:!u,id:d})}}function NS(t){const e=Object.assign({},t);for(let n in e)e[n]===void 0&&delete e[n];return e}var VS=Q(function(e,n){const{htmlSize:r,...i}=e,o=js("Input",i),s=ut(i),a=are(s),l=st("chakra-input",e.className);return Z.createElement(U.input,{size:r,...a,__css:o.field,ref:n,className:l})});VS.displayName="Input";VS.id="Input";var[Sre,sV]=Xn({name:"InputGroupStylesContext",errorMessage:`useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in "<InputGroup />" `}),aV=Q(function(e,n){const r=js("Input",e),{children:i,className:o,...s}=ut(e),a=st("chakra-input__group",o),l={},c=zS(i),u=r.field;c.forEach(f=>{var h,p;!r||(u&&f.type.id==="InputLeftElement"&&(l.paddingStart=(h=u.height)!=null?h:u.h),u&&f.type.id==="InputRightElement"&&(l.paddingEnd=(p=u.height)!=null?p:u.h),f.type.id==="InputRightAddon"&&(l.borderEndRadius=0),f.type.id==="InputLeftAddon"&&(l.borderStartRadius=0))});const d=c.map(f=>{var h,p;const m=NS({size:((h=f.props)==null?void 0:h.size)||e.size,variant:((p=f.props)==null?void 0:p.variant)||e.variant});return f.type.id!=="Input"?S.exports.cloneElement(f,m):S.exports.cloneElement(f,Object.assign(m,l,f.props))});return Z.createElement(U.div,{className:a,ref:n,__css:{width:"100%",display:"flex",position:"relative"},...s},z(Sre,{value:r,children:d}))});aV.displayName="InputGroup";var kre={left:{marginEnd:"-1px",borderEndRadius:0,borderEndColor:"transparent"},right:{marginStart:"-1px",borderStartRadius:0,borderStartColor:"transparent"}},wre=U("div",{baseStyle:{flex:"0 0 auto",width:"auto",display:"flex",alignItems:"center",whiteSpace:"nowrap"}}),LS=Q(function(e,n){var a;const{placement:r="left",...i}=e,o=(a=kre[r])!=null?a:{},s=sV();return z(wre,{ref:n,...i,__css:{...s.addon,...o}})});LS.displayName="InputAddon";var XS=Q(function(e,n){return z(LS,{ref:n,placement:"left",...e,className:st("chakra-input__left-addon",e.className)})});XS.displayName="InputLeftAddon";XS.id="InputLeftAddon";var lV=Q(function(e,n){return z(LS,{ref:n,placement:"right",...e,className:st("chakra-input__right-addon",e.className)})});lV.displayName="InputRightAddon";lV.id="InputRightAddon";var Ore=U("div",{baseStyle:{display:"flex",alignItems:"center",justifyContent:"center",position:"absolute",top:"0",zIndex:2}}),bg=Q(function(e,n){var c,u;const{placement:r="left",...i}=e,o=sV(),s=o.field,l={[r==="left"?"insetStart":"insetEnd"]:"0",width:(c=s==null?void 0:s.height)!=null?c:s==null?void 0:s.h,height:(u=s==null?void 0:s.height)!=null?u:s==null?void 0:s.h,fontSize:s==null?void 0:s.fontSize,...o.element};return z(Ore,{ref:n,__css:l,...i})});bg.id="InputElement";bg.displayName="InputElement";var cV=Q(function(e,n){const{className:r,...i}=e,o=st("chakra-input__left-element",r);return z(bg,{ref:n,placement:"left",className:o,...i})});cV.id="InputLeftElement";cV.displayName="InputLeftElement";var uV=Q(function(e,n){const{className:r,...i}=e,o=st("chakra-input__right-element",r);return z(bg,{ref:n,placement:"right",className:o,...i})});uV.id="InputRightElement";uV.displayName="InputRightElement";function Tre(t){const e=typeof t;return t!=null&&(e==="object"||e==="function")&&!Array.isArray(t)}Object.freeze(["base","sm","md","lg","xl","2xl"]);function Ro(t,e){return Array.isArray(t)?t.map(n=>n===null?null:e(n)):Tre(t)?Object.keys(t).reduce((n,r)=>(n[r]=e(t[r]),n),{}):t!=null?e(t):null}var Pre=Q(function(t,e){const{ratio:n=4/3,children:r,className:i,...o}=t,s=S.exports.Children.only(r),a=st("chakra-aspect-ratio",i);return Z.createElement(U.div,{ref:e,position:"relative",className:a,_before:{height:0,content:'""',display:"block",paddingBottom:Ro(n,l=>`${1/l*100}%`)},__css:{"& > *:not(style)":{overflow:"hidden",position:"absolute",top:"0",right:"0",bottom:"0",left:"0",display:"flex",justifyContent:"center",alignItems:"center",width:"100%",height:"100%"},"& > img, & > video":{objectFit:"cover"}},...o},s)});Pre.displayName="AspectRatio";var Cre=Q(function(e,n){const r=gn("Badge",e),{className:i,...o}=ut(e);return Z.createElement(U.span,{ref:n,className:st("chakra-badge",e.className),...o,__css:{display:"inline-block",whiteSpace:"nowrap",verticalAlign:"middle",...r}})});Cre.displayName="Badge";var Ol=U("div");Ol.displayName="Box";var dV=Q(function(e,n){const{size:r,centerContent:i=!0,...o}=e;return z(Ol,{ref:n,boxSize:r,__css:{...i?{display:"flex",alignItems:"center",justifyContent:"center"}:{},flexShrink:0,flexGrow:0},...o})});dV.displayName="Square";var Mre=Q(function(e,n){const{size:r,...i}=e;return z(dV,{size:r,ref:n,borderRadius:"9999px",...i})});Mre.displayName="Circle";var t1=U("div",{baseStyle:{display:"flex",alignItems:"center",justifyContent:"center"}});t1.displayName="Center";var Rre={horizontal:{insetStart:"50%",transform:"translateX(-50%)"},vertical:{top:"50%",transform:"translateY(-50%)"},both:{insetStart:"50%",top:"50%",transform:"translate(-50%, -50%)"}};Q(function(e,n){const{axis:r="both",...i}=e;return Z.createElement(U.div,{ref:n,__css:Rre[r],...i,position:"absolute"})});var Ire=Q(function(e,n){const r=gn("Code",e),{className:i,...o}=ut(e);return Z.createElement(U.code,{ref:n,className:st("chakra-code",e.className),...o,__css:{display:"inline-block",...r}})});Ire.displayName="Code";var zre=Q(function(e,n){const{className:r,centerContent:i,...o}=ut(e),s=gn("Container",e);return Z.createElement(U.div,{ref:n,className:st("chakra-container",r),...o,__css:{...s,...i&&{display:"flex",flexDirection:"column",alignItems:"center"}}})});zre.displayName="Container";var Ere=Q(function(e,n){const{borderLeftWidth:r,borderBottomWidth:i,borderTopWidth:o,borderRightWidth:s,borderWidth:a,borderStyle:l,borderColor:c,...u}=gn("Divider",e),{className:d,orientation:f="horizontal",__css:h,...p}=ut(e),m={vertical:{borderLeftWidth:r||s||a||"1px",height:"100%"},horizontal:{borderBottomWidth:i||o||a||"1px",width:"100%"}};return Z.createElement(U.hr,{ref:n,"aria-orientation":f,...p,__css:{...u,border:"0",borderColor:c,borderStyle:l,...m[f],...h},className:st("chakra-divider",d)})});Ere.displayName="Divider";var Nre=Q(function(e,n){const{direction:r,align:i,justify:o,wrap:s,basis:a,grow:l,shrink:c,...u}=e,d={display:"flex",flexDirection:r,alignItems:i,justifyContent:o,flexWrap:s,flexBasis:a,flexGrow:l,flexShrink:c};return Z.createElement(U.div,{ref:n,__css:d,...u})});Nre.displayName="Flex";var fV=Q(function(e,n){const{templateAreas:r,gap:i,rowGap:o,columnGap:s,column:a,row:l,autoFlow:c,autoRows:u,templateRows:d,autoColumns:f,templateColumns:h,...p}=e,m={display:"grid",gridTemplateAreas:r,gridGap:i,gridRowGap:o,gridColumnGap:s,gridAutoColumns:f,gridColumn:a,gridRow:l,gridAutoFlow:c,gridAutoRows:u,gridTemplateRows:d,gridTemplateColumns:h};return Z.createElement(U.div,{ref:n,__css:m,...p})});fV.displayName="Grid";function DT(t){return Ro(t,e=>e==="auto"?"auto":`span ${e}/span ${e}`)}var Vre=Q(function(e,n){const{area:r,colSpan:i,colStart:o,colEnd:s,rowEnd:a,rowSpan:l,rowStart:c,...u}=e,d=NS({gridArea:r,gridColumn:DT(i),gridRow:DT(l),gridColumnStart:o,gridColumnEnd:s,gridRowStart:c,gridRowEnd:a});return Z.createElement(U.div,{ref:n,__css:d,...u})});Vre.displayName="GridItem";var Lre=Q(function(e,n){const r=gn("Heading",e),{className:i,...o}=ut(e);return Z.createElement(U.h2,{ref:n,className:st("chakra-heading",e.className),...o,__css:r})});Lre.displayName="Heading";Q(function(e,n){const r=gn("Mark",e),i=ut(e);return z(Ol,{ref:n,...i,as:"mark",__css:{bg:"transparent",whiteSpace:"nowrap",...r}})});var Xre=Q(function(e,n){const r=gn("Kbd",e),{className:i,...o}=ut(e);return Z.createElement(U.kbd,{ref:n,className:st("chakra-kbd",i),...o,__css:{fontFamily:"mono",...r}})});Xre.displayName="Kbd";var Bre=Q(function(e,n){const r=gn("Link",e),{className:i,isExternal:o,...s}=ut(e);return Z.createElement(U.a,{target:o?"_blank":void 0,rel:o?"noopener":void 0,ref:n,className:st("chakra-link",i),...s,__css:r})});Bre.displayName="Link";Q(function(e,n){const{isExternal:r,target:i,rel:o,className:s,...a}=e;return Z.createElement(U.a,{...a,ref:n,className:st("chakra-linkbox__overlay",s),rel:r?"noopener noreferrer":o,target:r?"_blank":i,__css:{position:"static","&::before":{content:"''",cursor:"inherit",display:"block",position:"absolute",top:0,left:0,zIndex:0,width:"100%",height:"100%"}}})});Q(function(e,n){const{className:r,...i}=e;return Z.createElement(U.div,{ref:n,position:"relative",...i,className:st("chakra-linkbox",r),__css:{"a[href]:not(.chakra-linkbox__overlay), abbr[title]":{position:"relative",zIndex:1}}})});var[Are,hV]=Xn({name:"ListStylesContext",errorMessage:`useListStyles returned is 'undefined'. Seems you forgot to wrap the components in "<List />" `}),BS=Q(function(e,n){const r=js("List",e),{children:i,styleType:o="none",stylePosition:s,spacing:a,...l}=ut(e),c=zS(i),d=a?{["& > *:not(style) ~ *:not(style)"]:{mt:a}}:{};return Z.createElement(Are,{value:r},Z.createElement(U.ul,{ref:n,listStyleType:o,listStylePosition:s,role:"list",__css:{...r.container,...d},...l},c))});BS.displayName="List";var Zre=Q((t,e)=>{const{as:n,...r}=t;return z(BS,{ref:e,as:"ol",styleType:"decimal",marginStart:"1em",...r})});Zre.displayName="OrderedList";var Gre=Q(function(e,n){const{as:r,...i}=e;return z(BS,{ref:n,as:"ul",styleType:"initial",marginStart:"1em",...i})});Gre.displayName="UnorderedList";var Wre=Q(function(e,n){const r=hV();return Z.createElement(U.li,{ref:n,...e,__css:r.item})});Wre.displayName="ListItem";var Yre=Q(function(e,n){const r=hV();return z(Ds,{ref:n,role:"presentation",...e,__css:r.icon})});Yre.displayName="ListIcon";var Fre=Q(function(e,n){const{columns:r,spacingX:i,spacingY:o,spacing:s,minChildWidth:a,...l}=e,c=nS(),u=a?jre(a,c):Dre(r);return z(fV,{ref:n,gap:s,columnGap:i,rowGap:o,templateColumns:u,...l})});Fre.displayName="SimpleGrid";function Hre(t){return typeof t=="number"?`${t}px`:t}function jre(t,e){return Ro(t,n=>{const r=RJ("sizes",n,Hre(n))(e);return n===null?null:`repeat(auto-fit, minmax(${r}, 1fr))`})}function Dre(t){return Ro(t,e=>e===null?null:`repeat(${e}, minmax(0, 1fr))`)}var pV=U("div",{baseStyle:{flex:1,justifySelf:"stretch",alignSelf:"stretch"}});pV.displayName="Spacer";var n1="& > *:not(style) ~ *:not(style)";function Ure(t){const{spacing:e,direction:n}=t,r={column:{marginTop:e,marginEnd:0,marginBottom:0,marginStart:0},row:{marginTop:0,marginEnd:0,marginBottom:0,marginStart:e},"column-reverse":{marginTop:0,marginEnd:0,marginBottom:e,marginStart:0},"row-reverse":{marginTop:0,marginEnd:e,marginBottom:0,marginStart:0}};return{flexDirection:n,[n1]:Ro(n,i=>r[i])}}function Kre(t){const{spacing:e,direction:n}=t,r={column:{my:e,mx:0,borderLeftWidth:0,borderBottomWidth:"1px"},"column-reverse":{my:e,mx:0,borderLeftWidth:0,borderBottomWidth:"1px"},row:{mx:e,my:0,borderLeftWidth:"1px",borderBottomWidth:0},"row-reverse":{mx:e,my:0,borderLeftWidth:"1px",borderBottomWidth:0}};return{"&":Ro(n,i=>r[i])}}var mV=t=>Z.createElement(U.div,{className:"chakra-stack__item",...t,__css:{display:"inline-block",flex:"0 0 auto",minWidth:0,...t.__css}});mV.displayName="StackItem";var AS=Q((t,e)=>{const{isInline:n,direction:r,align:i,justify:o,spacing:s="0.5rem",wrap:a,children:l,divider:c,className:u,shouldWrapChildren:d,...f}=t,h=n?"row":r!=null?r:"column",p=S.exports.useMemo(()=>Ure({direction:h,spacing:s}),[h,s]),m=S.exports.useMemo(()=>Kre({spacing:s,direction:h}),[s,h]),b=!!c,g=!d&&!b,v=S.exports.useMemo(()=>{const x=zS(l);return g?x:x.map((k,O)=>{const T=typeof k.key<"u"?k.key:O,M=O+1===x.length,I=d?z(mV,{children:k},T):k;if(!b)return I;const B=S.exports.cloneElement(c,{__css:m}),D=M?null:B;return tt(S.exports.Fragment,{children:[I,D]},T)})},[c,m,b,g,d,l]),y=st("chakra-stack",u);return Z.createElement(U.div,{ref:e,display:"flex",alignItems:i,justifyContent:o,flexDirection:p.flexDirection,flexWrap:a,className:y,__css:b?{}:{[n1]:p[n1]},...f},v)});AS.displayName="Stack";var gV=Q((t,e)=>z(AS,{align:"center",...t,direction:"row",ref:e}));gV.displayName="HStack";var ZS=Q((t,e)=>z(AS,{align:"center",...t,direction:"column",ref:e}));ZS.displayName="VStack";var vV=Q(function(e,n){const r=gn("Text",e),{className:i,align:o,decoration:s,casing:a,...l}=ut(e),c=NS({textAlign:e.align,textDecoration:e.decoration,textTransform:e.casing});return Z.createElement(U.p,{ref:n,className:st("chakra-text",e.className),...c,...l,__css:r})});vV.displayName="Text";function UT(t){return typeof t=="number"?`${t}px`:t}var qre=Q(function(e,n){const{spacing:r="0.5rem",spacingX:i,spacingY:o,children:s,justify:a,direction:l,align:c,className:u,shouldWrapChildren:d,...f}=e,h=S.exports.useMemo(()=>{const{spacingX:m=r,spacingY:b=r}={spacingX:i,spacingY:o};return{"--chakra-wrap-x-spacing":g=>Ro(m,v=>UT(vy("space",v)(g))),"--chakra-wrap-y-spacing":g=>Ro(b,v=>UT(vy("space",v)(g))),"--wrap-x-spacing":"calc(var(--chakra-wrap-x-spacing) / 2)","--wrap-y-spacing":"calc(var(--chakra-wrap-y-spacing) / 2)",display:"flex",flexWrap:"wrap",justifyContent:a,alignItems:c,flexDirection:l,listStyleType:"none",padding:"0",margin:"calc(var(--wrap-y-spacing) * -1) calc(var(--wrap-x-spacing) * -1)","& > *:not(style)":{margin:"var(--wrap-y-spacing) var(--wrap-x-spacing)"}}},[r,i,o,a,c,l]),p=S.exports.useMemo(()=>d?S.exports.Children.map(s,(m,b)=>z(bV,{children:m},b)):s,[s,d]);return Z.createElement(U.div,{ref:n,className:st("chakra-wrap",u),overflow:"hidden",...f},Z.createElement(U.ul,{className:"chakra-wrap__list",__css:h},p))});qre.displayName="Wrap";var bV=Q(function(e,n){const{className:r,...i}=e;return Z.createElement(U.li,{ref:n,__css:{display:"flex",alignItems:"flex-start"},className:st("chakra-wrap__listitem",r),...i})});bV.displayName="WrapItem";var Qre={body:{classList:{add(){},remove(){}}},addEventListener(){},removeEventListener(){},activeElement:{blur(){},nodeName:""},querySelector(){return null},querySelectorAll(){return[]},getElementById(){return null},createEvent(){return{initEvent(){}}},createElement(){return{children:[],childNodes:[],style:{},setAttribute(){},getElementsByTagName(){return[]}}}},yV=Qre,aa=()=>{},Jre={document:yV,navigator:{userAgent:""},CustomEvent:function(){return this},addEventListener:aa,removeEventListener:aa,getComputedStyle(){return{getPropertyValue(){return""}}},matchMedia(){return{matches:!1,addListener:aa,removeListener:aa}},requestAnimationFrame(t){return typeof setTimeout>"u"?(t(),null):setTimeout(t,0)},cancelAnimationFrame(t){typeof setTimeout>"u"||clearTimeout(t)},setTimeout:()=>0,clearTimeout:aa,setInterval:()=>0,clearInterval:aa},_re=Jre,$re={window:_re,document:yV},xV=typeof window<"u"?{window,document}:$re,SV=S.exports.createContext(xV);SV.displayName="EnvironmentContext";function kV(t){const{children:e,environment:n}=t,[r,i]=S.exports.useState(null),[o,s]=S.exports.useState(!1);S.exports.useEffect(()=>s(!0),[]);const a=S.exports.useMemo(()=>{if(n)return n;const l=r==null?void 0:r.ownerDocument,c=r==null?void 0:r.ownerDocument.defaultView;return l?{document:l,window:c}:xV},[r,n]);return tt(SV.Provider,{value:a,children:[e,!n&&o&&z("span",{id:"__chakra_env",hidden:!0,ref:l=>{S.exports.startTransition(()=>{l&&i(l)})}})]})}kV.displayName="EnvironmentProvider";function eie(t){return t!=null&&typeof t=="object"&&"nodeType"in t&&t.nodeType===Node.ELEMENT_NODE}function tie(t){var n;if(!eie(t))return!1;const e=(n=t.ownerDocument.defaultView)!=null?n:window;return t instanceof e.HTMLElement}var nie=t=>t.hasAttribute("tabindex");function rie(t){return Boolean(t.getAttribute("disabled"))===!0||Boolean(t.getAttribute("aria-disabled"))===!0}function wV(t){return t.parentElement&&wV(t.parentElement)?!0:t.hidden}function iie(t){const e=t.getAttribute("contenteditable");return e!=="false"&&e!=null}function oie(t){if(!tie(t)||wV(t)||rie(t))return!1;const{localName:e}=t;if(["input","select","textarea","button"].indexOf(e)>=0)return!0;const r={a:()=>t.hasAttribute("href"),audio:()=>t.hasAttribute("controls"),video:()=>t.hasAttribute("controls")};return e in r?r[e]():iie(t)?!0:nie(t)}var sie=["input:not(:disabled):not([disabled])","select:not(:disabled):not([disabled])","textarea:not(:disabled):not([disabled])","embed","iframe","object","a[href]","area[href]","button:not(:disabled):not([disabled])","[tabindex]","audio[controls]","video[controls]","*[tabindex]:not([aria-disabled])","*[contenteditable]"],aie=sie.join(),lie=t=>t.offsetWidth>0&&t.offsetHeight>0;function cie(t){const e=Array.from(t.querySelectorAll(aie));return e.unshift(t),e.filter(n=>oie(n)&&lie(n))}var fn="top",tr="bottom",nr="right",hn="left",GS="auto",wd=[fn,tr,nr,hn],Tl="start",$u="end",uie="clippingParents",OV="viewport",hc="popper",die="reference",KT=wd.reduce(function(t,e){return t.concat([e+"-"+Tl,e+"-"+$u])},[]),TV=[].concat(wd,[GS]).reduce(function(t,e){return t.concat([e,e+"-"+Tl,e+"-"+$u])},[]),fie="beforeRead",hie="read",pie="afterRead",mie="beforeMain",gie="main",vie="afterMain",bie="beforeWrite",yie="write",xie="afterWrite",Sie=[fie,hie,pie,mie,gie,vie,bie,yie,xie];function ni(t){return t?(t.nodeName||"").toLowerCase():null}function ir(t){if(t==null)return window;if(t.toString()!=="[object Window]"){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function As(t){var e=ir(t).Element;return t instanceof e||t instanceof Element}function Jn(t){var e=ir(t).HTMLElement;return t instanceof e||t instanceof HTMLElement}function WS(t){if(typeof ShadowRoot>"u")return!1;var e=ir(t).ShadowRoot;return t instanceof e||t instanceof ShadowRoot}function kie(t){var e=t.state;Object.keys(e.elements).forEach(function(n){var r=e.styles[n]||{},i=e.attributes[n]||{},o=e.elements[n];!Jn(o)||!ni(o)||(Object.assign(o.style,r),Object.keys(i).forEach(function(s){var a=i[s];a===!1?o.removeAttribute(s):o.setAttribute(s,a===!0?"":a)}))})}function wie(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach(function(r){var i=e.elements[r],o=e.attributes[r]||{},s=Object.keys(e.styles.hasOwnProperty(r)?e.styles[r]:n[r]),a=s.reduce(function(l,c){return l[c]="",l},{});!Jn(i)||!ni(i)||(Object.assign(i.style,a),Object.keys(o).forEach(function(l){i.removeAttribute(l)}))})}}const Oie={name:"applyStyles",enabled:!0,phase:"write",fn:kie,effect:wie,requires:["computeStyles"]};function _r(t){return t.split("-")[0]}var Ps=Math.max,_p=Math.min,Pl=Math.round;function r1(){var t=navigator.userAgentData;return t!=null&&t.brands?t.brands.map(function(e){return e.brand+"/"+e.version}).join(" "):navigator.userAgent}function PV(){return!/^((?!chrome|android).)*safari/i.test(r1())}function Cl(t,e,n){e===void 0&&(e=!1),n===void 0&&(n=!1);var r=t.getBoundingClientRect(),i=1,o=1;e&&Jn(t)&&(i=t.offsetWidth>0&&Pl(r.width)/t.offsetWidth||1,o=t.offsetHeight>0&&Pl(r.height)/t.offsetHeight||1);var s=As(t)?ir(t):window,a=s.visualViewport,l=!PV()&&n,c=(r.left+(l&&a?a.offsetLeft:0))/i,u=(r.top+(l&&a?a.offsetTop:0))/o,d=r.width/i,f=r.height/o;return{width:d,height:f,top:u,right:c+d,bottom:u+f,left:c,x:c,y:u}}function YS(t){var e=Cl(t),n=t.offsetWidth,r=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-r)<=1&&(r=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:r}}function CV(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&WS(n)){var r=e;do{if(r&&t.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function zi(t){return ir(t).getComputedStyle(t)}function Tie(t){return["table","td","th"].indexOf(ni(t))>=0}function Ao(t){return((As(t)?t.ownerDocument:t.document)||window.document).documentElement}function yg(t){return ni(t)==="html"?t:t.assignedSlot||t.parentNode||(WS(t)?t.host:null)||Ao(t)}function qT(t){return!Jn(t)||zi(t).position==="fixed"?null:t.offsetParent}function Pie(t){var e=/firefox/i.test(r1()),n=/Trident/i.test(r1());if(n&&Jn(t)){var r=zi(t);if(r.position==="fixed")return null}var i=yg(t);for(WS(i)&&(i=i.host);Jn(i)&&["html","body"].indexOf(ni(i))<0;){var o=zi(i);if(o.transform!=="none"||o.perspective!=="none"||o.contain==="paint"||["transform","perspective"].indexOf(o.willChange)!==-1||e&&o.willChange==="filter"||e&&o.filter&&o.filter!=="none")return i;i=i.parentNode}return null}function Od(t){for(var e=ir(t),n=qT(t);n&&Tie(n)&&zi(n).position==="static";)n=qT(n);return n&&(ni(n)==="html"||ni(n)==="body"&&zi(n).position==="static")?e:n||Pie(t)||e}function FS(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function ru(t,e,n){return Ps(t,_p(e,n))}function Cie(t,e,n){var r=ru(t,e,n);return r>n?n:r}function MV(){return{top:0,right:0,bottom:0,left:0}}function RV(t){return Object.assign({},MV(),t)}function IV(t,e){return e.reduce(function(n,r){return n[r]=t,n},{})}var Mie=function(e,n){return e=typeof e=="function"?e(Object.assign({},n.rects,{placement:n.placement})):e,RV(typeof e!="number"?e:IV(e,wd))};function Rie(t){var e,n=t.state,r=t.name,i=t.options,o=n.elements.arrow,s=n.modifiersData.popperOffsets,a=_r(n.placement),l=FS(a),c=[hn,nr].indexOf(a)>=0,u=c?"height":"width";if(!(!o||!s)){var d=Mie(i.padding,n),f=YS(o),h=l==="y"?fn:hn,p=l==="y"?tr:nr,m=n.rects.reference[u]+n.rects.reference[l]-s[l]-n.rects.popper[u],b=s[l]-n.rects.reference[l],g=Od(o),v=g?l==="y"?g.clientHeight||0:g.clientWidth||0:0,y=m/2-b/2,x=d[h],k=v-f[u]-d[p],O=v/2-f[u]/2+y,T=ru(x,O,k),M=l;n.modifiersData[r]=(e={},e[M]=T,e.centerOffset=T-O,e)}}function Iie(t){var e=t.state,n=t.options,r=n.element,i=r===void 0?"[data-popper-arrow]":r;i!=null&&(typeof i=="string"&&(i=e.elements.popper.querySelector(i),!i)||!CV(e.elements.popper,i)||(e.elements.arrow=i))}const zie={name:"arrow",enabled:!0,phase:"main",fn:Rie,effect:Iie,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Ml(t){return t.split("-")[1]}var Eie={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Nie(t){var e=t.x,n=t.y,r=window,i=r.devicePixelRatio||1;return{x:Pl(e*i)/i||0,y:Pl(n*i)/i||0}}function QT(t){var e,n=t.popper,r=t.popperRect,i=t.placement,o=t.variation,s=t.offsets,a=t.position,l=t.gpuAcceleration,c=t.adaptive,u=t.roundOffsets,d=t.isFixed,f=s.x,h=f===void 0?0:f,p=s.y,m=p===void 0?0:p,b=typeof u=="function"?u({x:h,y:m}):{x:h,y:m};h=b.x,m=b.y;var g=s.hasOwnProperty("x"),v=s.hasOwnProperty("y"),y=hn,x=fn,k=window;if(c){var O=Od(n),T="clientHeight",M="clientWidth";if(O===ir(n)&&(O=Ao(n),zi(O).position!=="static"&&a==="absolute"&&(T="scrollHeight",M="scrollWidth")),O=O,i===fn||(i===hn||i===nr)&&o===$u){x=tr;var E=d&&O===k&&k.visualViewport?k.visualViewport.height:O[T];m-=E-r.height,m*=l?1:-1}if(i===hn||(i===fn||i===tr)&&o===$u){y=nr;var I=d&&O===k&&k.visualViewport?k.visualViewport.width:O[M];h-=I-r.width,h*=l?1:-1}}var B=Object.assign({position:a},c&&Eie),D=u===!0?Nie({x:h,y:m}):{x:h,y:m};if(h=D.x,m=D.y,l){var J;return Object.assign({},B,(J={},J[x]=v?"0":"",J[y]=g?"0":"",J.transform=(k.devicePixelRatio||1)<=1?"translate("+h+"px, "+m+"px)":"translate3d("+h+"px, "+m+"px, 0)",J))}return Object.assign({},B,(e={},e[x]=v?m+"px":"",e[y]=g?h+"px":"",e.transform="",e))}function Vie(t){var e=t.state,n=t.options,r=n.gpuAcceleration,i=r===void 0?!0:r,o=n.adaptive,s=o===void 0?!0:o,a=n.roundOffsets,l=a===void 0?!0:a,c={placement:_r(e.placement),variation:Ml(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:i,isFixed:e.options.strategy==="fixed"};e.modifiersData.popperOffsets!=null&&(e.styles.popper=Object.assign({},e.styles.popper,QT(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:s,roundOffsets:l})))),e.modifiersData.arrow!=null&&(e.styles.arrow=Object.assign({},e.styles.arrow,QT(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})}const Lie={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:Vie,data:{}};var Af={passive:!0};function Xie(t){var e=t.state,n=t.instance,r=t.options,i=r.scroll,o=i===void 0?!0:i,s=r.resize,a=s===void 0?!0:s,l=ir(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return o&&c.forEach(function(u){u.addEventListener("scroll",n.update,Af)}),a&&l.addEventListener("resize",n.update,Af),function(){o&&c.forEach(function(u){u.removeEventListener("scroll",n.update,Af)}),a&&l.removeEventListener("resize",n.update,Af)}}const Bie={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:Xie,data:{}};var Aie={left:"right",right:"left",bottom:"top",top:"bottom"};function Th(t){return t.replace(/left|right|bottom|top/g,function(e){return Aie[e]})}var Zie={start:"end",end:"start"};function JT(t){return t.replace(/start|end/g,function(e){return Zie[e]})}function HS(t){var e=ir(t),n=e.pageXOffset,r=e.pageYOffset;return{scrollLeft:n,scrollTop:r}}function jS(t){return Cl(Ao(t)).left+HS(t).scrollLeft}function Gie(t,e){var n=ir(t),r=Ao(t),i=n.visualViewport,o=r.clientWidth,s=r.clientHeight,a=0,l=0;if(i){o=i.width,s=i.height;var c=PV();(c||!c&&e==="fixed")&&(a=i.offsetLeft,l=i.offsetTop)}return{width:o,height:s,x:a+jS(t),y:l}}function Wie(t){var e,n=Ao(t),r=HS(t),i=(e=t.ownerDocument)==null?void 0:e.body,o=Ps(n.scrollWidth,n.clientWidth,i?i.scrollWidth:0,i?i.clientWidth:0),s=Ps(n.scrollHeight,n.clientHeight,i?i.scrollHeight:0,i?i.clientHeight:0),a=-r.scrollLeft+jS(t),l=-r.scrollTop;return zi(i||n).direction==="rtl"&&(a+=Ps(n.clientWidth,i?i.clientWidth:0)-o),{width:o,height:s,x:a,y:l}}function DS(t){var e=zi(t),n=e.overflow,r=e.overflowX,i=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+i+r)}function zV(t){return["html","body","#document"].indexOf(ni(t))>=0?t.ownerDocument.body:Jn(t)&&DS(t)?t:zV(yg(t))}function iu(t,e){var n;e===void 0&&(e=[]);var r=zV(t),i=r===((n=t.ownerDocument)==null?void 0:n.body),o=ir(r),s=i?[o].concat(o.visualViewport||[],DS(r)?r:[]):r,a=e.concat(s);return i?a:a.concat(iu(yg(s)))}function i1(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function Yie(t,e){var n=Cl(t,!1,e==="fixed");return n.top=n.top+t.clientTop,n.left=n.left+t.clientLeft,n.bottom=n.top+t.clientHeight,n.right=n.left+t.clientWidth,n.width=t.clientWidth,n.height=t.clientHeight,n.x=n.left,n.y=n.top,n}function _T(t,e,n){return e===OV?i1(Gie(t,n)):As(e)?Yie(e,n):i1(Wie(Ao(t)))}function Fie(t){var e=iu(yg(t)),n=["absolute","fixed"].indexOf(zi(t).position)>=0,r=n&&Jn(t)?Od(t):t;return As(r)?e.filter(function(i){return As(i)&&CV(i,r)&&ni(i)!=="body"}):[]}function Hie(t,e,n,r){var i=e==="clippingParents"?Fie(t):[].concat(e),o=[].concat(i,[n]),s=o[0],a=o.reduce(function(l,c){var u=_T(t,c,r);return l.top=Ps(u.top,l.top),l.right=_p(u.right,l.right),l.bottom=_p(u.bottom,l.bottom),l.left=Ps(u.left,l.left),l},_T(t,s,r));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}function EV(t){var e=t.reference,n=t.element,r=t.placement,i=r?_r(r):null,o=r?Ml(r):null,s=e.x+e.width/2-n.width/2,a=e.y+e.height/2-n.height/2,l;switch(i){case fn:l={x:s,y:e.y-n.height};break;case tr:l={x:s,y:e.y+e.height};break;case nr:l={x:e.x+e.width,y:a};break;case hn:l={x:e.x-n.width,y:a};break;default:l={x:e.x,y:e.y}}var c=i?FS(i):null;if(c!=null){var u=c==="y"?"height":"width";switch(o){case Tl:l[c]=l[c]-(e[u]/2-n[u]/2);break;case $u:l[c]=l[c]+(e[u]/2-n[u]/2);break}}return l}function ed(t,e){e===void 0&&(e={});var n=e,r=n.placement,i=r===void 0?t.placement:r,o=n.strategy,s=o===void 0?t.strategy:o,a=n.boundary,l=a===void 0?uie:a,c=n.rootBoundary,u=c===void 0?OV:c,d=n.elementContext,f=d===void 0?hc:d,h=n.altBoundary,p=h===void 0?!1:h,m=n.padding,b=m===void 0?0:m,g=RV(typeof b!="number"?b:IV(b,wd)),v=f===hc?die:hc,y=t.rects.popper,x=t.elements[p?v:f],k=Hie(As(x)?x:x.contextElement||Ao(t.elements.popper),l,u,s),O=Cl(t.elements.reference),T=EV({reference:O,element:y,strategy:"absolute",placement:i}),M=i1(Object.assign({},y,T)),E=f===hc?M:O,I={top:k.top-E.top+g.top,bottom:E.bottom-k.bottom+g.bottom,left:k.left-E.left+g.left,right:E.right-k.right+g.right},B=t.modifiersData.offset;if(f===hc&&B){var D=B[i];Object.keys(I).forEach(function(J){var ae=[nr,tr].indexOf(J)>=0?1:-1,oe=[fn,tr].indexOf(J)>=0?"y":"x";I[J]+=D[oe]*ae})}return I}function jie(t,e){e===void 0&&(e={});var n=e,r=n.placement,i=n.boundary,o=n.rootBoundary,s=n.padding,a=n.flipVariations,l=n.allowedAutoPlacements,c=l===void 0?TV:l,u=Ml(r),d=u?a?KT:KT.filter(function(p){return Ml(p)===u}):wd,f=d.filter(function(p){return c.indexOf(p)>=0});f.length===0&&(f=d);var h=f.reduce(function(p,m){return p[m]=ed(t,{placement:m,boundary:i,rootBoundary:o,padding:s})[_r(m)],p},{});return Object.keys(h).sort(function(p,m){return h[p]-h[m]})}function Die(t){if(_r(t)===GS)return[];var e=Th(t);return[JT(t),e,JT(e)]}function Uie(t){var e=t.state,n=t.options,r=t.name;if(!e.modifiersData[r]._skip){for(var i=n.mainAxis,o=i===void 0?!0:i,s=n.altAxis,a=s===void 0?!0:s,l=n.fallbackPlacements,c=n.padding,u=n.boundary,d=n.rootBoundary,f=n.altBoundary,h=n.flipVariations,p=h===void 0?!0:h,m=n.allowedAutoPlacements,b=e.options.placement,g=_r(b),v=g===b,y=l||(v||!p?[Th(b)]:Die(b)),x=[b].concat(y).reduce(function(Ce,Re){return Ce.concat(_r(Re)===GS?jie(e,{placement:Re,boundary:u,rootBoundary:d,padding:c,flipVariations:p,allowedAutoPlacements:m}):Re)},[]),k=e.rects.reference,O=e.rects.popper,T=new Map,M=!0,E=x[0],I=0;I<x.length;I++){var B=x[I],D=_r(B),J=Ml(B)===Tl,ae=[fn,tr].indexOf(D)>=0,oe=ae?"width":"height",Y=ed(e,{placement:B,boundary:u,rootBoundary:d,altBoundary:f,padding:c}),ee=ae?J?nr:hn:J?tr:fn;k[oe]>O[oe]&&(ee=Th(ee));var L=Th(ee),W=[];if(o&&W.push(Y[D]<=0),a&&W.push(Y[ee]<=0,Y[L]<=0),W.every(function(Ce){return Ce})){E=B,M=!1;break}T.set(B,W)}if(M)for(var q=p?3:1,le=function(Re){var We=x.find(function(De){var rt=T.get(De);if(rt)return rt.slice(0,Re).every(function(Bn){return Bn})});if(We)return E=We,"break"},ue=q;ue>0;ue--){var re=le(ue);if(re==="break")break}e.placement!==E&&(e.modifiersData[r]._skip=!0,e.placement=E,e.reset=!0)}}const Kie={name:"flip",enabled:!0,phase:"main",fn:Uie,requiresIfExists:["offset"],data:{_skip:!1}};function $T(t,e,n){return n===void 0&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function eP(t){return[fn,nr,tr,hn].some(function(e){return t[e]>=0})}function qie(t){var e=t.state,n=t.name,r=e.rects.reference,i=e.rects.popper,o=e.modifiersData.preventOverflow,s=ed(e,{elementContext:"reference"}),a=ed(e,{altBoundary:!0}),l=$T(s,r),c=$T(a,i,o),u=eP(l),d=eP(c);e.modifiersData[n]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:d},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":d})}const Qie={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:qie};function Jie(t,e,n){var r=_r(t),i=[hn,fn].indexOf(r)>=0?-1:1,o=typeof n=="function"?n(Object.assign({},e,{placement:t})):n,s=o[0],a=o[1];return s=s||0,a=(a||0)*i,[hn,nr].indexOf(r)>=0?{x:a,y:s}:{x:s,y:a}}function _ie(t){var e=t.state,n=t.options,r=t.name,i=n.offset,o=i===void 0?[0,0]:i,s=TV.reduce(function(u,d){return u[d]=Jie(d,e.rects,o),u},{}),a=s[e.placement],l=a.x,c=a.y;e.modifiersData.popperOffsets!=null&&(e.modifiersData.popperOffsets.x+=l,e.modifiersData.popperOffsets.y+=c),e.modifiersData[r]=s}const $ie={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:_ie};function eoe(t){var e=t.state,n=t.name;e.modifiersData[n]=EV({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})}const toe={name:"popperOffsets",enabled:!0,phase:"read",fn:eoe,data:{}};function noe(t){return t==="x"?"y":"x"}function roe(t){var e=t.state,n=t.options,r=t.name,i=n.mainAxis,o=i===void 0?!0:i,s=n.altAxis,a=s===void 0?!1:s,l=n.boundary,c=n.rootBoundary,u=n.altBoundary,d=n.padding,f=n.tether,h=f===void 0?!0:f,p=n.tetherOffset,m=p===void 0?0:p,b=ed(e,{boundary:l,rootBoundary:c,padding:d,altBoundary:u}),g=_r(e.placement),v=Ml(e.placement),y=!v,x=FS(g),k=noe(x),O=e.modifiersData.popperOffsets,T=e.rects.reference,M=e.rects.popper,E=typeof m=="function"?m(Object.assign({},e.rects,{placement:e.placement})):m,I=typeof E=="number"?{mainAxis:E,altAxis:E}:Object.assign({mainAxis:0,altAxis:0},E),B=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,D={x:0,y:0};if(!!O){if(o){var J,ae=x==="y"?fn:hn,oe=x==="y"?tr:nr,Y=x==="y"?"height":"width",ee=O[x],L=ee+b[ae],W=ee-b[oe],q=h?-M[Y]/2:0,le=v===Tl?T[Y]:M[Y],ue=v===Tl?-M[Y]:-T[Y],re=e.elements.arrow,Ce=h&&re?YS(re):{width:0,height:0},Re=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:MV(),We=Re[ae],De=Re[oe],rt=ru(0,T[Y],Ce[Y]),Bn=y?T[Y]/2-q-rt-We-I.mainAxis:le-rt-We-I.mainAxis,Or=y?-T[Y]/2+q+rt+De+I.mainAxis:ue+rt+De+I.mainAxis,Li=e.elements.arrow&&Od(e.elements.arrow),Ue=Li?x==="y"?Li.clientTop||0:Li.clientLeft||0:0,Tr=(J=B==null?void 0:B[x])!=null?J:0,$s=ee+Bn-Tr-Ue,Fl=ee+Or-Tr,Td=ru(h?_p(L,$s):L,ee,h?Ps(W,Fl):W);O[x]=Td,D[x]=Td-ee}if(a){var Pd,Sg=x==="x"?fn:hn,kg=x==="x"?tr:nr,An=O[k],Xi=k==="y"?"height":"width",Zo=An+b[Sg],Zn=An-b[kg],ea=[fn,hn].indexOf(g)!==-1,Hl=(Pd=B==null?void 0:B[k])!=null?Pd:0,Cd=ea?Zo:An-T[Xi]-M[Xi]-Hl+I.altAxis,Md=ea?An+T[Xi]+M[Xi]-Hl-I.altAxis:Zn,Go=h&&ea?Cie(Cd,An,Md):ru(h?Cd:Zo,An,h?Md:Zn);O[k]=Go,D[k]=Go-An}e.modifiersData[r]=D}}const ioe={name:"preventOverflow",enabled:!0,phase:"main",fn:roe,requiresIfExists:["offset"]};function ooe(t){return{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}}function soe(t){return t===ir(t)||!Jn(t)?HS(t):ooe(t)}function aoe(t){var e=t.getBoundingClientRect(),n=Pl(e.width)/t.offsetWidth||1,r=Pl(e.height)/t.offsetHeight||1;return n!==1||r!==1}function loe(t,e,n){n===void 0&&(n=!1);var r=Jn(e),i=Jn(e)&&aoe(e),o=Ao(e),s=Cl(t,i,n),a={scrollLeft:0,scrollTop:0},l={x:0,y:0};return(r||!r&&!n)&&((ni(e)!=="body"||DS(o))&&(a=soe(e)),Jn(e)?(l=Cl(e,!0),l.x+=e.clientLeft,l.y+=e.clientTop):o&&(l.x=jS(o))),{x:s.left+a.scrollLeft-l.x,y:s.top+a.scrollTop-l.y,width:s.width,height:s.height}}function coe(t){var e=new Map,n=new Set,r=[];t.forEach(function(o){e.set(o.name,o)});function i(o){n.add(o.name);var s=[].concat(o.requires||[],o.requiresIfExists||[]);s.forEach(function(a){if(!n.has(a)){var l=e.get(a);l&&i(l)}}),r.push(o)}return t.forEach(function(o){n.has(o.name)||i(o)}),r}function uoe(t){var e=coe(t);return Sie.reduce(function(n,r){return n.concat(e.filter(function(i){return i.phase===r}))},[])}function doe(t){var e;return function(){return e||(e=new Promise(function(n){Promise.resolve().then(function(){e=void 0,n(t())})})),e}}function foe(t){var e=t.reduce(function(n,r){var i=n[r.name];return n[r.name]=i?Object.assign({},i,r,{options:Object.assign({},i.options,r.options),data:Object.assign({},i.data,r.data)}):r,n},{});return Object.keys(e).map(function(n){return e[n]})}var tP={placement:"bottom",modifiers:[],strategy:"absolute"};function nP(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some(function(r){return!(r&&typeof r.getBoundingClientRect=="function")})}function hoe(t){t===void 0&&(t={});var e=t,n=e.defaultModifiers,r=n===void 0?[]:n,i=e.defaultOptions,o=i===void 0?tP:i;return function(a,l,c){c===void 0&&(c=o);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},tP,o),modifiersData:{},elements:{reference:a,popper:l},attributes:{},styles:{}},d=[],f=!1,h={state:u,setOptions:function(g){var v=typeof g=="function"?g(u.options):g;m(),u.options=Object.assign({},o,u.options,v),u.scrollParents={reference:As(a)?iu(a):a.contextElement?iu(a.contextElement):[],popper:iu(l)};var y=uoe(foe([].concat(r,u.options.modifiers)));return u.orderedModifiers=y.filter(function(x){return x.enabled}),p(),h.update()},forceUpdate:function(){if(!f){var g=u.elements,v=g.reference,y=g.popper;if(!!nP(v,y)){u.rects={reference:loe(v,Od(y),u.options.strategy==="fixed"),popper:YS(y)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(I){return u.modifiersData[I.name]=Object.assign({},I.data)});for(var x=0;x<u.orderedModifiers.length;x++){if(u.reset===!0){u.reset=!1,x=-1;continue}var k=u.orderedModifiers[x],O=k.fn,T=k.options,M=T===void 0?{}:T,E=k.name;typeof O=="function"&&(u=O({state:u,options:M,name:E,instance:h})||u)}}}},update:doe(function(){return new Promise(function(b){h.forceUpdate(),b(u)})}),destroy:function(){m(),f=!0}};if(!nP(a,l))return h;h.setOptions(c).then(function(b){!f&&c.onFirstUpdate&&c.onFirstUpdate(b)});function p(){u.orderedModifiers.forEach(function(b){var g=b.name,v=b.options,y=v===void 0?{}:v,x=b.effect;if(typeof x=="function"){var k=x({state:u,name:g,instance:h,options:y}),O=function(){};d.push(k||O)}})}function m(){d.forEach(function(b){return b()}),d=[]}return h}}var poe=[Bie,toe,Lie,Oie,$ie,Kie,ioe,zie,Qie],moe=hoe({defaultModifiers:poe}),la=(t,e)=>({var:t,varRef:e?`var(${t}, ${e})`:`var(${t})`}),zt={arrowShadowColor:la("--popper-arrow-shadow-color"),arrowSize:la("--popper-arrow-size","8px"),arrowSizeHalf:la("--popper-arrow-size-half"),arrowBg:la("--popper-arrow-bg"),transformOrigin:la("--popper-transform-origin"),arrowOffset:la("--popper-arrow-offset")};function goe(t){if(t.includes("top"))return"1px 1px 1px 0 var(--popper-arrow-shadow-color)";if(t.includes("bottom"))return"-1px -1px 1px 0 var(--popper-arrow-shadow-color)";if(t.includes("right"))return"-1px 1px 1px 0 var(--popper-arrow-shadow-color)";if(t.includes("left"))return"1px -1px 1px 0 var(--popper-arrow-shadow-color)"}var voe={top:"bottom center","top-start":"bottom left","top-end":"bottom right",bottom:"top center","bottom-start":"top left","bottom-end":"top right",left:"right center","left-start":"right top","left-end":"right bottom",right:"left center","right-start":"left top","right-end":"left bottom"},boe=t=>voe[t],rP={scroll:!0,resize:!0};function yoe(t){let e;return typeof t=="object"?e={enabled:!0,options:{...rP,...t}}:e={enabled:t,options:rP},e}var xoe={name:"matchWidth",enabled:!0,phase:"beforeWrite",requires:["computeStyles"],fn:({state:t})=>{t.styles.popper.width=`${t.rects.reference.width}px`},effect:({state:t})=>()=>{const e=t.elements.reference;t.elements.popper.style.width=`${e.offsetWidth}px`}},Soe={name:"transformOrigin",enabled:!0,phase:"write",fn:({state:t})=>{iP(t)},effect:({state:t})=>()=>{iP(t)}},iP=t=>{t.elements.popper.style.setProperty(zt.transformOrigin.var,boe(t.placement))},koe={name:"positionArrow",enabled:!0,phase:"afterWrite",fn:({state:t})=>{woe(t)}},woe=t=>{var e;if(!t.placement)return;const n=Ooe(t.placement);if(((e=t.elements)==null?void 0:e.arrow)&&n){Object.assign(t.elements.arrow.style,{[n.property]:n.value,width:zt.arrowSize.varRef,height:zt.arrowSize.varRef,zIndex:-1});const r={[zt.arrowSizeHalf.var]:`calc(${zt.arrowSize.varRef} / 2)`,[zt.arrowOffset.var]:`calc(${zt.arrowSizeHalf.varRef} * -1)`};for(const i in r)t.elements.arrow.style.setProperty(i,r[i])}},Ooe=t=>{if(t.startsWith("top"))return{property:"bottom",value:zt.arrowOffset.varRef};if(t.startsWith("bottom"))return{property:"top",value:zt.arrowOffset.varRef};if(t.startsWith("left"))return{property:"right",value:zt.arrowOffset.varRef};if(t.startsWith("right"))return{property:"left",value:zt.arrowOffset.varRef}},Toe={name:"innerArrow",enabled:!0,phase:"main",requires:["arrow"],fn:({state:t})=>{oP(t)},effect:({state:t})=>()=>{oP(t)}},oP=t=>{if(!t.elements.arrow)return;const e=t.elements.arrow.querySelector("[data-popper-arrow-inner]");!e||Object.assign(e.style,{transform:"rotate(45deg)",background:zt.arrowBg.varRef,top:0,left:0,width:"100%",height:"100%",position:"absolute",zIndex:"inherit",boxShadow:goe(t.placement)})},Poe={"start-start":{ltr:"left-start",rtl:"right-start"},"start-end":{ltr:"left-end",rtl:"right-end"},"end-start":{ltr:"right-start",rtl:"left-start"},"end-end":{ltr:"right-end",rtl:"left-end"},start:{ltr:"left",rtl:"right"},end:{ltr:"right",rtl:"left"}},Coe={"auto-start":"auto-end","auto-end":"auto-start","top-start":"top-end","top-end":"top-start","bottom-start":"bottom-end","bottom-end":"bottom-start"};function Moe(t,e="ltr"){var i;var n;const r=((n=Poe[t])==null?void 0:n[e])||t;return e==="ltr"?r:(i=Coe[t])!=null?i:r}function Roe(t={}){const{enabled:e=!0,modifiers:n,placement:r="bottom",strategy:i="absolute",arrowPadding:o=8,eventListeners:s=!0,offset:a,gutter:l=8,flip:c=!0,boundary:u="clippingParents",preventOverflow:d=!0,matchWidth:f,direction:h="ltr"}=t,p=S.exports.useRef(null),m=S.exports.useRef(null),b=S.exports.useRef(null),g=Moe(r,h),v=S.exports.useRef(()=>{}),y=S.exports.useCallback(()=>{var I;!e||!p.current||!m.current||((I=v.current)==null||I.call(v),b.current=moe(p.current,m.current,{placement:g,modifiers:[Toe,koe,Soe,{...xoe,enabled:!!f},{name:"eventListeners",...yoe(s)},{name:"arrow",options:{padding:o}},{name:"offset",options:{offset:a!=null?a:[0,l]}},{name:"flip",enabled:!!c,options:{padding:8}},{name:"preventOverflow",enabled:!!d,options:{boundary:u}},...n!=null?n:[]],strategy:i}),b.current.forceUpdate(),v.current=b.current.destroy)},[g,e,n,f,s,o,a,l,c,d,u,i]);S.exports.useEffect(()=>()=>{var I;!p.current&&!m.current&&((I=b.current)==null||I.destroy(),b.current=null)},[]);const x=S.exports.useCallback(I=>{p.current=I,y()},[y]),k=S.exports.useCallback((I={},B=null)=>({...I,ref:Mo(x,B)}),[x]),O=S.exports.useCallback(I=>{m.current=I,y()},[y]),T=S.exports.useCallback((I={},B=null)=>({...I,ref:Mo(O,B),style:{...I.style,position:i,minWidth:f?void 0:"max-content",inset:"0 auto auto 0"}}),[i,O,f]),M=S.exports.useCallback((I={},B=null)=>{const{size:D,shadowColor:J,bg:ae,style:oe,...Y}=I;return{...Y,ref:B,"data-popper-arrow":"",style:Ioe(I)}},[]),E=S.exports.useCallback((I={},B=null)=>({...I,ref:B,"data-popper-arrow-inner":""}),[]);return{update(){var I;(I=b.current)==null||I.update()},forceUpdate(){var I;(I=b.current)==null||I.forceUpdate()},transformOrigin:zt.transformOrigin.varRef,referenceRef:x,popperRef:O,getPopperProps:T,getArrowProps:M,getArrowInnerProps:E,getReferenceProps:k}}function Ioe(t){const{size:e,shadowColor:n,bg:r,style:i}=t,o={...i,position:"absolute"};return e&&(o["--popper-arrow-size"]=e),n&&(o["--popper-arrow-shadow-color"]=n),r&&(o["--popper-arrow-bg"]=r),o}function zoe(t={}){const{onClose:e,onOpen:n,isOpen:r,id:i}=t,o=Zp(n),s=Zp(e),[a,l]=S.exports.useState(t.defaultIsOpen||!1),c=r!==void 0?r:a,u=r!==void 0,d=S.exports.useId(),f=i!=null?i:`disclosure-${d}`,h=S.exports.useCallback(()=>{u||l(!1),s==null||s()},[u,s]),p=S.exports.useCallback(()=>{u||l(!0),o==null||o()},[u,o]),m=S.exports.useCallback(()=>{c?h():p()},[c,p,h]);function b(v={}){return{...v,"aria-expanded":c,"aria-controls":f,onClick(y){var x;(x=v.onClick)==null||x.call(v,y),m()}}}function g(v={}){return{...v,hidden:!c,id:f}}return{isOpen:c,onOpen:p,onClose:h,onToggle:m,isControlled:u,getButtonProps:b,getDisclosureProps:g}}var[Eoe,Noe]=Xn({strict:!1,name:"PortalManagerContext"});function NV(t){const{children:e,zIndex:n}=t;return z(Eoe,{value:{zIndex:n},children:e})}NV.displayName="PortalManager";var[VV,Voe]=Xn({strict:!1,name:"PortalContext"}),US="chakra-portal",Loe=".chakra-portal",Xoe=t=>z("div",{className:"chakra-portal-zIndex",style:{position:"absolute",zIndex:t.zIndex,top:0,left:0,right:0},children:t.children}),Boe=t=>{const{appendToParentPortal:e,children:n}=t,[r,i]=S.exports.useState(null),o=S.exports.useRef(null),[,s]=S.exports.useState({});S.exports.useEffect(()=>s({}),[]);const a=Voe(),l=Noe();Ep(()=>{if(!r)return;const u=r.ownerDocument,d=e&&a!=null?a:u.body;if(!d)return;o.current=u.createElement("div"),o.current.className=US,d.appendChild(o.current),s({});const f=o.current;return()=>{d.contains(f)&&d.removeChild(f)}},[r]);const c=l!=null&&l.zIndex?z(Xoe,{zIndex:l==null?void 0:l.zIndex,children:n}):n;return o.current?om.exports.createPortal(z(VV,{value:o.current,children:c}),o.current):z("span",{ref:u=>{u&&i(u)}})},Aoe=t=>{const{children:e,containerRef:n,appendToParentPortal:r}=t,i=n.current,o=i!=null?i:typeof window<"u"?document.body:void 0,s=S.exports.useMemo(()=>{const l=i==null?void 0:i.ownerDocument.createElement("div");return l&&(l.className=US),l},[i]),[,a]=S.exports.useState({});return Ep(()=>a({}),[]),Ep(()=>{if(!(!s||!o))return o.appendChild(s),()=>{o.removeChild(s)}},[s,o]),o&&s?om.exports.createPortal(z(VV,{value:r?s:null,children:e}),s):null};function qs(t){const{containerRef:e,...n}=t;return e?z(Aoe,{containerRef:e,...n}):z(Boe,{...n})}qs.defaultProps={appendToParentPortal:!0};qs.className=US;qs.selector=Loe;qs.displayName="Portal";var Zoe=function(t){if(typeof document>"u")return null;var e=Array.isArray(t)?t[0]:t;return e.ownerDocument.body},ca=new WeakMap,Zf=new WeakMap,Gf={},dv=0,LV=function(t){return t&&(t.host||LV(t.parentNode))},Goe=function(t,e){return e.map(function(n){if(t.contains(n))return n;var r=LV(n);return r&&t.contains(r)?r:(console.error("aria-hidden",n,"in not contained inside",t,". Doing nothing"),null)}).filter(function(n){return Boolean(n)})},Woe=function(t,e,n,r){var i=Goe(e,Array.isArray(t)?t:[t]);Gf[n]||(Gf[n]=new WeakMap);var o=Gf[n],s=[],a=new Set,l=new Set(i),c=function(d){!d||a.has(d)||(a.add(d),c(d.parentNode))};i.forEach(c);var u=function(d){!d||l.has(d)||Array.prototype.forEach.call(d.children,function(f){if(a.has(f))u(f);else{var h=f.getAttribute(r),p=h!==null&&h!=="false",m=(ca.get(f)||0)+1,b=(o.get(f)||0)+1;ca.set(f,m),o.set(f,b),s.push(f),m===1&&p&&Zf.set(f,!0),b===1&&f.setAttribute(n,"true"),p||f.setAttribute(r,"true")}})};return u(e),a.clear(),dv++,function(){s.forEach(function(d){var f=ca.get(d)-1,h=o.get(d)-1;ca.set(d,f),o.set(d,h),f||(Zf.has(d)||d.removeAttribute(r),Zf.delete(d)),h||d.removeAttribute(n)}),dv--,dv||(ca=new WeakMap,ca=new WeakMap,Zf=new WeakMap,Gf={})}},Yoe=function(t,e,n){n===void 0&&(n="data-aria-hidden");var r=Array.from(Array.isArray(t)?t:[t]),i=e||Zoe(t);return i?(r.push.apply(r,Array.from(i.querySelectorAll("[aria-live]"))),Woe(r,i,n,"aria-hidden")):function(){return null}},o1="data-focus-lock",XV="data-focus-lock-disabled",Foe="data-no-focus-lock",Hoe="data-autofocus-inside",joe="data-no-autofocus";function Doe(t,e){return typeof t=="function"?t(e):t&&(t.current=e),t}function Uoe(t,e){var n=S.exports.useState(function(){return{value:t,callback:e,facade:{get current(){return n.value},set current(r){var i=n.value;i!==r&&(n.value=r,n.callback(r,i))}}}})[0];return n.callback=e,n.facade}function BV(t,e){return Uoe(e||null,function(n){return t.forEach(function(r){return Doe(r,n)})})}var fv={width:"1px",height:"0px",padding:0,overflow:"hidden",position:"fixed",top:"1px",left:"1px"};function AV(t){return t}function ZV(t,e){e===void 0&&(e=AV);var n=[],r=!1,i={read:function(){if(r)throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");return n.length?n[n.length-1]:t},useMedium:function(o){var s=e(o,r);return n.push(s),function(){n=n.filter(function(a){return a!==s})}},assignSyncMedium:function(o){for(r=!0;n.length;){var s=n;n=[],s.forEach(o)}n={push:function(a){return o(a)},filter:function(){return n}}},assignMedium:function(o){r=!0;var s=[];if(n.length){var a=n;n=[],a.forEach(o),s=n}var l=function(){var u=s;s=[],u.forEach(o)},c=function(){return Promise.resolve().then(l)};c(),n={push:function(u){s.push(u),c()},filter:function(u){return s=s.filter(u),n}}}};return i}function KS(t,e){return e===void 0&&(e=AV),ZV(t,e)}function GV(t){t===void 0&&(t={});var e=ZV(null);return e.options=Zr({async:!0,ssr:!1},t),e}var WV=function(t){var e=t.sideCar,n=KN(t,["sideCar"]);if(!e)throw new Error("Sidecar: please provide `sideCar` property to import the right car");var r=e.read();if(!r)throw new Error("Sidecar medium not found");return z(r,{...Zr({},n)})};WV.isSideCarExport=!0;function Koe(t,e){return t.useMedium(e),WV}var YV=KS({},function(t){var e=t.target,n=t.currentTarget;return{target:e,currentTarget:n}}),FV=KS(),qoe=KS(),Qoe=GV({async:!0}),Joe=[],qS=S.exports.forwardRef(function(e,n){var r,i=S.exports.useState(),o=i[0],s=i[1],a=S.exports.useRef(),l=S.exports.useRef(!1),c=S.exports.useRef(null),u=e.children,d=e.disabled,f=e.noFocusGuards,h=e.persistentFocus,p=e.crossFrame,m=e.autoFocus;e.allowTextSelection;var b=e.group,g=e.className,v=e.whiteList,y=e.hasPositiveIndices,x=e.shards,k=x===void 0?Joe:x,O=e.as,T=O===void 0?"div":O,M=e.lockProps,E=M===void 0?{}:M,I=e.sideCar,B=e.returnFocus,D=e.focusOptions,J=e.onActivation,ae=e.onDeactivation,oe=S.exports.useState({}),Y=oe[0],ee=S.exports.useCallback(function(){c.current=c.current||document&&document.activeElement,a.current&&J&&J(a.current),l.current=!0},[J]),L=S.exports.useCallback(function(){l.current=!1,ae&&ae(a.current)},[ae]);S.exports.useEffect(function(){d||(c.current=null)},[]);var W=S.exports.useCallback(function(De){var rt=c.current;if(rt&&rt.focus){var Bn=typeof B=="function"?B(rt):B;if(Bn){var Or=typeof Bn=="object"?Bn:void 0;c.current=null,De?Promise.resolve().then(function(){return rt.focus(Or)}):rt.focus(Or)}}},[B]),q=S.exports.useCallback(function(De){l.current&&YV.useMedium(De)},[]),le=FV.useMedium,ue=S.exports.useCallback(function(De){a.current!==De&&(a.current=De,s(De))},[]),re=bl((r={},r[XV]=d&&"disabled",r[o1]=b,r),E),Ce=f!==!0,Re=Ce&&f!=="tail",We=BV([n,ue]);return tt(ei,{children:[Ce&&[z("div",{"data-focus-guard":!0,tabIndex:d?-1:0,style:fv},"guard-first"),y?z("div",{"data-focus-guard":!0,tabIndex:d?-1:1,style:fv},"guard-nearest"):null],!d&&z(I,{id:Y,sideCar:Qoe,observed:o,disabled:d,persistentFocus:h,crossFrame:p,autoFocus:m,whiteList:v,shards:k,onActivation:ee,onDeactivation:L,returnFocus:W,focusOptions:D}),z(T,{ref:We,...re,className:g,onBlur:le,onFocus:q,children:u}),Re&&z("div",{"data-focus-guard":!0,tabIndex:d?-1:0,style:fv})]})});qS.propTypes={};qS.defaultProps={children:void 0,disabled:!1,returnFocus:!1,focusOptions:void 0,noFocusGuards:!1,autoFocus:!0,persistentFocus:!1,crossFrame:!0,hasPositiveIndices:void 0,allowTextSelection:void 0,group:void 0,className:void 0,whiteList:void 0,shards:void 0,as:"div",lockProps:{},onActivation:void 0,onDeactivation:void 0};const HV=qS;function s1(t,e){return s1=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,i){return r.__proto__=i,r},s1(t,e)}function _oe(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,s1(t,e)}function $oe(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function ese(t,e){function n(r){return r.displayName||r.name||"Component"}return function(i){var o=[],s;function a(){s=t(o.map(function(c){return c.props})),e(s)}var l=function(c){_oe(u,c);function u(){return c.apply(this,arguments)||this}u.peek=function(){return s};var d=u.prototype;return d.componentDidMount=function(){o.push(this),a()},d.componentDidUpdate=function(){a()},d.componentWillUnmount=function(){var h=o.indexOf(this);o.splice(h,1),a()},d.render=function(){return z(i,{...this.props})},u}(S.exports.PureComponent);return $oe(l,"displayName","SideEffect("+n(i)+")"),l}}var oi=function(t){for(var e=Array(t.length),n=0;n<t.length;++n)e[n]=t[n];return e},a1=function(t){return Array.isArray(t)?t:[t]},tse=function(t){if(t.nodeType!==Node.ELEMENT_NODE)return!1;var e=window.getComputedStyle(t,null);return!e||!e.getPropertyValue?!1:e.getPropertyValue("display")==="none"||e.getPropertyValue("visibility")==="hidden"},jV=function(t){return t.parentNode&&t.parentNode.nodeType===Node.DOCUMENT_FRAGMENT_NODE?t.parentNode.host:t.parentNode},DV=function(t){return t===document||t&&t.nodeType===Node.DOCUMENT_NODE},nse=function(t,e){return!t||DV(t)||!tse(t)&&e(jV(t))},UV=function(t,e){var n=t.get(e);if(n!==void 0)return n;var r=nse(e,UV.bind(void 0,t));return t.set(e,r),r},rse=function(t,e){return t&&!DV(t)?sse(t)?e(jV(t)):!1:!0},KV=function(t,e){var n=t.get(e);if(n!==void 0)return n;var r=rse(e,KV.bind(void 0,t));return t.set(e,r),r},qV=function(t){return t.dataset},ise=function(t){return t.tagName==="BUTTON"},QV=function(t){return t.tagName==="INPUT"},JV=function(t){return QV(t)&&t.type==="radio"},ose=function(t){return!((QV(t)||ise(t))&&(t.type==="hidden"||t.disabled))},sse=function(t){var e=t.getAttribute(joe);return![!0,"true",""].includes(e)},QS=function(t){var e;return Boolean(t&&((e=qV(t))===null||e===void 0?void 0:e.focusGuard))},$p=function(t){return!QS(t)},ase=function(t){return Boolean(t)},lse=function(t,e){var n=t.tabIndex-e.tabIndex,r=t.index-e.index;if(n){if(!t.tabIndex)return 1;if(!e.tabIndex)return-1}return n||r},_V=function(t,e,n){return oi(t).map(function(r,i){return{node:r,index:i,tabIndex:n&&r.tabIndex===-1?(r.dataset||{}).focusGuard?0:-1:r.tabIndex}}).filter(function(r){return!e||r.tabIndex>=0}).sort(lse)},cse=["button:enabled","select:enabled","textarea:enabled","input:enabled","a[href]","area[href]","summary","iframe","object","embed","audio[controls]","video[controls]","[tabindex]","[contenteditable]","[autofocus]"],JS=cse.join(","),use="".concat(JS,", [data-focus-guard]"),$V=function(t,e){var n;return oi(((n=t.shadowRoot)===null||n===void 0?void 0:n.children)||t.children).reduce(function(r,i){return r.concat(i.matches(e?use:JS)?[i]:[],$V(i))},[])},_S=function(t,e){return t.reduce(function(n,r){return n.concat($V(r,e),r.parentNode?oi(r.parentNode.querySelectorAll(JS)).filter(function(i){return i===r}):[])},[])},dse=function(t){var e=t.querySelectorAll("[".concat(Hoe,"]"));return oi(e).map(function(n){return _S([n])}).reduce(function(n,r){return n.concat(r)},[])},$S=function(t,e){return oi(t).filter(function(n){return UV(e,n)}).filter(function(n){return ose(n)})},sP=function(t,e){return e===void 0&&(e=new Map),oi(t).filter(function(n){return KV(e,n)})},l1=function(t,e,n){return _V($S(_S(t,n),e),!0,n)},aP=function(t,e){return _V($S(_S(t),e),!1)},fse=function(t,e){return $S(dse(t),e)},td=function(t,e){return t.shadowRoot?td(t.shadowRoot,e):Object.getPrototypeOf(t).contains!==void 0&&Object.getPrototypeOf(t).contains.call(t,e)?!0:oi(t.children).some(function(n){return td(n,e)})},hse=function(t){for(var e=new Set,n=t.length,r=0;r<n;r+=1)for(var i=r+1;i<n;i+=1){var o=t[r].compareDocumentPosition(t[i]);(o&Node.DOCUMENT_POSITION_CONTAINED_BY)>0&&e.add(i),(o&Node.DOCUMENT_POSITION_CONTAINS)>0&&e.add(r)}return t.filter(function(s,a){return!e.has(a)})},eL=function(t){return t.parentNode?eL(t.parentNode):t},ek=function(t){var e=a1(t);return e.filter(Boolean).reduce(function(n,r){var i=r.getAttribute(o1);return n.push.apply(n,i?hse(oi(eL(r).querySelectorAll("[".concat(o1,'="').concat(i,'"]:not([').concat(XV,'="disabled"])')))):[r]),n},[])},tL=function(t){return t.activeElement?t.activeElement.shadowRoot?tL(t.activeElement.shadowRoot):t.activeElement:void 0},tk=function(){return document.activeElement?document.activeElement.shadowRoot?tL(document.activeElement.shadowRoot):document.activeElement:void 0},pse=function(t){return t===document.activeElement},mse=function(t){return Boolean(oi(t.querySelectorAll("iframe")).some(function(e){return pse(e)}))},nL=function(t){var e=document&&tk();return!e||e.dataset&&e.dataset.focusGuard?!1:ek(t).some(function(n){return td(n,e)||mse(n)})},gse=function(){var t=document&&tk();return t?oi(document.querySelectorAll("[".concat(Foe,"]"))).some(function(e){return td(e,t)}):!1},vse=function(t,e){return e.filter(JV).filter(function(n){return n.name===t.name}).filter(function(n){return n.checked})[0]||t},nk=function(t,e){return JV(t)&&t.name?vse(t,e):t},bse=function(t){var e=new Set;return t.forEach(function(n){return e.add(nk(n,t))}),t.filter(function(n){return e.has(n)})},lP=function(t){return t[0]&&t.length>1?nk(t[0],t):t[0]},cP=function(t,e){return t.length>1?t.indexOf(nk(t[e],t)):e},rL="NEW_FOCUS",yse=function(t,e,n,r){var i=t.length,o=t[0],s=t[i-1],a=QS(n);if(!(n&&t.indexOf(n)>=0)){var l=n!==void 0?e.indexOf(n):-1,c=r?e.indexOf(r):l,u=r?t.indexOf(r):-1,d=l-c,f=e.indexOf(o),h=e.indexOf(s),p=bse(e),m=n!==void 0?p.indexOf(n):-1,b=m-(r?p.indexOf(r):l),g=cP(t,0),v=cP(t,i-1);if(l===-1||u===-1)return rL;if(!d&&u>=0)return u;if(l<=f&&a&&Math.abs(d)>1)return v;if(l>=h&&a&&Math.abs(d)>1)return g;if(d&&Math.abs(b)>1)return u;if(l<=f)return v;if(l>h)return g;if(d)return Math.abs(d)>1?u:(i+u+d)%i}},xse=function(t){return function(e){var n,r=(n=qV(e))===null||n===void 0?void 0:n.autofocus;return e.autofocus||r!==void 0&&r!=="false"||t.indexOf(e)>=0}},Sse=function(t,e,n){var r=t.map(function(o){var s=o.node;return s}),i=sP(r.filter(xse(n)));return i&&i.length?lP(i):lP(sP(e))},c1=function(t,e){return e===void 0&&(e=[]),e.push(t),t.parentNode&&c1(t.parentNode.host||t.parentNode,e),e},hv=function(t,e){for(var n=c1(t),r=c1(e),i=0;i<n.length;i+=1){var o=n[i];if(r.indexOf(o)>=0)return o}return!1},iL=function(t,e,n){var r=a1(t),i=a1(e),o=r[0],s=!1;return i.filter(Boolean).forEach(function(a){s=hv(s||a,a)||s,n.filter(Boolean).forEach(function(l){var c=hv(o,l);c&&(!s||td(c,s)?s=c:s=hv(c,s))})}),s},kse=function(t,e){return t.reduce(function(n,r){return n.concat(fse(r,e))},[])},wse=function(t,e){var n=new Map;return e.forEach(function(r){return n.set(r.node,r)}),t.map(function(r){return n.get(r)}).filter(ase)},Ose=function(t,e){var n=document&&tk(),r=ek(t).filter($p),i=iL(n||t,t,r),o=new Map,s=aP(r,o),a=l1(r,o).filter(function(h){var p=h.node;return $p(p)});if(!(!a[0]&&(a=s,!a[0]))){var l=aP([i],o).map(function(h){var p=h.node;return p}),c=wse(l,a),u=c.map(function(h){var p=h.node;return p}),d=yse(u,l,n,e);if(d===rL){var f=Sse(s,u,kse(r,o));if(f)return{node:f};console.warn("focus-lock: cannot find any node to move focus into");return}return d===void 0?d:c[d]}},Tse=function(t){var e=ek(t).filter($p),n=iL(t,t,e),r=new Map,i=l1([n],r,!0),o=l1(e,r).filter(function(s){var a=s.node;return $p(a)}).map(function(s){var a=s.node;return a});return i.map(function(s){var a=s.node,l=s.index;return{node:a,index:l,lockItem:o.indexOf(a)>=0,guard:QS(a)}})},Pse=function(t,e){"focus"in t&&t.focus(e),"contentWindow"in t&&t.contentWindow&&t.contentWindow.focus()},pv=0,mv=!1,Cse=function(t,e,n){n===void 0&&(n={});var r=Ose(t,e);if(!mv&&r){if(pv>2){console.error("FocusLock: focus-fighting detected. Only one focus management system could be active. See https://github.com/theKashey/focus-lock/#focus-fighting"),mv=!0,setTimeout(function(){mv=!1},1);return}pv++,Pse(r.node,n.focusOptions),pv--}};const oL=Cse;function sL(t){var e=window,n=e.setImmediate;typeof n<"u"?n(t):setTimeout(t,1)}var Mse=function(){return document&&document.activeElement===document.body},Rse=function(){return Mse()||gse()},nl=null,Va=null,rl=null,nd=!1,Ise=function(){return!0},zse=function(e){return(nl.whiteList||Ise)(e)},Ese=function(e,n){rl={observerNode:e,portaledElement:n}},Nse=function(e){return rl&&rl.portaledElement===e};function uP(t,e,n,r){var i=null,o=t;do{var s=r[o];if(s.guard)s.node.dataset.focusAutoGuard&&(i=s);else if(s.lockItem){if(o!==t)return;i=null}else break}while((o+=n)!==e);i&&(i.node.tabIndex=0)}var Vse=function(e){return e&&"current"in e?e.current:e},Lse=function(e){return e?Boolean(nd):nd==="meanwhile"},Xse=function t(e,n,r){return n&&(n.host===e&&(!n.activeElement||r.contains(n.activeElement))||n.parentNode&&t(e,n.parentNode,r))},Bse=function(e,n){return n.some(function(r){return Xse(e,r,r)})},em=function(){var e=!1;if(nl){var n=nl,r=n.observed,i=n.persistentFocus,o=n.autoFocus,s=n.shards,a=n.crossFrame,l=n.focusOptions,c=r||rl&&rl.portaledElement,u=document&&document.activeElement;if(c){var d=[c].concat(s.map(Vse).filter(Boolean));if((!u||zse(u))&&(i||Lse(a)||!Rse()||!Va&&o)&&(c&&!(nL(d)||u&&Bse(u,d)||Nse(u))&&(document&&!Va&&u&&!o?(u.blur&&u.blur(),document.body.focus()):(e=oL(d,Va,{focusOptions:l}),rl={})),nd=!1,Va=document&&document.activeElement),document){var f=document&&document.activeElement,h=Tse(d),p=h.map(function(m){var b=m.node;return b}).indexOf(f);p>-1&&(h.filter(function(m){var b=m.guard,g=m.node;return b&&g.dataset.focusAutoGuard}).forEach(function(m){var b=m.node;return b.removeAttribute("tabIndex")}),uP(p,h.length,1,h),uP(p,-1,-1,h))}}}return e},aL=function(e){em()&&e&&(e.stopPropagation(),e.preventDefault())},rk=function(){return sL(em)},Ase=function(e){var n=e.target,r=e.currentTarget;r.contains(n)||Ese(r,n)},Zse=function(){return null},lL=function(){nd="just",setTimeout(function(){nd="meanwhile"},0)},Gse=function(){document.addEventListener("focusin",aL),document.addEventListener("focusout",rk),window.addEventListener("blur",lL)},Wse=function(){document.removeEventListener("focusin",aL),document.removeEventListener("focusout",rk),window.removeEventListener("blur",lL)};function Yse(t){return t.filter(function(e){var n=e.disabled;return!n})}function Fse(t){var e=t.slice(-1)[0];e&&!nl&&Gse();var n=nl,r=n&&e&&e.id===n.id;nl=e,n&&!r&&(n.onDeactivation(),t.filter(function(i){var o=i.id;return o===n.id}).length||n.returnFocus(!e)),e?(Va=null,(!r||n.observed!==e.observed)&&e.onActivation(),em(),sL(em)):(Wse(),Va=null)}YV.assignSyncMedium(Ase);FV.assignMedium(rk);qoe.assignMedium(function(t){return t({moveFocusInside:oL,focusInside:nL})});const Hse=ese(Yse,Fse)(Zse);var cL=S.exports.forwardRef(function(e,n){return z(HV,{sideCar:Hse,ref:n,...e})}),uL=HV.propTypes||{};uL.sideCar;Kz(uL,["sideCar"]);cL.propTypes={};const jse=cL;var dL=t=>{const{initialFocusRef:e,finalFocusRef:n,contentRef:r,restoreFocus:i,children:o,isDisabled:s,autoFocus:a,persistentFocus:l,lockFocusAcrossFrames:c}=t,u=S.exports.useCallback(()=>{e!=null&&e.current?e.current.focus():r!=null&&r.current&&cie(r.current).length===0&&requestAnimationFrame(()=>{var p;(p=r.current)==null||p.focus()})},[e,r]),d=S.exports.useCallback(()=>{var h;(h=n==null?void 0:n.current)==null||h.focus()},[n]);return z(jse,{crossFrame:c,persistentFocus:l,autoFocus:a,disabled:s,onActivation:u,onDeactivation:d,returnFocus:i&&!n,children:o})};dL.displayName="FocusLock";var Ph="right-scroll-bar-position",Ch="width-before-scroll-bar",Dse="with-scroll-bars-hidden",Use="--removed-body-scroll-bar-size",fL=GV(),gv=function(){},xg=S.exports.forwardRef(function(t,e){var n=S.exports.useRef(null),r=S.exports.useState({onScrollCapture:gv,onWheelCapture:gv,onTouchMoveCapture:gv}),i=r[0],o=r[1],s=t.forwardProps,a=t.children,l=t.className,c=t.removeScrollBar,u=t.enabled,d=t.shards,f=t.sideCar,h=t.noIsolation,p=t.inert,m=t.allowPinchZoom,b=t.as,g=b===void 0?"div":b,v=KN(t,["forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","as"]),y=f,x=BV([n,e]),k=Zr(Zr({},v),i);return tt(ei,{children:[u&&z(y,{sideCar:fL,removeScrollBar:c,shards:d,noIsolation:h,inert:p,setCallbacks:o,allowPinchZoom:!!m,lockRef:n}),s?S.exports.cloneElement(S.exports.Children.only(a),Zr(Zr({},k),{ref:x})):z(g,{...Zr({},k,{className:l,ref:x}),children:a})]})});xg.defaultProps={enabled:!0,removeScrollBar:!0,inert:!1};xg.classNames={fullWidth:Ch,zeroRight:Ph};var Kse=function(){if(typeof __webpack_nonce__<"u")return __webpack_nonce__};function qse(){if(!document)return null;var t=document.createElement("style");t.type="text/css";var e=Kse();return e&&t.setAttribute("nonce",e),t}function Qse(t,e){t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e))}function Jse(t){var e=document.head||document.getElementsByTagName("head")[0];e.appendChild(t)}var _se=function(){var t=0,e=null;return{add:function(n){t==0&&(e=qse())&&(Qse(e,n),Jse(e)),t++},remove:function(){t--,!t&&e&&(e.parentNode&&e.parentNode.removeChild(e),e=null)}}},$se=function(){var t=_se();return function(e,n){S.exports.useEffect(function(){return t.add(e),function(){t.remove()}},[e&&n])}},hL=function(){var t=$se(),e=function(n){var r=n.styles,i=n.dynamic;return t(r,i),null};return e},eae={left:0,top:0,right:0,gap:0},vv=function(t){return parseInt(t||"",10)||0},tae=function(t){var e=window.getComputedStyle(document.body),n=e[t==="padding"?"paddingLeft":"marginLeft"],r=e[t==="padding"?"paddingTop":"marginTop"],i=e[t==="padding"?"paddingRight":"marginRight"];return[vv(n),vv(r),vv(i)]},nae=function(t){if(t===void 0&&(t="margin"),typeof window>"u")return eae;var e=tae(t),n=document.documentElement.clientWidth,r=window.innerWidth;return{left:e[0],top:e[1],right:e[2],gap:Math.max(0,r-n+e[2]-e[0])}},rae=hL(),iae=function(t,e,n,r){var i=t.left,o=t.top,s=t.right,a=t.gap;return n===void 0&&(n="margin"),`
  .`.concat(Dse,` {
   overflow: hidden `).concat(r,`;
   padding-right: `).concat(a,"px ").concat(r,`;
  }
  body {
    overflow: hidden `).concat(r,`;
    overscroll-behavior: contain;
    `).concat([e&&"position: relative ".concat(r,";"),n==="margin"&&`
    padding-left: `.concat(i,`px;
    padding-top: `).concat(o,`px;
    padding-right: `).concat(s,`px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(a,"px ").concat(r,`;
    `),n==="padding"&&"padding-right: ".concat(a,"px ").concat(r,";")].filter(Boolean).join(""),`
  }
  
  .`).concat(Ph,` {
    right: `).concat(a,"px ").concat(r,`;
  }
  
  .`).concat(Ch,` {
    margin-right: `).concat(a,"px ").concat(r,`;
  }
  
  .`).concat(Ph," .").concat(Ph,` {
    right: 0 `).concat(r,`;
  }
  
  .`).concat(Ch," .").concat(Ch,` {
    margin-right: 0 `).concat(r,`;
  }
  
  body {
    `).concat(Use,": ").concat(a,`px;
  }
`)},oae=function(t){var e=t.noRelative,n=t.noImportant,r=t.gapMode,i=r===void 0?"margin":r,o=S.exports.useMemo(function(){return nae(i)},[i]);return z(rae,{styles:iae(o,!e,i,n?"":"!important")})},u1=!1;if(typeof window<"u")try{var Wf=Object.defineProperty({},"passive",{get:function(){return u1=!0,!0}});window.addEventListener("test",Wf,Wf),window.removeEventListener("test",Wf,Wf)}catch{u1=!1}var ua=u1?{passive:!1}:!1,sae=function(t){return t.tagName==="TEXTAREA"},pL=function(t,e){var n=window.getComputedStyle(t);return n[e]!=="hidden"&&!(n.overflowY===n.overflowX&&!sae(t)&&n[e]==="visible")},aae=function(t){return pL(t,"overflowY")},lae=function(t){return pL(t,"overflowX")},dP=function(t,e){var n=e;do{typeof ShadowRoot<"u"&&n instanceof ShadowRoot&&(n=n.host);var r=mL(t,n);if(r){var i=gL(t,n),o=i[1],s=i[2];if(o>s)return!0}n=n.parentNode}while(n&&n!==document.body);return!1},cae=function(t){var e=t.scrollTop,n=t.scrollHeight,r=t.clientHeight;return[e,n,r]},uae=function(t){var e=t.scrollLeft,n=t.scrollWidth,r=t.clientWidth;return[e,n,r]},mL=function(t,e){return t==="v"?aae(e):lae(e)},gL=function(t,e){return t==="v"?cae(e):uae(e)},dae=function(t,e){return t==="h"&&e==="rtl"?-1:1},fae=function(t,e,n,r,i){var o=dae(t,window.getComputedStyle(e).direction),s=o*r,a=n.target,l=e.contains(a),c=!1,u=s>0,d=0,f=0;do{var h=gL(t,a),p=h[0],m=h[1],b=h[2],g=m-b-o*p;(p||g)&&mL(t,a)&&(d+=g,f+=p),a=a.parentNode}while(!l&&a!==document.body||l&&(e.contains(a)||e===a));return(u&&(i&&d===0||!i&&s>d)||!u&&(i&&f===0||!i&&-s>f))&&(c=!0),c},Yf=function(t){return"changedTouches"in t?[t.changedTouches[0].clientX,t.changedTouches[0].clientY]:[0,0]},fP=function(t){return[t.deltaX,t.deltaY]},hP=function(t){return t&&"current"in t?t.current:t},hae=function(t,e){return t[0]===e[0]&&t[1]===e[1]},pae=function(t){return`
  .block-interactivity-`.concat(t,` {pointer-events: none;}
  .allow-interactivity-`).concat(t,` {pointer-events: all;}
`)},mae=0,da=[];function gae(t){var e=S.exports.useRef([]),n=S.exports.useRef([0,0]),r=S.exports.useRef(),i=S.exports.useState(mae++)[0],o=S.exports.useState(function(){return hL()})[0],s=S.exports.useRef(t);S.exports.useEffect(function(){s.current=t},[t]),S.exports.useEffect(function(){if(t.inert){document.body.classList.add("block-interactivity-".concat(i));var m=Ine([t.lockRef.current],(t.shards||[]).map(hP),!0).filter(Boolean);return m.forEach(function(b){return b.classList.add("allow-interactivity-".concat(i))}),function(){document.body.classList.remove("block-interactivity-".concat(i)),m.forEach(function(b){return b.classList.remove("allow-interactivity-".concat(i))})}}},[t.inert,t.lockRef.current,t.shards]);var a=S.exports.useCallback(function(m,b){if("touches"in m&&m.touches.length===2)return!s.current.allowPinchZoom;var g=Yf(m),v=n.current,y="deltaX"in m?m.deltaX:v[0]-g[0],x="deltaY"in m?m.deltaY:v[1]-g[1],k,O=m.target,T=Math.abs(y)>Math.abs(x)?"h":"v";if("touches"in m&&T==="h"&&O.type==="range")return!1;var M=dP(T,O);if(!M)return!0;if(M?k=T:(k=T==="v"?"h":"v",M=dP(T,O)),!M)return!1;if(!r.current&&"changedTouches"in m&&(y||x)&&(r.current=k),!k)return!0;var E=r.current||k;return fae(E,b,m,E==="h"?y:x,!0)},[]),l=S.exports.useCallback(function(m){var b=m;if(!(!da.length||da[da.length-1]!==o)){var g="deltaY"in b?fP(b):Yf(b),v=e.current.filter(function(k){return k.name===b.type&&k.target===b.target&&hae(k.delta,g)})[0];if(v&&v.should){b.cancelable&&b.preventDefault();return}if(!v){var y=(s.current.shards||[]).map(hP).filter(Boolean).filter(function(k){return k.contains(b.target)}),x=y.length>0?a(b,y[0]):!s.current.noIsolation;x&&b.cancelable&&b.preventDefault()}}},[]),c=S.exports.useCallback(function(m,b,g,v){var y={name:m,delta:b,target:g,should:v};e.current.push(y),setTimeout(function(){e.current=e.current.filter(function(x){return x!==y})},1)},[]),u=S.exports.useCallback(function(m){n.current=Yf(m),r.current=void 0},[]),d=S.exports.useCallback(function(m){c(m.type,fP(m),m.target,a(m,t.lockRef.current))},[]),f=S.exports.useCallback(function(m){c(m.type,Yf(m),m.target,a(m,t.lockRef.current))},[]);S.exports.useEffect(function(){return da.push(o),t.setCallbacks({onScrollCapture:d,onWheelCapture:d,onTouchMoveCapture:f}),document.addEventListener("wheel",l,ua),document.addEventListener("touchmove",l,ua),document.addEventListener("touchstart",u,ua),function(){da=da.filter(function(m){return m!==o}),document.removeEventListener("wheel",l,ua),document.removeEventListener("touchmove",l,ua),document.removeEventListener("touchstart",u,ua)}},[]);var h=t.removeScrollBar,p=t.inert;return tt(ei,{children:[p?z(o,{styles:pae(i)}):null,h?z(oae,{gapMode:"margin"}):null]})}const vae=Koe(fL,gae);var vL=S.exports.forwardRef(function(t,e){return z(xg,{...Zr({},t,{ref:e,sideCar:vae})})});vL.classNames=xg.classNames;const bae=vL;var Qs=(...t)=>t.filter(Boolean).join(" ");function Mc(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}var yae=class{constructor(){wk(this,"modals");this.modals=[]}add(t){this.modals.push(t)}remove(t){this.modals=this.modals.filter(e=>e!==t)}isTopModal(t){return this.modals[this.modals.length-1]===t}},d1=new yae;function xae(t,e){S.exports.useEffect(()=>(e&&d1.add(t),()=>{d1.remove(t)}),[e,t])}function Sae(t){const{isOpen:e,onClose:n,id:r,closeOnOverlayClick:i=!0,closeOnEsc:o=!0,useInert:s=!0,onOverlayClick:a,onEsc:l}=t,c=S.exports.useRef(null),u=S.exports.useRef(null),[d,f,h]=wae(r,"chakra-modal","chakra-modal--header","chakra-modal--body");kae(c,e&&s),xae(c,e);const p=S.exports.useRef(null),m=S.exports.useCallback(M=>{p.current=M.target},[]),b=S.exports.useCallback(M=>{M.key==="Escape"&&(M.stopPropagation(),o&&(n==null||n()),l==null||l())},[o,n,l]),[g,v]=S.exports.useState(!1),[y,x]=S.exports.useState(!1),k=S.exports.useCallback((M={},E=null)=>({role:"dialog",...M,ref:Mo(E,c),id:d,tabIndex:-1,"aria-modal":!0,"aria-labelledby":g?f:void 0,"aria-describedby":y?h:void 0,onClick:Mc(M.onClick,I=>I.stopPropagation())}),[h,y,d,f,g]),O=S.exports.useCallback(M=>{M.stopPropagation(),p.current===M.target&&(!d1.isTopModal(c)||(i&&(n==null||n()),a==null||a()))},[n,i,a]),T=S.exports.useCallback((M={},E=null)=>({...M,ref:Mo(E,u),onClick:Mc(M.onClick,O),onKeyDown:Mc(M.onKeyDown,b),onMouseDown:Mc(M.onMouseDown,m)}),[b,m,O]);return{isOpen:e,onClose:n,headerId:f,bodyId:h,setBodyMounted:x,setHeaderMounted:v,dialogRef:c,overlayRef:u,getDialogProps:k,getDialogContainerProps:T}}function kae(t,e){const n=t.current;S.exports.useEffect(()=>{if(!(!t.current||!e))return Yoe(t.current)},[e,t,n])}function wae(t,...e){const n=S.exports.useId(),r=t||n;return S.exports.useMemo(()=>e.map(i=>`${i}-${r}`),[r,e])}var[Oae,Js]=Xn({name:"ModalStylesContext",errorMessage:`useModalStyles returned is 'undefined'. Seems you forgot to wrap the components in "<Modal />" `}),[Tae,Io]=Xn({strict:!0,name:"ModalContext",errorMessage:"useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`"}),ik=t=>{const{portalProps:e,children:n,autoFocus:r,trapFocus:i,initialFocusRef:o,finalFocusRef:s,returnFocusOnClose:a,blockScrollOnMount:l,allowPinchZoom:c,preserveScrollBarGap:u,motionPreset:d,lockFocusAcrossFrames:f,onCloseComplete:h}=t,p=js("Modal",t),b={...Sae(t),autoFocus:r,trapFocus:i,initialFocusRef:o,finalFocusRef:s,returnFocusOnClose:a,blockScrollOnMount:l,allowPinchZoom:c,preserveScrollBarGap:u,motionPreset:d,lockFocusAcrossFrames:f};return z(Tae,{value:b,children:z(Oae,{value:p,children:z(Bo,{onExitComplete:h,children:b.isOpen&&z(qs,{...e,children:n})})})})};ik.defaultProps={lockFocusAcrossFrames:!0,returnFocusOnClose:!0,scrollBehavior:"outside",trapFocus:!0,autoFocus:!0,blockScrollOnMount:!0,allowPinchZoom:!1,motionPreset:"scale"};ik.displayName="Modal";var bL=Q((t,e)=>{const{className:n,...r}=t,{bodyId:i,setBodyMounted:o}=Io();S.exports.useEffect(()=>(o(!0),()=>o(!1)),[o]);const s=Qs("chakra-modal__body",n),a=Js();return Z.createElement(U.div,{ref:e,className:s,id:i,...r,__css:a.body})});bL.displayName="ModalBody";var yL=Q((t,e)=>{const{onClick:n,className:r,...i}=t,{onClose:o}=Io(),s=Qs("chakra-modal__close-btn",r),a=Js();return z(ES,{ref:e,__css:a.closeButton,className:s,onClick:Mc(n,l=>{l.stopPropagation(),o()}),...i})});yL.displayName="ModalCloseButton";function xL(t){const{autoFocus:e,trapFocus:n,dialogRef:r,initialFocusRef:i,blockScrollOnMount:o,allowPinchZoom:s,finalFocusRef:a,returnFocusOnClose:l,preserveScrollBarGap:c,lockFocusAcrossFrames:u}=Io(),[d,f]=SS();return S.exports.useEffect(()=>{!d&&f&&setTimeout(f)},[d,f]),z(dL,{autoFocus:e,isDisabled:!n,initialFocusRef:i,finalFocusRef:a,restoreFocus:l,contentRef:r,lockFocusAcrossFrames:u,children:z(bae,{removeScrollBar:!c,allowPinchZoom:s,enabled:o,forwardProps:!0,children:t.children})})}var Pae={slideInBottom:{..._y,custom:{offsetY:16,reverse:!0}},slideInRight:{..._y,custom:{offsetX:16,reverse:!0}},scale:{...QN,custom:{initialScale:.95,reverse:!0}},none:{}},Cae=U(Vi.section),Mae=t=>Pae[t||"none"],SL=S.exports.forwardRef((t,e)=>{const{preset:n,motionProps:r=Mae(n),...i}=t;return z(Cae,{ref:e,...r,...i})});SL.displayName="ModalTransition";var ok=Q((t,e)=>{const{className:n,children:r,containerProps:i,motionProps:o,...s}=t,{getDialogProps:a,getDialogContainerProps:l}=Io(),c=a(s,e),u=l(i),d=Qs("chakra-modal__content",n),f=Js(),h={display:"flex",flexDirection:"column",position:"relative",width:"100%",outline:0,...f.dialog},p={display:"flex",width:"100vw",height:"$100vh",position:"fixed",left:0,top:0,...f.dialogContainer},{motionPreset:m}=Io();return Z.createElement(xL,null,Z.createElement(U.div,{...u,className:"chakra-modal__content-container",tabIndex:-1,__css:p},z(SL,{preset:m,motionProps:o,className:d,...c,__css:h,children:r})))});ok.displayName="ModalContent";var kL=Q((t,e)=>{const{className:n,...r}=t,i=Qs("chakra-modal__footer",n),s={display:"flex",alignItems:"center",justifyContent:"flex-end",...Js().footer};return Z.createElement(U.footer,{ref:e,...r,__css:s,className:i})});kL.displayName="ModalFooter";var wL=Q((t,e)=>{const{className:n,...r}=t,{headerId:i,setHeaderMounted:o}=Io();S.exports.useEffect(()=>(o(!0),()=>o(!1)),[o]);const s=Qs("chakra-modal__header",n),l={flex:0,...Js().header};return Z.createElement(U.header,{ref:e,className:s,id:i,...r,__css:l})});wL.displayName="ModalHeader";var Rae=U(Vi.div),OL=Q((t,e)=>{const{className:n,transition:r,motionProps:i,...o}=t,s=Qs("chakra-modal__overlay",n),l={pos:"fixed",left:"0",top:"0",w:"100vw",h:"100vh",...Js().overlay},{motionPreset:c}=Io();return z(Rae,{...i||(c==="none"?{}:qN),__css:l,ref:e,className:s,...o})});OL.displayName="ModalOverlay";Q((t,e)=>z(ok,{ref:e,role:"alertdialog",...t}));var[nce,Iae]=Xn(),zae=U(JN),Eae=Q((t,e)=>{const{className:n,children:r,motionProps:i,containerProps:o,...s}=t,{getDialogProps:a,getDialogContainerProps:l,isOpen:c}=Io(),u=a(s,e),d=l(o),f=Qs("chakra-modal__content",n),h=Js(),p={display:"flex",flexDirection:"column",position:"relative",width:"100%",outline:0,...h.dialog},m={display:"flex",width:"100vw",height:"$100vh",position:"fixed",left:0,top:0,...h.dialogContainer},{placement:b}=Iae();return Z.createElement(xL,null,Z.createElement(U.div,{...d,className:"chakra-modal__content-container",__css:m},z(zae,{motionProps:i,direction:b,in:c,className:f,...u,__css:p,children:r})))});Eae.displayName="DrawerContent";function Nae(t,e){const n=Zp(t);S.exports.useEffect(()=>{if(e==null)return;let r=null;return r=window.setTimeout(()=>{n()},e),()=>{r&&window.clearTimeout(r)}},[e,n])}function Vae(t,...e){return Lae(t)?t(...e):t}var Lae=t=>typeof t=="function",Xae=(t,e)=>t.find(n=>n.id===e);function pP(t,e){const n=TL(t,e),r=n?t[n].findIndex(i=>i.id===e):-1;return{position:n,index:r}}function TL(t,e){for(const[n,r]of Object.entries(t))if(Xae(r,e))return n}function Bae(t){const e=t.includes("right"),n=t.includes("left");let r="center";return e&&(r="flex-end"),n&&(r="flex-start"),{display:"flex",flexDirection:"column",alignItems:r}}function Aae(t){const n=t==="top"||t==="bottom"?"0 auto":void 0,r=t.includes("top")?"env(safe-area-inset-top, 0px)":void 0,i=t.includes("bottom")?"env(safe-area-inset-bottom, 0px)":void 0,o=t.includes("left")?void 0:"env(safe-area-inset-right, 0px)",s=t.includes("right")?void 0:"env(safe-area-inset-left, 0px)";return{position:"fixed",zIndex:5500,pointerEvents:"none",display:"flex",flexDirection:"column",margin:n,top:r,bottom:i,right:o,left:s}}var Zae={top:[],"top-left":[],"top-right":[],"bottom-left":[],bottom:[],"bottom-right":[]},ou=Gae(Zae);function Gae(t){let e=t;const n=new Set,r=i=>{e=i(e),n.forEach(o=>o())};return{getState:()=>e,subscribe:i=>(n.add(i),()=>{r(()=>t),n.delete(i)}),removeToast:(i,o)=>{r(s=>({...s,[o]:s[o].filter(a=>a.id!=i)}))},notify:(i,o)=>{const s=Wae(i,o),{position:a,id:l}=s;return r(c=>{var f,h;const d=a.includes("top")?[s,...(f=c[a])!=null?f:[]]:[...(h=c[a])!=null?h:[],s];return{...c,[a]:d}}),l},update:(i,o)=>{!i||r(s=>{const a={...s},{position:l,index:c}=pP(a,i);return l&&c!==-1&&(a[l][c]={...a[l][c],...o,message:Fae(o)}),a})},closeAll:({positions:i}={})=>{r(o=>{const s=["bottom","bottom-right","bottom-left","top","top-left","top-right"];return(i!=null?i:s).reduce((l,c)=>(l[c]=o[c].map(u=>({...u,requestClose:!0})),l),{...o})})},close:i=>{r(o=>{const s=TL(o,i);return s?{...o,[s]:o[s].map(a=>a.id==i?{...a,requestClose:!0}:a)}:o})},isActive:i=>Boolean(pP(ou.getState(),i).position)}}var mP=0;function Wae(t,e={}){var i,o;mP+=1;const n=(i=e.id)!=null?i:mP,r=(o=e.position)!=null?o:"bottom";return{id:n,message:t,position:r,duration:e.duration,onCloseComplete:e.onCloseComplete,onRequestRemove:()=>ou.removeToast(String(n),r),status:e.status,requestClose:!1,containerStyle:e.containerStyle}}var Yae=t=>{const{status:e,variant:n="solid",id:r,title:i,isClosable:o,onClose:s,description:a,icon:l}=t,c=r?{root:`toast-${r}`,title:`toast-${r}-title`,description:`toast-${r}-description`}:void 0;return Z.createElement($N,{addRole:!1,status:e,variant:n,id:c==null?void 0:c.root,alignItems:"start",borderRadius:"md",boxShadow:"lg",paddingEnd:8,textAlign:"start",width:"auto"},z(tV,{children:l}),Z.createElement(U.div,{flex:"1",maxWidth:"100%"},i&&z(nV,{id:c==null?void 0:c.title,children:i}),a&&z(eV,{id:c==null?void 0:c.description,display:"block",children:a})),o&&z(ES,{size:"sm",onClick:s,position:"absolute",insetEnd:1,top:1}))};function Fae(t={}){const{render:e,toastComponent:n=Yae}=t;return i=>typeof e=="function"?e({...i,...t}):z(n,{...i,...t})}var Hae={initial:t=>{const{position:e}=t,n=["top","bottom"].includes(e)?"y":"x";let r=["top-right","bottom-right"].includes(e)?1:-1;return e==="bottom"&&(r=1),{opacity:0,[n]:r*24}},animate:{opacity:1,y:0,x:0,scale:1,transition:{duration:.4,ease:[.4,0,.2,1]}},exit:{opacity:0,scale:.85,transition:{duration:.2,ease:[.4,0,1,1]}}},PL=S.exports.memo(t=>{const{id:e,message:n,onCloseComplete:r,onRequestRemove:i,requestClose:o=!1,position:s="bottom",duration:a=5e3,containerStyle:l,motionVariants:c=Hae,toastSpacing:u="0.5rem"}=t,[d,f]=S.exports.useState(a),h=fee();HT(()=>{h||r==null||r()},[h]),HT(()=>{f(a)},[a]);const p=()=>f(null),m=()=>f(a),b=()=>{h&&i()};S.exports.useEffect(()=>{h&&o&&i()},[h,o,i]),Nae(b,d);const g=S.exports.useMemo(()=>({pointerEvents:"auto",maxWidth:560,minWidth:300,margin:u,...l}),[l,u]),v=S.exports.useMemo(()=>Bae(s),[s]);return Z.createElement(Vi.li,{layout:!0,className:"chakra-toast",variants:c,initial:"initial",animate:"animate",exit:"exit",onHoverStart:p,onHoverEnd:m,custom:{position:s},style:v},Z.createElement(U.div,{role:"status","aria-atomic":"true",className:"chakra-toast__inner",__css:g},Vae(n,{id:e,onClose:b})))});PL.displayName="ToastComponent";var jae=t=>{const e=S.exports.useSyncExternalStore(ou.subscribe,ou.getState,ou.getState),{children:n,motionVariants:r,component:i=PL,portalProps:o}=t,a=Object.keys(e).map(l=>{const c=e[l];return z("ul",{role:"region","aria-live":"polite",id:`chakra-toast-manager-${l}`,style:Aae(l),children:z(Bo,{initial:!1,children:c.map(u=>z(i,{motionVariants:r,...u},u.id))})},l)});return tt(ei,{children:[n,z(qs,{...o,children:a})]})};function Dae(t,e=[]){const n=Object.assign({},t);for(const r of e)r in n&&delete n[r];return n}function Uae(t,e){const n={};for(const r of e)r in t&&(n[r]=t[r]);return n}var Kae={exit:{scale:.85,opacity:0,transition:{opacity:{duration:.15,easings:"easeInOut"},scale:{duration:.2,easings:"easeInOut"}}},enter:{scale:1,opacity:1,transition:{opacity:{easings:"easeOut",duration:.2},scale:{duration:.2,ease:[.175,.885,.4,1.1]}}}};function pc(...t){return function(n){t.some(r=>(r==null||r(n),n==null?void 0:n.defaultPrevented))}}var tm=t=>{var e;return((e=t.current)==null?void 0:e.ownerDocument)||document},f1=t=>{var e,n;return((n=(e=t.current)==null?void 0:e.ownerDocument)==null?void 0:n.defaultView)||window};function qae(t={}){const{openDelay:e=0,closeDelay:n=0,closeOnClick:r=!0,closeOnMouseDown:i,closeOnScroll:o,closeOnPointerDown:s=i,closeOnEsc:a=!0,onOpen:l,onClose:c,placement:u,id:d,isOpen:f,defaultIsOpen:h,arrowSize:p=10,arrowShadowColor:m,arrowPadding:b,modifiers:g,isDisabled:v,gutter:y,offset:x,direction:k,...O}=t,{isOpen:T,onOpen:M,onClose:E}=zoe({isOpen:f,defaultIsOpen:h,onOpen:l,onClose:c}),{referenceRef:I,getPopperProps:B,getArrowInnerProps:D,getArrowProps:J}=Roe({enabled:T,placement:u,arrowPadding:b,modifiers:g,gutter:y,offset:x,direction:k}),ae=S.exports.useId(),Y=`tooltip-${d!=null?d:ae}`,ee=S.exports.useRef(null),L=S.exports.useRef(),W=S.exports.useCallback(()=>{L.current&&(clearTimeout(L.current),L.current=void 0)},[]),q=S.exports.useRef(),le=S.exports.useCallback(()=>{q.current&&(clearTimeout(q.current),q.current=void 0)},[]),ue=S.exports.useCallback(()=>{le(),E()},[E,le]),re=Qae(ee,ue),Ce=S.exports.useCallback(()=>{if(!v&&!L.current){re();const Ue=f1(ee);L.current=Ue.setTimeout(M,e)}},[re,v,M,e]),Re=S.exports.useCallback(()=>{W();const Ue=f1(ee);q.current=Ue.setTimeout(ue,n)},[n,ue,W]),We=S.exports.useCallback(()=>{T&&r&&Re()},[r,Re,T]),De=S.exports.useCallback(()=>{T&&s&&Re()},[s,Re,T]),rt=S.exports.useCallback(Ue=>{T&&Ue.key==="Escape"&&Re()},[T,Re]);uv(()=>tm(ee),"keydown",a?rt:void 0),uv(()=>tm(ee),"scroll",()=>{T&&o&&ue()}),S.exports.useEffect(()=>{!v||(W(),T&&E())},[v,T,E,W]),S.exports.useEffect(()=>()=>{W(),le()},[W,le]),uv(()=>ee.current,"pointerleave",Re);const Bn=S.exports.useCallback((Ue={},Tr=null)=>({...Ue,ref:Mo(ee,Tr,I),onPointerEnter:pc(Ue.onPointerEnter,Fl=>{Fl.pointerType!=="touch"&&Ce()}),onClick:pc(Ue.onClick,We),onPointerDown:pc(Ue.onPointerDown,De),onFocus:pc(Ue.onFocus,Ce),onBlur:pc(Ue.onBlur,Re),"aria-describedby":T?Y:void 0}),[Ce,Re,De,T,Y,We,I]),Or=S.exports.useCallback((Ue={},Tr=null)=>B({...Ue,style:{...Ue.style,[zt.arrowSize.var]:p?`${p}px`:void 0,[zt.arrowShadowColor.var]:m}},Tr),[B,p,m]),Li=S.exports.useCallback((Ue={},Tr=null)=>{const $s={...Ue.style,position:"relative",transformOrigin:zt.transformOrigin.varRef};return{ref:Tr,...O,...Ue,id:Y,role:"tooltip",style:$s}},[O,Y]);return{isOpen:T,show:Ce,hide:Re,getTriggerProps:Bn,getTooltipProps:Li,getTooltipPositionerProps:Or,getArrowProps:J,getArrowInnerProps:D}}var bv="chakra-ui:close-tooltip";function Qae(t,e){return S.exports.useEffect(()=>{const n=tm(t);return n.addEventListener(bv,e),()=>n.removeEventListener(bv,e)},[e,t]),()=>{const n=tm(t),r=f1(t);n.dispatchEvent(new r.CustomEvent(bv))}}var Jae=U(Vi.div),$o=Q((t,e)=>{var E,I;const n=gn("Tooltip",t),r=ut(t),i=nS(),{children:o,label:s,shouldWrapChildren:a,"aria-label":l,hasArrow:c,bg:u,portalProps:d,background:f,backgroundColor:h,bgColor:p,motionProps:m,...b}=r,g=(I=(E=f!=null?f:h)!=null?E:u)!=null?I:p;if(g){n.bg=g;const B=GH(i,"colors",g);n[zt.arrowBg.var]=B}const v=qae({...b,direction:i.direction}),y=typeof o=="string"||a;let x;if(y)x=Z.createElement(U.span,{display:"inline-block",tabIndex:0,...v.getTriggerProps()},o);else{const B=S.exports.Children.only(o);x=S.exports.cloneElement(B,v.getTriggerProps(B.props,B.ref))}const k=!!l,O=v.getTooltipProps({},e),T=k?Dae(O,["role","id"]):O,M=Uae(O,["role","id"]);return s?tt(ei,{children:[x,z(Bo,{children:v.isOpen&&Z.createElement(qs,{...d},Z.createElement(U.div,{...v.getTooltipPositionerProps(),__css:{zIndex:n.zIndex,pointerEvents:"none"}},tt(Jae,{variants:Kae,initial:"exit",animate:"enter",exit:"exit",...m,...T,__css:n,children:[s,k&&Z.createElement(U.span,{srOnly:!0,...M},l),c&&Z.createElement(U.div,{"data-popper-arrow":!0,className:"chakra-tooltip__arrow-wrapper"},Z.createElement(U.div,{"data-popper-arrow-inner":!0,className:"chakra-tooltip__arrow",__css:{bg:n.bg}}))]})))})]}):z(ei,{children:o})});$o.displayName="Tooltip";var _ae=t=>{const{children:e,colorModeManager:n,portalZIndex:r,resetCSS:i=!0,theme:o={},environment:s,cssVarsRoot:a}=t,l=z(kV,{environment:s,children:e});return z(IJ,{theme:o,cssVarsRoot:a,children:tt(TE,{colorModeManager:n,options:o.config,children:[i?z(gre,{}):z(mre,{}),z(EJ,{}),r?z(NV,{zIndex:r,children:l}):l]})})};function $ae({children:t,theme:e=b9,toastOptions:n,...r}){return tt(_ae,{theme:e,...r,children:[t,z(jae,{...n})]})}const ele=({output:t})=>(S.exports.useEffect(()=>{const e=document.querySelector("#consoleWrapper");e.scrollTo(e.scrollLeft,e.scrollHeight)},[t]),tt(ZS,{w:"full",h:"300px",minH:"300px",children:[z(Ol,{className:"headerTab",w:"full",children:"Console"}),z(Ol,{id:"consoleWrapper",overflow:"auto",w:"full",p:"5",children:tt("pre",{id:"consoleOutput",children:["$",t]})})]})),gP=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],ki=(()=>{if(typeof document>"u")return!1;const t=gP[0],e={};for(const n of gP)if((n==null?void 0:n[1])in document){for(const[i,o]of n.entries())e[t[i]]=o;return e}return!1})(),vP={change:ki.fullscreenchange,error:ki.fullscreenerror};let xn={request(t=document.documentElement,e){return new Promise((n,r)=>{const i=()=>{xn.off("change",i),n()};xn.on("change",i);const o=t[ki.requestFullscreen](e);o instanceof Promise&&o.then(i).catch(r)})},exit(){return new Promise((t,e)=>{if(!xn.isFullscreen){t();return}const n=()=>{xn.off("change",n),t()};xn.on("change",n);const r=document[ki.exitFullscreen]();r instanceof Promise&&r.then(n).catch(e)})},toggle(t,e){return xn.isFullscreen?xn.exit():xn.request(t,e)},onchange(t){xn.on("change",t)},onerror(t){xn.on("error",t)},on(t,e){const n=vP[t];n&&document.addEventListener(n,e,!1)},off(t,e){const n=vP[t];n&&document.removeEventListener(n,e,!1)},raw:ki};Object.defineProperties(xn,{isFullscreen:{get:()=>Boolean(document[ki.fullscreenElement])},element:{enumerable:!0,get:()=>{var t;return(t=document[ki.fullscreenElement])!=null?t:void 0}},isEnabled:{enumerable:!0,get:()=>Boolean(document[ki.fullscreenEnabled])}});ki||(xn={isEnabled:!1});const Ff=xn;var CL={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},bP=Z.createContext&&Z.createContext(CL),So=globalThis&&globalThis.__assign||function(){return So=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t},So.apply(this,arguments)},tle=globalThis&&globalThis.__rest||function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]]);return n};function ML(t){return t&&t.map(function(e,n){return Z.createElement(e.tag,So({key:n},e.attr),ML(e.child))})}function _s(t){return function(e){return z(nle,{...So({attr:So({},t.attr)},e),children:ML(t.child)})}}function nle(t){var e=function(n){var r=t.attr,i=t.size,o=t.title,s=tle(t,["attr","size","title"]),a=i||n.size||"1em",l;return n.className&&(l=n.className),t.className&&(l=(l?l+" ":"")+t.className),tt("svg",{...So({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},n.attr,r,s,{className:l,style:So(So({color:t.color||n.color},n.style),t.style),height:a,width:a,xmlns:"http://www.w3.org/2000/svg"}),children:[o&&z("title",{children:o}),t.children]})};return bP!==void 0?z(bP.Consumer,{children:function(n){return e(n)}}):e(CL)}function rle(t){return _s({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z"}}]})(t)}function ile(t){return _s({tag:"svg",attr:{viewBox:"0 0 448 512"},child:[{tag:"path",attr:{d:"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z"}}]})(t)}function ole(t){return _s({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160zm112 0c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160z"}}]})(t)}function sle(t){return _s({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z"}}]})(t)}function ale(t){return _s({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"}}]})(t)}function lle(t){return _s({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z"}}]})(t)}function cle(t){return _s({tag:"svg",attr:{viewBox:"0 0 640 512"},child:[{tag:"path",attr:{d:"M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z"}}]})(t)}const yv=new Date,ule=`${yv.getFullYear()}-${yv.getMonth()}-${yv.getDay()}`,dle=({csound:t,code:e,showConsole:n,setShowConsole:r})=>{const[i,o]=S.exports.useState(!0),{isOpen:s,onOpen:a,onClose:l}=xre(),[c,u]=S.exports.useState(`${ule}_project.orc`);return S.exports.useEffect(()=>{t.addListener("play",()=>{o(!0)}),t.addListener("pause",()=>{o(!1)}),t.addListener("stop",()=>{o(!1)})},[t]),tt(gV,{w:"100%",p:"0.5em 1em",backgroundColor:"#272822",borderBottom:"1px solid #333333",children:[z("h1",{children:"csound-live-code"}),z($o,{hasArrow:!0,label:i?"Pause Engine":"Play Engine",children:z(_o,{"aria-label":"Pause Engine",icon:i?z(ole,{}):z(sle,{}),fontSize:"22px",size:"sm",onClick:async()=>{i?await t.pause():await t.resume()}})}),z($o,{hasArrow:!0,label:"Restart Engine",children:z(_o,{"aria-label":"Restart Engine",icon:z(lle,{}),fontSize:"22px",size:"sm",onClick:()=>{my(t)}})}),z($o,{hasArrow:!0,label:"Download ORC",children:z(_o,{"aria-label":"Download ORC",icon:z(rle,{}),fontSize:"22px",size:"sm",onClick:a})}),z($o,{hasArrow:!0,label:"Toggle Console",children:z(_o,{"aria-label":"Toggle Console",icon:z(cle,{}),fontSize:"22px",size:"sm",onClick:()=>{r(!n)}})}),Ff.isEnabled&&z($o,{hasArrow:!0,label:"Toggle Fullscreen",children:z(_o,{"aria-label":"Toggle Fullscreen",icon:z(ile,{}),fontSize:"22px",size:"sm",onClick:()=>{Ff.isFullscreen?Ff.exit():Ff.request()}})}),z(pV,{}),z($o,{hasArrow:!0,label:"Open Documentation",children:z(_o,{"aria-label":"Open Documentation in new Window",icon:z(ale,{}),fontSize:"22px",size:"sm",onClick:g4})}),tt(ik,{isOpen:s,onClose:l,children:[z(OL,{}),tt(ok,{backgroundColor:"#222222",children:[z(wL,{children:"Save File"}),z(yL,{}),z(bL,{children:tt(aV,{children:[z(XS,{children:"Name of file"}),z(VS,{w:"full",value:c,onChange:d=>u(d.target.value)})]})}),z(kL,{children:z(vg,{colorScheme:"blue",mr:3,onClick:()=>{v4(c,e),l()},children:"Save"})})]})]})]})};function fle(t,e,n){var r=n||{},i=r.noTrailing,o=i===void 0?!1:i,s=r.noLeading,a=s===void 0?!1:s,l=r.debounceMode,c=l===void 0?void 0:l,u,d=!1,f=0;function h(){u&&clearTimeout(u)}function p(b){var g=b||{},v=g.upcomingOnly,y=v===void 0?!1:v;h(),d=!y}function m(){for(var b=arguments.length,g=new Array(b),v=0;v<b;v++)g[v]=arguments[v];var y=this,x=Date.now()-f;if(d)return;function k(){f=Date.now(),e.apply(y,g)}function O(){u=void 0}!a&&c&&!u&&k(),h(),c===void 0&&x>t?a?(f=Date.now(),o||(u=setTimeout(c?O:k,t))):k():o!==!0&&(u=setTimeout(c?O:k,c===void 0?t-x:t))}return m.cancel=p,m}function hle(t,e,n){var r=n||{},i=r.atBegin,o=i===void 0?!1:i;return fle(t,e,{debounceMode:o!==!1})}class nm{constructor(e,n,r,i,o,s,a,l,c,u=0,d){this.p=e,this.stack=n,this.state=r,this.reducePos=i,this.pos=o,this.score=s,this.buffer=a,this.bufferBase=l,this.curContext=c,this.lookAhead=u,this.parent=d}toString(){return`[${this.stack.filter((e,n)=>n%3==0).concat(this.state)}]@${this.pos}${this.score?"!"+this.score:""}`}static start(e,n,r=0){let i=e.parser.context;return new nm(e,[],n,r,r,0,[],0,i?new yP(i,i.start):null,0,null)}get context(){return this.curContext?this.curContext.context:null}pushState(e,n){this.stack.push(this.state,n,this.bufferBase+this.buffer.length),this.state=e}reduce(e){let n=e>>19,r=e&65535,{parser:i}=this.p,o=i.dynamicPrecedence(r);if(o&&(this.score+=o),n==0){this.pushState(i.getGoto(this.state,r,!0),this.reducePos),r<i.minRepeatTerm&&this.storeNode(r,this.reducePos,this.reducePos,4,!0),this.reduceContext(r,this.reducePos);return}let s=this.stack.length-(n-1)*3-(e&262144?6:0),a=this.stack[s-2],l=this.stack[s-1],c=this.bufferBase+this.buffer.length-l;if(r<i.minRepeatTerm||e&131072){let u=i.stateFlag(this.state,1)?this.pos:this.reducePos;this.storeNode(r,a,u,c+4,!0)}if(e&262144)this.state=this.stack[s];else{let u=this.stack[s-3];this.state=i.getGoto(u,r,!0)}for(;this.stack.length>s;)this.stack.pop();this.reduceContext(r,a)}storeNode(e,n,r,i=4,o=!1){if(e==0&&(!this.stack.length||this.stack[this.stack.length-1]<this.buffer.length+this.bufferBase)){let s=this,a=this.buffer.length;if(a==0&&s.parent&&(a=s.bufferBase-s.parent.bufferBase,s=s.parent),a>0&&s.buffer[a-4]==0&&s.buffer[a-1]>-1){if(n==r)return;if(s.buffer[a-2]>=n){s.buffer[a-2]=r;return}}}if(!o||this.pos==r)this.buffer.push(e,n,r,i);else{let s=this.buffer.length;if(s>0&&this.buffer[s-4]!=0)for(;s>0&&this.buffer[s-2]>r;)this.buffer[s]=this.buffer[s-4],this.buffer[s+1]=this.buffer[s-3],this.buffer[s+2]=this.buffer[s-2],this.buffer[s+3]=this.buffer[s-1],s-=4,i>4&&(i-=4);this.buffer[s]=e,this.buffer[s+1]=n,this.buffer[s+2]=r,this.buffer[s+3]=i}}shift(e,n,r){let i=this.pos;if(e&131072)this.pushState(e&65535,this.pos);else if((e&262144)==0){let o=e,{parser:s}=this.p;(r>this.pos||n<=s.maxNode)&&(this.pos=r,s.stateFlag(o,1)||(this.reducePos=r)),this.pushState(o,i),this.shiftContext(n,i),n<=s.maxNode&&this.buffer.push(n,i,r,4)}else this.pos=r,this.shiftContext(n,i),n<=this.p.parser.maxNode&&this.buffer.push(n,i,r,4)}apply(e,n,r){e&65536?this.reduce(e):this.shift(e,n,r)}useNode(e,n){let r=this.p.reused.length-1;(r<0||this.p.reused[r]!=e)&&(this.p.reused.push(e),r++);let i=this.pos;this.reducePos=this.pos=i+e.length,this.pushState(n,i),this.buffer.push(r,i,this.reducePos,-1),this.curContext&&this.updateContext(this.curContext.tracker.reuse(this.curContext.context,e,this,this.p.stream.reset(this.pos-e.length)))}split(){let e=this,n=e.buffer.length;for(;n>0&&e.buffer[n-2]>e.reducePos;)n-=4;let r=e.buffer.slice(n),i=e.bufferBase+n;for(;e&&i==e.bufferBase;)e=e.parent;return new nm(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,r,i,this.curContext,this.lookAhead,e)}recoverByDelete(e,n){let r=e<=this.p.parser.maxNode;r&&this.storeNode(e,this.pos,n,4),this.storeNode(0,this.pos,n,r?8:4),this.pos=this.reducePos=n,this.score-=190}canShift(e){for(let n=new ple(this);;){let r=this.p.parser.stateSlot(n.state,4)||this.p.parser.hasAction(n.state,e);if(r==0)return!1;if((r&65536)==0)return!0;n.reduce(r)}}recoverByInsert(e){if(this.stack.length>=300)return[];let n=this.p.parser.nextStates(this.state);if(n.length>4<<1||this.stack.length>=120){let i=[];for(let o=0,s;o<n.length;o+=2)(s=n[o+1])!=this.state&&this.p.parser.hasAction(s,e)&&i.push(n[o],s);if(this.stack.length<120)for(let o=0;i.length<4<<1&&o<n.length;o+=2){let s=n[o+1];i.some((a,l)=>l&1&&a==s)||i.push(n[o],s)}n=i}let r=[];for(let i=0;i<n.length&&r.length<4;i+=2){let o=n[i+1];if(o==this.state)continue;let s=this.split();s.pushState(o,this.pos),s.storeNode(0,s.pos,s.pos,4,!0),s.shiftContext(n[i],this.pos),s.score-=200,r.push(s)}return r}forceReduce(){let e=this.p.parser.stateSlot(this.state,5);if((e&65536)==0)return!1;let{parser:n}=this.p;if(!n.validAction(this.state,e)){let r=e>>19,i=e&65535,o=this.stack.length-r*3;if(o<0||n.getGoto(this.stack[o],i,!1)<0)return!1;this.storeNode(0,this.reducePos,this.reducePos,4,!0),this.score-=100}return this.reducePos=this.pos,this.reduce(e),!0}forceAll(){for(;!this.p.parser.stateFlag(this.state,2);)if(!this.forceReduce()){this.storeNode(0,this.pos,this.pos,4,!0);break}return this}get deadEnd(){if(this.stack.length!=3)return!1;let{parser:e}=this.p;return e.data[e.stateSlot(this.state,1)]==65535&&!e.stateSlot(this.state,4)}restart(){this.state=this.stack[0],this.stack.length=0}sameState(e){if(this.state!=e.state||this.stack.length!=e.stack.length)return!1;for(let n=0;n<this.stack.length;n+=3)if(this.stack[n]!=e.stack[n])return!1;return!0}get parser(){return this.p.parser}dialectEnabled(e){return this.p.parser.dialect.flags[e]}shiftContext(e,n){this.curContext&&this.updateContext(this.curContext.tracker.shift(this.curContext.context,e,this,this.p.stream.reset(n)))}reduceContext(e,n){this.curContext&&this.updateContext(this.curContext.tracker.reduce(this.curContext.context,e,this,this.p.stream.reset(n)))}emitContext(){let e=this.buffer.length-1;(e<0||this.buffer[e]!=-3)&&this.buffer.push(this.curContext.hash,this.reducePos,this.reducePos,-3)}emitLookAhead(){let e=this.buffer.length-1;(e<0||this.buffer[e]!=-4)&&this.buffer.push(this.lookAhead,this.reducePos,this.reducePos,-4)}updateContext(e){if(e!=this.curContext.context){let n=new yP(this.curContext.tracker,e);n.hash!=this.curContext.hash&&this.emitContext(),this.curContext=n}}setLookAhead(e){e>this.lookAhead&&(this.emitLookAhead(),this.lookAhead=e)}close(){this.curContext&&this.curContext.tracker.strict&&this.emitContext(),this.lookAhead>0&&this.emitLookAhead()}}class yP{constructor(e,n){this.tracker=e,this.context=n,this.hash=e.strict?e.hash(n):0}}var xP;(function(t){t[t.Insert=200]="Insert",t[t.Delete=190]="Delete",t[t.Reduce=100]="Reduce",t[t.MaxNext=4]="MaxNext",t[t.MaxInsertStackDepth=300]="MaxInsertStackDepth",t[t.DampenInsertStackDepth=120]="DampenInsertStackDepth"})(xP||(xP={}));class ple{constructor(e){this.start=e,this.state=e.state,this.stack=e.stack,this.base=this.stack.length}reduce(e){let n=e&65535,r=e>>19;r==0?(this.stack==this.start.stack&&(this.stack=this.stack.slice()),this.stack.push(this.state,0,0),this.base+=3):this.base-=(r-1)*3;let i=this.start.p.parser.getGoto(this.stack[this.base-3],n,!0);this.state=i}}class rm{constructor(e,n,r){this.stack=e,this.pos=n,this.index=r,this.buffer=e.buffer,this.index==0&&this.maybeNext()}static create(e,n=e.bufferBase+e.buffer.length){return new rm(e,n,n-e.bufferBase)}maybeNext(){let e=this.stack.parent;e!=null&&(this.index=this.stack.bufferBase-e.bufferBase,this.stack=e,this.buffer=e.buffer)}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}next(){this.index-=4,this.pos-=4,this.index==0&&this.maybeNext()}fork(){return new rm(this.stack,this.pos,this.index)}}class Mh{constructor(){this.start=-1,this.value=-1,this.end=-1,this.extended=-1,this.lookAhead=0,this.mask=0,this.context=0}}const SP=new Mh;class mle{constructor(e,n){this.input=e,this.ranges=n,this.chunk="",this.chunkOff=0,this.chunk2="",this.chunk2Pos=0,this.next=-1,this.token=SP,this.rangeIndex=0,this.pos=this.chunkPos=n[0].from,this.range=n[0],this.end=n[n.length-1].to,this.readNext()}resolveOffset(e,n){let r=this.range,i=this.rangeIndex,o=this.pos+e;for(;o<r.from;){if(!i)return null;let s=this.ranges[--i];o-=r.from-s.to,r=s}for(;n<0?o>r.to:o>=r.to;){if(i==this.ranges.length-1)return null;let s=this.ranges[++i];o+=s.from-r.to,r=s}return o}clipPos(e){if(e>=this.range.from&&e<this.range.to)return e;for(let n of this.ranges)if(n.to>e)return Math.max(e,n.from);return this.end}peek(e){let n=this.chunkOff+e,r,i;if(n>=0&&n<this.chunk.length)r=this.pos+e,i=this.chunk.charCodeAt(n);else{let o=this.resolveOffset(e,1);if(o==null)return-1;if(r=o,r>=this.chunk2Pos&&r<this.chunk2Pos+this.chunk2.length)i=this.chunk2.charCodeAt(r-this.chunk2Pos);else{let s=this.rangeIndex,a=this.range;for(;a.to<=r;)a=this.ranges[++s];this.chunk2=this.input.chunk(this.chunk2Pos=r),r+this.chunk2.length>a.to&&(this.chunk2=this.chunk2.slice(0,a.to-r)),i=this.chunk2.charCodeAt(0)}}return r>=this.token.lookAhead&&(this.token.lookAhead=r+1),i}acceptToken(e,n=0){let r=n?this.resolveOffset(n,-1):this.pos;if(r==null||r<this.token.start)throw new RangeError("Token end out of bounds");this.token.value=e,this.token.end=r}getChunk(){if(this.pos>=this.chunk2Pos&&this.pos<this.chunk2Pos+this.chunk2.length){let{chunk:e,chunkPos:n}=this;this.chunk=this.chunk2,this.chunkPos=this.chunk2Pos,this.chunk2=e,this.chunk2Pos=n,this.chunkOff=this.pos-this.chunkPos}else{this.chunk2=this.chunk,this.chunk2Pos=this.chunkPos;let e=this.input.chunk(this.pos),n=this.pos+e.length;this.chunk=n>this.range.to?e.slice(0,this.range.to-this.pos):e,this.chunkPos=this.pos,this.chunkOff=0}}readNext(){return this.chunkOff>=this.chunk.length&&(this.getChunk(),this.chunkOff==this.chunk.length)?this.next=-1:this.next=this.chunk.charCodeAt(this.chunkOff)}advance(e=1){for(this.chunkOff+=e;this.pos+e>=this.range.to;){if(this.rangeIndex==this.ranges.length-1)return this.setDone();e-=this.range.to-this.pos,this.range=this.ranges[++this.rangeIndex],this.pos=this.range.from}return this.pos+=e,this.pos>=this.token.lookAhead&&(this.token.lookAhead=this.pos+1),this.readNext()}setDone(){return this.pos=this.chunkPos=this.end,this.range=this.ranges[this.rangeIndex=this.ranges.length-1],this.chunk="",this.next=-1}reset(e,n){if(n?(this.token=n,n.start=e,n.lookAhead=e+1,n.value=n.extended=-1):this.token=SP,this.pos!=e){if(this.pos=e,e==this.end)return this.setDone(),this;for(;e<this.range.from;)this.range=this.ranges[--this.rangeIndex];for(;e>=this.range.to;)this.range=this.ranges[++this.rangeIndex];e>=this.chunkPos&&e<this.chunkPos+this.chunk.length?this.chunkOff=e-this.chunkPos:(this.chunk="",this.chunkOff=0),this.readNext()}return this}read(e,n){if(e>=this.chunkPos&&n<=this.chunkPos+this.chunk.length)return this.chunk.slice(e-this.chunkPos,n-this.chunkPos);if(e>=this.chunk2Pos&&n<=this.chunk2Pos+this.chunk2.length)return this.chunk2.slice(e-this.chunk2Pos,n-this.chunk2Pos);if(e>=this.range.from&&n<=this.range.to)return this.input.read(e,n);let r="";for(let i of this.ranges){if(i.from>=n)break;i.to>e&&(r+=this.input.read(Math.max(i.from,e),Math.min(i.to,n)))}return r}}class Rh{constructor(e,n){this.data=e,this.id=n}token(e,n){gle(this.data,e,n,this.id)}}Rh.prototype.contextual=Rh.prototype.fallback=Rh.prototype.extend=!1;function gle(t,e,n,r){let i=0,o=1<<r,{parser:s}=n.p,{dialect:a}=s;e:for(;(o&t[i])!=0;){let l=t[i+1];for(let f=i+3;f<l;f+=2)if((t[f+1]&o)>0){let h=t[f];if(a.allows(h)&&(e.token.value==-1||e.token.value==h||s.overrides(h,e.token.value))){e.acceptToken(h);break}}let c=e.next,u=0,d=t[i+2];if(e.next<0&&d>u&&t[l+d*3-3]==65535&&t[l+d*3-3]==65535){i=t[l+d*3-1];continue e}for(;u<d;){let f=u+d>>1,h=l+f+(f<<1),p=t[h],m=t[h+1]||65536;if(c<p)d=f;else if(c>=m)u=f+1;else{i=t[h+2],e.advance();continue e}}break}}function Hf(t,e=Uint16Array){if(typeof t!="string")return t;let n=null;for(let r=0,i=0;r<t.length;){let o=0;for(;;){let s=t.charCodeAt(r++),a=!1;if(s==126){o=65535;break}s>=92&&s--,s>=34&&s--;let l=s-32;if(l>=46&&(l-=46,a=!0),o+=l,a)break;o*=46}n?n[i++]=o:n=new e(o)}return n}const cr=typeof process<"u"&&process.env&&/\bparse\b/.test(process.env.LOG);let xv=null;var kP;(function(t){t[t.Margin=25]="Margin"})(kP||(kP={}));function wP(t,e,n){let r=t.cursor(It.IncludeAnonymous);for(r.moveTo(e);;)if(!(n<0?r.childBefore(e):r.childAfter(e)))for(;;){if((n<0?r.to<e:r.from>e)&&!r.type.isError)return n<0?Math.max(0,Math.min(r.to-1,e-25)):Math.min(t.length,Math.max(r.from+1,e+25));if(n<0?r.prevSibling():r.nextSibling())break;if(!r.parent())return n<0?0:t.length}}class vle{constructor(e,n){this.fragments=e,this.nodeSet=n,this.i=0,this.fragment=null,this.safeFrom=-1,this.safeTo=-1,this.trees=[],this.start=[],this.index=[],this.nextFragment()}nextFragment(){let e=this.fragment=this.i==this.fragments.length?null:this.fragments[this.i++];if(e){for(this.safeFrom=e.openStart?wP(e.tree,e.from+e.offset,1)-e.offset:e.from,this.safeTo=e.openEnd?wP(e.tree,e.to+e.offset,-1)-e.offset:e.to;this.trees.length;)this.trees.pop(),this.start.pop(),this.index.pop();this.trees.push(e.tree),this.start.push(-e.offset),this.index.push(0),this.nextStart=this.safeFrom}else this.nextStart=1e9}nodeAt(e){if(e<this.nextStart)return null;for(;this.fragment&&this.safeTo<=e;)this.nextFragment();if(!this.fragment)return null;for(;;){let n=this.trees.length-1;if(n<0)return this.nextFragment(),null;let r=this.trees[n],i=this.index[n];if(i==r.children.length){this.trees.pop(),this.start.pop(),this.index.pop();continue}let o=r.children[i],s=this.start[n]+r.positions[i];if(s>e)return this.nextStart=s,null;if(o instanceof ct){if(s==e){if(s<this.safeFrom)return null;let a=s+o.length;if(a<=this.safeTo){let l=o.prop(de.lookAhead);if(!l||a+l<this.fragment.to)return o}}this.index[n]++,s+o.length>=Math.max(this.safeFrom,e)&&(this.trees.push(o),this.start.push(s),this.index.push(0))}else this.index[n]++,this.nextStart=s+o.length}}}class ble{constructor(e,n){this.stream=n,this.tokens=[],this.mainToken=null,this.actions=[],this.tokens=e.tokenizers.map(r=>new Mh)}getActions(e){let n=0,r=null,{parser:i}=e.p,{tokenizers:o}=i,s=i.stateSlot(e.state,3),a=e.curContext?e.curContext.hash:0,l=0;for(let c=0;c<o.length;c++){if((1<<c&s)==0)continue;let u=o[c],d=this.tokens[c];if(!(r&&!u.fallback)&&((u.contextual||d.start!=e.pos||d.mask!=s||d.context!=a)&&(this.updateCachedToken(d,u,e),d.mask=s,d.context=a),d.lookAhead>d.end+25&&(l=Math.max(d.lookAhead,l)),d.value!=0)){let f=n;if(d.extended>-1&&(n=this.addActions(e,d.extended,d.end,n)),n=this.addActions(e,d.value,d.end,n),!u.extend&&(r=d,n>f))break}}for(;this.actions.length>n;)this.actions.pop();return l&&e.setLookAhead(l),!r&&e.pos==this.stream.end&&(r=new Mh,r.value=e.p.parser.eofTerm,r.start=r.end=e.pos,n=this.addActions(e,r.value,r.end,n)),this.mainToken=r,this.actions}getMainToken(e){if(this.mainToken)return this.mainToken;let n=new Mh,{pos:r,p:i}=e;return n.start=r,n.end=Math.min(r+1,i.stream.end),n.value=r==i.stream.end?i.parser.eofTerm:0,n}updateCachedToken(e,n,r){let i=this.stream.clipPos(r.pos);if(n.token(this.stream.reset(i,e),r),e.value>-1){let{parser:o}=r.p;for(let s=0;s<o.specialized.length;s++)if(o.specialized[s]==e.value){let a=o.specializers[s](this.stream.read(e.start,e.end),r);if(a>=0&&r.p.parser.dialect.allows(a>>1)){(a&1)==0?e.value=a>>1:e.extended=a>>1;break}}}else e.value=0,e.end=this.stream.clipPos(i+1)}putAction(e,n,r,i){for(let o=0;o<i;o+=3)if(this.actions[o]==e)return i;return this.actions[i++]=e,this.actions[i++]=n,this.actions[i++]=r,i}addActions(e,n,r,i){let{state:o}=e,{parser:s}=e.p,{data:a}=s;for(let l=0;l<2;l++)for(let c=s.stateSlot(o,l?2:1);;c+=3){if(a[c]==65535)if(a[c+1]==1)c=hi(a,c+2);else{i==0&&a[c+1]==2&&(i=this.putAction(hi(a,c+2),n,r,i));break}a[c]==n&&(i=this.putAction(hi(a,c+1),n,r,i))}return i}}var OP;(function(t){t[t.Distance=5]="Distance",t[t.MaxRemainingPerStep=3]="MaxRemainingPerStep",t[t.MinBufferLengthPrune=500]="MinBufferLengthPrune",t[t.ForceReduceLimit=10]="ForceReduceLimit",t[t.CutDepth=15e3]="CutDepth",t[t.CutTo=9e3]="CutTo"})(OP||(OP={}));class yle{constructor(e,n,r,i){this.parser=e,this.input=n,this.ranges=i,this.recovering=0,this.nextStackID=9812,this.minStackPos=0,this.reused=[],this.stoppedAt=null,this.stream=new mle(n,i),this.tokens=new ble(e,this.stream),this.topTerm=e.top[1];let{from:o}=i[0];this.stacks=[nm.start(this,e.top[0],o)],this.fragments=r.length&&this.stream.end-o>e.bufferLength*4?new vle(r,e.nodeSet):null}get parsedPos(){return this.minStackPos}advance(){let e=this.stacks,n=this.minStackPos,r=this.stacks=[],i,o;for(let s=0;s<e.length;s++){let a=e[s];for(;;){if(this.tokens.mainToken=null,a.pos>n)r.push(a);else{if(this.advanceStack(a,r,e))continue;{i||(i=[],o=[]),i.push(a);let l=this.tokens.getMainToken(a);o.push(l.value,l.end)}}break}}if(!r.length){let s=i&&Sle(i);if(s)return this.stackToTree(s);if(this.parser.strict)throw cr&&i&&console.log("Stuck with token "+(this.tokens.mainToken?this.parser.getName(this.tokens.mainToken.value):"none")),new SyntaxError("No parse at "+n);this.recovering||(this.recovering=5)}if(this.recovering&&i){let s=this.stoppedAt!=null&&i[0].pos>this.stoppedAt?i[0]:this.runRecovery(i,o,r);if(s)return this.stackToTree(s.forceAll())}if(this.recovering){let s=this.recovering==1?1:this.recovering*3;if(r.length>s)for(r.sort((a,l)=>l.score-a.score);r.length>s;)r.pop();r.some(a=>a.reducePos>n)&&this.recovering--}else if(r.length>1){e:for(let s=0;s<r.length-1;s++){let a=r[s];for(let l=s+1;l<r.length;l++){let c=r[l];if(a.sameState(c)||a.buffer.length>500&&c.buffer.length>500)if((a.score-c.score||a.buffer.length-c.buffer.length)>0)r.splice(l--,1);else{r.splice(s--,1);continue e}}}}this.minStackPos=r[0].pos;for(let s=1;s<r.length;s++)r[s].pos<this.minStackPos&&(this.minStackPos=r[s].pos);return null}stopAt(e){if(this.stoppedAt!=null&&this.stoppedAt<e)throw new RangeError("Can't move stoppedAt forward");this.stoppedAt=e}advanceStack(e,n,r){let i=e.pos,{parser:o}=this,s=cr?this.stackID(e)+" -> ":"";if(this.stoppedAt!=null&&i>this.stoppedAt)return e.forceReduce()?e:null;if(this.fragments){let c=e.curContext&&e.curContext.tracker.strict,u=c?e.curContext.hash:0;for(let d=this.fragments.nodeAt(i);d;){let f=this.parser.nodeSet.types[d.type.id]==d.type?o.getGoto(e.state,d.type.id):-1;if(f>-1&&d.length&&(!c||(d.prop(de.contextHash)||0)==u))return e.useNode(d,f),cr&&console.log(s+this.stackID(e)+` (via reuse of ${o.getName(d.type.id)})`),!0;if(!(d instanceof ct)||d.children.length==0||d.positions[0]>0)break;let h=d.children[0];if(h instanceof ct&&d.positions[0]==0)d=h;else break}}let a=o.stateSlot(e.state,4);if(a>0)return e.reduce(a),cr&&console.log(s+this.stackID(e)+` (via always-reduce ${o.getName(a&65535)})`),!0;if(e.stack.length>=15e3)for(;e.stack.length>9e3&&e.forceReduce(););let l=this.tokens.getActions(e);for(let c=0;c<l.length;){let u=l[c++],d=l[c++],f=l[c++],h=c==l.length||!r,p=h?e:e.split();if(p.apply(u,d,f),cr&&console.log(s+this.stackID(p)+` (via ${(u&65536)==0?"shift":`reduce of ${o.getName(u&65535)}`} for ${o.getName(d)} @ ${i}${p==e?"":", split"})`),h)return!0;p.pos>i?n.push(p):r.push(p)}return!1}advanceFully(e,n){let r=e.pos;for(;;){if(!this.advanceStack(e,null,null))return!1;if(e.pos>r)return TP(e,n),!0}}runRecovery(e,n,r){let i=null,o=!1;for(let s=0;s<e.length;s++){let a=e[s],l=n[s<<1],c=n[(s<<1)+1],u=cr?this.stackID(a)+" -> ":"";if(a.deadEnd&&(o||(o=!0,a.restart(),cr&&console.log(u+this.stackID(a)+" (restarted)"),this.advanceFully(a,r))))continue;let d=a.split(),f=u;for(let h=0;d.forceReduce()&&h<10&&(cr&&console.log(f+this.stackID(d)+" (via force-reduce)"),!this.advanceFully(d,r));h++)cr&&(f=this.stackID(d)+" -> ");for(let h of a.recoverByInsert(l))cr&&console.log(u+this.stackID(h)+" (via recover-insert)"),this.advanceFully(h,r);this.stream.end>a.pos?(c==a.pos&&(c++,l=0),a.recoverByDelete(l,c),cr&&console.log(u+this.stackID(a)+` (via recover-delete ${this.parser.getName(l)})`),TP(a,r)):(!i||i.score<a.score)&&(i=a)}return i}stackToTree(e){return e.close(),ct.build({buffer:rm.create(e),nodeSet:this.parser.nodeSet,topID:this.topTerm,maxBufferLength:this.parser.bufferLength,reused:this.reused,start:this.ranges[0].from,length:e.pos-this.ranges[0].from,minRepeatType:this.parser.minRepeatTerm})}stackID(e){let n=(xv||(xv=new WeakMap)).get(e);return n||xv.set(e,n=String.fromCodePoint(this.nextStackID++)),n+e}}function TP(t,e){for(let n=0;n<e.length;n++){let r=e[n];if(r.pos==t.pos&&r.sameState(t)){e[n].score<t.score&&(e[n]=t);return}}e.push(t)}class xle{constructor(e,n,r){this.source=e,this.flags=n,this.disabled=r}allows(e){return!this.disabled||this.disabled[e]==0}}class im extends mR{constructor(e){if(super(),this.wrappers=[],e.version!=14)throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (${14})`);let n=e.nodeNames.split(" ");this.minRepeatTerm=n.length;for(let a=0;a<e.repeatNodeCount;a++)n.push("");let r=Object.keys(e.topRules).map(a=>e.topRules[a][1]),i=[];for(let a=0;a<n.length;a++)i.push([]);function o(a,l,c){i[a].push([l,l.deserialize(String(c))])}if(e.nodeProps)for(let a of e.nodeProps){let l=a[0];typeof l=="string"&&(l=de[l]);for(let c=1;c<a.length;){let u=a[c++];if(u>=0)o(u,l,a[c++]);else{let d=a[c+-u];for(let f=-u;f>0;f--)o(a[c++],l,d);c++}}}this.nodeSet=new yx(n.map((a,l)=>pn.define({name:l>=this.minRepeatTerm?void 0:a,id:l,props:i[l],top:r.indexOf(l)>-1,error:l==0,skipped:e.skippedNodes&&e.skippedNodes.indexOf(l)>-1}))),e.propSources&&(this.nodeSet=this.nodeSet.extend(...e.propSources)),this.strict=!1,this.bufferLength=fR;let s=Hf(e.tokenData);this.context=e.context,this.specializerSpecs=e.specialized||[],this.specialized=new Uint16Array(this.specializerSpecs.length);for(let a=0;a<this.specializerSpecs.length;a++)this.specialized[a]=this.specializerSpecs[a].term;this.specializers=this.specializerSpecs.map(CP),this.states=Hf(e.states,Uint32Array),this.data=Hf(e.stateData),this.goto=Hf(e.goto),this.maxTerm=e.maxTerm,this.tokenizers=e.tokenizers.map(a=>typeof a=="number"?new Rh(s,a):a),this.topRules=e.topRules,this.dialects=e.dialects||{},this.dynamicPrecedences=e.dynamicPrecedences||null,this.tokenPrecTable=e.tokenPrec,this.termNames=e.termNames||null,this.maxNode=this.nodeSet.types.length-1,this.dialect=this.parseDialect(),this.top=this.topRules[Object.keys(this.topRules)[0]]}createParse(e,n,r){let i=new yle(this,e,n,r);for(let o of this.wrappers)i=o(i,e,n,r);return i}getGoto(e,n,r=!1){let i=this.goto;if(n>=i[0])return-1;for(let o=i[n+1];;){let s=i[o++],a=s&1,l=i[o++];if(a&&r)return l;for(let c=o+(s>>1);o<c;o++)if(i[o]==e)return l;if(a)return-1}}hasAction(e,n){let r=this.data;for(let i=0;i<2;i++)for(let o=this.stateSlot(e,i?2:1),s;;o+=3){if((s=r[o])==65535)if(r[o+1]==1)s=r[o=hi(r,o+2)];else{if(r[o+1]==2)return hi(r,o+2);break}if(s==n||s==0)return hi(r,o+1)}return 0}stateSlot(e,n){return this.states[e*6+n]}stateFlag(e,n){return(this.stateSlot(e,0)&n)>0}validAction(e,n){if(n==this.stateSlot(e,4))return!0;for(let r=this.stateSlot(e,1);;r+=3){if(this.data[r]==65535)if(this.data[r+1]==1)r=hi(this.data,r+2);else return!1;if(n==hi(this.data,r+1))return!0}}nextStates(e){let n=[];for(let r=this.stateSlot(e,1);;r+=3){if(this.data[r]==65535)if(this.data[r+1]==1)r=hi(this.data,r+2);else break;if((this.data[r+2]&1)==0){let i=this.data[r+1];n.some((o,s)=>s&1&&o==i)||n.push(this.data[r],i)}}return n}overrides(e,n){let r=PP(this.data,this.tokenPrecTable,n);return r<0||PP(this.data,this.tokenPrecTable,e)<r}configure(e){let n=Object.assign(Object.create(im.prototype),this);if(e.props&&(n.nodeSet=this.nodeSet.extend(...e.props)),e.top){let r=this.topRules[e.top];if(!r)throw new RangeError(`Invalid top rule name ${e.top}`);n.top=r}return e.tokenizers&&(n.tokenizers=this.tokenizers.map(r=>{let i=e.tokenizers.find(o=>o.from==r);return i?i.to:r})),e.specializers&&(n.specializers=this.specializers.slice(),n.specializerSpecs=this.specializerSpecs.map((r,i)=>{let o=e.specializers.find(a=>a.from==r.external);if(!o)return r;let s=Object.assign(Object.assign({},r),{external:o.to});return n.specializers[i]=CP(s),s})),e.contextTracker&&(n.context=e.contextTracker),e.dialect&&(n.dialect=this.parseDialect(e.dialect)),e.strict!=null&&(n.strict=e.strict),e.wrap&&(n.wrappers=n.wrappers.concat(e.wrap)),e.bufferLength!=null&&(n.bufferLength=e.bufferLength),n}hasWrappers(){return this.wrappers.length>0}getName(e){return this.termNames?this.termNames[e]:String(e<=this.maxNode&&this.nodeSet.types[e].name||e)}get eofTerm(){return this.maxNode+1}get topNode(){return this.nodeSet.types[this.top[1]]}dynamicPrecedence(e){let n=this.dynamicPrecedences;return n==null?0:n[e]||0}parseDialect(e){let n=Object.keys(this.dialects),r=n.map(()=>!1);if(e)for(let o of e.split(" ")){let s=n.indexOf(o);s>=0&&(r[s]=!0)}let i=null;for(let o=0;o<n.length;o++)if(!r[o])for(let s=this.dialects[n[o]],a;(a=this.data[s++])!=65535;)(i||(i=new Uint8Array(this.maxTerm+1)))[a]=1;return new xle(e,r,i)}static deserialize(e){return new im(e)}}function hi(t,e){return t[e]|t[e+1]<<16}function PP(t,e,n){for(let r=e,i;(i=t[r])!=65535;r++)if(i==n)return r-e;return-1}function Sle(t){let e=null;for(let n of t){let r=n.p.stoppedAt;(n.pos==n.p.stream.end||r!=null&&n.pos>r)&&n.p.parser.stateFlag(n.state,2)&&(!e||e.score<n.score)&&(e=n)}return e}function CP(t){if(t.external){let e=t.extend?1:0;return(n,r)=>t.external(n,r)<<1|e}return t.get}const kle={__proto__:null,init:26,do:62,if:72,while:74,until:76,fi:80,instr:90,endin:94,opcode:98,endop:102,struct:106,declare:110},wle=im.deserialize({version:14,states:"8fO!gQPOOO!nQPO'#C`O!sQPO'#CeOOQO'#Dr'#DrO#pQQO'#CgO#zQPO'#CkO$]QPO'#CnO$nQQO'#EQOOQO'#Dy'#DyO%`QPO'#CfOOQO'#Dj'#DjO%hQPO'#CtO%oQPO'#CuO#zQPO'#CxO%tQPO'#CxOOQO'#Cw'#CwO#zQPO'#DOOOQO'#Dw'#DwOOQO'#Df'#DfO%|QPO'#DqQOQPOOOOQO'#DP'#DPO&TQSO'#DYO&WQSO'#D^O&WQSO'#DbO&WQSO'#DdO&]QWO,58zO&eQPO,59PO&jQPO,5:eO&qQQO,59WO'xQPO'#CrOOQO,59],59]O(PQQO,5:eO)WQQO,59VO*TQQO'#DyOOQO,59Y,59YO$]QPO,59[O$]QPO,59[O$]QPO,59[O*kQPO'#DiO+SQPO,5:lO#zQPO,59_OOQO'#Ch'#ChO$]QPO,59QOOQO-E7h-E7hOOQO,59`,59`OOQO,59a,59aO+kQQO,59dOOQO'#Cz'#CzOOQO,59d,59dO,PQQO,59jOOQO-E7d-E7dOOQO'#D['#D[O,WQPO'#EWO,`QPO,59tO,eQPO,59xO,mQPO,59|O,rQPO,5:OO,wQSO'#CbOOQO'#Dg'#DgO,|QWO1G.fOOQO1G.f1G.fOOQO1G.k1G.kO-UQQO,5:SO-gQQO1G0PO#zQPO'#DhOOQO-E7f-E7fO.nQPO,59^OOQO,59^,59^OOQO1G.w1G.wO.sQPO1G0POOQO1G.q1G.qO.zQQO,59]O0^QQO1G.vO0hQQO1G.vOOQO1G.v1G.vO0rQQO,5:TOOQO-E7g-E7gO1dQQO1G.yO1uQQO1G.lOOQO1G/O1G/OO2WQPO1G/UO2]QSO1G/UO2bQSO'#DlO2pQPO,5:rO3pQPO1G/`O3wQ`O1G/dO,mQPO1G/dOOQO'#Cg'#CgO3|QPO'#EXO4XQPO1G/hO,mQPO1G/jO4^QPO,58|OOQO-E7e-E7eOOQO7+$Q7+$QOOQO1G/n1G/nO4cQQO7+%kOOQO1G.x1G.xO5jQQO7+%kOOQO7+%k7+%kO$]QPO7+$eOOQO7+$W7+$WO5{QPO7+$pOOQO'#DX'#DXO6VQPO7+$pOOQO,5:W,5:WOOQO-E7j-E7jOOQO'#Dk'#DkO6[QPO7+$zO6cQPO7+$zO6hQPO7+%OO6mQPO7+%OO6rQPO'#DmO7QQPO,5:sOOQO7+%S7+%SO7]QPO7+%UOOQO1G.h1G.hO7bQPO<<IVOOQO<<IV<<IVO7iQQO<<HPO5{QPO<<H[OOQO'#DT'#DTOOQO<<H[<<H[OOQO-E7i-E7iO8ZQPO<<HfOOQO<<Hf<<HfO8`Q`O<<HjO8eQPO<<HjOOQO,5:X,5:XOOQO-E7k-E7kO8jQPO<<HpO8oQQOAN>qOOQOAN>qAN>qOOQOAN=vAN=vOOQOAN>QAN>QO9QQPOAN>UO9VQPOAN>UO9_QPOAN>[OOQOG24]G24]O9gQPOG23pO,mQPOG23pO9nQPOG23pO,mQPOG23vO9sQPOG23vO9xQPOLD)[O:PQPOLD)[O:UQPOLD)[O9xQPOLD)[O:ZQPOLD)bOOQOLD)bLD)bO:`QPO!$'LvOOQO!$'Lv!$'LvO:eQPO!$'LvO:jQPO!$'LvO:qQPO!$'L|OOQO!)9Bb!)9BbO:vQPO!)9BbO:}QPO!)9BbOOQO!)9Bh!)9BhO;SQPO!.K7|O;ZQPO!.K7|OOQO!.K7|!.K7|O;`QPO!4/-hOOQO!4/-h!4/-hOOQO!9A#S!9A#SO!xQQO'#DyO#zQPO,59[O#zQPO,59[O#zQPO,59[O;eQPO'#DiO;oQPO,5:lO<fQQO1G.vO<pQQO1G.vO<zQQO,5:TO#zQPO7+$eO=`QQO<<HPO#zQPO'#CnO>TQQO'#EQO>iQQO1G.yO#zQPO,59_",stateData:"?X~OPOSQOS!dOS~OTSOWWOaWOcUOj[Om]Oq^OteOueOveO}fO!RgO!VhO!XiO!hPO!jQO!qTO!vaO~O!b!eP~P]OTjO~OTkO~O^pO!nlO!qnOT!mXW!mXa!mXc!mX!r!mX!s!mX!u!mX!v!mX!w!mX~O]ZX!lZX~P!xOTrOWWOaWOc$vO!qTO~OT$kOWWOaWOcUO!qTO~OcvO!rtO!suO!uwO!wyOT!tXW!tXa!tX!q!tX!v!tX~O]zO!lzO~O!v}O~P$]O!v!OO~Oo!QOp!QO~O!b!eX~P]Oa!VO!y!UO~OV![O!g!_O~O!g!`O~O!o!bO~P#zO!n!cOT`aW`aa`ac`a!q`a!r`a!s`a!u`a!v`a!w`a!p`ao`ap`az`a!o`a!x`a~O!p!fO~P#zO!n!hOT!maW!maa!mac!ma!q!ma!r!ma!s!ma!u!ma!v!ma!w!ma!p!mao!map!maz!ma!o!ma!x!ma~Oc$nO!p!iO!r$lO!s$mO!w$yO~O^pO!nlO!qnOc!mX!r!mX!s!mX!w!mX!u!mX~O!p!mXo!mXp!mXz!mX!o!mX!x!mX~P)iOaWOcUOT!]XW!]X!q!]X!u!]X!v!]X~O!uwOT!taW!taa!tac!ta!q!ta!v!ta~Oc$nOo!QOp!QO!r$lO!s$mO!w$yO~Oz!tO~P+kO!u!uO!v!zX~O!v!wO~O!q!yO!u!xO~OT!zO~O!q!}O~O!i#OO~OV![O!g#QO~Oc$nO!o#RO!r$lO!s$mO!w$yO~O^#SOT!miW!mia!mic!mi!q!mi!r!mi!s!mi!u!mi!v!mi!w!mi!p!mio!mip!miz!mi!o!mi!x!mi~O!p#TO~O!o#VO~P#zO!v!gOcea!pea!rea!sea!weaoeapeazea!oea!uea!xea~OcvOTdiWdiadi!qdi!udi!vdi!wdi~O!rtO!suO~P/rO!rdi!sdi~P/rOcvO!rtO!suO!wyOT!]aW!]aa!]a!q!]a!u!]a!v!]a~Oc$nO!r$lO!s$mO!w$yO!x#WO~OcvO!rtO!suO!v#XO!wyO~O!v#YO~O!y#ZO~Oa#]O!y!UO!u!`X!v!`X~O!u!uO!v!za~OTSOWWOaWOcUOj[Om]Oq^OteOueOveO!qTO!vaO~O!P#aO~P2xO!S#bO~O!u#dO!v!{X!p!{X~O!v#fO~OW#hO~O!n#iOT!mqW!mqa!mqc!mq!q!mq!r!mq!s!mq!u!mq!v!mq!w!mq!p!mqo!mqp!mqz!mq!o!mq!x!mq~Oc$nO!o#jO!r$lO!s$mO!w$yO~Ox#mOy#mO~P2xO!v#nO~O!P#pO~P2xO!v#qO~O!u#rO~O!p#sO~OT!zO!u!aX!v!aX!p!aX~O!u#dO!v!{a!p!{a~O!p#vO~O!o#xO~P#zOcvO!rtO!suOTgyWgyagy!qgy!ugy!vgy!wgy~O!v#zO~O!S#{O~O!x#|O~O!x#}O~Oc$nO!o$OO!r$lO!s$mO!w$yO~O!v$PO~OT!zO!q$QO~OT!zO!q$SO~O!T$VO~P2xO!v$XO~O!v$ZO~O!T$[O~P2xO!v$]O~O!p$^O~O!p$`O~O!v$aO~O!v$bO~O!T$cO~P2xO!v$dO~O!T$fO~P2xO!v$gO~O!T$hO~P2xO!v$iO~O!v$jO~O!p!]X!u!]X~P#zO!u$oO!p!ta~Oc$nO!pdi!wdiodipdizdi!odi!udi!xdi~O!r$lO!s$mO~P;wO!rdi!sdi~P;wOc$nO!r$lO!s$mO!w$yO!p!]a!u!]a~Oc$nO!r$lO!s$mO!pgy!wgyogypgyzgy!ogy!ugy!xgy~Oc$nO!r$lO!s$mO!u$oO!w$yO!p!tX~Oc$nO!r$lO!s$mO!w$yO!x$tO~O!s!rmqpzyTj!laq~",goto:",P!|PPPP!}P#RPP!}#V#e$TPP$W$WP$}P$}$W%u$}#V#VP#V%|P&[PPP#V&ePPP&sPPP&y&|P'QP&|PPP&|P&|P'a'g'm'u(P(b(x)OPPP)U&|PPPP)XP)iPPPPPP+ZPPPPP+m+pTROcT!]j!^iaOc!w#Y#`#l$P$U$X$_$b$ehXOc!w#Y#`#l$P$U$X$_$b$eY!{!Y!y!}$Q$SQ#t#dQ$R#|R$T#}R{X!iWOTUZ]`clntuvy{!c!h!w#W#Y#`#i#l$P$U$X$_$b$e$l$m$n$o$t$v$y!kWOTUZ]`clntuvwy{!c!h!w#W#Y#`#i#l$P$U$X$_$b$e$l$m$n$o$t$v$ySoS$kR!jri_Oc!w#Y#`#l$P$U$X$_$b$eQ!R^Q!r!PR!s!Si`Oc!w#Y#`#l$P$U$X$_$b$eQ#n#YR#y#lR#[!tTbOcQ!VfQ!XgQ!YhQ!ZiR#]!uQcOR!TcQ!^jR#P!^UmSr$kR!dmQxVS!ox$pR$p$whZOc!w#Y#`#l$P$U$X$_$b$eR|ZQ#`!wQ#l#YY#o#`#l$U$_$eQ$U$PQ$_$XR$e$bQ!v!VR#^!vQ#e!{R#u#eRdOSbOce#_!w#Y#`#l$P$U$X$_$b$ejVOZc!w#Y#`#l$P$U$X$_$b$eQqTSsU$vQ!P]Q!S`S!al!cQ!ktQ!luS!mv$nQ!nwQ!pyQ!q{Q#U!hQ#k#WQ#w#iQ$q$lQ$r$mQ$s$oQ$u$tQ$wnR$x$yjYOZc!w#Y#`#l$P$U$X$_$b$eR!enR!WfQ!|!YQ#c!yQ#g!}Q$W$QR$Y$S",nodeNames:"\u26A0 BlockComment LineComment Program XmlOpen AmbiguousIdentifier XmlAttribute XmlTagName String XmlClose AssignStatement SignalRateIdentifier AssignOp init PropertyIdentifier ParenthesizedExpression BracketedExpression Number UnaryExpression ArithOp BinaryExpression CallbackExpression ArgList ConditionalExpression OpcodeStatement GotoStatement GotoLabel ControlFlowElseStatement ElseStatement ControlFlowElseIfToken ControlFlowDoTokens do ControlFlowDoToken ControlFlowElseToken ControlFlowStatement ConstrolFlowBeginToken if while until ControlFlowEndTokens fi ControlFlowEndToken ControlFlowGotoToken DeclareGotoLabel InstrumentDeclaration instr FunctionName endin UdoDeclaration opcode OpcodeArguments endop StructDeclaration struct DeclareDeclaration declare",maxTerm:89,skippedNodes:[0,1,2],repeatNodeCount:8,tokenData:"!&p~R!aXY%WYZ%c]^%cpq%Wqr%nrs%{st%vtu'suv%vvw*Oxy*`yz*ez{*j{|*r|}*z}!O*r!O!P+P!P!Q.p!Q!R0n!R![3Z![!]5R!]!^0V!^!_5W!_!`5m!`!a5w!a!b6U!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O8d#P#Q9j#Q#R%v#R#S's#T#U6Z#U#X's#X#Y:p#Y#Z's#Z#[Gl#[#]'s#]#^KW#^#_6Z#_#`KW#`#c's#c#d!#X#d#e6Z#e#h's#h#iMm#i#o's#p#q!%h#r#s!%s$g$r's$r$s!%x$s;'S's;'S;=`)x<%lO's~%]Q!d~XY%Wpq%W~%hQ!v~YZ%c]^%cQ%sP!rQ!_!`%vQ%{O!sQ~&QWW~OY%{Zr%{rs&js#O%{#O#P&o#P;'S%{;'S;=`'m<%lO%{~&oOW~~&rRO;'S%{;'S;=`&{;=`O%{~'QXW~OY%{Zr%{rs&js#O%{#O#P&o#P;'S%{;'S;=`'m;=`<%l%{<%lO%{~'pP;=`<%l%{_'|XVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO'sR(nVjPtu)T!c!})T#R#S)T#T#o)T$g;'S)T;'S;=`)r<%lO)TR)YWTRtu)T!Q![)T!c!})T#R#S)T#T#o)T$g;'S)T;'S;=`)r<%lO)TR)uP;=`<%l)T_){P;=`<%l'sR*TQ!sQvw%v!_!`*ZR*`O!lR~*eO!q~~*jO!p~R*oP!sQ!_!`*Z~*wPc~!_!`*Z~+PO!u~~+SXtu+o!Q!R-t!R![.P!c!}+o#R#S+o#T#o+o$g;'S+o;'S;=`-n<%lO+o~+tX^~tu+o!Q![+o![!],a!c!}+o#R#S+o#T#o+o$g;'S+o;'S;=`-n<%lO+o~,dVtu,y!c!},y#R#S,y#T#o,y$g;'S,y;'S;=`-h<%lO,y~-OW^~tu,y!Q![,y!c!},y#R#S,y#T#o,y$g;'S,y;'S;=`-h<%lO,y~-kP;=`<%l,y~-qP;=`<%l+o~-yQaV!Q![.P#W#X.XV.UPaV!Q![.P~.[P#U#V._~.bP#Y#Z.e~.hP#g#h.k~.pO^~~.uR!sQz{/O!P!Q0V!_!`*Z~/RTOz/Oz{/b{;'S/O;'S;=`0P<%lO/O~/eVOz/Oz{/b{!P/O!P!Q/z!Q;'S/O;'S;=`0P<%lO/O~0POP~~0SP;=`<%l/O~0[SQ~OY0VZ;'S0V;'S;=`0h<%lO0V~0kP;=`<%l0Vg0ub!S`aV!O!P.P!Q!R1}!R![3Z!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#W#X4j#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fg2Ua!S`aV!O!P.P!Q!R1}!R![3Z!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fV3`QaV!O!P.P!Q![3Z`3k_!S`!Q!R3f!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fR4mP#U#V4pR4sP#Y#Z4vR4yP#g#h4|R5ROTR~5WO!x~~5_R!hP!sQ!P!Q5h!^!_%v!_!`%v~5mO!j~V5tP!iS!lR!_!`%vZ6OQ!gX!sQ!_!`%v!`!a%v~6ZO!w~o6fn!S`VW!ySTRtu's!Q!R6Z!R!['s![!](i!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O3f#P#Q3f#R#S's#T#U6Z#U#]'s#]#^6Z#^#_6Z#_#`6Z#`#c's#c#d6Z#d#e6Z#e#o's$g;'S's;'S;=`)x<%lO'sb8k_!nQ!S`!Q!R3f!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3fc9q_!oR!S`!Q!R3f!l!m3f!m!n3f!q!r3f!r!s3f!u!v3f!x!y3f!}#O3f#P#Q3f#T#U3f#]#^3f#^#_3f#_#`3f#c#d3f#d#e3f_:y]VW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#`'s#`#a;r#a#b's#b#c@[#c#o's$g;'S's;'S;=`)x<%lO's_;{ZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#g's#g#h<n#h#o's$g;'S's;'S;=`)x<%lO's_<wZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#X's#X#Y=j#Y#o's$g;'S's;'S;=`)x<%lO's_=uZVW!ySqPTRtu's!Q!['s![!](i!c!}'s#R#S's#T#]'s#]#^>h#^#o's$g;'S's;'S;=`)x<%lO's_>qZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#Y's#Y#Z?d#Z#o's$g;'S's;'S;=`)x<%lO's_?oXVW!ySmPTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO's_@eZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#W's#W#XAW#X#o's$g;'S's;'S;=`)x<%lO's_Aa]VW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#]'s#]#^BY#^#i's#i#jC|#j#o's$g;'S's;'S;=`)x<%lO's_BcZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#Y's#Y#ZCU#Z#o's$g;'S's;'S;=`)x<%lO's_CaXVW!ySyPTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO's_DVZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#b's#b#cDx#c#o's$g;'S's;'S;=`)x<%lO's_ERZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#h's#h#iEt#i#o's$g;'S's;'S;=`)x<%lO's_E}ZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#]'s#]#^Fp#^#o's$g;'S's;'S;=`)x<%lO's_FyZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#`'s#`#aCU#a#o's$g;'S's;'S;=`)x<%lO's_GuZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#c's#c#dHh#d#o's$g;'S's;'S;=`)x<%lO's_HqZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#h's#h#iId#i#o's$g;'S's;'S;=`)x<%lO's_ImZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#c's#c#dJ`#d#o's$g;'S's;'S;=`)x<%lO's_JkXVW!ySzQTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO'soKcr!S`VW!ySTRtu's!Q!R6Z!R!['s![!](i!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O3f#P#Q3f#R#S's#T#U6Z#U#Z's#Z#[Gl#[#]'s#]#^6Z#^#_6Z#_#`6Z#`#c's#c#d6Z#d#e6Z#e#h's#h#iMm#i#o's$g;'S's;'S;=`)x<%lO's_MvZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#['s#[#]Ni#]#o's$g;'S's;'S;=`)x<%lO's_NrZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#X's#X#Y! e#Y#o's$g;'S's;'S;=`)x<%lO's_! nZVW!ySTRtu's!Q!['s![!](i!c!}'s#R#S's#T#b's#b#c!!a#c#o's$g;'S's;'S;=`)x<%lO's_!!lXVW!ySpRTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO'so!#dp!S`VW!ySTRtu's!Q!R6Z!R!['s![!](i!c!l's!l!m6Z!m!n6Z!n!q's!q!r6Z!r!s6Z!s!u's!u!v6Z!v!x's!x!y6Z!y!}'s!}#O3f#P#Q3f#R#S's#T#U6Z#U#W's#W#XCU#X#]'s#]#^6Z#^#_6Z#_#`6Z#`#c's#c#d6Z#d#e6Z#e#o's$g;'S's;'S;=`)x<%lO'sR!%mQ!sQ!_!`*Z#p#q%vQ!%xO!rQ_!&TXVW!yS!rQTRtu's!Q!['s![!](i!c!}'s#R#S's#T#o's$g;'S's;'S;=`)x<%lO's",tokenizers:[0,1,2,3,4],topRules:{Program:[0,3]},dialects:{csd:0},specialized:[{term:5,get:t=>kle[t]||-1}],tokenPrec:1376});window.editorCursorState={};const Ole=hle(100,t=>{typeof t=="function"&&t()}),Tle=Wt.define(),Sv=Wt.define();Wt.define();Wt.define();Wt.define();const Ple=Wt.define(),Cle=gR({"Number BigNumber":R.number,"String/Escape":R.escape,instr:R.moduleKeyword,endin:R.moduleKeyword,opcode:R.moduleKeyword,endop:R.moduleKeyword,String:R.string,LineComment:R.lineComment,BlockComment:R.comment,Opcode:R.function,init:Tle,AmbiguousIdentifier:Ple,XmlCsoundSynthesizerOpen:Sv,XmlOpen:Sv,XmlClose:Sv,ArrayBrackets:R.bracket,if:R.controlKeyword,do:R.controlKeyword,fi:R.controlKeyword,while:R.controlKeyword,ControlFlowDoToken:R.controlKeyword,ControlFlowGotoToken:R.controlKeyword,ControlFlowEndToken:R.controlKeyword,ControlFlowElseIfToken:R.controlKeyword,ControlFlowElseToken:R.controlKeyword,"(":R.paren,")":R.paren,"[":R.squareBracket,"]":R.squareBracket,"{":R.bracket,"}":R.bracket}),Mle=F.mark({attributes:{class:"cm-csound-global-constant"}}),Rle=F.mark({attributes:{class:"cm-csound-opcode"}}),Ile=F.mark({attributes:{class:"cm-csound-a-rate-var"}}),zle=F.mark({attributes:{class:["cm-csound-a-rate-var","cm-csound-global-var"].join(" ")}}),Ele=F.mark({attributes:{class:"cm-csound-k-rate-var"}}),Nle=F.mark({attributes:{class:["cm-csound-k-rate-var","cm-csound-global-var"].join(" ")}}),Vle=F.mark({attributes:{class:"cm-csound-s-rate-var"}}),Lle=F.mark({attributes:{class:["cm-csound-s-rate-var","cm-csound-global-var"].join(" ")}}),Xle=F.mark({attributes:{class:"cm-csound-f-rate-var"}}),Ble=F.mark({attributes:{class:["cm-csound-f-rate-var","cm-csound-global-var"]}}),Ale=F.mark({attributes:{class:"cm-csound-p-field-var"}}),Zle=F.mark({attributes:{class:"cm-csound-xml-tag"}});F.mark({attributes:{class:"cm-csound-goto-token"}});const Gle=F.mark({attributes:{class:"cm-csound-macro-token"}});function Wle(t){return["sr","kr","ksmps","0dbfs","nchnls","nchnls_i"].includes(t)}function Yle(t,e){if(Wle(t))return Mle;if(e==="CallbackExpression"||Array.isArray(window.csoundBuiltinOpcodes)&&window.csoundBuiltinOpcodes.includes(t.replace(/:.*/,"")))return Rle;if(["XmlOpen","XmlClose"].includes(e))return Zle;if(/^p\d+$/.test(t))return Ale;if(t.startsWith("a"))return Ile;if(t.startsWith("k"))return Ele;if(t.startsWith("S"))return Vle;if(t.startsWith("ga"))return zle;if(t.startsWith("gk"))return Nle;if(t.startsWith("gS"))return Lle;if(t.startsWith("f"))return Xle;if(t.startsWith("gf"))return Ble;if(/^\$.+/.test(t))return Gle}function MP(t){const e=new Ci;for(const{from:n,to:r}of t.visibleRanges)$G(t.state,r)&&xt(t.state).iterate({from:n,to:r,enter:i=>{if(i.name==="AmbiguousIdentifier"){const s=t.state.doc.slice(i.from,i.to).text[0],a=Yle(s,i.node.parent.name);a&&e.add(i.from,i.to,a)}}});return e.finish()}const Fle=(t,e)=>{var o,s;const n=e.node;let r=n;for(;r&&r.type.name!=="ArgList";)r=r.node.parent;if(r&&((s=(o=r.node)==null?void 0:o.parent)==null?void 0:s.type.name)==="CallbackExpression")return t.state.doc.slice(r.node.parent.from,r.node.parent.to).text[0].replace(/:.*/,"").replace(/\(.*/,"");let i=n;for(;i&&i.type.name!=="OpcodeStatement";)i=i.node.parent;if(i)return t.state.doc.slice(i.from,i.to).text[0].split(/\s/).reduce(({cand:c,stop:u,lastComma:d},f)=>u?{cand:c,stop:u,lastComma:d}:f.includes(",")?{cand:void 0,stop:!1,lastComma:!0}:d?{cand:void 0,stop:!1,lastComma:!1}:{cand:f,stop:!0,lastComma:!0},{cand:void 0,stop:!1,lastComma:!1}).cand},Hle=t=>{const e=document.createElement("div");return{dom:e,update(n){if(n.heightChanged||n.selectionSet){const r=xt(t.state).cursorAt(t.state.selection.main.head),i=Fle(t,r),o=i&&window.csoundSynopsis.find(s=>s.opname===i);e.textContent=o&&o.synopsis[0]}}}},jle=()=>pl.of(Hle),Dle=nt.fromClass(class{constructor(t){const e=t.state.values.find(n=>n&&typeof n=="object"&&n.documentUid);typeof e=="object"&&e.documentUid&&(this.documentUid=e.documentUid),this.initialized||(this.decorations=MP(t),this.initialized=!0)}update(t){if((t.docChanged||t.viewportChanged)&&(this.decorations=MP(t.view)),!this.scrollPositionInitialized){const e=t.view;e.focus();const n=this.documentUid;n&&typeof window.editorCursorState[`${n}:scrollTop`]=="number"?(e.requestMeasure({read(){return{cursor:e.coordsAtPos(e.state.selection.main.head),scroller:e.scrollDOM.getBoundingClientRect()}},write(){e.scrollDOM.scrollTop=window.editorCursorState[`${n}:scrollTop`]}}),e.scrollDOM.scrollTop===window.editorCursorState[`${n}:scrollTop`]&&(this.scrollPositionInitialized=!0)):this.scrollPositionInitialized=!0}}},{decorations:t=>t.decorations,eventHandlers:{scroll:function(t,e){const n=this.documentUid;n&&e.scrollDOM.scrollTop>0&&Ole(()=>{window.editorCursorState[`${n}:scrollTop`]=e.scrollDOM.scrollTop})}}}),Ule=pp.define({dialect:"csd",parser:wle.configure({props:[Cle,xR.add({InstrumentDeclaration:t=>t.column(t.node.from)+t.unit,UdoDeclaration:t=>t.column(t.node.from)+t.unit,ControlFlowStatement:t=>t.column(t.node.from)+t.unit}),kR.add({InstrumentDeclaration:Y2,UdoDeclaration:Y2})]}),languageData:{closeBrackets:{brackets:["(","[","{","'",'"']},commentTokens:{line:"//",block:{open:"/*",close:"*/"}}}}),RP=Ule.configure({dialect:"csd"});function Kle(){const t=RP.data.of({autocomplete:oE((window.csoundSynopsis||[]).filter(({opname:e})=>!["0dbfs","sr","kr","ksmps","nchnls"].includes(e)).map(({opname:e,short_desc:n,type:r})=>({label:e,type:r==="opcode"?"keyword":"function",detail:n})))});return new nW(RP,[t,Dle,jle(),dd.of("  ")])}const qle={initialColorMode:"dark",useSystemColorMode:!1},Qle=yJ({config:qle,styles:{global:t=>({body:{color:"default",bg:"#272822"}})}}),Jle=OE("csound-live-code-color-mode");function _le(){const[t,e]=S.exports.useState(0),[n,r]=S.exports.useState(),[i,o]=S.exports.useState(),[s,a]=S.exports.useState(!1),[l,c]=S.exports.useState(""),[u,d]=S.exports.useState(`;; Select this code and press ctrl-e to evaluate
`+p4),f=S.exports.useRef({});S.exports.useEffect(()=>{(async()=>{const p=await w6({useWorker:!1});if(!p){alert("Error loading csound, please refresh and try again.");return}r(p);const m=await p.getAudioContext();o(m);let b="";p.addListener("message",g=>{b+=`
`+g,c(b)}),(m==null?void 0:m.state)==="running"?(my(p),e(2)):e(1)})()},[]);const h=function(){i&&n&&(i==null||i.resume().then(()=>{my(n),e(2)}))};return z($ae,{theme:Qle,colorModeManager:Jle,children:n&&t==2?tt(ZS,{maxH:"100vh",spacing:"0",children:[z(dle,{csound:n,code:u,showConsole:s,setShowConsole:a}),z(Ol,{w:"full",h:"full",overflow:"auto",children:z(xE,{ref:f,width:"100%",height:"100%",value:u,onChange:d,theme:T6,extensions:[XR(),Ws.highest(ud.of([...k4(n),...pI,...GR])),Kle(),S4]})}),s&&z(ele,{output:l})]}):t===1?z(t1,{h:"100vh",children:z(vg,{onClick:h,children:"Start"})}):z(t1,{h:"100vh",children:z(vV,{color:"#666666",children:"Loading..."})})})}kv.createRoot(document.getElementById("root")).render(z(ei,{children:z(Z.StrictMode,{children:z(_le,{})})}));window.onbeforeunload=function(){return"Are you sure?"};
